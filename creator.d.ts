
/** !#en
The main namespace of Cocos2d-JS, all engine core classes, functions, properties and constants are defined in this namespace.
!#zh
Cocos å¼???????ä¸»è????½å??ç©ºé?´ï??å¼????ä»????ä¸­æ????????ç±»ï????½æ?°ï??å±???§å??å¸¸é????½å?¨è??ä¸ªå?½å??ç©ºé?´ä¸­å®?ä¹???? */
declare namespace cc {	
	/** The current version of Cocos2d being used.<br/>
	Please DO NOT remove this String, it is an important flag for bug tracking.<br/>
	If you post a bug to forum, please attach this flag. */
	export var ENGINE_VERSION: string;	
	/**
	!#en
	Creates the speed action which changes the speed of an action, making it take longer (speed > 1)
	or less (speed < 1) time. <br/>
	Useful to simulate 'slow motion' or 'fast forward' effect.
	!#zh ä¿®æ?¹ç?®æ????¨ä??????????????
	@param action action
	@param speed speed
	
	@example 
	```js
	// change the target action speed;
	var action = cc.scaleTo(0.2, 1, 0.6);
	var newAction = cc.speed(action, 0.5);
	``` 
	*/
	export function speed(action: ActionInterval, speed: number): Action;	
	/**
	!#en Create a follow action which makes its target follows another node.
	!#zh è¿½è¸ª??®æ???????¹ç??ä½?ç½®ã??
	@param followedNode followedNode
	@param rect rect
	
	@example 
	```js
	// example
	// creates the action with a set boundary
	var followAction = cc.follow(targetNode, cc.rect(0, 0, screenWidth * 2 - 100, screenHeight));
	node.runAction(followAction);
	
	// creates the action with no boundary set
	var followAction = cc.follow(targetNode);
	node.runAction(followAction);
	``` 
	*/
	export function follow(followedNode: Node, rect: Rect): Action;	
	/**
	Points setter
	@param points points 
	*/
	export function setPoints(points: any[]): void;	
	/**
	!#en Creates an action with a Cardinal Spline array of points and tension.
	!#zh ?????ºæ?°æ?·æ?¡æ?²çº¿è½¨è¿¹ç§»å?¨å?°ç?®æ??ä½?ç½®ã??
	@param duration duration
	@param points array of control points
	@param tension tension
	
	@example 
	```js
	//create a cc.CardinalSplineTo
	var action1 = cc.cardinalSplineTo(3, array, 0);
	``` 
	*/
	export function cardinalSplineTo(duration: number, points: any[], tension: number): ActionInterval;	
	/**
	update position of target
	@param newPos newPos 
	*/
	export function updatePosition(newPos: Vec2): void;	
	/**
	!#en Creates an action with a Cardinal Spline array of points and tension.
	!#zh ?????ºæ?°æ?·æ?¡æ?²çº¿è½¨è¿¹ç§»å?¨æ??å®????è·?ç¦»ã??
	@param duration duration
	@param points points
	@param tension tension 
	*/
	export function cardinalSplineBy(duration: number, points: any[], tension: number): ActionInterval;	
	/**
	!#en Creates an action with a Cardinal Spline array of points and tension.
	!#zh ??? Catmull Rom ??·æ?¡æ?²çº¿è½¨è¿¹ç§»å?¨å?°ç?®æ??ä½?ç½®ã??
	@param dt dt
	@param points points
	
	@example 
	```js
	var action1 = cc.catmullRomTo(3, array);
	``` 
	*/
	export function catmullRomTo(dt: number, points: any[]): ActionInterval;	
	/**
	!#en Creates an action with a Cardinal Spline array of points and tension.
	!#zh ??? Catmull Rom ??·æ?¡æ?²çº¿è½¨è¿¹ç§»å?¨æ??å®????è·?ç¦»ã??
	@param dt dt
	@param points points
	
	@example 
	```js
	var action1 = cc.catmullRomBy(3, array);
	``` 
	*/
	export function catmullRomBy(dt: number, points: any[]): ActionInterval;	
	/**
	!#en
	Creates the action easing object with the rate parameter. <br />
	From slow to fast.
	!#zh ???å»? easeIn ç¼???¨å¯¹è±¡ï????±æ?¢å?°å¿«???
	@param rate rate
	
	@example 
	```js
	action.easing(cc.easeIn(3.0));
	``` 
	*/
	export function easeIn(rate: number): any;	
	/**
	!#en
	Creates the action easing object with the rate parameter. <br />
	From fast to slow.
	!#zh ???å»? easeOut ç¼???¨å¯¹è±¡ï????±å¿«??°æ?¢ã??
	@param rate rate
	
	@example 
	```js
	action.easing(cc.easeOut(3.0));
	``` 
	*/
	export function easeOut(rate: number): any;	
	/**
	!#en
	Creates the action easing object with the rate parameter. <br />
	Slow to fast then to slow.
	!#zh ???å»? easeInOut ç¼???¨å¯¹è±¡ï????¢å?°å¿«ï¼???¶å????¢ã??
	@param rate rate
	
	@example 
	```js
	action.easing(cc.easeInOut(3.0));
	``` 
	*/
	export function easeInOut(rate: number): any;	
	/**
	!#en
	Creates the action easing object with the rate parameter. <br />
	Reference easeInExpo: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeExponentialIn ç¼???¨å¯¹è±¡ã??<br />
	EaseExponentialIn ??¯æ???????°å?½æ?°ç????¨è????¥ç????¨ä?????<br />
	?????? easeInExpoï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	action.easing(cc.easeExponentialIn());
	``` 
	*/
	export function easeExponentialIn(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeOutExpo: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeExponentialOut ç¼???¨å¯¹è±¡ã??<br />
	EaseExponentialOut ??¯æ???????°å?½æ?°ç????¨é????ºç????¨ä?????<br />
	?????? easeOutExpoï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	action.easing(cc.easeExponentialOut());
	``` 
	*/
	export function easeExponentialOut(): any;	
	/**
	!#en
	Creates an EaseExponentialInOut action easing object. <br />
	Reference easeInOutExpo: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeExponentialInOut ç¼???¨å¯¹è±¡ã??<br />
	EaseExponentialInOut ??¯æ???????°å?½æ?°ç????¨è????¥å¹¶?????ºç????¨ä?????<br />
	?????? easeInOutExpoï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	action.easing(cc.easeExponentialInOut());
	``` 
	*/
	export function easeExponentialInOut(): any;	
	/**
	!#en
	Creates an EaseSineIn action. <br />
	Reference easeInSine: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? EaseSineIn ç¼???¨å¯¹è±¡ã??<br />
	EaseSineIn ??¯æ??æ­?å¼¦å?½æ?°ç????¨è????¥ç????¨ä?????<br />
	?????? easeInSineï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	action.easing(cc.easeSineIn());
	``` 
	*/
	export function easeSineIn(): any;	
	/**
	!#en
	Creates an EaseSineOut action easing object. <br />
	Reference easeOutSine: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? EaseSineOut ç¼???¨å¯¹è±¡ã??<br />
	EaseSineIn ??¯æ??æ­?å¼¦å?½æ?°ç????¨é????ºç????¨ä?????<br />
	?????? easeOutSineï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	action.easing(cc.easeSineOut());
	``` 
	*/
	export function easeSineOut(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeInOutSine: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeSineInOut ç¼???¨å¯¹è±¡ã??<br />
	EaseSineIn ??¯æ??æ­?å¼¦å?½æ?°ç????¨è????¥å¹¶?????ºç????¨ä?????<br />
	?????? easeInOutSineï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	action.easing(cc.easeSineInOut());
	``` 
	*/
	export function easeSineInOut(): any;	
	/**
	!#en
	Creates the action easing object with the period in radians (default is 0.3). <br />
	Reference easeInElastic: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeElasticIn ç¼???¨å¯¹è±¡ã??<br />
	EaseElasticIn ??¯æ??å¼¹æ?§æ?²çº¿ç¼???¨è????¥ç????¨ä?????<br />
	?????? easeInElasticï¼?http://www.zhihu.com/question/21981571/answer/19925418
	@param period period
	
	@example 
	```js
	// example
	action.easing(cc.easeElasticIn(3.0));
	``` 
	*/
	export function easeElasticIn(period: number): any;	
	/**
	!#en
	Creates the action easing object with the period in radians (default is 0.3). <br />
	Reference easeOutElastic: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeElasticOut ç¼???¨å¯¹è±¡ã??<br />
	EaseElasticOut ??¯æ??å¼¹æ?§æ?²çº¿ç¼???¨é????ºç????¨ä?????<br />
	?????? easeOutElasticï¼?http://www.zhihu.com/question/21981571/answer/19925418
	@param period period
	
	@example 
	```js
	// example
	action.easing(cc.easeElasticOut(3.0));
	``` 
	*/
	export function easeElasticOut(period: number): any;	
	/**
	!#en
	Creates the action easing object with the period in radians (default is 0.3). <br />
	Reference easeInOutElastic: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeElasticInOut ç¼???¨å¯¹è±¡ã??<br />
	EaseElasticInOut ??¯æ??å¼¹æ?§æ?²çº¿ç¼???¨è????¥å¹¶?????ºç????¨ä?????<br />
	?????? easeInOutElasticï¼?http://www.zhihu.com/question/21981571/answer/19925418
	@param period period
	
	@example 
	```js
	// example
	action.easing(cc.easeElasticInOut(3.0));
	``` 
	*/
	export function easeElasticInOut(period: number): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Eased bounce effect at the beginning.
	!#zh
	???å»? easeBounceIn ç¼???¨å¯¹è±¡ã??<br />
	EaseBounceIn ??¯æ??å¼¹è·³??¨ä??ç¼???¨è????¥ç????¨ä?????
	
	@example 
	```js
	// example
	action.easing(cc.easeBounceIn());
	``` 
	*/
	export function easeBounceIn(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Eased bounce effect at the ending.
	!#zh
	???å»? easeBounceOut ç¼???¨å¯¹è±¡ã??<br />
	EaseBounceOut ??¯æ??å¼¹è·³??¨ä??ç¼???¨é????ºç????¨ä?????
	
	@example 
	```js
	// example
	action.easing(cc.easeBounceOut());
	``` 
	*/
	export function easeBounceOut(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Eased bounce effect at the begining and ending.
	!#zh
	???å»? easeBounceInOut ç¼???¨å¯¹è±¡ã??<br />
	EaseBounceInOut ??¯æ??å¼¹è·³??¨ä??ç¼???¨è????¥å¹¶?????ºç????¨ä?????
	
	@example 
	```js
	// example
	action.easing(cc.easeBounceInOut());
	``` 
	*/
	export function easeBounceInOut(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	In the opposite direction to move slowly, and then accelerated to the right direction.
	!#zh
	???å»? easeBackIn ç¼???¨å¯¹è±¡ã??<br />
	easeBackIn ??¯å?¨ç?¸å???????¹å??ç¼???¢ç§»??¨ï????¶å??????????°æ­£ç¡®ç????¹å?????<br />
	
	@example 
	```js
	// example
	action.easing(cc.easeBackIn());
	``` 
	*/
	export function easeBackIn(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Fast moving more than the finish, and then slowly back to the finish.
	!#zh
	???å»? easeBackOut ç¼???¨å¯¹è±¡ã??<br />
	easeBackOut å¿«é??ç§»å?¨è????ºç?®æ??ï¼???¶å????¢æ?¢å????°ç?®æ????¹ã??
	
	@example 
	```js
	// example
	action.easing(cc.easeBackOut());
	``` 
	*/
	export function easeBackOut(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Begining of cc.EaseBackIn. Ending of cc.EaseBackOut.
	!#zh
	???å»? easeBackInOut ç¼???¨å¯¹è±¡ã??<br />
	
	@example 
	```js
	// example
	action.easing(cc.easeBackInOut());
	``` 
	*/
	export function easeBackInOut(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Into the 4 reference point. <br />
	To calculate the motion curve.
	!#zh
	???å»? easeBezierAction ç¼???¨å¯¹è±¡ã??<br />
	EaseBezierAction ??¯æ??è´?å¡?å°???²çº¿ç¼???¨ç????¨ä?????
	@param p0 The first bezier parameter
	@param p1 The second bezier parameter
	@param p2 The third bezier parameter
	@param p3 The fourth bezier parameter
	
	@example 
	```js
	// example
	action.easing(cc.easeBezierAction(0.5, 0.5, 1.0, 1.0));
	``` 
	*/
	export function easeBezierAction(p0: number, p1: number, p2: number, p3: number): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeInQuad: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeQuadraticActionIn ç¼???¨å¯¹è±¡ã??<br />
	EaseQuadraticIn??¯æ??äº?æ¬¡å?½æ?°ç????¨è????¥ç????¨ä?????<br />
	?????? easeInQuadï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	//example
	action.easing(cc.easeQuadraticActionIn());
	``` 
	*/
	export function easeQuadraticActionIn(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeOutQuad: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeQuadraticActionOut ç¼???¨å¯¹è±¡ã??<br />
	EaseQuadraticOut ??¯æ??äº?æ¬¡å?½æ?°ç????¨é????ºç????¨ä?????<br />
	?????? easeOutQuadï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	//example
	action.easing(cc.easeQuadraticActionOut());
	``` 
	*/
	export function easeQuadraticActionOut(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeInOutQuad: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeQuadraticActionInOut ç¼???¨å¯¹è±¡ã??<br />
	EaseQuadraticInOut ??¯æ??äº?æ¬¡å?½æ?°ç????¨è????¥å¹¶?????ºç????¨ä?????<br />
	?????? easeInOutQuadï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	//example
	action.easing(cc.easeQuadraticActionInOut());
	``` 
	*/
	export function easeQuadraticActionInOut(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeIntQuart: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeQuarticActionIn ç¼???¨å¯¹è±¡ã??<br />
	EaseQuarticIn ??¯æ?????æ¬¡å?½æ?°ç????¨è????¥ç????¨ä?????<br />
	?????? easeIntQuartï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	//example
	action.easing(cc.easeQuarticActionIn());
	``` 
	*/
	export function easeQuarticActionIn(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeOutQuart: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeQuarticActionOut ç¼???¨å¯¹è±¡ã??<br />
	EaseQuarticOut ??¯æ?????æ¬¡å?½æ?°ç????¨é????ºç????¨ä?????<br />
	?????? easeOutQuartï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	//example
	action.easing(cc.QuarticActionOut());
	``` 
	*/
	export function easeQuarticActionOut(): any;	
	/**
	!#en
	Creates the action easing object.  <br />
	Reference easeInOutQuart: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeQuarticActionInOut ç¼???¨å¯¹è±¡ã??<br />
	EaseQuarticInOut ??¯æ?????æ¬¡å?½æ?°ç????¨è????¥å¹¶?????ºç????¨ä?????<br />
	?????? easeInOutQuartï¼?http://www.zhihu.com/question/21981571/answer/19925418 
	*/
	export function easeQuarticActionInOut(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeInQuint: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeQuinticActionIn ç¼???¨å¯¹è±¡ã??<br />
	EaseQuinticIn ??¯æ??äº?æ¬¡å?½æ?°ç????¨è???????¨ä?????<br />
	?????? easeInQuintï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	//example
	action.easing(cc.easeQuinticActionIn());
	``` 
	*/
	export function easeQuinticActionIn(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeOutQuint: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeQuinticActionOut ç¼???¨å¯¹è±¡ã??<br />
	EaseQuinticOut ??¯æ??äº?æ¬¡å?½æ?°ç????¨é????ºç????¨ä??
	?????? easeOutQuintï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	//example
	action.easing(cc.easeQuadraticActionOut());
	``` 
	*/
	export function easeQuinticActionOut(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeInOutQuint: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeQuinticActionInOut ç¼???¨å¯¹è±¡ã??<br />
	EaseQuinticInOut??¯æ??äº?æ¬¡å?½æ?°ç????¨è????¥å¹¶?????ºç????¨ä?????<br />
	?????? easeInOutQuintï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	//example
	action.easing(cc.easeQuinticActionInOut());
	``` 
	*/
	export function easeQuinticActionInOut(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeInCirc: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeCircleActionIn ç¼???¨å¯¹è±¡ã??<br />
	EaseCircleIn??¯æ?????å½¢æ?²çº¿ç¼???¨è????¥ç????¨ä?????<br />
	?????? easeInCircï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	//example
	action.easing(cc.easeCircleActionIn());
	``` 
	*/
	export function easeCircleActionIn(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeOutCirc: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeCircleActionOut ç¼???¨å¯¹è±¡ã??<br />
	EaseCircleOut??¯æ?????å½¢æ?²çº¿ç¼???¨é????ºç????¨ä?????<br />
	?????? easeOutCircï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	//example
	actioneasing(cc.easeCircleActionOut());
	``` 
	*/
	export function easeCircleActionOut(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeInOutCirc: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeCircleActionInOut ç¼???¨å¯¹è±¡ã??<br />
	EaseCircleInOut ??¯æ?????å½¢æ?²çº¿ç¼???¨è????¥å¹¶?????ºç????¨ä?????<br />
	?????? easeInOutCircï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	//example
	action.easing(cc.easeCircleActionInOut());
	``` 
	*/
	export function easeCircleActionInOut(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeInCubic: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeCubicActionIn ç¼???¨å¯¹è±¡ã??<br />
	EaseCubicIn ??¯æ??ä¸?æ¬¡å?½æ?°ç????¨è????¥ç????¨ä?????<br />
	?????? easeInCubicï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	//example
	action.easing(cc.easeCubicActionIn());
	``` 
	*/
	export function easeCubicActionIn(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeOutCubic: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeCubicActionOut ç¼???¨å¯¹è±¡ã??<br />
	EaseCubicOut ??¯æ??ä¸?æ¬¡å?½æ?°ç????¨é????ºç????¨ä?????<br />
	?????? easeOutCubicï¼?http://www.zhihu.com/question/21981571/answer/19925418
	
	@example 
	```js
	//example
	action.easing(cc.easeCubicActionOut());
	``` 
	*/
	export function easeCubicActionOut(): any;	
	/**
	!#en
	Creates the action easing object. <br />
	Reference easeInOutCubic: <br />
	http://www.zhihu.com/question/21981571/answer/19925418
	!#zh
	???å»? easeCubicActionInOut ç¼???¨å¯¹è±¡ã??<br />
	EaseCubicInOut??¯æ??ä¸?æ¬¡å?½æ?°ç????¨è????¥å¹¶?????ºç????¨ä?????<br />
	?????? easeInOutCubicï¼?http://www.zhihu.com/question/21981571/answer/19925418 
	*/
	export function easeCubicActionInOut(): any;	
	/**
	!#en Show the Node.
	!#zh ç«???³æ?¾ç¤º???
	
	@example 
	```js
	// example
	var showAction = cc.show();
	``` 
	*/
	export function show(): ActionInstant;	
	/**
	!#en Hide the node.
	!#zh ç«???³é????????
	
	@example 
	```js
	// example
	var hideAction = cc.hide();
	``` 
	*/
	export function hide(): ActionInstant;	
	/**
	!#en Toggles the visibility of a node.
	!#zh ??¾é????¶æ???????¢ã??
	
	@example 
	```js
	// example
	var toggleVisibilityAction = cc.toggleVisibility();
	``` 
	*/
	export function toggleVisibility(): ActionInstant;	
	/**
	!#en Create a RemoveSelf object with a flag indicate whether the target should be cleaned up while removing.
	!#zh ä»???¶è????¹ç§»??¤è?ªèº«???
	@param isNeedCleanUp  isNeedCleanUp 
	
	@example 
	```js
	// example
	var removeSelfAction = cc.removeSelf();
	``` 
	*/
	export function removeSelf(isNeedCleanUp ?: boolean): ActionInstant;	
	/**
	!#en Destroy self
	!#zh ???å»ºä??ä¸ªé??æ¯???ªèº«?????¨ä?????
	
	@example 
	```js
	var destroySelfAction = cc.destroySelf();
	``` 
	*/
	export function destroySelf(): ActionInstant;	
	/**
	!#en Create a FlipX action to flip or unflip the target.
	!#zh Xè½´ç¿»è½¬ã??
	@param flip Indicate whether the target should be flipped or not
	
	@example 
	```js
	var flipXAction = cc.flipX(true);
	``` 
	*/
	export function flipX(flip: boolean): ActionInstant;	
	/**
	!#en Create a FlipY action to flip or unflip the target.
	!#zh Yè½´ç¿»è½¬ã??
	@param flip flip
	
	@example 
	```js
	var flipYAction = cc.flipY(true);
	``` 
	*/
	export function flipY(flip: boolean): ActionInstant;	
	/**
	!#en Creates a Place action with a position.
	!#zh ??¾ç½®??¨ç?®æ??ä½?ç½®ã??
	@param pos pos
	@param y y
	
	@example 
	```js
	// example
	var placeAction = cc.place(cc.v2(200, 200));
	var placeAction = cc.place(200, 200);
	``` 
	*/
	export function place(pos: Vec2|number, y?: number): ActionInstant;	
	/**
	!#en Creates the action with the callback.
	!#zh ??§è?????è°???½æ?°ã??
	@param selector selector
	@param selectorTarget selectorTarget
	@param data data for function, it accepts all data types.
	
	@example 
	```js
	// example
	// CallFunc without data
	var finish = cc.callFunc(this.removeSprite, this);
	
	// CallFunc with data
	var finish = cc.callFunc(this.removeFromParentAndCleanup, this._grossini,  true);
	``` 
	*/
	export function callFunc(selector: Function, selectorTarget?: any, data?: any): ActionInstant;	
	/**
	!#en
	Helper constructor to create an array of sequenceable actions
	The created action will run actions sequentially, one after another.
	!#zh é¡ºå????§è????¨ä??ï¼????å»ºç????¨ä??å°????é¡ºå??ä¾?æ¬¡è??è¡????
	@param actionOrActionArray actionOrActionArray
	@param tempArray tempArray
	
	@example 
	```js
	// example
	// create sequence with actions
	var seq = cc.sequence(act1, act2);
	
	// create sequence with array
	var seq = cc.sequence(actArray);
	``` 
	*/
	export function sequence(actionOrActionArray: FiniteTimeAction|FiniteTimeAction[], ...tempArray: FiniteTimeAction[]): ActionInterval;	
	/**
	!#en Creates a Repeat action. Times is an unsigned integer between 1 and pow(2,30)
	!#zh ???å¤???¨ä??ï¼???¯ä»¥???ä¸?å®?æ¬¡æ?°é??å¤?ä¸?ä¸ªå?¨ï??å¦??????³æ°¸è¿????å¤?ä¸?ä¸ªå?¨ä??è¯·ä½¿??? repeatForever ??¨ä????¥å????????
	@param action action
	@param times times
	
	@example 
	```js
	// example
	var rep = cc.repeat(cc.sequence(jump2, jump1), 5);
	``` 
	*/
	export function repeat(action: FiniteTimeAction, times: number): ActionInterval;	
	/**
	!#en Create a acton which repeat forever, as it runs forever, it can't be added into cc.sequence and cc.spawn.
	!#zh æ°¸è????°é??å¤?ä¸?ä¸ªå?¨ä??ï¼???????æ¬¡æ?°å?????å¤?ä¸?ä¸ªå?¨ä??è¯·ä½¿??? repeat ??¨ä??ï¼???±ä??è¿?ä¸ªå?¨ä??ä¸?ä¼????æ­¢ï?????ä»¥ä????½è¢«æ·»å????? cc.sequence ??? cc.spawn ä¸­ã??
	@param action action
	
	@example 
	```js
	// example
	var repeat = cc.repeatForever(cc.rotateBy(1.0, 360));
	``` 
	*/
	export function repeatForever(action: FiniteTimeAction): ActionInterval;	
	/**
	!#en Create a spawn action which runs several actions in parallel.
	!#zh ???æ­¥æ?§è????¨ä??ï¼????æ­¥æ?§è??ä¸?ç»???¨ä?????
	@param actionOrActionArray actionOrActionArray
	@param tempArray tempArray
	
	@example 
	```js
	// example
	var action = cc.spawn(cc.jumpBy(2, cc.v2(300, 0), 50, 4), cc.rotateBy(2, 720));
	todo: It should be the direct use new
	``` 
	*/
	export function spawn(actionOrActionArray: FiniteTimeAction|FiniteTimeAction[], ...tempArray: FiniteTimeAction[]): FiniteTimeAction;	
	/**
	!#en
	Rotates a Node object to a certain angle by modifying its angle property. <br/>
	The direction will be decided by the shortest angle.
	!#zh ???è½¬å?°ç?®æ??è§?åº¦ï?????è¿????å¸§ä¿®??¹å????? angle å±???§ï?????è½¬æ?¹å??å°???±æ????­ç??è§?åº¦å?³å?????
	@param duration duration in seconds
	@param dstAngle dstAngle in degrees.
	
	@example 
	```js
	// example
	var rotateTo = cc.rotateTo(2, 61.0);
	``` 
	*/
	export function rotateTo(duration: number, dstAngle: number): ActionInterval;	
	/**
	!#en
	Rotates a Node object clockwise a number of degrees by modifying its angle property.
	Relative to its properties to modify.
	!#zh ???è½¬æ??å®????è§?åº¦ã??
	@param duration duration in seconds
	@param deltaAngle deltaAngle in degrees
	
	@example 
	```js
	// example
	var actionBy = cc.rotateBy(2, 360);
	``` 
	*/
	export function rotateBy(duration: number, deltaAngle: number): ActionInterval;	
	/**
	!#en
	Moves a Node object x,y pixels by modifying its position property.                                  <br/>
	x and y are relative to the position of the object.                                                     <br/>
	Several MoveBy actions can be concurrently called, and the resulting                                  <br/>
	movement will be the sum of individual movements.
	!#zh ç§»å?¨æ??å®????è·?ç¦»ã??
	@param duration duration in seconds
	@param deltaPos deltaPos
	@param deltaY deltaY
	
	@example 
	```js
	// example
	var actionTo = cc.moveBy(2, cc.v2(windowSize.width - 40, windowSize.height - 40));
	``` 
	*/
	export function moveBy(duration: number, deltaPos: Vec2|number, deltaY?: number): ActionInterval;	
	/**
	!#en
	Moves a Node object to the position x,y. x and y are absolute coordinates by modifying its position property. <br/>
	Several MoveTo actions can be concurrently called, and the resulting                                            <br/>
	movement will be the sum of individual movements.
	!#zh ç§»å?¨å?°ç?®æ??ä½?ç½®ã??
	@param duration duration in seconds
	@param position position
	@param y y
	
	@example 
	```js
	// example
	var actionBy = cc.moveTo(2, cc.v2(80, 80));
	``` 
	*/
	export function moveTo(duration: number, position: Vec2|number, y?: number): ActionInterval;	
	/**
	!#en
	Create a action which skews a Node object to given angles by modifying its skewX and skewY properties.
	Changes to the specified value.
	!#zh ????????°ç?®æ??è§?åº¦ã??
	@param t time in seconds
	@param sx sx
	@param sy sy
	
	@example 
	```js
	// example
	var actionTo = cc.skewTo(2, 37.2, -37.2);
	``` 
	*/
	export function skewTo(t: number, sx: number, sy: number): ActionInterval;	
	/**
	!#en
	Skews a Node object by skewX and skewY degrees. <br />
	Relative to its property modification.
	!#zh ?????????å®????è§?åº¦ã??
	@param t time in seconds
	@param sx sx skew in degrees for X axis
	@param sy sy skew in degrees for Y axis
	
	@example 
	```js
	// example
	var actionBy = cc.skewBy(2, 0, -90);
	``` 
	*/
	export function skewBy(t: number, sx: number, sy: number): ActionInterval;	
	/**
	!#en
	Moves a Node object simulating a parabolic jump movement by modifying it's position property.
	Relative to its movement.
	!#zh ??¨è·³è·??????¹å??ç§»å?¨æ??å®????è·?ç¦»ã??
	@param duration duration
	@param position position
	@param y y
	@param height height
	@param jumps jumps
	
	@example 
	```js
	// example
	var actionBy = cc.jumpBy(2, cc.v2(300, 0), 50, 4);
	var actionBy = cc.jumpBy(2, 300, 0, 50, 4);
	``` 
	*/
	export function jumpBy(duration: number, position: Vec2|number, y?: number, height?: number, jumps?: number): ActionInterval;	
	/**
	!#en
	Moves a Node object to a parabolic position simulating a jump movement by modifying its position property. <br />
	Jump to the specified location.
	!#zh ??¨è·³è·??????¹å??ç§»å?¨å?°ç?®æ??ä½?ç½®ã??
	@param duration duration
	@param position position
	@param y y
	@param height height
	@param jumps jumps
	
	@example 
	```js
	// example
	var actionTo = cc.jumpTo(2, cc.v2(300, 300), 50, 4);
	var actionTo = cc.jumpTo(2, 300, 300, 50, 4);
	``` 
	*/
	export function jumpTo(duration: number, position: Vec2|number, y?: number, height?: number, jumps?: number): ActionInterval;	
	/**
	!#en
	An action that moves the target with a cubic Bezier curve by a certain distance.
	Relative to its movement.
	!#zh ???è´?èµ?å°???²çº¿è½¨è¿¹ç§»å?¨æ??å®????è·?ç¦»ã??
	@param t time in seconds
	@param c Array of points
	
	@example 
	```js
	// example
	var bezier = [cc.v2(0, windowSize.height / 2), cc.v2(300, -windowSize.height / 2), cc.v2(300, 100)];
	var bezierForward = cc.bezierBy(3, bezier);
	``` 
	*/
	export function bezierBy(t: number, c: Vec2[]): ActionInterval;	
	/**
	!#en An action that moves the target with a cubic Bezier curve to a destination point.
	!#zh ???è´?èµ?å°???²çº¿è½¨è¿¹ç§»å?¨å?°ç?®æ??ä½?ç½®ã??
	@param t t
	@param c Array of points
	
	@example 
	```js
	// example
	var bezier = [cc.v2(0, windowSize.height / 2), cc.v2(300, -windowSize.height / 2), cc.v2(300, 100)];
	var bezierTo = cc.bezierTo(2, bezier);
	``` 
	*/
	export function bezierTo(t: number, c: Vec2[]): ActionInterval;	
	/**
	!#en Scales a Node object to a zoom factor by modifying it's scale property.
	!#zh å°??????¹å¤§å°?ç¼©æ?¾å?°æ??å®?????????°ã??
	@param duration duration
	@param sx scale parameter in X
	@param sy scale parameter in Y, if Null equal to sx
	
	@example 
	```js
	// example
	// It scales to 0.5 in both X and Y.
	var actionTo = cc.scaleTo(2, 0.5);
	
	// It scales to 0.5 in x and 2 in Y
	var actionTo = cc.scaleTo(2, 0.5, 2);
	``` 
	*/
	export function scaleTo(duration: number, sx: number, sy?: number): ActionInterval;	
	/**
	!#en
	Scales a Node object a zoom factor by modifying it's scale property.
	Relative to its changes.
	!#zh ??????å®?????????°ç¼©??¾è????¹å¤§å°????
	@param duration duration in seconds
	@param sx sx  scale parameter in X
	@param sy sy scale parameter in Y, if Null equal to sx
	
	@example 
	```js
	// example without sy, it scales by 2 both in X and Y
	var actionBy = cc.scaleBy(2, 2);
	
	//example with sy, it scales by 0.25 in X and 4.5 in Y
	var actionBy2 = cc.scaleBy(2, 0.25, 4.5);
	``` 
	*/
	export function scaleBy(duration: number, sx: number, sy?: number|void): ActionInterval;	
	/**
	!#en Blinks a Node object by modifying it's visible property.
	!#zh ??ªç??ï¼???ºä????????åº¦ï?????
	@param duration duration in seconds
	@param blinks blinks in times
	
	@example 
	```js
	// example
	var action = cc.blink(2, 10);
	``` 
	*/
	export function blink(duration: number, blinks: number): ActionInterval;	
	/**
	!#en
	Fades an object that implements the cc.RGBAProtocol protocol.
	It modifies the opacity from the current value to a custom one.
	!#zh ä¿®æ?¹é?????åº¦å?°æ??å®???¼ã??
	@param duration duration
	@param opacity 0-255, 0 is transparent
	
	@example 
	```js
	// example
	var action = cc.fadeTo(1.0, 0);
	``` 
	*/
	export function fadeTo(duration: number, opacity: number): ActionInterval;	
	/**
	!#en Fades In an object that implements the cc.RGBAProtocol protocol. It modifies the opacity from 0 to 255.
	!#zh æ¸???¾æ????????
	@param duration duration in seconds
	
	@example 
	```js
	//example
	var action = cc.fadeIn(1.0);
	``` 
	*/
	export function fadeIn(duration: number): ActionInterval;	
	/**
	!#en Fades Out an object that implements the cc.RGBAProtocol protocol. It modifies the opacity from 255 to 0.
	!#zh æ¸?????????????
	@param d duration in seconds
	
	@example 
	```js
	// example
	var action = cc.fadeOut(1.0);
	``` 
	*/
	export function fadeOut(d: number): ActionInterval;	
	/**
	!#en Tints a Node that implements the cc.NodeRGB protocol from current tint to a custom one.
	!#zh ä¿®æ?¹é????²å?°æ??å®???¼ã??
	@param duration duration
	@param red 0-255
	@param green 0-255
	@param blue 0-255
	
	@example 
	```js
	// example
	var action = cc.tintTo(2, 255, 0, 255);
	``` 
	*/
	export function tintTo(duration: number, red: number, green: number, blue: number): ActionInterval;	
	/**
	!#en
	Tints a Node that implements the cc.NodeRGB protocol from current tint to a custom one.
	Relative to their own color change.
	!#zh ?????§æ??å®????å¢????ä¿®æ?¹é????²ã??
	@param duration duration in seconds
	@param deltaRed deltaRed
	@param deltaGreen deltaGreen
	@param deltaBlue deltaBlue
	
	@example 
	```js
	// example
	var action = cc.tintBy(2, -127, -255, -127);
	``` 
	*/
	export function tintBy(duration: number, deltaRed: number, deltaGreen: number, deltaBlue: number): ActionInterval;	
	/**
	!#en Delays the action a certain amount of seconds.
	!#zh å»¶è?????å®??????¶é?´é?????
	@param d duration in seconds
	
	@example 
	```js
	// example
	var delay = cc.delayTime(1);
	``` 
	*/
	export function delayTime(d: number): ActionInterval;	
	/**
	!#en Executes an action in reverse order, from time=duration to time=0.
	!#zh ???è½¬ç?®æ????¨ä???????¶é?´è½´???
	@param action action
	
	@example 
	```js
	// example
	 var reverse = cc.reverseTime(this);
	``` 
	*/
	export function reverseTime(action: FiniteTimeAction): ActionInterval;	
	/**
	!#en Create an action with the specified action and forced target.
	!#zh ??¨å·²?????¨ä?????ä¸?ä¸ªæ?°ç????®æ???????¹å??å»ºå?¨ä?????
	@param target target
	@param action action 
	*/
	export function targetedAction(target: Node, action: FiniteTimeAction): ActionInterval;	
	/**
	
	@param target the target to animate 
	*/
	export function tween<T> (target?: T) : Tween<T>;	
	/** !#en This is a Easing instance.
	!#zh è¿???¯ä??ä¸? Easing ç±»å??ä¾???? */
	export var easing: Easing;	
	/**
	!#en
	Outputs an error message to the Cocos Creator Console (editor) or Web Console (runtime).<br/>
	- In Cocos Creator, error is red.<br/>
	- In Chrome, error have a red icon along with red message text.<br/>
	!#zh
	è¾???ºé??è¯¯æ????¯å?? Cocos Creator ç¼?è¾???¨ç?? Console ???è¿?è¡???¶é¡µ??¢ç«¯??? Console ä¸­ã??<br/>
	- ??? Cocos Creator ä¸­ï?????è¯¯ä¿¡??¯æ?¾ç¤º??¯çº¢??²ç?????<br/>
	- ??? Chrome ä¸­ï?????è¯¯ä¿¡??¯æ??çº¢è?²ç????¾æ??ä»¥å??çº¢è?²ç??æ¶???¯æ????¬ã??<br/>
	@param msg A JavaScript string containing zero or more substitution strings.
	@param subst JavaScript objects with which to replace substitution strings within msg. This gives you additional control over the format of the output. 
	*/
	export function error(msg: any, ...subst: any[]): void;	
	/**
	!#en
	Outputs a warning message to the Cocos Creator Console (editor) or Web Console (runtime).
	- In Cocos Creator, warning is yellow.
	- In Chrome, warning have a yellow warning icon with the message text.
	!#zh
	è¾???ºè­¦???æ¶???¯å?? Cocos Creator ç¼?è¾???¨ç?? Console ???è¿?è¡???? Web ç«¯ç?? Console ä¸­ã??<br/>
	- ??? Cocos Creator ä¸­ï??è­¦å??ä¿¡æ?¯æ?¾ç¤º??¯é????²ç?????<br/>
	- ??? Chrome ä¸­ï??è­¦å??ä¿¡æ?¯æ?????é»???²ç????¾æ??ä»¥å??é»???²ç??æ¶???¯æ????¬ã??<br/>
	@param msg A JavaScript string containing zero or more substitution strings.
	@param subst JavaScript objects with which to replace substitution strings within msg. This gives you additional control over the format of the output. 
	*/
	export function warn(msg: any, ...subst: any[]): void;	
	/**
	!#en Outputs a message to the Cocos Creator Console (editor) or Web Console (runtime).
	!#zh è¾???ºä????¡æ????¯å?? Cocos Creator ç¼?è¾???¨ç?? Console ???è¿?è¡???? Web ç«¯ç?? Console ä¸­ã??
	@param msg A JavaScript string containing zero or more substitution strings.
	@param subst JavaScript objects with which to replace substitution strings within msg. This gives you additional control over the format of the output. 
	*/
	export function log(msg: string|any, ...subst: any[]): void;	
	/** !#en Director
	!#zh å¯¼æ??ç±»ã?? */
	export var director: Director;	
	/** !#en This is a Game instance.
	!#zh è¿???¯ä??ä¸? Game ç±»ç??å®?ä¾?ï¼??????«æ¸¸???ä¸»ä??ä¿¡æ?¯å¹¶è´?è´?é©±å?¨æ¸¸??????æ¸¸æ??å¯¹è±¡?????? */
	export var game: Game;	
	/**
	!#en
	Rotates a Node object to a certain angle by modifying its quternion property. <br/>
	The direction will be decided by the shortest angle.
	!#zh ???è½¬å?°ç?®æ??è§?åº¦ï?????è¿????å¸§ä¿®??¹å????? quternion å±???§ï?????è½¬æ?¹å??å°???±æ????­ç??è§?åº¦å?³å?????
	@param duration duration in seconds
	@param dstAngleX dstAngleX in degrees.
	@param dstAngleY dstAngleY in degrees.
	@param dstAngleZ dstAngleZ in degrees.
	
	@example 
	```js
	// example
	var rotate3DTo = cc.rotate3DTo(2, cc.v3(0, 180, 0));
	``` 
	*/
	export function rotate3DTo(duration: number, dstAngleX: number|Vec3|Quat, dstAngleY?: number, dstAngleZ?: number): ActionInterval;	
	/**
	!#en
	Rotates a Node object counter clockwise a number of degrees by modifying its quaternion property.
	Relative to its properties to modify.
	!#zh ???è½¬æ??å®???? 3D è§?åº¦ã??
	@param duration duration in seconds
	@param deltaAngleX deltaAngleX in degrees
	@param deltaAngleY deltaAngleY in degrees
	@param deltaAngleZ deltaAngleZ in degrees
	
	@example 
	```js
	// example
	var actionBy = cc.rotate3DBy(2, cc.v3(0, 360, 0));
	``` 
	*/
	export function rotate3DBy(duration: number, deltaAngleX: number|Vec3, deltaAngleY?: number, deltaAngleZ?: number): ActionInterval;	
	export var assetManager: AssetManager;	
	/** !#en
	cc.resources is a bundle and controls all asset under assets/resources
	
	!#zh
	cc.resources ??¯ä??ä¸? bundleï¼???¨ä??ç®¡ç??????????? assets/resources ä¸????èµ?æº? */
	export var resources: AssetManager.Bundle;	
	/** !#en The System event singleton for global usage
	!#zh ç³»ç??äº?ä»¶å??ä¾?ï¼???¹ä¾¿??¨å??ä½¿ç?? */
	export var systemEvent: SystemEvent;	
	/**
	Finds a node by hierarchy path, the path is case-sensitive.
	It will traverse the hierarchy by splitting the path using '/' character.
	This function will still returns the node even if it is inactive.
	It is recommended to not use this function every frame instead cache the result at startup.
	@param path path
	@param referenceNode referenceNode 
	*/
	export function find(path: string, referenceNode?: Node): Node;	
	/**
	!#en Defines a CCClass using the given specification, please see [Class](/docs/editors_and_tools/creator-chapters/scripting/class.html) for details.
	!#zh å®?ä¹?ä¸?ä¸? CCClassï¼?ä¼???¥å????°å??é¡»æ?¯ä??ä¸ªå????«ç±»????????°ç??å­???¢é??å¯¹è±¡ï¼???·ä????¨æ??è¯·æ?¥é??[ç±»å??å®?ä¹?](/docs/creator/scripting/class.html)???
	@param options options
	
	@example 
	```js
	// define base class
	var Node = cc.Class();
	
	// define sub class
	var Sprite = cc.Class({
	name: 'Sprite',
	extends: Node,
	
	ctor: function () {
	this.url = "";
	this.id = 0;
	},
	
	statics: {
	// define static members
	count: 0,
	getBounds: function (spriteList) {
	// compute bounds...
	}
	},
	
	properties {
	width: {
	default: 128,
	type: cc.Integer,
	tooltip: 'The width of sprite'
	},
	height: 128,
	size: {
	get: function () {
	return cc.v2(this.width, this.height);
	}
	}
	},
	
	load: function () {
	// load this.url...
	};
	});
	
	// instantiate
	
	var obj = new Sprite();
	obj.url = 'sprite.png';
	obj.load();
	``` 
	*/
	export function Class(options?: {name?: string; extends?: Function; ctor?: Function; __ctor__?: Function; properties?: any; statics?: any; mixins?: Function[]; editor?: {executeInEditMode?: boolean; requireComponent?: Function; menu?: string; executionOrder?: number; disallowMultiple?: boolean; playOnFocus?: boolean; inspector?: string; icon?: string; help?: string; }; update?: Function; lateUpdate?: Function; onLoad?: Function; start?: Function; onEnable?: Function; onDisable?: Function; onDestroy?: Function; onFocusInEditor?: Function; onLostFocusInEditor?: Function; resetInEditor?: Function; onRestore?: Function; _getLocalBounds?: Function; }): Function;	
	/**
	!#en
	Define an enum type. <br/>
	If a enum item has a value of -1, it will be given an Integer number according to it's order in the list.<br/>
	Otherwise it will use the value specified by user who writes the enum definition.
	
	!#zh
	å®?ä¹?ä¸?ä¸ªæ??ä¸¾ç±»??????<br/>
	??¨æ?·å?¯ä»¥??????ä¸¾å?¼è®¾ä¸ºä»»????????´æ?°ï??å¦????è®¾ä¸º -1ï¼?ç³»ç??å°?ä¼???????ä¸ºä??ä¸?ä¸ªæ??ä¸¾å?? + 1???
	@param obj a JavaScript literal object containing enum names and values, or a TypeScript enum type
	
	@example 
	```js
	// JavaScript:
	
	var WrapMode = cc.Enum({
	    Repeat: -1,
	    Clamp: -1
	});
	
	// Texture.WrapMode.Repeat == 0
	// Texture.WrapMode.Clamp == 1
	// Texture.WrapMode[0] == "Repeat"
	// Texture.WrapMode[1] == "Clamp"
	
	var FlagType = cc.Enum({
	    Flag1: 1,
	    Flag2: 2,
	    Flag3: 4,
	    Flag4: 8,
	});
	
	var AtlasSizeList = cc.Enum({
	    128: 128,
	    256: 256,
	    512: 512,
	    1024: 1024,
	});
	
	// TypeScript:
	
	// If used in TypeScript, just define a TypeScript enum:
	enum Direction {
	    Up,
	    Down,
	    Left,
	    Right
	}
	
	// If you need to inspect the enum in Properties panel, you can call cc.Enum:
	const {ccclass, property} = cc._decorator;
	
	@ccclass
	class NewScript extends cc.Component {
	    @property({
	        type: cc.Enum(Direction)    // call cc.Enum
	    })
	    direction: Direction = Direction.Up;
	}
	
	``` 
	*/
	export function Enum<T>(obj: T): T;	
	/**
	
	@param touches touches 
	*/
	export function handleTouchesBegin(touches: any[]): void;	
	/**
	
	@param touches touches 
	*/
	export function handleTouchesMove(touches: any[]): void;	
	/**
	
	@param touches touches 
	*/
	export function handleTouchesEnd(touches: any[]): void;	
	/**
	
	@param touches touches 
	*/
	export function handleTouchesCancel(touches: any[]): void;	
	/**
	
	@param touches touches 
	*/
	export function getSetOfTouchesEndOrCancel(touches: any[]): any[];	
	/**
	
	@param touch touch 
	*/
	export function getPreTouch(touch: Touch): Touch;	
	/**
	
	@param touch touch 
	*/
	export function setPreTouch(touch: Touch): void;	
	/**
	
	@param tx tx
	@param ty ty
	@param pos pos 
	*/
	export function getTouchByXY(tx: number, ty: number, pos: Vec2): Touch;	
	/**
	
	@param location location
	@param pos pos
	@param eventType eventType 
	*/
	export function getMouseEvent(location: Vec2, pos: Vec2, eventType: number): Event.EventMouse;	
	/**
	
	@param event event
	@param pos pos 
	*/
	export function getPointByEvent(event: Touch, pos: Vec2): Vec2;	
	/**
	
	@param event event
	@param pos pos 
	*/
	export function getTouchesByEvent(event: Touch, pos: Vec2): any[];	
	/**
	
	@param element element 
	*/
	export function registerSystemEvent(element: HTMLElement): void;	
	/**
	
	@param dt dt 
	*/
	export function update(dt: number): void;	
	/**
	!#en
	Checks whether the object is non-nil and not yet destroyed.<br>
	When an object's `destroy` is called, it is actually destroyed after the end of this frame.
	So `isValid` will return false from the next frame, while `isValid` in the current frame will still be true.
	If you want to determine whether the current frame has called `destroy`, use `cc.isValid(obj, true)`,
	but this is often caused by a particular logical requirements, which is not normally required.
	
	!#zh
	æ£???¥è¯¥å¯¹è±¡??¯å?¦ä??ä¸? null å¹¶ä??å°???ªé??æ¯????<br>
	å½?ä¸?ä¸ªå¯¹è±¡ç?? `destroy` è°???¨ä»¥???ï¼?ä¼???¨è??ä¸?å¸§ç??????????????æ­????æ¯???????æ­¤ä??ä¸?ä¸?å¸§å??å§? `isValid` å°±ä??è¿???? falseï¼????å½????å¸§å?? `isValid` ä»???¶ä????? true???å¦????å¸??????¤æ?­å?????å¸§æ?¯å?¦è????¨è?? `destroy`ï¼?è¯·ä½¿??? `cc.isValid(obj, true)`ï¼?ä¸?è¿?è¿?å¾?å¾???¯ç?¹æ?????ä¸???¡é??æ±?å¼?èµ·ç??ï¼????å¸¸æ????µä??ä¸????è¦?è¿???·ã??
	@param value value
	@param strictMode If true, Object called destroy() in this frame will also treated as invalid.
	
	@example 
	```js
	var node = new cc.Node();
	cc.log(cc.isValid(node));    // true
	node.destroy();
	cc.log(cc.isValid(node));    // true, still valid in this frame
	// after a frame...
	cc.log(cc.isValid(node));    // false, destroyed in the end of last frame
	``` 
	*/
	export function isValid(value: any, strictMode?: boolean): boolean;	
	/** !#en cc.view is the shared view object.
	!#zh cc.view ??¯å?¨å?????è§???¾å¯¹è±¡ã?? */
	export var view: View;	
	/** !#en cc.winSize is the alias object for the size of the current game window.
	!#zh cc.winSize ä¸ºå????????æ¸¸æ??çª???????å¤§å????? */
	export var winSize: Size;	
	/** Specify that the input value must be integer in Inspector.
	Also used to indicates that the elements in array should be type integer. */
	export var Integer: string;	
	/** Indicates that the elements in array should be type double. */
	export var Float: string;	
	/** Indicates that the elements in array should be type boolean. */
	export var Boolean: string;	
	/** Indicates that the elements in array should be type string. */
	export var String: string;	
	/**
	!#en Deserialize json to cc.Asset
	!#zh å°? JSON ???åº???????ä¸ºå¯¹è±¡å??ä¾????
	@param data the serialized cc.Asset json string or json object.
	@param details additional loading result
	@param options options 
	*/
	export function deserialize(data: string|any, details?: Details, options?: any): any;	
	/**
	!#en Clones the object `original` and returns the clone, or instantiate a node from the Prefab.
	!#zh ?????????å®????ä»»æ??ç±»å?????å¯¹è±¡ï¼???????ä»? Prefab å®?ä¾??????ºæ?°è????¹ã??
	
	ï¼?Instantiate ??¶ï??function ??? dom ç­??????¯å????????å¯¹è±¡ä¼???´æ?¥ä???????????å¼???¨ï??Asset ä¼???´æ?¥è??è¡?æµ???·è??ï¼???¯å????????ç±»å??ä¼?è¿?è¡?æ·±æ?·è?????ï¼?
	@param original An existing object that you want to make a copy of.
	
	@example 
	```js
	// instantiate node from prefab
	var scene = cc.director.getScene();
	var node = cc.instantiate(prefabAsset);
	node.parent = scene;
	// clone node
	var scene = cc.director.getScene();
	var node = cc.instantiate(targetNode);
	node.parent = scene;
	``` 
	*/
	export function instantiate(original: Prefab): Node;
	export function instantiate<T>(original: T): T;	
	/**
	!#en
	The convenience method to create a new {{#crossLink "Color/Color:method"}}cc.Color{{/crossLink}}
	Alpha channel is optional. Default value is 255.
	
	!#zh
	???è¿?è¯¥æ?¹æ????¥å??å»ºä??ä¸ªæ?°ç?? {{#crossLink "Color/Color:method"}}cc.Color{{/crossLink}} å¯¹è±¡???
	Alpha ????????¯å?¯é????????é»?è®¤å?¼æ?? 255???
	@param r r
	@param g g
	@param b b
	@param a a
	
	@example 
	```js
	-----------------------
	// 1. All channels seperately as parameters
	var color1 = new cc.Color(255, 255, 255, 255);
	// 2. Convert a hex string to a color
	var color2 = new cc.Color("#000000");
	// 3. An color object as parameter
	var color3 = new cc.Color({r: 255, g: 255, b: 255, a: 255});
	
	``` 
	*/
	export function color(r?: number, g?: number, b?: number, a?: number): Color;	
	/**
	!#en The convenience method to create a new {{#crossLink "Mat4"}}cc.Mat4{{/crossLink}}.
	!#zh ???è¿?è¯¥ç??ä¾¿ç????½æ?°è??è¡????å»? {{#crossLink "Mat4"}}cc.Mat4{{/crossLink}} å¯¹è±¡???
	@param m00 Component in column 0, row 0 position (index 0)
	@param m01 Component in column 0, row 1 position (index 1)
	@param m02 Component in column 0, row 2 position (index 2)
	@param m03 Component in column 0, row 3 position (index 3)
	@param m10 Component in column 1, row 0 position (index 4)
	@param m11 Component in column 1, row 1 position (index 5)
	@param m12 Component in column 1, row 2 position (index 6)
	@param m13 Component in column 1, row 3 position (index 7)
	@param m20 Component in column 2, row 0 position (index 8)
	@param m21 Component in column 2, row 1 position (index 9)
	@param m22 Component in column 2, row 2 position (index 10)
	@param m23 Component in column 2, row 3 position (index 11)
	@param m30 Component in column 3, row 0 position (index 12)
	@param m31 Component in column 3, row 1 position (index 13)
	@param m32 Component in column 3, row 2 position (index 14)
	@param m33 Component in column 3, row 3 position (index 15) 
	*/
	export function mat4(m00?: number, m01?: number, m02?: number, m03?: number, m10?: number, m11?: number, m12?: number, m13?: number, m20?: number, m21?: number, m22?: number, m23?: number, m30?: number, m31?: number, m32?: number, m33?: number): Mat4;	
	/**
	!#en The convenience method to create a new {{#crossLink "Quat"}}cc.Quat{{/crossLink}}.
	!#zh ???è¿?è¯¥ç??ä¾¿ç????½æ?°è??è¡????å»? {{#crossLink "Quat"}}cc.Quat{{/crossLink}} å¯¹è±¡???
	@param x x
	@param y y
	@param z z
	@param w w 
	*/
	export function quat(x?: number|any, y?: number, z?: number, w?: number): Quat;	
	/**
	!#en
	The convenience method to create a new Rect.
	see {{#crossLink "Rect/Rect:method"}}cc.Rect{{/crossLink}}
	!#zh
	è¯¥æ?¹æ????¨æ?¥å¿«??????å»ºä??ä¸ªæ?°ç????©å½¢???{{#crossLink "Rect/Rect:method"}}cc.Rect{{/crossLink}}
	@param x x
	@param y y
	@param w w
	@param h h
	
	@example 
	```js
	var a = new cc.Rect(0 , 0, 10, 0);
	``` 
	*/
	export function rect(x?: number, y?: number, w?: number, h?: number): Rect;	
	/**
	!#en
	Helper function that creates a cc.Size.<br/>
	Please use cc.p or cc.v2 instead, it will soon replace cc.Size.
	!#zh
	???å»ºä??ä¸? cc.Size å¯¹è±¡???å¸®å?©å?½æ?°ã??<br/>
	æ³¨æ??ï¼???¯ä»¥ä½¿ç?? cc.p ????????? cc.v2 ä»???¿ï??å®?ä»¬å??å¾?å¿«å??ä»? cc.Size???
	@param w width or a size object
	@param h height
	
	@example 
	```js
	var size1 = cc.size();
	var size2 = cc.size(100,100);
	var size3 = cc.size(size2);
	var size4 = cc.size({width: 100, height: 100});
	
	``` 
	*/
	export function size(w: number|Size, h?: number): Size;	
	export var EPSILON: number;	
	/**
	Clamps a value between a minimum float and maximum float value.
	@param val val
	@param min min
	@param max max 
	*/
	export function clamp(val: number, min: number, max: number): number;	
	/**
	Clamps a value between 0 and 1.
	@param val val 
	*/
	export function clamp01(val: number): number;	
	/**
	
	@param from from
	@param to to
	@param ratio the interpolation coefficient 
	*/
	export function lerp(from: number, to: number, ratio: number): number;	
	export function random(): void;	
	/**
	Returns a floating-point random number between min (inclusive) and max (exclusive).
	@param min min
	@param max max 
	*/
	export function randomRange(min: number, max: number): number;	
	/**
	Returns a random integer between min (inclusive) and max (exclusive).
	@param min min
	@param max max 
	*/
	export function randomRangeInt(min: number, max: number): number;	
	/**
	Linear congruential generator using Hull-Dobell Theorem.
	@param seed the random seed 
	*/
	export function pseudoRandom(seed: number): number;	
	/**
	Returns a floating-point pseudo-random number between min (inclusive) and max (exclusive).
	@param seed seed
	@param min min
	@param max max 
	*/
	export function pseudoRandomRange(seed: number, min: number, max: number): number;	
	/**
	Returns a pseudo-random integer between min (inclusive) and max (exclusive).
	@param seed seed
	@param min min
	@param max max 
	*/
	export function pseudoRandomRangeInt(seed: number, min: number, max: number): number;	
	/**
	Returns the next power of two for the value
	@param val val 
	*/
	export function nextPow2(val: number): number;	
	/**
	Returns float remainder for t / length
	@param t time start at 0
	@param length time of one cycle 
	*/
	export function repeat(t: number, length: number): number;	
	/**
	Returns time wrapped in ping-pong mode
	@param t time start at 0
	@param length time of one cycle 
	*/
	export function repeat(t: number, length: number): number;	
	/**
	Returns ratio of a value within a given range
	@param from start value
	@param to end value
	@param value given value 
	*/
	export function repeat(from: number, to: number, value: number): number;	
	/**
	Returns -1, 0, +1 depending on sign of x.
	@param v v 
	*/
	export function sign(v: number): void;	
	/**
	!#en The convenience method to create a new {{#crossLink "Vec2"}}cc.Vec2{{/crossLink}}.
	!#zh ???è¿?è¯¥ç??ä¾¿ç????½æ?°è??è¡????å»? {{#crossLink "Vec2"}}cc.Vec2{{/crossLink}} å¯¹è±¡???
	@param x x
	@param y y
	
	@example 
	```js
	var v1 = cc.v2();
	var v2 = cc.v2(0, 0);
	var v3 = cc.v2(v2);
	var v4 = cc.v2({x: 100, y: 100});
	``` 
	*/
	export function v2(x?: number|any, y?: number): Vec2;	
	/**
	!#en The convenience method to create a new {{#crossLink "Vec3"}}cc.Vec3{{/crossLink}}.
	!#zh ???è¿?è¯¥ç??ä¾¿ç????½æ?°è??è¡????å»? {{#crossLink "Vec3"}}cc.Vec3{{/crossLink}} å¯¹è±¡???
	@param x x
	@param y y
	@param z z
	
	@example 
	```js
	var v1 = cc.v3();
	var v2 = cc.v3(0, 0, 0);
	var v3 = cc.v3(v2);
	var v4 = cc.v3({x: 100, y: 100, z: 0});
	``` 
	*/
	export function v3(x?: number|any, y?: number, z?: number): Vec3;	
	export var dynamicAtlasManager: DynamicAtlasManager;	
	/** !#en The matrix storage */
	export var matrix: any[];	
	/**
	!#en Get an element
	@param i i
	@param j j 
	*/
	export function get(i: number, j: number): number;	
	/**
	!#en Set an element
	@param i i
	@param j j
	@param value value 
	*/
	export function set(i: number, j: number, value: boolean): void;	
	/**
	!#en Sets all elements to zero 
	*/
	export function reset(): void;	
	/** !#en Base class cc.Action for action classes.
	!#zh Action ç±»æ?¯æ???????¨ä??ç±»å???????ºç±»??? */
	export class Action {		
		/**
		!#en
		to copy object with deep copy.
		returns a clone of action.
		!#zh è¿????ä¸?ä¸ªå??????????¨ä????? 
		*/
		clone(): Action;		
		/**
		!#en
		return true if the action has finished.
		!#zh å¦??????¨ä??å·²å?????å°±è????? true??? 
		*/
		isDone(): boolean;		
		/**
		!#en get the target.
		!#zh ??·å??å½??????®æ???????¹ã?? 
		*/
		getTarget(): Node;		
		/**
		!#en The action will modify the target properties.
		!#zh è®¾ç½®??®æ???????¹ã??
		@param target target 
		*/
		setTarget(target: Node): void;		
		/**
		!#en get the original target.
		!#zh ??·å?????å§???®æ???????¹ã?? 
		*/
		getOriginalTarget(): Node;		
		/**
		!#en get tag number.
		!#zh ??·å????¨ä??è¯???«å?¨ä????????ç­¾ã?? 
		*/
		getTag(): number;		
		/**
		!#en set tag number.
		!#zh è®¾ç½®???ç­¾ï????¨ä??è¯???«å?¨ä?????
		@param tag tag 
		*/
		setTag(tag: number): void;		
		/** !#en Default Action tag.
		!#zh é»?è®¤å?¨ä?????ç­¾ã?? */
		static TAG_INVALID: number;	
	}	
	/** !#en
	Base class actions that do have a finite time duration. <br/>
	Possible actions: <br/>
	- An action with a duration of 0 seconds. <br/>
	- An action with a duration of 35.5 seconds.
	
	Infinite time actions are valid
	!#zh ????????¶é?´å?¨ä??ï¼?è¿?ç§???¨ä????¥æ????¶é?? duration å±???§ã?? */
	export class FiniteTimeAction extends Action {		
		/**
		!#en get duration of the action. (seconds).
		!#zh ??·å????¨ä??ä»¥ç??ä¸ºå??ä½???????ç»­æ?¶é?´ã?? 
		*/
		getDuration(): number;		
		/**
		!#en set duration of the action. (seconds).
		!#zh è®¾ç½®??¨ä??ä»¥ç??ä¸ºå??ä½???????ç»­æ?¶é?´ã??
		@param duration duration 
		*/
		setDuration(duration: number): void;		
		/**
		!#en
		Returns a reversed action. <br />
		For example: <br />
		- The action will be x coordinates of 0 move to 100. <br />
		- The reversed action will be x of 100 move to 0.
		- Will be rewritten
		!#zh è¿????ä¸?ä¸ªæ?°ç????¨ä??ï¼???§è??ä¸??????¨ä??å®???¨ç?¸å???????¨ä????? 
		*/
		reverse(): void;		
		/**
		!#en
		to copy object with deep copy.
		returns a clone of action.
		!#zh è¿????ä¸?ä¸ªå??????????¨ä????? 
		*/
		clone(): FiniteTimeAction;	
	}	
	/** !#en Instant actions are immediate actions. They don't have a duration like the ActionInterval actions.
	!#zh ??³æ?¶å?¨ä??ï¼?è¿?ç§???¨ä??ç«???³å°±ä¼???§è??ï¼?ç»§æ?¿è?? FiniteTimeAction??? */
	export class ActionInstant extends FiniteTimeAction {	
	}	
	/** !#en
	<p> An interval action is an action that takes place within a certain period of time. <br/>
	It has an start time, and a finish time. The finish time is the parameter<br/>
	duration plus the start time.</p>
	
	<p>These CCActionInterval actions have some interesting properties, like:<br/>
	- They can run normally (default)  <br/>
	- They can run reversed with the reverse method   <br/>
	- They can run with the time altered with the Accelerate, AccelDeccel and Speed actions. </p>
	
	<p>For example, you can simulate a Ping Pong effect running the action normally and<br/>
	then running it again in Reverse mode. </p>
	!#zh ??¶é?´é?´é????¨ä??ï¼?è¿?ç§???¨ä????¨å·²å®???¶é?´å??å®????ï¼?ç»§æ?? FiniteTimeAction??? */
	export class ActionInterval extends FiniteTimeAction {		
		/**
		!#en Implementation of ease motion.
		!#zh ç¼???¨è????¨ã??
		@param easeObj easeObj
		
		@example 
		```js
		action.easing(cc.easeIn(3.0));
		``` 
		*/
		easing(easeObj: any): ActionInterval;		
		/**
		!#en
		Repeats an action a number of times.
		To repeat an action forever use the CCRepeatForever action.
		!#zh ???å¤???¨ä????¯ä»¥???ä¸?å®?æ¬¡æ?°é??å¤?ä¸?ä¸ªå?¨ä??ï¼?ä½¿ç?? RepeatForever ??¨ä????¥æ°¸è¿????å¤?ä¸?ä¸ªå?¨ä?????
		@param times times 
		*/
		repeat(times: number): ActionInterval;		
		/**
		!#en
		Repeats an action for ever.  <br/>
		To repeat the an action for a limited number of times use the Repeat action. <br/>
		!#zh æ°¸è????°é??å¤?ä¸?ä¸ªå?¨ä??ï¼???????æ¬¡æ?°å?????å¤?ä¸?ä¸ªå?¨ä??è¯·ä½¿??? Repeat ??¨ä????? 
		*/
		repeatForever(): ActionInterval;	
	}	
	/** !#en
	cc.ActionManager is a class that can manage actions.<br/>
	Normally you won't need to use this class directly. 99% of the cases you will use the CCNode interface,
	which uses this class's singleton object.
	But there are some cases where you might need to use this class. <br/>
	Examples:<br/>
	- When you want to run an action where the target is different from a CCNode.<br/>
	- When you want to pause / resume the actions<br/>
	!#zh
	cc.ActionManager ??¯å?¯ä»¥ç®¡ç????¨ä????????ä¾?ç±»ã??<br/>
	???å¸¸ä??å¹¶ä?????è¦???´æ?¥ä½¿??¨è??ä¸ªç±»ï¼?99%????????µæ?¨å??ä½¿ç?? CCNode ?????¥å?????<br/>
	ä½?ä¹????ä¸?äº??????µä??ï¼???¨å?¯è?½é??è¦?ä½¿ç?¨è??ä¸ªç±»??? <br/>
	ä¾?å¦?ï¼?
	 - å½?ä½???³è??è¿?è¡?ä¸?ä¸ªå?¨ä??ï¼?ä½???®æ??ä¸???? CCNode ç±»å????¶ã?? <br/>
	 - å½?ä½???³è????????/??¢å????¨ä????¶ã?? <br/> */
	export class ActionManager {		
		/**
		!#en
		Adds an action with a target.<br/>
		If the target is already present, then the action will be added to the existing target.
		If the target is not present, a new instance of this target will be created either paused or not, and the action will be added to the newly created target.
		When the target is paused, the queued actions won't be 'ticked'.
		!#zh
		å¢????ä¸?ä¸ªå?¨ä??ï¼??????¶è?????è¦????ä¾???¨ä???????®æ??å¯¹è±¡ï¼???®æ??å¯¹è±¡??¯å?¦æ?????ä½?ä¸ºå????°ã??<br/>
		å¦??????®æ??å·²å????¨ï????¨ä??å°?ä¼?è¢«ç?´æ?¥æ·»?????°ç?°æ??????????¹ä¸­???<br/>
		å¦??????®æ??ä¸?å­???¨ï??å°?ä¸ºè??ä¸???®æ?????å»ºä??ä¸ªæ?°ç??å®?ä¾?ï¼?å¹¶å????¨ä??æ·»å??è¿???»ã??<br/>
		å½???®æ????¶æ????? paused ä¸? trueï¼???¨ä??å°?ä¸?ä¼?è¢«æ?§è??
		@param action action
		@param target target
		@param paused paused 
		*/
		addAction(action: Action, target: Node, paused: boolean): void;		
		/**
		!#en Removes all actions from all the targets.
		!#zh ç§»é?¤æ?????å¯¹è±¡???????????¨ä????? 
		*/
		removeAllActions(): void;		
		/**
		!#en
		Removes all actions from a certain target. <br/>
		All the actions that belongs to the target will be removed.
		!#zh
		ç§»é?¤æ??å®?å¯¹è±¡ä¸????????????¨ä?????<br/>
		å±?äº?è¯¥ç?®æ????????????????¨ä??å°?è¢«å????¤ã??
		@param target target
		@param forceDelete forceDelete 
		*/
		removeAllActionsFromTarget(target: Node, forceDelete: boolean): void;		
		/**
		!#en Removes an action given an action reference.
		!#zh ç§»é?¤æ??å®??????¨ä?????
		@param action action 
		*/
		removeAction(action: Action): void;		
		/**
		!#en Removes an action given its tag and the target.
		!#zh ?????¤æ??å®?å¯¹è±¡ä¸???¹å?????ç­¾ç??ä¸?ä¸ªå?¨ä??ï¼?å°??????¤é??ä¸ªå?¹é????°ç????¨ä?????
		@param tag tag
		@param target target 
		*/
		removeActionByTag(tag: number, target?: Node): void;		
		/**
		!#en Gets an action given its tag an a target.
		!#zh ???è¿???®æ??å¯¹è±¡??????ç­¾è?·å??ä¸?ä¸ªå?¨ä?????
		@param tag tag
		@param target target 
		*/
		getActionByTag(tag: number, target: Node): Action;		
		/**
		!#en
		Returns the numbers of actions that are running in a certain target. <br/>
		Composable actions are counted as 1 action. <br/>
		Example: <br/>
		- If you are running 1 Sequence of 7 actions, it will return 1. <br/>
		- If you are running 7 Sequences of 2 actions, it will return 7.
		!#zh
		è¿???????å®?å¯¹è±¡ä¸???????æ­???¨è??è¡??????¨ä????°é????? <br/>
		ç»??????¨ä??è¢«ç??ä½?ä¸?ä¸ªå?¨ä?????<br/>
		ä¾?å¦?ï¼?<br/>
		 - å¦??????¨æ­£??¨è??è¡? 7 ä¸ªå?¨ä??ç»???????åº??????¨ä??ï¼?Sequenceï¼?ï¼?è¿?ä¸ªå?½æ?°å??è¿???? 1???<br/>
		 - å¦????ä½?æ­???¨è??è¡? 2 ä¸ªå???????¨ä??ï¼?Sequenceï¼???? 5 ä¸ªæ?®é????¨ä??ï¼?è¿?ä¸ªå?½æ?°å??è¿???? 7???<br/>
		@param target target 
		*/
		getNumberOfRunningActionsInTarget(target: Node): number;		
		/**
		!#en Pauses the target: all running actions and newly added actions will be paused.
		!#zh ?????????å®?å¯¹è±¡ï¼???????æ­???¨è??è¡??????¨ä???????°æ·»????????¨ä????½å??ä¼??????????
		@param target target 
		*/
		pauseTarget(target: Node): void;		
		/**
		!#en Resumes the target. All queued actions will be resumed.
		!#zh è®©æ??å®???®æ????¢å??è¿?è¡??????¨æ?§è??åº????ä¸­æ?????è¢«æ??????????¨ä??å°??????°æ?¢å??è¿?è¡????
		@param target target 
		*/
		resumeTarget(target: Node): void;		
		/**
		!#en Pauses all running actions, returning a list of targets whose actions were paused.
		!#zh ????????????æ­???¨è??è¡??????¨ä??ï¼?è¿????ä¸?ä¸ªå????«ä?????äº???¨ä??è¢«æ?????äº??????®æ??å¯¹è±¡??????è¡¨ã?? 
		*/
		pauseAllRunningActions(): any[];		
		/**
		!#en Resume a set of targets (convenience function to reverse a pauseAllRunningActions or pauseTargets call).
		!#zh è®©ä??ç»????å®?å¯¹è±¡??¢å??è¿?è¡?ï¼???¨æ?¥é??è½? pauseAllRunningActions ?????????ä¾¿æ?·å?½æ?°ï?????
		@param targetsToResume targetsToResume 
		*/
		resumeTargets(targetsToResume: any[]): void;		
		/**
		!#en Pause a set of targets.
		!#zh ??????ä¸?ç»????å®?å¯¹è±¡???
		@param targetsToPause targetsToPause 
		*/
		pauseTargets(targetsToPause: any[]): void;		
		/**
		!#en
		purges the shared action manager. It releases the retained instance. <br/>
		because it uses this, so it can not be static.
		!#zh
		æ¸???¤å?±ç?¨ç????¨ä??ç®¡ç????¨ã??å®??????¾ä???????????å®?ä¾???? <br/>
		???ä¸ºå??ä½¿ç?? thisï¼????æ­¤å??ä¸???½æ?¯é??????????? 
		*/
		purgeSharedManager(): void;		
		/**
		!#en The ActionManager update???
		!#zh ActionManager ä¸»å¾ª??¯ã??
		@param dt delta time in seconds 
		*/
		update(dt: number): void;	
	}	
	/** !#en
	Tween provide a simple and flexible way to create action. Tween's api is more flexible than `cc.Action`:
	 - Support creating an action sequence in chained api.
	 - Support animate any objects' any properties, not limited to node's properties. By contrast, `cc.Action` needs to create a new action class to support new node property.
	 - Support working with `cc.Action`.
	 - Support easing and progress function.
	!#zh
	Tween ???ä¾?äº?ä¸?ä¸ªç???????µæ´»?????¹æ????¥å??å»? action?????¸å¯¹äº? Cocos ä¼?ç»???? `cc.Action`ï¼?`cc.Tween` ??¨å??å»ºå?¨ç?»ä??è¦???µæ´»???å¸¸å??ï¼?
	 - ??¯æ??ä»¥é?¾å??ç»?????????¹å?????å»ºä??ä¸ªå?¨ç?»å????????
	 - ??¯æ??å¯¹ä»»???å¯¹è±¡???ä»»æ??å±???§è??è¡?ç¼???¨ï??ä¸????å±????äº??????¹ä?????å±???§ï????? `cc.Action` æ·»å??ä¸?ä¸ªå????§ç????¯æ????¶è?????è¦?æ·»å??ä¸?ä¸ªæ?°ç?? action ç±»å?????
	 - ??¯æ??ä¸? `cc.Action` æ··ç?¨ã??
	 - ??¯æ??è®¾ç½® {{#crossLink "Easing"}}{{/crossLink}} ?????? progress ??½æ?°ã?? */
	export class Tween<T = any> {		
		/**
		
		@param target target 
		*/
		constructor(target?: any);		
		/**
		!#en Stop all tweens
		!#zh ???æ­¢æ?????ç¼???? 
		*/
		static stopAll(): void;		
		/**
		!#en Stop all tweens by tag
		!#zh ???æ­¢æ????????å®????ç­¾ç??ç¼????
		@param tag tag 
		*/
		static stopAllByTag(tag: number): void;		
		/**
		!#en Stop all tweens by target
		!#zh ???æ­¢æ????????å®?å¯¹è±¡???ç¼????
		@param target target 
		*/
		static stopAllByTarget(target: any): void;		
		/**
		!#en
		Insert an action or tween to this sequence
		!#zh
		?????¥ä??ä¸? action ?????? tween ??°é?????ä¸?
		@param other other 
		*/
		then(other: Action|Tween<T>): Tween<T>;		
		/**
		!#en
		Set tween target
		!#zh
		è®¾ç½® tween ??? target
		@param target target 
		*/
		target(target: any): Tween<T>;		
		/**
		!#en
		Start this tween
		!#zh
		è¿?è¡?å½???? tween 
		*/
		start(): Tween<T>;		
		/**
		!#en
		Stop this tween
		!#zh
		???æ­¢å????? tween 
		*/
		stop(): Tween<T>;		
		/**
		!#en Sets tween tag
		!#zh è®¾ç½®ç¼???¨ç?????ç­?
		@param tag tag 
		*/
		tag(tag: number): Tween<T>;		
		/**
		!#en
		Clone a tween
		!#zh
		??????å½???? tween
		@param target target 
		*/
		clone(target?: any): Tween<T>;		
		/**
		!#en
		Integrate all previous actions to an action.
		!#zh
		å°?ä¹????????????? action ??´å??ä¸ºä??ä¸? action??? 
		*/
		union(): Tween;		
		/**
		!#en Sets target's position property according to the bezier curve.
		!#zh ?????§è??å¡?å°?è·¯å??è®¾ç½®??®æ????? position å±???§ã??
		@param duration duration
		@param c1 c1
		@param c2 c2
		@param to to 
		*/
		bezierTo(duration: number, c1: Vec2, c2: Vec2, to: Vec2): Tween<T>;		
		/**
		!#en Sets target's position property according to the bezier curve.
		!#zh ?????§è??å¡?å°?è·¯å??è®¾ç½®??®æ????? position å±???§ã??
		@param duration duration
		@param c1 c1
		@param c2 c2
		@param to to 
		*/
		bezierBy(duration: number, c1: Vec2, c2: Vec2, to: Vec2): Tween<T>;		
		/**
		!#en Flips target's scaleX
		!#zh ç¿»è½¬??®æ????? scaleX å±???? 
		*/
		flipX(): Tween<T>;		
		/**
		!#en Flips target's scaleY
		!#zh ç¿»è½¬??®æ????? scaleY å±???? 
		*/
		flipY(): Tween<T>;		
		/**
		!#en Blinks target by set target's opacity property
		!#zh ???è¿?è®¾ç½®??®æ????? opacity å±???§è¾¾??°é?ªç????????
		@param duration duration
		@param times times
		@param opts opts 
		*/
		blink(duration: number, times: number, opts?: {progress?: Function; easing?: Function|string; }): Tween<T>;		
		/**
		!#en
		Add an action which calculate with absolute value
		!#zh
		æ·»å??ä¸?ä¸ªå¯¹å±???§è??è¡?ç»?å¯¹å?¼è®¡ç®???? action
		@param duration duration
		@param props {scale: 2, position: cc.v3(100, 100, 100)}
		@param opts opts 
		*/
		to <OPTS extends Partial<{progress: Function, easing: Function|String}>> (duration: number, props: ConstructorType<T>, opts?: OPTS) : Tween<T>;		
		/**
		!#en
		Add an action which calculate with relative value
		!#zh
		æ·»å??ä¸?ä¸ªå¯¹å±???§è??è¡???¸å¯¹??¼è®¡ç®???? action
		@param duration duration
		@param props {scale: 2, position: cc.v3(100, 100, 100)}
		@param opts opts 
		*/
		by <OPTS extends Partial<{progress: Function, easing: Function|String}>> (duration: number, props: ConstructorType<T>, opts?: OPTS) : Tween<T>;		
		/**
		!#en
		Directly set target properties
		!#zh
		??´æ?¥è®¾ç½? target ???å±????
		@param props props 
		*/
		set (props: ConstructorType<T>) : Tween<T>;		
		/**
		!#en
		Add an delay action
		!#zh
		æ·»å??ä¸?ä¸ªå»¶??? action
		@param duration duration 
		*/
		delay(duration: number): Tween<T>;		
		/**
		!#en
		Add an callback action
		!#zh
		æ·»å??ä¸?ä¸ªå??è°? action
		@param callback callback
		@param selectTarget selectTarget 
		*/
		call(callback: Function, selectTarget?: object): Tween<T>;		
		/**
		!#en
		Add an hide action
		!#zh
		æ·»å??ä¸?ä¸ªé????? action 
		*/
		hide(): Tween<T>;		
		/**
		!#en
		Add an show action
		!#zh
		æ·»å??ä¸?ä¸ªæ?¾ç¤º action 
		*/
		show(): Tween<T>;		
		/**
		!#en
		Add an removeSelf action
		!#zh
		æ·»å??ä¸?ä¸ªç§»??¤è?ªå·± action 
		*/
		removeSelf(): Tween<T>;		
		/**
		!#en
		Add an sequence action
		!#zh
		æ·»å??ä¸?ä¸ªé????? action
		@param action action
		@param actions actions 
		*/
		sequence(action: Action|Tween<T>, ...actions: (Action|Tween<T>)[]): Tween<T>;		
		/**
		!#en
		Add an parallel action
		!#zh
		æ·»å??ä¸?ä¸ªå¹¶è¡? action
		@param action action
		@param actions actions 
		*/
		parallel(action: Action|Tween<T>, ...actions: (Action|Tween<T>)[]): Tween<T>;		
		/**
		!#en
		Add an repeat action. This action will integrate before actions to a sequence action as their parameters.
		!#zh
		æ·»å??ä¸?ä¸ªé??å¤? actionï¼?è¿?ä¸? action ä¼?å°????ä¸?ä¸ªå?¨ä??ä½?ä¸ºä??????????°ã??
		@param repeatTimes repeatTimes
		@param action action 
		*/
		repeat(repeatTimes: number, action?: Action|Tween<T>): Tween<T>;		
		/**
		!#en
		Add an repeat forever action. This action will integrate before actions to a sequence action as their parameters.
		!#zh
		æ·»å??ä¸?ä¸ªæ°¸ä¹????å¤? actionï¼?è¿?ä¸? action ä¼?å°????ä¸?ä¸ªå?¨ä??ä½?ä¸ºä??????????°ã??
		@param action action 
		*/
		repeatForever(action?: Action|Tween<T>): Tween<T>;		
		/**
		!#en
		Add an reverse time action. This action will integrate before actions to a sequence action as their parameters.
		!#zh
		æ·»å??ä¸?ä¸ªå??ç½®æ?¶é?? actionï¼?è¿?ä¸? action ä¼?å°????ä¸?ä¸ªå?¨ä??ä½?ä¸ºä??????????°ã??
		@param action action 
		*/
		reverseTime(action?: Action|Tween<T>): Tween<T>;	
	}	
	/** !#en `cc.audioEngine` is the singleton object, it provide simple audio APIs.
	!#zh
	cc.audioengine??¯å??ä¾?å¯¹è±¡???<br/>
	ä¸»è????¨æ?¥æ?­æ?¾é?³é??ï¼???­æ?¾ç????¶å??ä¼?è¿????ä¸?ä¸? audioIDï¼?ä¹??????½å?¯ä»¥???è¿?è¿?ä¸? audioID ??¥æ??ä½?è¿?ä¸ªé?³é??å¯¹è±¡???<br/>
	ä¸?ä½¿ç?¨ç????¶å??ï¼?è¯·ä½¿??? `cc.audioEngine.uncache(filePath);` è¿?è¡?èµ?æº??????? <br/>
	æ³¨æ??ï¼?<br/>
	??? Android ç³»ç??æµ?è§???¨ä??ï¼?ä¸????æµ?è§???¨ï??ä¸?????????¬ç????????ä¸?å°½ç?¸å?????<br/>
	æ¯?å¦?è¯´ï??å¤§å????°æ??è§???¨é?½é??è¦???¨æ?·ç?©ç??äº¤ä???????¯ä»¥å¼?å§???­æ?¾é?³æ??ï¼????ä¸?äº?ä¸???¯æ?? WebAudioï¼????ä¸?äº?ä¸???¯æ??å¤???³è½¨??­æ?¾ã????»ä??å¦????å¯¹é?³ä??ä¾?èµ?æ¯?è¾?å¼ºï??è¯·å??å°½å?¯è?½å?????æµ?è¯???? */
	export class audioEngine {		
		/**
		!#en Play audio.
		!#zh ??­æ?¾é?³é??
		@param clip The audio clip to play.
		@param loop Whether the music loop or not.
		@param volume Volume size.
		
		@example 
		```js
		cc.resources.load(path, cc.AudioClip, null, function (err, clip) {
		    var audioID = cc.audioEngine.play(clip, false, 0.5);
		});
		``` 
		*/
		static play(clip: AudioClip, loop: boolean, volume: number): number;		
		/**
		!#en Set audio loop.
		!#zh è®¾ç½®??³é????¯å?¦å¾ª??¯ã??
		@param audioID audio id.
		@param loop Whether cycle.
		
		@example 
		```js
		cc.audioEngine.setLoop(id, true);
		``` 
		*/
		static setLoop(audioID: number, loop: boolean): void;		
		/**
		!#en Get audio cycle state.
		!#zh ??·å????³é?????å¾ªç?¯ç?¶æ?????
		@param audioID audio id.
		
		@example 
		```js
		cc.audioEngine.isLoop(id);
		``` 
		*/
		static isLoop(audioID: number): boolean;		
		/**
		!#en Set the volume of audio.
		!#zh è®¾ç½®??³é??ï¼?0.0 ~ 1.0ï¼????
		@param audioID audio id.
		@param volume Volume must be in 0.0~1.0 .
		
		@example 
		```js
		cc.audioEngine.setVolume(id, 0.5);
		``` 
		*/
		static setVolume(audioID: number, volume: number): void;		
		/**
		!#en The volume of the music max value is 1.0,the min value is 0.0 .
		!#zh ??·å????³é??ï¼?0.0 ~ 1.0ï¼????
		@param audioID audio id.
		
		@example 
		```js
		var volume = cc.audioEngine.getVolume(id);
		``` 
		*/
		static getVolume(audioID: number): number;		
		/**
		!#en Set current time
		!#zh è®¾ç½®å½?????????³é????¶é?´ã??
		@param audioID audio id.
		@param sec current time.
		
		@example 
		```js
		cc.audioEngine.setCurrentTime(id, 2);
		``` 
		*/
		static setCurrentTime(audioID: number, sec: number): boolean;		
		/**
		!#en Get current time
		!#zh ??·å??å½?????????³é????­æ?¾æ?¶é?´ã??
		@param audioID audio id.
		
		@example 
		```js
		var time = cc.audioEngine.getCurrentTime(id);
		``` 
		*/
		static getCurrentTime(audioID: number): number;		
		/**
		!#en Get audio duration
		!#zh ??·å????³é????»æ?¶é?¿ã??
		@param audioID audio id.
		
		@example 
		```js
		var time = cc.audioEngine.getDuration(id);
		``` 
		*/
		static getDuration(audioID: number): number;		
		/**
		!#en Get audio state
		!#zh ??·å????³é????¶æ?????
		@param audioID audio id.
		
		@example 
		```js
		var state = cc.audioEngine.getState(id);
		``` 
		*/
		static getState(audioID: number): audioEngine.AudioState;		
		/**
		!#en Set Audio finish callback
		!#zh è®¾ç½®ä¸?ä¸ªé?³é??ç»?????????????è°?
		@param audioID audio id.
		@param callback loaded callback.
		
		@example 
		```js
		cc.audioEngine.setFinishCallback(id, function () {});
		``` 
		*/
		static setFinishCallback(audioID: number, callback: Function): void;		
		/**
		!#en Pause playing audio.
		!#zh ??????æ­???¨æ?­æ?¾é?³é?????
		@param audioID The return value of function play.
		
		@example 
		```js
		cc.audioEngine.pause(audioID);
		``` 
		*/
		static pause(audioID: number): void;		
		/**
		!#en Pause all playing audio
		!#zh ????????°å?¨æ­£??¨æ?­æ?¾ç??????????³é?????
		
		@example 
		```js
		cc.audioEngine.pauseAll();
		``` 
		*/
		static pauseAll(): void;		
		/**
		!#en Resume playing audio.
		!#zh ??¢å????­æ?¾æ??å®??????³é?????
		@param audioID The return value of function play.
		
		@example 
		```js
		cc.audioEngine.resume(audioID);
		``` 
		*/
		static resume(audioID: number): void;		
		/**
		!#en Resume all playing audio.
		!#zh ??¢å????­æ?¾æ?????ä¹?????????????????????³é?????
		
		@example 
		```js
		cc.audioEngine.resumeAll();
		``` 
		*/
		static resumeAll(): void;		
		/**
		!#en Stop playing audio.
		!#zh ???æ­¢æ?­æ?¾æ??å®???³é?????
		@param audioID The return value of function play.
		
		@example 
		```js
		cc.audioEngine.stop(audioID);
		``` 
		*/
		static stop(audioID: number): void;		
		/**
		!#en Stop all playing audio.
		!#zh ???æ­¢æ­£??¨æ?­æ?¾ç??????????³é?????
		
		@example 
		```js
		cc.audioEngine.stopAll();
		``` 
		*/
		static stopAll(): void;		
		/**
		!#en Set up an audio can generate a few examples.
		!#zh è®¾ç½®ä¸?ä¸ªé?³é????¯ä»¥è®¾ç½®???ä¸ªå??ä¾?
		@param num a number of instances to be created from within an audio
		
		@example 
		```js
		cc.audioEngine.setMaxAudioInstance(20);
		``` 
		*/
		static setMaxAudioInstance(num: number): void;		
		/**
		!#en Getting audio can produce several examples.
		!#zh ??·å??ä¸?ä¸ªé?³é????¯ä»¥è®¾ç½®???ä¸ªå??ä¾?
		
		@example 
		```js
		cc.audioEngine.getMaxAudioInstance();
		``` 
		*/
		static getMaxAudioInstance(): number;		
		/**
		!#en Unload the preloaded audio from internal buffer.
		!#zh ??¸è½½é¢????è½½ç????³é?????
		@param clip clip
		
		@example 
		```js
		cc.audioEngine.uncache(filePath);
		``` 
		*/
		static uncache(clip: AudioClip): void;		
		/**
		!#en Unload all audio from internal buffer.
		!#zh ??¸è½½????????³é?????
		
		@example 
		```js
		cc.audioEngine.uncacheAll();
		``` 
		*/
		static uncacheAll(): void;		
		/**
		!#en Play background music
		!#zh ??­æ?¾è????¯é?³ä??
		@param clip The audio clip to play.
		@param loop Whether the music loop or not.
		
		@example 
		```js
		cc.resources.load(path, cc.AudioClip, null, function (err, clip) {
		    var audioID = cc.audioEngine.playMusic(clip, false);
		});
		``` 
		*/
		static playMusic(clip: AudioClip, loop: boolean): number;		
		/**
		!#en Stop background music.
		!#zh ???æ­¢æ?­æ?¾è????¯é?³ä?????
		
		@example 
		```js
		cc.audioEngine.stopMusic();
		``` 
		*/
		static stopMusic(): void;		
		/**
		!#en Pause the background music.
		!#zh ????????­æ?¾è????¯é?³ä?????
		
		@example 
		```js
		cc.audioEngine.pauseMusic();
		``` 
		*/
		static pauseMusic(): void;		
		/**
		!#en Resume playing background music.
		!#zh ??¢å????­æ?¾è????¯é?³ä?????
		
		@example 
		```js
		cc.audioEngine.resumeMusic();
		``` 
		*/
		static resumeMusic(): void;		
		/**
		!#en Get the volume(0.0 ~ 1.0).
		!#zh ??·å????³é??ï¼?0.0 ~ 1.0ï¼????
		
		@example 
		```js
		var volume = cc.audioEngine.getMusicVolume();
		``` 
		*/
		static getMusicVolume(): number;		
		/**
		!#en Set the background music volume.
		!#zh è®¾ç½®?????¯é?³ä????³é??ï¼?0.0 ~ 1.0ï¼????
		@param volume Volume must be in 0.0~1.0.
		
		@example 
		```js
		cc.audioEngine.setMusicVolume(0.5);
		``` 
		*/
		static setMusicVolume(volume: number): void;		
		/**
		!#en Background music playing state
		!#zh ?????¯é?³ä????¯å?¦æ­£??¨æ?­æ??
		
		@example 
		```js
		cc.audioEngine.isMusicPlaying();
		``` 
		*/
		static isMusicPlaying(): boolean;		
		/**
		!#en Play effect audio.
		!#zh ??­æ?¾é?³æ??
		@param clip The audio clip to play.
		@param loop Whether the music loop or not.
		
		@example 
		```js
		cc.resources.load(path, cc.AudioClip, null, function (err, clip) {
		    var audioID = cc.audioEngine.playEffect(clip, false);
		});
		``` 
		*/
		static playEffect(clip: AudioClip, loop: boolean): number;		
		/**
		!#en Set the volume of effect audio.
		!#zh è®¾ç½®??³æ????³é??ï¼?0.0 ~ 1.0ï¼????
		@param volume Volume must be in 0.0~1.0.
		
		@example 
		```js
		cc.audioEngine.setEffectsVolume(0.5);
		``` 
		*/
		static setEffectsVolume(volume: number): void;		
		/**
		!#en The volume of the effect audio max value is 1.0,the min value is 0.0 .
		!#zh ??·å????³æ????³é??ï¼?0.0 ~ 1.0ï¼????
		
		@example 
		```js
		var volume = cc.audioEngine.getEffectsVolume();
		``` 
		*/
		static getEffectsVolume(): number;		
		/**
		!#en Pause effect audio.
		!#zh ????????­æ?¾é?³æ?????
		@param audioID audio id.
		
		@example 
		```js
		cc.audioEngine.pauseEffect(audioID);
		``` 
		*/
		static pauseEffect(audioID: number): void;		
		/**
		!#en Stop playing all the sound effects.
		!#zh ????????­æ?¾æ???????³æ?????
		
		@example 
		```js
		cc.audioEngine.pauseAllEffects();
		``` 
		*/
		static pauseAllEffects(): void;		
		/**
		!#en Resume effect audio.
		!#zh ??¢å????­æ?¾é?³æ????³é?????
		@param audioID The return value of function play.
		
		@example 
		```js
		cc.audioEngine.resumeEffect(audioID);
		``` 
		*/
		static resumeEffect(audioID: number): void;		
		/**
		!#en Resume all effect audio.
		!#zh ??¢å????­æ?¾æ?????ä¹???????????????³æ?????
		
		@example 
		```js
		cc.audioEngine.resumeAllEffects();
		``` 
		*/
		static resumeAllEffects(): void;		
		/**
		!#en Stop playing the effect audio.
		!#zh ???æ­¢æ?­æ?¾é?³æ?????
		@param audioID audio id.
		
		@example 
		```js
		cc.audioEngine.stopEffect(id);
		``` 
		*/
		static stopEffect(audioID: number): void;		
		/**
		!#en Stop playing all the effects.
		!#zh ???æ­¢æ?­æ?¾æ???????³æ?????
		
		@example 
		```js
		cc.audioEngine.stopAllEffects();
		``` 
		*/
		static stopAllEffects(): void;	
	}	
	/** !#en Class for animation data handling.
	!#zh ??¨ç?»å?ªè??ï¼???¨ä??å­???¨å?¨ç?»æ?°æ?®ã?? */
	export class AnimationClip extends Asset {		
		/** !#en Duration of this animation.
		!#zh ??¨ç?»ç?????ç»­æ?¶é?´ã?? */
		duration: number;		
		/** !#en FrameRate of this animation.
		!#zh ??¨ç?»ç??å¸§é???????? */
		sample: number;		
		/** !#en Speed of this animation.
		!#zh ??¨ç?»ç????­æ?¾é??åº¦ã?? */
		speed: number;		
		/** !#en WrapMode of this animation.
		!#zh ??¨ç?»ç??å¾ªç?¯æ¨¡å¼???? */
		wrapMode: WrapMode;		
		/** !#en Curve data.
		!#zh ??²çº¿??°æ?®ã?? */
		curveData: any;		
		/** !#en Event data.
		!#zh äº?ä»¶æ?°æ?®ã?? */
		events: {frame: number, func: string, params: string[]}[];		
		/**
		!#en Crate clip with a set of sprite frames
		!#zh ä½¿ç?¨ä??ç»?åº????å¸§å?¾ç????¥å??å»ºå?¨ç?»å?ªè??
		@param spriteFrames spriteFrames
		@param sample sample
		
		@example 
		```js
		var clip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, 10);
		``` 
		*/
		static createWithSpriteFrames(spriteFrames: SpriteFrame[], sample: number): AnimationClip;	
	}	
	/** !#en
	This class provide easing methods for {{#crossLink "tween"}}{{/crossLink}} class.<br>
	Demonstratio: https://easings.net/
	!#zh
	ç¼???¨å?½æ?°ç±»ï¼?ä¸? {{#crossLink "Tween"}}{{/crossLink}} ???ä¾?ç¼???¨æ???????½æ?°ã??<br>
	??½æ?°æ?????æ¼?ç¤ºï?? https://easings.net/ */
	export class Easing {		
		/**
		!#en Easing in with quadratic formula. From slow to fast.
		!#zh å¹³æ?¹æ?²çº¿ç¼???¥å?½æ?°ã??è¿???¨ç?±æ?¢å?°å¿«???
		@param t The current time as a percentage of the total time. 
		*/
		quadIn(t: number): number;		
		/**
		!#en Easing out with quadratic formula. From fast to slow.
		!#zh å¹³æ?¹æ?²çº¿ç¼???ºå?½æ?°ã??è¿???¨ç?±å¿«??°æ?¢ã??
		@param t The current time as a percentage of the total time. 
		*/
		quadOut(t: number): number;		
		/**
		!#en Easing in and out with quadratic formula. From slow to fast, then back to slow.
		!#zh å¹³æ?¹æ?²çº¿ç¼???¥ç????ºå?½æ?°ã??è¿???¨ç?±æ?¢å?°å¿«?????°æ?¢ã??
		@param t The current time as a percentage of the total time. 
		*/
		quadInOut(t: number): number;		
		/**
		!#en Easing in with cubic formula. From slow to fast.
		!#zh ç«???¹æ?²çº¿ç¼???¥å?½æ?°ã??è¿???¨ç?±æ?¢å?°å¿«???
		@param t The current time as a percentage of the total time. 
		*/
		cubicIn(t: number): number;		
		/**
		!#en Easing out with cubic formula. From slow to fast.
		!#zh ç«???¹æ?²çº¿ç¼???ºå?½æ?°ã??è¿???¨ç?±å¿«??°æ?¢ã??
		@param t The current time as a percentage of the total time. 
		*/
		cubicOut(t: number): number;		
		/**
		!#en Easing in and out with cubic formula. From slow to fast, then back to slow.
		!#zh ç«???¹æ?²çº¿ç¼???¥ç????ºå?½æ?°ã??è¿???¨ç?±æ?¢å?°å¿«?????°æ?¢ã??
		@param t The current time as a percentage of the total time. 
		*/
		cubicInOut(t: number): number;		
		/**
		!#en Easing in with quartic formula. From slow to fast.
		!#zh ???æ¬¡æ?¹æ?²çº¿ç¼???¥å?½æ?°ã??è¿???¨ç?±æ?¢å?°å¿«???
		@param t The current time as a percentage of the total time. 
		*/
		quartIn(t: number): number;		
		/**
		!#en Easing out with quartic formula. From fast to slow.
		!#zh ???æ¬¡æ?¹æ?²çº¿ç¼???ºå?½æ?°ã??è¿???¨ç?±å¿«??°æ?¢ã??
		@param t The current time as a percentage of the total time. 
		*/
		quartOut(t: number): number;		
		/**
		!#en Easing in and out with quartic formula. From slow to fast, then back to slow.
		!#zh ???æ¬¡æ?¹æ?²çº¿ç¼???¥ç????ºå?½æ?°ã??è¿???¨ç?±æ?¢å?°å¿«?????°æ?¢ã??
		@param t The current time as a percentage of the total time. 
		*/
		quartInOut(t: number): number;		
		/**
		!#en Easing in with quintic formula. From slow to fast.
		!#zh äº?æ¬¡æ?¹æ?²çº¿ç¼???¥å?½æ?°ã??è¿???¨ç?±æ?¢å?°å¿«???
		@param t The current time as a percentage of the total time. 
		*/
		quintIn(t: number): number;		
		/**
		!#en Easing out with quintic formula. From fast to slow.
		!#zh äº?æ¬¡æ?¹æ?²çº¿ç¼???ºå?½æ?°ã??è¿???¨ç?±å¿«??°æ?¢ã??
		@param t The current time as a percentage of the total time. 
		*/
		quintOut(t: number): number;		
		/**
		!#en Easing in and out with quintic formula. From slow to fast, then back to slow.
		!#zh äº?æ¬¡æ?¹æ?²çº¿ç¼???¥ç????ºå?½æ?°ã??è¿???¨ç?±æ?¢å?°å¿«?????°æ?¢ã??
		@param t The current time as a percentage of the total time. 
		*/
		quintInOut(t: number): number;		
		/**
		!#en Easing in and out with sine formula. From slow to fast.
		!#zh æ­?å¼¦æ?²çº¿ç¼???¥å?½æ?°ã??è¿???¨ç?±æ?¢å?°å¿«???
		@param t The current time as a percentage of the total time. 
		*/
		sineIn(t: number): number;		
		/**
		!#en Easing in and out with sine formula. From fast to slow.
		!#zh æ­?å¼¦æ?²çº¿ç¼???ºå?½æ?°ã??è¿???¨ç?±å¿«??°æ?¢ã??
		@param t The current time as a percentage of the total time. 
		*/
		sineOut(t: number): number;		
		/**
		!#en Easing in and out with sine formula. From slow to fast, then back to slow.
		!#zh æ­?å¼¦æ?²çº¿ç¼???¥ç????ºå?½æ?°ã??è¿???¨ç?±æ?¢å?°å¿«?????°æ?¢ã??
		@param t The current time as a percentage of the total time. 
		*/
		sineInOut(t: number): number;		
		/**
		!#en Easing in and out with exponential formula. From slow to fast.
		!#zh ?????°æ?²çº¿ç¼???¥å?½æ?°ã??è¿???¨ç?±æ?¢å?°å¿«???
		@param t The current time as a percentage of the total time. 
		*/
		expoIn(t: number): number;		
		/**
		!#en Easing in and out with exponential formula. From fast to slow.
		!#zh ?????°æ?²çº¿ç¼???ºå?½æ?°ã??è¿???¨ç?±å¿«??°æ?¢ã??
		@param t The current time as a percentage of the total time. 
		*/
		expoOut(t: number): number;		
		/**
		!#en Easing in and out with exponential formula. From slow to fast.
		!#zh ?????°æ?²çº¿ç¼???¥å??ç¼???ºå?½æ?°ã??è¿???¨ç?±æ?¢å?°å??å¿«å????°æ?¢ã??
		@param t The current time as a percentage of the total time, then back to slow. 
		*/
		expoInOut(t: number): number;		
		/**
		!#en Easing in and out with circular formula. From slow to fast.
		!#zh å¾ªç?¯å?¬å??ç¼???¥å?½æ?°ã??è¿???¨ç?±æ?¢å?°å¿«???
		@param t The current time as a percentage of the total time. 
		*/
		circIn(t: number): number;		
		/**
		!#en Easing in and out with circular formula. From fast to slow.
		!#zh å¾ªç?¯å?¬å??ç¼???ºå?½æ?°ã??è¿???¨ç?±å¿«??°æ?¢ã??
		@param t The current time as a percentage of the total time. 
		*/
		circOut(t: number): number;		
		/**
		!#en Easing in and out with circular formula. From slow to fast.
		!#zh ?????°æ?²çº¿ç¼???¥ç????ºå?½æ?°ã??è¿???¨ç?±æ?¢å?°å??å¿«å????°æ?¢ã??
		@param t The current time as a percentage of the total time, then back to slow. 
		*/
		circInOut(t: number): number;		
		/**
		!#en Easing in action with a spring oscillating effect.
		!#zh å¼¹ç°§???????????????ç¼???¥å?½æ?°ã??
		@param t The current time as a percentage of the total time. 
		*/
		elasticIn(t: number): number;		
		/**
		!#en Easing out action with a spring oscillating effect.
		!#zh å¼¹ç°§???????????????ç¼???ºå?½æ?°ã??
		@param t The current time as a percentage of the total time. 
		*/
		elasticOut(t: number): number;		
		/**
		!#en Easing in and out action with a spring oscillating effect.
		!#zh å¼¹ç°§???????????????ç¼???¥ç????ºå?½æ?°ã??
		@param t The current time as a percentage of the total time. 
		*/
		elasticInOut(t: number): number;		
		/**
		!#en Easing in action with "back up" behavior.
		!#zh ???????????????ç¼???¥å?½æ?°ã??
		@param t The current time as a percentage of the total time. 
		*/
		backIn(t: number): number;		
		/**
		!#en Easing out action with "back up" behavior.
		!#zh ???????????????ç¼???ºå?½æ?°ã??
		@param t The current time as a percentage of the total time. 
		*/
		backOut(t: number): number;		
		/**
		!#en Easing in and out action with "back up" behavior.
		!#zh ???????????????ç¼???¥ç????ºå?½æ?°ã??
		@param t The current time as a percentage of the total time. 
		*/
		backInOut(t: number): number;		
		/**
		!#en Easing in action with bouncing effect.
		!#zh å¼¹è·³?????????ç¼???¥å?½æ?°ã??
		@param t The current time as a percentage of the total time. 
		*/
		bounceIn(t: number): number;		
		/**
		!#en Easing out action with bouncing effect.
		!#zh å¼¹è·³?????????ç¼???ºå?½æ?°ã??
		@param t The current time as a percentage of the total time. 
		*/
		bounceOut(t: number): number;		
		/**
		!#en Easing in and out action with bouncing effect.
		!#zh å¼¹è·³?????????ç¼???¥ç????ºå?½æ?°ã??
		@param t The current time as a percentage of the total time. 
		*/
		bounceInOut(t: number): number;		
		/**
		!#en Target will run action with smooth effect.
		!#zh å¹³æ??????????½æ?°ã??
		@param t The current time as a percentage of the total time. 
		*/
		smooth(t: number): number;		
		/**
		!#en Target will run action with fade effect.
		!#zh æ¸?è¤ªæ???????½æ?°ã??
		@param t The current time as a percentage of the total time. 
		*/
		fade(t: number): number;	
	}	
	/** !#en
	The AnimationState gives full control over animation playback process.
	In most cases the Animation Component is sufficient and easier to use. Use the AnimationState if you need full control.
	!#zh
	AnimationState å®???¨æ?§å?¶å?¨ç?»æ?­æ?¾è??ç¨????<br/>
	å¤§å????°æ????µä?? ??¨ç?»ç??ä»? ??¯è¶³å¤???????äº?ä½¿ç?¨ç?????å¦??????¨é??è¦???´å???????¨ç?»æ?§å?¶æ?¥å??ï¼?è¯·ä½¿??? AnimationState??? */
	export class AnimationState extends Playable {		
		/**
		
		@param clip clip
		@param name name 
		*/
		constructor(clip: AnimationClip, name?: string);		
		/** !#en The curves list.
		!#zh ??²çº¿???è¡¨ã?? */
		curves: any[];		
		/** !#en The start delay which represents the number of seconds from an animation's start time to the start of
		the active interval.
		!#zh å»¶è??å¤?å°?ç§???­æ?¾ã?? */
		delay: number;		
		/** !#en The animation's iteration count property.
		
		A real number greater than or equal to zero (including positive infinity) representing the number of times
		to repeat the animation node.
		
		Values less than zero and NaN values are treated as the value 1.0 for the purpose of timing model
		calculations.
		
		!#zh è¿­ä»£æ¬¡æ?°ï???????¨ç?»æ?­æ?¾å??å°?æ¬¡å??ç»????, normalize time??? å¦? 2.5ï¼?2æ¬¡å??ï¼? */
		repeatCount: number;		
		/** !#en The iteration duration of this animation in seconds. (length)
		!#zh ???æ¬¡å?¨ç?»ç?????ç»­æ?¶é?´ï??ç§???? */
		duration: number;		
		/** !#en The animation's playback speed. 1 is normal playback speed.
		!#zh ??­æ?¾é???????? */
		speed: number;		
		/** !#en
		Wrapping mode of the playing animation.
		Notice : dynamic change wrapMode will reset time and repeatCount property
		!#zh
		??¨ç?»å¾ª??¯æ?¹å?????
		???è¦?æ³¨æ???????¯ï????¨æ??ä¿®æ?? wrapMode ??¶ï??ä¼????ç½? time ä»¥å?? repeatCount */
		wrapMode: WrapMode;		
		/** !#en The current time of this animation in seconds.
		!#zh ??¨ç?»å??????????¶é?´ï??ç§???? */
		time: number;		
		/** !#en The clip that is being played by this animation state.
		!#zh æ­¤å?¨ç?»ç?¶æ??æ­???¨æ?­æ?¾ç????ªè????? */
		clip: AnimationClip;		
		/** !#en The name of the playing animation.
		!#zh ??¨ç?»ç?????å­? */
		name: string;	
	}	
	/** undefined */
	export class Playable {		
		/** !#en Is playing or paused in play mode?
		!#zh å½??????¯å?¦æ­£??¨æ?­æ?¾ã?? */
		isPlaying: boolean;		
		/** !#en Is currently paused? This can be true even if in edit mode(isPlaying == false).
		!#zh å½??????¯å?¦æ­£??¨æ????? */
		isPaused: boolean;		
		/**
		!#en Play this animation.
		!#zh ??­æ?¾å?¨ç?»ã?? 
		*/
		play(): void;		
		/**
		!#en Stop this animation.
		!#zh ???æ­¢å?¨ç?»æ?­æ?¾ã?? 
		*/
		stop(): void;		
		/**
		!#en Pause this animation.
		!#zh ????????¨ç?»ã?? 
		*/
		pause(): void;		
		/**
		!#en Resume this animation.
		!#zh ?????°æ?­æ?¾å?¨ç?»ã?? 
		*/
		resume(): void;		
		/**
		!#en Perform a single frame step.
		!#zh ??§è??ä¸?å¸§å?¨ç?»ã?? 
		*/
		step(): void;	
	}	
	/** !#en Specifies how time is treated when it is outside of the keyframe range of an Animation.
	!#zh ??¨ç?»ä½¿??¨ç??å¾ªç?¯æ¨¡å¼???? */
	export enum WrapMode {		
		Default = 0,
		Normal = 0,
		Reverse = 0,
		Loop = 0,
		LoopReverse = 0,
		PingPong = 0,
		PingPongReverse = 0,	
	}	
	/** !#en An object to boot the game.
	!#zh ?????«æ¸¸???ä¸»ä??ä¿¡æ?¯å¹¶è´?è´?é©±å?¨æ¸¸??????æ¸¸æ??å¯¹è±¡??? */
	export class debug {		
		/**
		!#en Gets error message with the error id and possible parameters.
		!#zh ???è¿? error id ???å¿?è¦?????????°æ?¥è?·å?????è¯¯ä¿¡??¯ã??
		@param errorId errorId
		@param param param 
		*/
		static getError(errorId: number, param?: any): string;		
		/**
		!#en Returns whether or not to display the FPS informations.
		!#zh ??¯å?¦æ?¾ç¤º FPS ä¿¡æ?¯ã?? 
		*/
		static isDisplayStats(): boolean;		
		/**
		!#en Sets whether display the FPS on the bottom-left corner.
		!#zh è®¾ç½®??¯å?¦å?¨å·¦ä¸?è§???¾ç¤º FPS???
		@param displayStats displayStats 
		*/
		static setDisplayStats(displayStats: boolean): void;	
	}	
	/** !#en
	<p>
	   ATTENTION: USE cc.director INSTEAD OF cc.Director.<br/>
	   cc.director is a singleton object which manage your game's logic flow.<br/>
	   Since the cc.director is a singleton, you don't need to call any constructor or create functions,<br/>
	   the standard way to use it is by calling:<br/>
	     - cc.director.methodName(); <br/>
	
	   It creates and handle the main Window and manages how and when to execute the Scenes.<br/>
	   <br/>
	   The cc.director is also responsible for:<br/>
	     - initializing the OpenGL context<br/>
	     - setting the OpenGL pixel format (default on is RGB565)<br/>
	     - setting the OpenGL buffer depth (default on is 0-bit)<br/>
	     - setting the color for clear screen (default one is BLACK)<br/>
	     - setting the projection (default one is 3D)<br/>
	     - setting the orientation (default one is Portrait)<br/>
	     <br/>
	   <br/>
	   The cc.director also sets the default OpenGL context:<br/>
	     - GL_TEXTURE_2D is enabled<br/>
	     - GL_VERTEX_ARRAY is enabled<br/>
	     - GL_COLOR_ARRAY is enabled<br/>
	     - GL_TEXTURE_COORD_ARRAY is enabled<br/>
	</p>
	<p>
	  cc.director also synchronizes timers with the refresh rate of the display.<br/>
	  Features and Limitations:<br/>
	     - Scheduled timers & drawing are synchronizes with the refresh rate of the display<br/>
	     - Only supports animation intervals of 1/60 1/30 & 1/15<br/>
	</p>
	
	!#zh
	<p>
	    æ³¨æ??ï¼???? cc.director ä»???? cc.Director???<br/>
	    cc.director ä¸?ä¸ªç®¡???ä½????æ¸¸æ???????»è??æµ?ç¨???????ä¾?å¯¹è±¡???<br/>
	    ??±ä?? cc.director ??¯ä??ä¸ªå??ä¾?ï¼?ä½?ä¸????è¦?è°???¨ä»»ä½?????????½æ?°æ?????å»ºå?½æ?°ï??<br/>
	    ä½¿ç?¨å?????????????¹æ????¯é??è¿?è°???¨ï??<br/>
	      - cc.director.methodName();
	    <br/>
	    å®????å»ºå??å¤????ä¸»ç?????å¹¶ä??ç®¡ç??ä»?ä¹???¶å????§è????ºæ?¯ã??<br/>
	    <br/>
	    cc.director è¿?è´?è´?ï¼?<br/>
	     - ???å§???? OpenGL ??¯å?????<br/>
	     - è®¾ç½®OpenGL???ç´???¼å?????(é»?è®¤æ?? RGB565)<br/>
	     - è®¾ç½®OpenGLç¼???²å?ºæ·±åº? (é»?è®¤æ?? 0-bit)<br/>
	     - è®¾ç½®ç©ºç?½å?ºæ?¯ç??é¢???? (é»?è®¤æ?? é»????)<br/>
	     - è®¾ç½®???å½? (é»?è®¤æ?? 3D)<br/>
	     - è®¾ç½®??¹å?? (é»?è®¤æ?? Portrait)<br/>
	   <br/>
	   cc.director è®¾ç½®äº? OpenGL é»?è®¤ç?¯å?? <br/>
	     - GL_TEXTURE_2D   ??¯ç?¨ã??<br/>
	     - GL_VERTEX_ARRAY ??¯ç?¨ã??<br/>
	     - GL_COLOR_ARRAY  ??¯ç?¨ã??<br/>
	     - GL_TEXTURE_COORD_ARRAY ??¯ç?¨ã??<br/>
	</p>
	<p>
	  cc.director ä¹????æ­¥å????¶å?¨ä????¾ç¤º??¨ç????·æ?°é????????
	  <br/>
	  ??¹ç?¹å??å±???????: <br/>
	     - å°?è®¡æ?¶å?? & æ¸²æ??ä¸???¾ç¤º??¨ç????·æ?°é????????æ­¥ã??<br/>
	     - ??ªæ?¯æ????¨ç?»ç????´é?? 1/60 1/30 & 1/15???<br/>
	</p> */
	export class Director extends EventTarget {		
		/**
		!#en
		Converts a view coordinate to an WebGL coordinate<br/>
		Useful to convert (multi) touches coordinates to the current layout (portrait or landscape)<br/>
		Implementation can be found in CCDirectorWebGL.
		!#zh å°?è§¦æ?¸ç?¹ç??å±?å¹???????è½¬æ?¢ä¸º WebGL View ä¸?????????????
		@param uiPoint uiPoint 
		*/
		convertToGL(uiPoint: Vec2): Vec2;		
		/**
		!#en
		Converts an OpenGL coordinate to a view coordinate<br/>
		Useful to convert node points to window points for calls such as glScissor<br/>
		Implementation can be found in CCDirectorWebGL.
		!#zh å°?è§¦æ?¸ç?¹ç?? WebGL View ??????è½¬æ?¢ä¸ºå±?å¹??????????
		@param glPoint glPoint 
		*/
		convertToUI(glPoint: Vec2): Vec2;		
		/**
		End the life of director in the next frame 
		*/
		end(): void;		
		/**
		!#en
		Returns the size of the WebGL view in points.<br/>
		It takes into account any possible rotation (device orientation) of the window.
		!#zh ??·å??è§???¾ç??å¤§å??ï¼?ä»¥ç?¹ä¸º???ä½???? 
		*/
		getWinSize(): Size;		
		/**
		!#en
		Returns the size of the OpenGL view in pixels.<br/>
		It takes into account any possible rotation (device orientation) of the window.<br/>
		On Mac winSize and winSizeInPixels return the same value.
		(The pixel here refers to the resource resolution. If you want to get the physics resolution of device, you need to use cc.view.getFrameSize())
		!#zh
		??·å??è§???¾å¤§å°?ï¼?ä»¥å??ç´?ä¸ºå??ä½?ï¼?è¿??????????ç´?????????¯è??æº????è¾¨ç?????
		å¦????è¦???·å??å±?å¹???©ç?????è¾¨ç??ï¼????è¦???? cc.view.getFrameSize()ï¼? 
		*/
		getWinSizeInPixels(): Size;		
		/**
		!#en Pause the director's ticker, only involve the game logic execution.
		It won't pause the rendering process nor the event manager.
		If you want to pause the entier game including rendering, audio and event,
		please use {{#crossLink "Game.pause"}}cc.game.pause{{/crossLink}}
		!#zh ??????æ­???¨è??è¡??????ºæ?¯ï??è¯¥æ???????ªä?????æ­¢æ¸¸?????»è????§è??ï¼?ä½???¯ä??ä¼????æ­¢æ¸²?????? UI ???åº????
		å¦??????³è????´å½»åº?å¾???????æ¸¸æ??ï¼??????«æ¸²???ï¼???³é?????äº?ä»¶ï??è¯·ä½¿??? {{#crossLink "Game.pause"}}cc.game.pause{{/crossLink}}??? 
		*/
		pause(): void;		
		/**
		!#en
		Run a scene. Replaces the running scene with a new one or enter the first scene.<br/>
		The new scene will be launched immediately.
		!#zh ç«???»å????¢æ??å®???ºæ?¯ã??
		@param scene The need run scene.
		@param onBeforeLoadScene The function invoked at the scene before loading.
		@param onLaunched The function invoked at the scene after launch. 
		*/
		runSceneImmediate(scene: Scene|SceneAsset, onBeforeLoadScene?: Function, onLaunched?: Function): void;		
		/**
		!#en
		Run a scene. Replaces the running scene with a new one or enter the first scene.
		The new scene will be launched at the end of the current frame.
		!#zh è¿?è¡????å®???ºæ?¯ã??
		@param scene The need run scene.
		@param onBeforeLoadScene The function invoked at the scene before loading.
		@param onLaunched The function invoked at the scene after launch. 
		*/
		runScene(scene: Scene|SceneAsset, onBeforeLoadScene?: Function, onLaunched?: Function): void;		
		/**
		!#en Loads the scene by its name.
		!#zh ???è¿???ºæ?¯å??ç§°è??è¡????è½½å?ºæ?¯ã??
		@param sceneName The name of the scene to load.
		@param onLaunched callback, will be called after scene launched. 
		*/
		loadScene(sceneName: string, onLaunched?: Function): boolean;		
		/**
		!#en
		Preloads the scene to reduces loading time. You can call this method at any time you want.
		After calling this method, you still need to launch the scene by `cc.director.loadScene`.
		It will be totally fine to call `cc.director.loadScene` at any time even if the preloading is not
		yet finished, the scene will be launched after loaded automatically.
		!#zh é¢????è½½å?ºæ?¯ï??ä½???¯ä»¥??¨ä»»ä½???¶å??è°???¨è??ä¸ªæ?¹æ?????
		è°???¨å?????ï¼?ä½?ä»???¶é??è¦????è¿? `cc.director.loadScene` ??¥å?¯å?¨å?ºæ?¯ï?????ä¸ºè??ä¸ªæ?¹æ??ä¸?ä¼???§è????ºæ?¯å??è½½æ??ä½????
		å°±ç??é¢????è½½è??æ²¡å?????ï¼?ä½?ä¹???¯ä»¥??´æ?¥è????? `cc.director.loadScene`ï¼????è½½å??????????ºæ?¯å°±ä¼???¯å?¨ã??
		@param sceneName The name of the scene to preload.
		@param onProgress callback, will be called when the load progression change.
		@param onLoaded callback, will be called after scene loaded. 
		*/
		preloadScene(sceneName: string, onProgress?: (completedCount: number, totalCount: number, item: any) => void, onLoaded?: (error: Error) => void): void;		
		/**
		!#en Resume game logic execution after pause, if the current scene is not paused, nothing will happen.
		!#zh ??¢å??????????ºæ?¯ç??æ¸¸æ????»è??ï¼?å¦????å½??????ºæ?¯æ²¡?????????å°?æ²¡ä»»ä½?äº????????????? 
		*/
		resume(): void;		
		/**
		!#en
		Enables or disables WebGL depth test.<br/>
		Implementation can be found in CCDirectorCanvas.js/CCDirectorWebGL.js
		!#zh ??¯ç??/ç¦???¨æ·±åº¦æ??è¯?ï¼???? Canvas æ¸²æ??æ¨¡å??ä¸?ä¸?ä¼???????ï¼????
		@param on on 
		*/
		setDepthTest(on: boolean): void;		
		/**
		!#en
		Set color for clear screen.<br/>
		(Implementation can be found in CCDirectorCanvas.js/CCDirectorWebGL.js)
		!#zh
		è®¾ç½®??ºæ?¯ç??é»?è®¤æ?¦é?¤é????²ã??<br/>
		??¯æ????¨é?????ï¼?ä½?ä¸???¯æ????????åº¦ä¸ºä¸­é?´å?¼ã??è¦???¯æ????¨é???????????å·¥å????? cc.macro.ENABLE_TRANSPARENT_CANVAS???
		@param clearColor clearColor 
		*/
		setClearColor(clearColor: Color): void;		
		/**
		!#en Returns current logic Scene.
		!#zh ??·å??å½??????»è????ºæ?¯ã??
		
		@example 
		```js
		// This will help you to get the Canvas node in scene
		 cc.director.getScene().getChildByName('Canvas');
		``` 
		*/
		getScene(): Scene;		
		/**
		!#en Returns the FPS value. Please use {{#crossLink "Game.setFrameRate"}}cc.game.setFrameRate{{/crossLink}} to control animation interval.
		!#zh ??·å?????ä½?å¸§æ?§è????¶é?´ã??è¯·ä½¿??? {{#crossLink "Game.setFrameRate"}}cc.game.setFrameRate{{/crossLink}} ??¥æ?§å?¶æ¸¸???å¸§ç????? 
		*/
		getAnimationInterval(): number;		
		/**
		Sets animation interval, this doesn't control the main loop.
		To control the game's frame rate overall, please use {{#crossLink "Game.setFrameRate"}}cc.game.setFrameRate{{/crossLink}}
		@param value The animation interval desired. 
		*/
		setAnimationInterval(value: number): void;		
		/**
		!#en Returns the delta time since last frame.
		!#zh ??·å??ä¸?ä¸?å¸§ç??å¢??????¶é?´ã?? 
		*/
		getDeltaTime(): number;		
		/**
		!#en Returns the total passed time since game start, unit: ms
		!#zh ??·å??ä»?æ¸¸æ??å¼?å§???°ç?°å?¨æ?»å?±ç??è¿??????¶é?´ï?????ä½?ä¸? ms 
		*/
		getTotalTime(): number;		
		/**
		!#en Returns how many frames were called since the director started.
		!#zh ??·å?? director ??¯å?¨ä»¥??¥æ¸¸???è¿?è¡??????»å¸§??°ã?? 
		*/
		getTotalFrames(): number;		
		/**
		!#en Returns whether or not the Director is paused.
		!#zh ??¯å?¦å??äº?????????¶æ????? 
		*/
		isPaused(): boolean;		
		/**
		!#en Returns the cc.Scheduler associated with this director.
		!#zh ??·å????? director ??¸å?³è????? cc.Scheduler??? 
		*/
		getScheduler(): Scheduler;		
		/**
		!#en Sets the cc.Scheduler associated with this director.
		!#zh è®¾ç½®??? director ??¸å?³è????? cc.Scheduler???
		@param scheduler scheduler 
		*/
		setScheduler(scheduler: Scheduler): void;		
		/**
		!#en Returns the cc.ActionManager associated with this director.
		!#zh ??·å????? director ??¸å?³è????? cc.ActionManagerï¼???¨ä??ç®¡ç????¨ï????? 
		*/
		getActionManager(): ActionManager;		
		/**
		!#en Sets the cc.ActionManager associated with this director.
		!#zh è®¾ç½®??? director ??¸å?³è????? cc.ActionManagerï¼???¨ä??ç®¡ç????¨ï?????
		@param actionManager actionManager 
		*/
		setActionManager(actionManager: ActionManager): void;		
		/**
		!#en Returns the cc.CollisionManager associated with this director.
		!#zh ??·å????? director ??¸å?³è????? cc.CollisionManager ï¼?ç¢°æ??ç®¡ç????¨ï????? 
		*/
		getCollisionManager(): CollisionManager;		
		/**
		!#en Returns the cc.PhysicsManager associated with this director.
		!#zh è¿????ä¸? director ??¸å?³è????? cc.PhysicsManager ï¼???©ç??ç®¡ç????¨ï????? 
		*/
		getPhysicsManager(): PhysicsManager;		
		/**
		!#en Returns the cc.Physics3DManager associated with this director.
		!#zh è¿????ä¸? director ??¸å?³è????? cc.Physics3DManager ï¼???©ç??ç®¡ç????¨ï????? 
		*/
		getPhysics3DManager(): Physics3DManager;		
		/** !#en The event projection changed of cc.Director. This event will not get triggered since v2.0
		!#zh cc.Director ???å½±å????????äº?ä»¶ã??ä»? v2.0 å¼?å§?è¿?ä¸ªä??ä»¶ä??ä¼????è¢«è§¦??? */
		static EVENT_PROJECTION_CHANGED: string;		
		/** !#en The event which will be triggered before loading a new scene.
		!#zh ???è½½æ?°å?ºæ?¯ä????????è§¦å?????äº?ä»¶ã?? */
		static EVENT_BEFORE_SCENE_LOADING: string;		
		/** !#en The event which will be triggered before launching a new scene.
		!#zh è¿?è¡???°å?ºæ?¯ä????????è§¦å?????äº?ä»¶ã?? */
		static EVENT_BEFORE_SCENE_LAUNCH: string;		
		/** !#en The event which will be triggered after launching a new scene.
		!#zh è¿?è¡???°å?ºæ?¯ä????????è§¦å?????äº?ä»¶ã?? */
		static EVENT_AFTER_SCENE_LAUNCH: string;		
		/** !#en The event which will be triggered at the beginning of every frame.
		!#zh æ¯?ä¸ªå¸§???å¼?å§???¶æ??è§¦å?????äº?ä»¶ã?? */
		static EVENT_BEFORE_UPDATE: string;		
		/** !#en The event which will be triggered after engine and components update logic.
		!#zh å°???¨å????????ç»?ä»? ???update??? ??»è??ä¹???????è§¦å?????äº?ä»¶ã?? */
		static EVENT_AFTER_UPDATE: string;		
		/** !#en The event is deprecated since v2.0, please use cc.Director.EVENT_BEFORE_DRAW instead
		!#zh è¿?ä¸ªä??ä»¶ä?? v2.0 å¼?å§?è¢«å??å¼?ï¼?è¯·ç?´æ?¥ä½¿??? cc.Director.EVENT_BEFORE_DRAW */
		static EVENT_BEFORE_VISIT: string;		
		/** !#en The event is deprecated since v2.0, please use cc.Director.EVENT_BEFORE_DRAW instead
		!#zh è¿?ä¸ªä??ä»¶ä?? v2.0 å¼?å§?è¢«å??å¼?ï¼?è¯·ç?´æ?¥ä½¿??? cc.Director.EVENT_BEFORE_DRAW */
		static EVENT_AFTER_VISIT: string;		
		/** !#en The event which will be triggered before the rendering process.
		!#zh æ¸²æ??è¿?ç¨?ä¹???????è§¦å?????äº?ä»¶ã?? */
		static EVENT_BEFORE_DRAW: string;		
		/** !#en The event which will be triggered after the rendering process.
		!#zh æ¸²æ??è¿?ç¨?ä¹???????è§¦å?????äº?ä»¶ã?? */
		static EVENT_AFTER_DRAW: string;		
		/** Constant for 2D projection (orthogonal projection) */
		static PROJECTION_2D: number;		
		/** Constant for 3D projection with a fovy=60, znear=0.5f and zfar=1500. */
		static PROJECTION_3D: number;		
		/** Constant for custom projection, if cc.Director's projection set to it, it calls "updateProjection" on the projection delegate. */
		static PROJECTION_CUSTOM: number;		
		/** Constant for default projection of cc.Director, default projection is 2D projection */
		static PROJECTION_DEFAULT: number;	
	}	
	/** !#en An object to boot the game.
	!#zh ?????«æ¸¸???ä¸»ä??ä¿¡æ?¯å¹¶è´?è´?é©±å?¨æ¸¸??????æ¸¸æ??å¯¹è±¡??? */
	export class Game extends EventTarget {		
		/** !#en Event triggered when game hide to background.
		Please note that this event is not 100% guaranteed to be fired on Web platform,
		on native platforms, it corresponds to enter background event, os status bar or notification center may not trigger this event.
		!#zh æ¸¸æ??è¿???¥å????°æ?¶è§¦??????äº?ä»¶ã??
		è¯·æ³¨???ï¼???? WEB å¹³å?°ï??è¿?ä¸ªä??ä»¶ä??ä¸?å®?ä¼? 100% è§¦å??ï¼?è¿?å®???¨å????³ä??æµ?è§???¨ç?????è°?è¡?ä¸ºã??
		??¨å?????å¹³å?°ï??å®?å¯¹å???????¯å????¨è¢«?????¢å?°å????°ä??ä»¶ï??ä¸?????????????ä¸??????¶æ?????ç­?ä¸?ä¸?å®?ä¼?è§¦å??è¿?ä¸ªä??ä»¶ï??è¿??????³ä??ç³»ç??è¡?ä¸ºã?? */
		EVENT_HIDE: string;		
		/** !#en Event triggered when game back to foreground
		Please note that this event is not 100% guaranteed to be fired on Web platform,
		on native platforms, it corresponds to enter foreground event.
		!#zh æ¸¸æ??è¿???¥å????°è??è¡???¶è§¦??????äº?ä»¶ã??
		è¯·æ³¨???ï¼???? WEB å¹³å?°ï??è¿?ä¸ªä??ä»¶ä??ä¸?å®?ä¼? 100% è§¦å??ï¼?è¿?å®???¨å????³ä??æµ?è§???¨ç?????è°?è¡?ä¸ºã??
		??¨å?????å¹³å?°ï??å®?å¯¹å???????¯å????¨è¢«?????¢å?°å????°ä??ä»¶ã?? */
		EVENT_SHOW: string;		
		/** !#en Event triggered when game restart
		!#zh è°???¨restart???ï¼?è§¦å??äº?ä»¶ã?? */
		EVENT_RESTART: string;		
		/** Event triggered after game inited, at this point all engine objects and game scripts are loaded */
		EVENT_GAME_INITED: string;		
		/** Event triggered after engine inited, at this point you will be able to use all engine classes.
		It was defined as EVENT_RENDERER_INITED in cocos creator v1.x and renamed in v2.0 */
		EVENT_ENGINE_INITED: string;		
		/** Web Canvas 2d API as renderer backend */
		RENDER_TYPE_CANVAS: number;		
		/** WebGL API as renderer backend */
		RENDER_TYPE_WEBGL: number;		
		/** OpenGL API as renderer backend */
		RENDER_TYPE_OPENGL: number;		
		/** !#en The outer frame of the game canvas, parent of game container.
		!#zh æ¸¸æ????»å?????å¤?æ¡?ï¼?container ?????¶å®¹??¨ã?? */
		frame: any;		
		/** !#en The container of game canvas.
		!#zh æ¸¸æ????»å?????å®¹å?¨ã?? */
		container: HTMLDivElement;		
		/** !#en The canvas of the game.
		!#zh æ¸¸æ???????»å????? */
		canvas: HTMLCanvasElement;		
		/** !#en The renderer backend of the game.
		!#zh æ¸¸æ?????æ¸²æ????¨ç±»?????? */
		renderType: number;		
		/** !#en
		The current game configuration, including:<br/>
		1. debugMode<br/>
		     "debugMode" possible values :<br/>
		     0 - No message will be printed.                                                      <br/>
		     1 - cc.error, cc.assert, cc.warn, cc.log will print in console.                      <br/>
		     2 - cc.error, cc.assert, cc.warn will print in console.                              <br/>
		     3 - cc.error, cc.assert will print in console.                                       <br/>
		     4 - cc.error, cc.assert, cc.warn, cc.log will print on canvas, available only on web.<br/>
		     5 - cc.error, cc.assert, cc.warn will print on canvas, available only on web.        <br/>
		     6 - cc.error, cc.assert will print on canvas, available only on web.                 <br/>
		2. showFPS<br/>
		     Left bottom corner fps information will show when "showFPS" equals true, otherwise it will be hide.<br/>
		3. exposeClassName<br/>
		     Expose class name to chrome debug tools, the class intantiate performance is a little bit slower when exposed.<br/>
		4. frameRate<br/>
		     "frameRate" set the wanted frame rate for your game, but the real fps depends on your game implementation and the running environment.<br/>
		5. id<br/>
		     "gameCanvas" sets the id of your canvas element on the web page, it's useful only on web.<br/>
		6. renderMode<br/>
		     "renderMode" sets the renderer type, only useful on web :<br/>
		     0 - Automatically chosen by engine<br/>
		     1 - Forced to use canvas renderer<br/>
		     2 - Forced to use WebGL renderer, but this will be ignored on mobile browsers<br/>
		<br/>
		Please DO NOT modify this object directly, it won't have any effect.<br/>
		!#zh
		å½???????æ¸¸æ?????ç½®ï???????¬ï??                                                                  <br/>
		1. debugModeï¼?debug æ¨¡å??ï¼?ä½???¯å?¨æ??è§???¨ä¸­è¿?ä¸ªé??é¡¹ä??è¢«å¿½??¥ï??                                <br/>
		     "debugMode" ???ç§?è®¾ç½®???é¡¹ç?????ä¹????                                                   <br/>
		         0 - æ²¡æ??æ¶???¯è¢«?????°å?ºæ?¥ã??                                                       <br/>
		         1 - cc.errorï¼?cc.assertï¼?cc.warnï¼?cc.log å°??????°å?? console ä¸­ã??                  <br/>
		         2 - cc.errorï¼?cc.assertï¼?cc.warn å°??????°å?? console ä¸­ã??                          <br/>
		         3 - cc.errorï¼?cc.assert å°??????°å?? console ä¸­ã??                                   <br/>
		         4 - cc.errorï¼?cc.assertï¼?cc.warnï¼?cc.log å°??????°å?? canvas ä¸­ï??ä»??????¨ä?? web ç«¯ï????? <br/>
		         5 - cc.errorï¼?cc.assertï¼?cc.warn å°??????°å?? canvas ä¸­ï??ä»??????¨ä?? web ç«¯ï?????         <br/>
		         6 - cc.errorï¼?cc.assert å°??????°å?? canvas ä¸­ï??ä»??????¨ä?? web ç«¯ï?????                  <br/>
		2. showFPSï¼???¾ç¤º FPSï¼?                                                            <br/>
		     å½? showFPS ä¸? true ?????¶å???????¢ç??å·¦ä??è§?å°???¾ç¤º fps ???ä¿¡æ?¯ï????¦å??è¢«é????????              <br/>
		3. exposeClassName                                                           <br/>
		     ??´é?²ç±»???è®? Chrome DevTools ??¯ä»¥è¯???«ï??å¦????å¼???¯ä??ç¨?ç¨????ä½?ç±»ç?????å»ºè??ç¨??????§è?½ï??ä½?å¯¹å¯¹è±¡æ?????æ²¡æ??å½±å????? <br/>
		4. frameRate (å¸§ç??)                                                              <br/>
		     ???frameRate??? è®¾ç½®??³è?????å¸§ç??ä½????æ¸¸æ??ï¼?ä½????æ­????FPS?????³ä??ä½????æ¸¸æ??å®???°å??è¿?è¡???¯å?????      <br/>
		5. id                                                                            <br/>
		     "gameCanvas" Web é¡µé?¢ä????? Canvas Element IDï¼?ä»??????¨ä?? web ç«¯ã??                         <br/>
		6. renderModeï¼?æ¸²æ??æ¨¡å??ï¼?                                                         <br/>
		     ???renderMode??? è®¾ç½®æ¸²æ????¨ç±»???ï¼?ä»??????¨ä?? web ç«¯ï??                              <br/>
		         0 - ???è¿?å¼??????ªå?¨é????©ã??                                                     <br/>
		         1 - å¼ºå?¶ä½¿??? canvas æ¸²æ?????
		         2 - å¼ºå?¶ä½¿??? WebGL æ¸²æ??ï¼?ä½???¯å?¨é?¨å?? Android æµ?è§???¨ä¸­è¿?ä¸ªé??é¡¹ä??è¢«å¿½??¥ã??     <br/>
		<br/>
		æ³¨æ??ï¼?è¯·ä??è¦???´æ?¥ä¿®??¹è??ä¸ªå¯¹è±¡ï??å®?ä¸?ä¼????ä»»ä??????????? */
		config: any;		
		/**
		!#en Callback when the scripts of engine have been load.
		!#zh å½?å¼????å®??????¯å?¨å????????è°???½æ?°ã?? 
		*/
		onStart(): void;		
		/**
		!#en Set frame rate of game.
		!#zh è®¾ç½®æ¸¸æ??å¸§ç?????
		@param frameRate frameRate 
		*/
		setFrameRate(frameRate: number): void;		
		/**
		!#en Get frame rate set for the game, it doesn't represent the real frame rate.
		!#zh ??·å??è®¾ç½®???æ¸¸æ??å¸§ç??ï¼?ä¸?ç­????äº?å®????å¸§ç??ï¼???? 
		*/
		getFrameRate(): number;		
		/**
		!#en Run the game frame by frame.
		!#zh ??§è??ä¸?å¸§æ¸¸???å¾ªç?¯ã?? 
		*/
		step(): void;		
		/**
		!#en Pause the game main loop. This will pause:
		game logic execution, rendering process, event manager, background music and all audio effects.
		This is different with cc.director.pause which only pause the game logic execution.
		!#zh ??????æ¸¸æ??ä¸»å¾ª??¯ã???????«ï??æ¸¸æ????»è??ï¼?æ¸²æ??ï¼?äº?ä»¶å?????ï¼??????¯é?³ä?????????????³æ?????è¿???¹å????ªæ?????æ¸¸æ????»è????? cc.director.pause ä¸??????? 
		*/
		pause(): void;		
		/**
		!#en Resume the game from pause. This will resume:
		game logic execution, rendering process, event manager, background music and all audio effects.
		!#zh ??¢å??æ¸¸æ??ä¸»å¾ª??¯ã???????«ï??æ¸¸æ????»è??ï¼?æ¸²æ??ï¼?äº?ä»¶å?????ï¼??????¯é?³ä?????????????³æ????? 
		*/
		resume(): void;		
		/**
		!#en Check whether the game is paused.
		!#zh ??¤æ?­æ¸¸?????¯å?¦æ???????? 
		*/
		isPaused(): boolean;		
		/**
		!#en Restart game.
		!#zh ?????°å??å§?æ¸¸æ?? 
		*/
		restart(): void;		
		/**
		!#en End game, it will close the game window
		!#zh ?????ºæ¸¸??? 
		*/
		end(): void;		
		/**
		!#en
		Register an callback of a specific event type on the game object.
		This type of event should be triggered via `emit`.
		!#zh
		æ³¨å?? game ?????¹å??äº?ä»¶ç±»??????è°????è¿?ç§?ç±»å?????äº?ä»¶å??è¯¥è¢« `emit` è§¦å?????
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null 
		*/
		on<T extends Function>(type: string, callback: T, target?: any, useCapture?: boolean): T;		
		/**
		!#en
		Register an callback of a specific event type on the game object,
		the callback will remove itself after the first time it is triggered.
		!#zh
		æ³¨å?? game ?????¹å??äº?ä»¶ç±»??????è°?ï¼????è°?ä¼???¨ç¬¬ä¸???¶é?´è¢«è§¦å??????????¤è?ªèº«???
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null 
		*/
		once(type: string, callback: (arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any) => void, target?: any): void;		
		/**
		!#en Prepare game.
		!#zh ???å¤?å¼????ï¼?è¯·ä??è¦???´æ?¥è????¨è??ä¸ªå?½æ?°ã??
		@param cb cb 
		*/
		prepare(cb: Function): void;		
		/**
		!#en Run game with configuration object and onStart function.
		!#zh è¿?è¡?æ¸¸æ??ï¼?å¹¶ä?????å®?å¼???????ç½®å?? onStart ??????è°????
		@param config Pass configuration object or onStart function
		@param onStart function to be executed after game initialized 
		*/
		run(config: any, onStart: Function): void;		
		/**
		!#en
		Add a persistent root node to the game, the persistent node won't be destroyed during scene transition.<br/>
		The target node must be placed in the root level of hierarchy, otherwise this API won't have any effect.
		!#zh
		å£°æ??å¸¸é©»??¹è????¹ï??è¯¥è????¹ä??ä¼?è¢«å?¨å?ºæ?¯å????¢ä¸­è¢«é??æ¯????<br/>
		??®æ???????¹å??é¡»ä??äº?ä¸ºå??çº§ç????¹è????¹ï????¦å???????????
		@param node The node to be made persistent 
		*/
		addPersistRootNode(node: Node): void;		
		/**
		!#en Remove a persistent root node.
		!#zh ???æ¶?å¸¸é©»??¹è????¹ã??
		@param node The node to be removed from persistent node list 
		*/
		removePersistRootNode(node: Node): void;		
		/**
		!#en Check whether the node is a persistent root node.
		!#zh æ£???¥è????¹æ?¯å?¦æ?¯å¸¸é©»æ?¹è????¹ã??
		@param node The node to be checked 
		*/
		isPersistRootNode(node: Node): boolean;	
	}	
	/** !#en
	Class of all entities in Cocos Creator scenes.<br/>
	For events supported by Node, please refer to {{#crossLink "Node.EventType"}}{{/crossLink}}
	!#zh
	Cocos Creator ??ºæ?¯ä¸­??????????????¹ç±»???<br/>
	??¯æ??????????¹ä??ä»¶ï??è¯·å????? {{#crossLink "Node.EventType"}}{{/crossLink}}??? */
	export class Node extends _BaseNode {		
		/** !#en
		Group index of node.<br/>
		Which Group this node belongs to will resolve that this node's collision components can collide with which other collision componentns.<br/>
		!#zh
		?????¹ç?????ç»?ç´¢å?????<br/>
		?????¹ç?????ç»?å°???³ç³»??°è????¹ç??ç¢°æ??ç»?ä»¶å?¯ä»¥ä¸???ªä??ç¢°æ??ç»?ä»¶ç?¸ç¢°??????<br/> */
		groupIndex: number;		
		/** !#en
		Group of node.<br/>
		Which Group this node belongs to will resolve that this node's collision components can collide with which other collision componentns.<br/>
		!#zh
		?????¹ç?????ç»????<br/>
		?????¹ç?????ç»?å°???³ç³»??°è????¹ç??ç¢°æ??ç»?ä»¶å?¯ä»¥ä¸???ªä??ç¢°æ??ç»?ä»¶ç?¸ç¢°??????<br/> */
		group: string;		
		/** !#en The position (x, y) of the node in its parent's coordinates.
		!#zh ?????¹å?¨ç?¶è????¹å?????ç³»ä¸­???ä½?ç½®ï??x, yï¼???? */
		position: Vec3;		
		/** !#en x axis position of node.
		!#zh ?????? X è½´å???????? */
		x: number;		
		/** !#en y axis position of node.
		!#zh ?????? Y è½´å???????? */
		y: number;		
		/** !#en z axis position of node.
		!#zh ?????? Z è½´å???????? */
		z: number;		
		/** !#en Rotation of node.
		!#zh è¯¥è????¹æ??è½¬è??åº¦ã?? */
		rotation: number;		
		/** !#en
		Angle of node, the positive value is anti-clockwise direction.
		!#zh
		è¯¥è????¹ç?????è½¬è??åº¦ï??æ­???¼ä¸º?????¶é????¹å????? */
		angle: number;		
		/** !#en The rotation as Euler angles in degrees, used in 3D node.
		!#zh è¯¥è????¹ç??æ¬§æ??è§?åº¦ï????¨ä?? 3D ?????¹ã?? */
		eulerAngles: Vec3;		
		/** !#en Rotation on x axis.
		!#zh è¯¥è????? X è½´æ??è½¬è??åº¦ã?? */
		rotationX: number;		
		/** !#en Rotation on y axis.
		!#zh è¯¥è????? Y è½´æ??è½¬è??åº¦ã?? */
		rotationY: number;		
		/** !#en The local scale relative to the parent.
		!#zh ?????¹ç?¸å¯¹??¶è????¹ç??ç¼©æ?¾ã?? */
		scale: number;		
		/** !#en Scale on x axis.
		!#zh ?????? X è½´ç¼©??¾ã?? */
		scaleX: number;		
		/** !#en Scale on y axis.
		!#zh ?????? Y è½´ç¼©??¾ã?? */
		scaleY: number;		
		/** !#en Scale on z axis.
		!#zh ?????? Z è½´ç¼©??¾ã?? */
		scaleZ: number;		
		/** !#en Skew x
		!#zh è¯¥è????? X è½´å?¾æ??è§?åº¦ã?? */
		skewX: number;		
		/** !#en Skew y
		!#zh è¯¥è????? Y è½´å?¾æ??è§?åº¦ã?? */
		skewY: number;		
		/** !#en Opacity of node, default value is 255.
		!#zh ?????¹é?????åº¦ï??é»?è®¤å?¼ä¸º 255??? */
		opacity: number;		
		/** !#en Color of node, default value is white: (255, 255, 255).
		!#zh ?????¹é????²ã??é»?è®¤ä¸º??½è?²ï????°å?¼ä¸ºï¼?ï¼?255ï¼?255ï¼?255ï¼???? */
		color: Color;		
		/** !#en Anchor point's position on x axis.
		!#zh ?????? X è½´é????¹ä??ç½®ã?? */
		anchorX: number;		
		/** !#en Anchor point's position on y axis.
		!#zh ?????? Y è½´é????¹ä??ç½®ã?? */
		anchorY: number;		
		/** !#en Width of node.
		!#zh ?????¹å®½åº¦ã?? */
		width: number;		
		/** !#en Height of node.
		!#zh ?????¹é??åº¦ã?? */
		height: number;		
		/** !#en zIndex is the 'key' used to sort the node relative to its siblings.<br/>
		The value of zIndex should be in the range between cc.macro.MIN_ZINDEX and cc.macro.MAX_ZINDEX.<br/>
		The Node's parent will sort all its children based on the zIndex value and the arrival order.<br/>
		Nodes with greater zIndex will be sorted after nodes with smaller zIndex.<br/>
		If two nodes have the same zIndex, then the node that was added first to the children's array will be in front of the other node in the array.<br/>
		Node's order in children list will affect its rendering order. Parent is always rendering before all children.
		!#zh zIndex ??¯ç?¨æ?¥å¯¹?????¹è??è¡????åº??????³é?®å????§ï??å®???³å??ä¸?ä¸ªè????¹å?¨å??å¼??????¹ä????´ç??ä½?ç½®ã??<br/>
		zIndex ????????¼å??è¯¥ä??äº? cc.macro.MIN_ZINDEX ??? cc.macro.MAX_ZINDEX ä¹????
		??¶è????¹ä¸»è¦???¹æ?®è????¹ç?? zIndex ???æ·»å??æ¬¡å????¥æ??åº?ï¼???¥æ????´é?? zIndex ????????¹å??è¢«æ????¨å????¢ï??å¦????ä¸¤ä¸ª?????¹ç?? zIndex ä¸???´ï?????æ·»å??????????¹ä??ç¨³å???????¨å?¦ä??ä¸ªè????¹ä????????<br/>
		?????¹å?? children ä¸­ç??é¡ºå????³å??äº???¶æ¸²???é¡ºå???????¶è????¹æ°¸è¿???¨æ?????å­??????¹ä?????è¢«æ¸²??? */
		zIndex: number;		
		/** !#en
		Switch 2D/3D node. The 2D nodes will run faster.
		!#zh
		?????? 2D/3D ?????¹ï??2D ?????¹ä???????´é?????è¿?è¡??????? */
		is3DNode: boolean;		
		/** !#en Returns a normalized vector representing the up direction (Y axis) of the node in world space.
		!#zh ??·å???????¹æ­£ä¸???¹ï??y è½´ï????¢å¯¹?????¹å??ï¼?è¿??????¼ä¸ºä¸??????????ç³»ä?????å½?ä¸?????????? */
		up: Vec3;		
		/** !#en Returns a normalized vector representing the right direction (X axis) of the node in world space.
		!#zh ??·å???????¹æ­£??³æ?¹ï??x è½´ï????¢å¯¹?????¹å??ï¼?è¿??????¼ä¸ºä¸??????????ç³»ä?????å½?ä¸?????????? */
		right: Vec3;		
		/** !#en Returns a normalized vector representing the forward direction (Z axis) of the node in world space.
		!#zh ??·å???????¹æ­£?????¹ï??z è½´ï????¢å¯¹?????¹å??ï¼?è¿??????¼ä¸ºä¸??????????ç³»ä?????å½?ä¸?????????? */
		forward: Vec3;		
		/**
		
		@param name name 
		*/
		constructor(name?: string);		
		/**
		!#en
		Register a callback of a specific event type on Node.<br/>
		Use this method to register touch or mouse event permit propagation based on scene graph,<br/>
		These kinds of event are triggered with dispatchEvent, the dispatch process has three steps:<br/>
		1. Capturing phase: dispatch in capture targets (`_getCapturingTargets`), e.g. parents in node tree, from root to the real target<br/>
		2. At target phase: dispatch to the listeners of the real target<br/>
		3. Bubbling phase: dispatch in bubble targets (`_getBubblingTargets`), e.g. parents in node tree, from the real target to root<br/>
		In any moment of the dispatching process, it can be stopped via `event.stopPropagation()` or `event.stopPropagationImmidiate()`.<br/>
		It's the recommended way to register touch/mouse event for Node,<br/>
		please do not use cc.eventManager directly for Node.<br/>
		You can also register custom event and use `emit` to trigger custom event on Node.<br/>
		For such events, there won't be capturing and bubbling phase, your event will be dispatched directly to its listeners registered on the same node.<br/>
		You can also pass event callback parameters with `emit` by passing parameters after `type`.
		!#zh
		??¨è????¹ä??æ³¨å?????å®?ç±»å????????è°???½æ?°ï??ä¹???¯ä»¥è®¾ç½® target ??¨ä??ç»?å®????åº???½æ?°ç?? this å¯¹è±¡???<br/>
		é¼???????è§¦æ?¸ä??ä»¶ä??è¢«ç³»ç»?è°???? dispatchEvent ??¹æ??è§¦å??ï¼?è§¦å?????è¿?ç¨??????«ä??ä¸ªé?¶æ®µï¼?<br/>
		1. ?????·é?¶æ®µï¼?æ´¾å??äº?ä»¶ç???????·ç?®æ??ï¼????è¿? `_getCapturingTargets` ??·å??ï¼?ï¼?æ¯?å¦?ï¼??????¹æ??ä¸­æ³¨???äº??????·é?¶æ®µ?????¶è????¹ï??ä»???¹è????¹å??å§?æ´¾å????´å?°ç?®æ???????¹ã??<br/>
		2. ??®æ????¶æ®µï¼?æ´¾å??ç»???®æ???????¹ç???????¬å?¨ã??<br/>
		3. ???æ³¡é?¶æ®µï¼?æ´¾å??äº?ä»¶ç?????æ³¡ç?®æ??ï¼????è¿? `_getBubblingTargets` ??·å??ï¼?ï¼?æ¯?å¦?ï¼??????¹æ??ä¸­æ³¨???äº????æ³¡é?¶æ®µ?????¶è????¹ï??ä»???®æ???????¹å??å§?æ´¾å????´å?°æ?¹è????¹ã??<br/>
		?????¶æ?¨å?¯ä»¥å°?äº?ä»¶æ´¾?????°ç?¶è????¹æ????????è¿?è°???? stopPropagation ??¦æ?ªå?????<br/>
		??¨è??ä½¿ç?¨è??ç§???¹å????¥ç????¬è????¹ä?????è§¦æ?¸æ??é¼????äº?ä»¶ï??è¯·ä??è¦???¨è????¹ä????´æ?¥ä½¿??? cc.eventManager???<br/>
		ä½?ä¹???¯ä»¥æ³¨å????ªå??ä¹?äº?ä»¶å?°è????¹ä??ï¼?å¹¶é??è¿? emit ??¹æ??è§¦å??æ­¤ç±»äº?ä»¶ï??å¯¹ä??è¿?ç±»ä??ä»¶ï??ä¸?ä¼????????????·å??æ³¡é?¶æ®µï¼???ªä????´æ?¥æ´¾???ç»?æ³¨å????¨è¯¥?????¹ä??????????¬å??<br/>
		ä½???¯ä»¥???è¿???? emit ??¹æ??è°???¨æ?¶å?? type ä¹????ä¼????é¢?å¤?????????°ä??ä¸ºä??ä»¶å??è°?????????°å??è¡?
		@param type A string representing the event type to listen for.<br>See {{#crossLink "Node/EventTyupe/POSITION_CHANGED"}}Node Events{{/crossLink}} for all builtin events.
		@param callback The callback that will be invoked when the event is dispatched. The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		@param useCapture When set to true, the listener will be triggered at capturing phase which is ahead of the final target emit, otherwise it will be triggered during bubbling phase.
		
		@example 
		```js
		this.node.on(cc.Node.EventType.TOUCH_START, this.memberFunction, this);  // if "this" is component and the "memberFunction" declared in CCClass.
		node.on(cc.Node.EventType.TOUCH_START, callback, this);
		node.on(cc.Node.EventType.TOUCH_MOVE, callback, this);
		node.on(cc.Node.EventType.TOUCH_END, callback, this);
		node.on(cc.Node.EventType.TOUCH_CANCEL, callback, this);
		node.on(cc.Node.EventType.ANCHOR_CHANGED, callback);
		node.on(cc.Node.EventType.COLOR_CHANGED, callback);
		``` 
		*/
		on<T extends Function>(type: string, callback: T, target?: any, useCapture?: boolean): T;		
		/**
		!#en
		Register an callback of a specific event type on the Node,
		the callback will remove itself after the first time it is triggered.
		!#zh
		æ³¨å???????¹ç????¹å??äº?ä»¶ç±»??????è°?ï¼????è°?ä¼???¨ç¬¬ä¸???¶é?´è¢«è§¦å??????????¤è?ªèº«???
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		node.once(cc.Node.EventType.ANCHOR_CHANGED, callback);
		``` 
		*/
		once<T extends Function>(type: string, callback: T, target?: any, useCapture?: boolean): T;		
		/**
		!#en
		Removes the callback previously registered with the same type, callback, target and or useCapture.
		This method is merely an alias to removeEventListener.
		!#zh ?????¤ä?????ä¸????ç±»å??ï¼????è°?ï¼???®æ????? useCapture æ³¨å????????è°????
		@param type A string representing the event type being removed.
		@param callback The callback to remove.
		@param target The target (this object) to invoke the callback, if it's not given, only callback without target will be removed
		@param useCapture When set to true, the listener will be triggered at capturing phase which is ahead of the final target emit, otherwise it will be triggered during bubbling phase.
		
		@example 
		```js
		this.node.off(cc.Node.EventType.TOUCH_START, this.memberFunction, this);
		node.off(cc.Node.EventType.TOUCH_START, callback, this.node);
		node.off(cc.Node.EventType.ANCHOR_CHANGED, callback, this);
		``` 
		*/
		off(type: string, callback?: Function, target?: any, useCapture?: boolean): void;		
		/**
		!#en Removes all callbacks previously registered with the same target.
		!#zh ç§»é?¤ç?®æ??ä¸??????????æ³¨å??äº?ä»¶ã??
		@param target The target to be searched for all related callbacks
		
		@example 
		```js
		node.targetOff(target);
		``` 
		*/
		targetOff(target: any): void;		
		/**
		!#en Checks whether the EventTarget object has any callback registered for a specific type of event.
		!#zh æ£???¥ä??ä»¶ç?®æ??å¯¹è±¡??¯å?¦æ??ä¸ºç?¹å??ç±»å?????äº?ä»¶æ³¨?????????è°????
		@param type The type of event. 
		*/
		hasEventListener(type: string): boolean;		
		/**
		!#en
		Trigger an event directly with the event name and necessary arguments.
		!#zh
		???è¿?äº?ä»¶å??????????ªå??ä¹?äº?ä»?
		@param type event type
		@param arg1 First argument in callback
		@param arg2 Second argument in callback
		@param arg3 Third argument in callback
		@param arg4 Fourth argument in callback
		@param arg5 Fifth argument in callback
		
		@example 
		```js
		eventTarget.emit('fire', event);
		eventTarget.emit('fire', message, emitter);
		``` 
		*/
		emit(type: string, arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any): void;		
		/**
		!#en
		Dispatches an event into the event flow.
		The event target is the EventTarget object upon which the dispatchEvent() method is called.
		!#zh ??????äº?ä»¶å?°ä??ä»¶æ??ä¸­ã??
		@param event The Event object that is dispatched into the event flow 
		*/
		dispatchEvent(event: Event): void;		
		/**
		!#en Pause node related system events registered with the current Node. Node system events includes touch and mouse events.
		If recursive is set to true, then this API will pause the node system events for the node and all nodes in its sub node tree.
		Reference: http://docs.cocos2d-x.org/editors_and_tools/creator-chapters/scripting/internal-events/
		!#zh ??????å½?????????¹ä??æ³¨å????????????????¹ç³»ç»?äº?ä»¶ï???????¹ç³»ç»?äº?ä»¶å????«è§¦??¸å??é¼????äº?ä»¶ã??
		å¦????ä¼???? recursive ä¸? trueï¼????ä¹?è¿?ä¸? API å°?????????¬è????¹å??å®????å­????ä¸????????????¹ç???????¹ç³»ç»?äº?ä»¶ã??
		??????ï¼?https://www.cocos.com/docs/creator/scripting/internal-events.html
		@param recursive Whether to pause node system events on the sub node tree.
		
		@example 
		```js
		node.pauseSystemEvents(true);
		``` 
		*/
		pauseSystemEvents(recursive: boolean): void;		
		/**
		!#en Resume node related system events registered with the current Node. Node system events includes touch and mouse events.
		If recursive is set to true, then this API will resume the node system events for the node and all nodes in its sub node tree.
		Reference: http://docs.cocos2d-x.org/editors_and_tools/creator-chapters/scripting/internal-events/
		!#zh ??¢å??å½?????????¹ä??æ³¨å????????????????¹ç³»ç»?äº?ä»¶ï???????¹ç³»ç»?äº?ä»¶å????«è§¦??¸å??é¼????äº?ä»¶ã??
		å¦????ä¼???? recursive ä¸? trueï¼????ä¹?è¿?ä¸? API å°???¢å????¬è????¹å??å®????å­????ä¸????????????¹ç???????¹ç³»ç»?äº?ä»¶ã??
		??????ï¼?https://www.cocos.com/docs/creator/scripting/internal-events.html
		@param recursive Whether to resume node system events on the sub node tree.
		
		@example 
		```js
		node.resumeSystemEvents(true);
		``` 
		*/
		resumeSystemEvents(recursive: boolean): void;		
		/**
		!#en
		Executes an action, and returns the action that is executed.<br/>
		The node becomes the action's target. Refer to cc.Action's getTarget() <br/>
		Calling runAction while the node is not active won't have any effect. <br/>
		Noteï¼?You shouldn't modify the action after runAction, that won't take any effect.<br/>
		if you want to modify, when you define action plus.
		!#zh
		??§è??å¹¶è?????è¯¥æ?§è???????¨ä?????è¯¥è????¹å??ä¼?????????¨ä???????®æ?????<br/>
		è°???? runAction ??¶ï???????¹è?ªèº«å¤?äº?ä¸?æ¿?æ´»ç?¶æ??å°?ä¸?ä¼????ä»»ä???????????<br/>
		æ³¨æ??ï¼?ä½?ä¸?åº?è¯¥ä¿®??? runAction ????????¨ä??ï¼?å°????æ³??????¥ä????¨ï??å¦??????³è??è¡?ä¿®æ?¹ï??è¯·å?¨å??ä¹? action ??¶å????¥ã??
		@param action action
		
		@example 
		```js
		var action = cc.scaleTo(0.2, 1, 0.6);
		node.runAction(action);
		node.runAction(action).repeatForever(); // fail
		node.runAction(action.repeatForever()); // right
		``` 
		*/
		runAction(action: Action): Action;		
		/**
		!#en Pause all actions running on the current node. Equals to `cc.director.getActionManager().pauseTarget(node)`.
		!#zh ????????¬è????¹ä????????æ­???¨è??è¡??????¨ä???????? `cc.director.getActionManager().pauseTarget(node);` ç­?ä»·ã??
		
		@example 
		```js
		node.pauseAllActions();
		``` 
		*/
		pauseAllActions(): void;		
		/**
		!#en Resume all paused actions on the current node. Equals to `cc.director.getActionManager().resumeTarget(node)`.
		!#zh ??¢å??è¿?è¡???¬è????¹ä???????????????????¨ä???????? `cc.director.getActionManager().resumeTarget(node);` ç­?ä»·ã??
		
		@example 
		```js
		node.resumeAllActions();
		``` 
		*/
		resumeAllActions(): void;		
		/**
		!#en Stops and removes all actions from the running action list .
		!#zh ???æ­¢å¹¶ä¸?ç§»é?¤æ?????æ­???¨è??è¡??????¨ä?????è¡¨ã??
		
		@example 
		```js
		node.stopAllActions();
		``` 
		*/
		stopAllActions(): void;		
		/**
		!#en Stops and removes an action from the running action list.
		!#zh ???æ­¢å¹¶ç§»é?¤æ??å®??????¨ä?????
		@param action An action object to be removed.
		
		@example 
		```js
		var action = cc.scaleTo(0.2, 1, 0.6);
		node.stopAction(action);
		``` 
		*/
		stopAction(action: Action): void;		
		/**
		!#en Removes an action from the running action list by its tag.
		!#zh ???æ­¢å¹¶ä¸?ç§»é?¤æ??å®????ç­¾ç????¨ä?????
		@param tag A tag that indicates the action to be removed.
		
		@example 
		```js
		node.stopActionByTag(1);
		``` 
		*/
		stopActionByTag(tag: number): void;		
		/**
		!#en Returns an action from the running action list by its tag.
		!#zh ???è¿????ç­¾è?·å?????å®???¨ä?????
		@param tag tag
		
		@example 
		```js
		var action = node.getActionByTag(1);
		``` 
		*/
		getActionByTag(tag: number): Action;		
		/**
		!#en
		Returns the numbers of actions that are running plus the ones that are schedule to run (actions in actionsToAdd and actions arrays).<br/>
		   Composable actions are counted as 1 action. Example:<br/>
		   If you are running 1 Sequence of 7 actions, it will return 1. <br/>
		   If you are running 7 Sequences of 2 actions, it will return 7.</p>
		!#zh
		??·å??è¿?è¡?????????¨ä?????ä¸?æ­???¨è??åº¦è??è¡??????¨ä???????»æ?°ã??<br/>
		ä¾?å¦?ï¼?<br/>
		- å¦????ä½?æ­???¨è??è¡? 7 ä¸ªå?¨ä??ä¸­ç?? 1 ä¸? Sequenceï¼?å®?å°?è¿???? 1???<br/>
		- å¦????ä½?æ­???¨è??è¡? 2 ä¸ªå?¨ä??ä¸­ç?? 7 ä¸? Sequenceï¼?å®?å°?è¿???? 7???<br/>
		
		@example 
		```js
		var count = node.getNumberOfRunningActions();
		cc.log("Running Action Count: " + count);
		``` 
		*/
		getNumberOfRunningActions(): number;		
		/**
		!#en
		Returns a copy of the position (x, y, z) of the node in its parent's coordinates.
		You can pass a cc.Vec2 or cc.Vec3 as the argument to receive the return values.
		!#zh
		??·å???????¹å?¨ç?¶è????¹å?????ç³»ä¸­???ä½?ç½®ï??x, y, zï¼????
		ä½???¯ä»¥ä¼?ä¸?ä¸? cc.Vec2 ?????? cc.Vec3 ä½?ä¸ºå????°æ?¥æ?¥æ?¶è???????¼ã??
		@param out The return value to receive position
		
		@example 
		```js
		cc.log("Node Position: " + node.getPosition());
		``` 
		*/
		getPosition(out?: Vec2|Vec3): Vec2;		
		/**
		!#en
		Sets the position (x, y, z) of the node in its parent's coordinates.<br/>
		Usually we use cc.v2(x, y) to compose cc.Vec2 object, in this case, position.z will become 0.<br/>
		and passing two numbers (x, y) is more efficient than passing cc.Vec2 object, in this case, position.z will remain unchanged.
		For 3D node we can use cc.v3(x, y, z) to compose cc.Vec3 object,<br/>
		and passing three numbers (x, y, z) is more efficient than passing cc.Vec3 object.
		!#zh
		è®¾ç½®?????¹å?¨ç?¶è????¹å?????ç³»ä¸­???ä½?ç½®ã??<br/>
		??¯ä»¥???è¿?ä¸???¢ç????¹å??è®¾ç½®????????¹ï??<br/>
		1. ä¼???? 2 ä¸ªæ?°å?? x, y (æ­¤æ?¶ä??ä¼???¹å?? position.z ??????)???<br/>
		2. ä¼???? cc.v2(x, y) ç±»å??ä¸? cc.Vec2 ???å¯¹è±¡ (æ­¤æ?? position.z ?????¼å??è¢«è®¾ç½®ä¸º0)???
		3. å¯¹ä?? 3D ?????¹å?¯ä»¥ä¼???? 3 ä¸ªæ?°å?? x, y, z???<br/>
		4. å¯¹ä?? 3D ?????¹å?¯ä»¥ä¼???? cc.v3(x, y, z) ç±»å??ä¸? cc.Vec3 ???å¯¹è±¡???
		@param x X coordinate for position or the position object
		@param y Y coordinate for position
		@param z Z coordinate for position 
		*/
		setPosition(x: Vec2|Vec3|number, y?: number, z?: number): void;		
		/**
		!#en
		Returns the scale factor of the node.
		Need pass a cc.Vec2 or cc.Vec3 as the argument to receive the return values.
		!#zh ??·å???????¹ç??ç¼©æ?¾ï?????è¦?ä¼?ä¸?ä¸? cc.Vec2 ?????? cc.Vec3 ä½?ä¸ºå????°æ?¥æ?¥æ?¶è???????¼ã??
		@param out out
		
		@example 
		```js
		cc.log("Node Scale: " + node.getScale(cc.v3()));
		``` 
		*/
		getScale(out: Vec2|Vec3): Vec2;		
		/**
		!#en
		Sets the scale of axis in local coordinates of the node.
		You can operate 2 axis in 2D node, and 3 axis in 3D node.
		When only (x, y) is passed, the value of scale.z will not be changed.
		When a Vec2 is passed in, the value of scale.z will be set to 0.
		!#zh
		è®¾ç½®?????¹å?¨æ?¬å?°å?????ç³»ä¸­??????è½´ä?????ç¼©æ?¾æ??ä¾????
		2D ?????¹å?¯ä»¥???ä½?ä¸¤ä¸ª??????è½´ï????? 3D ?????¹å?¯ä»¥???ä½?ä¸?ä¸ªå?????è½´ã??
		å½???ªä????? (x, y) ??¶ï??scale.z ?????¼ä??ä¼?è¢«æ?¹å?????
		å½???ªä????? Vec2 å¯¹è±¡??¶ï??scale.z ?????¼å??è¢«è®¾ç½®ä¸º0???
		@param x scaleX or scale object
		@param y y
		@param z z
		
		@example 
		```js
		node.setScale(cc.v2(2, 2)); // Notice: scaleZ will be 0
		node.setScale(cc.v3(2, 2, 2)); // for 3D node
		node.setScale(2);
		``` 
		*/
		setScale(x: number|Vec2|Vec3, y?: number, z?: number): void;		
		/**
		!#en
		Get rotation of node (in quaternion).
		Need pass a cc.Quat as the argument to receive the return values.
		!#zh
		??·å??è¯¥è????¹ç?? quaternion ???è½¬è??åº¦ï?????è¦?ä¼?ä¸?ä¸? cc.Quat ä½?ä¸ºå????°æ?¥æ?¥æ?¶è???????¼ã??
		@param out out 
		*/
		getRotation(out: Quat): Quat;		
		/**
		!#en Set rotation of node (in quaternion).
		!#zh è®¾ç½®è¯¥è????¹ç?? quaternion ???è½¬è??åº¦ã??
		@param quat Quaternion object represents the rotation or the x value of quaternion
		@param y y value of quternion
		@param z z value of quternion
		@param w w value of quternion 
		*/
		setRotation(quat: Quat|number, y?: number, z?: number, w?: number): void;		
		/**
		!#en
		Returns a copy the untransformed size of the node. <br/>
		The contentSize remains the same no matter the node is scaled or rotated.<br/>
		All nodes has a size. Layer and Scene has the same size of the screen by default. <br/>
		!#zh ??·å???????¹è?ªèº«å¤§å??ï¼?ä¸????è¯¥è????¹æ?¯å?¦è¢«ç¼©æ?¾æ????????è½¬ç??å½±å?????
		
		@example 
		```js
		cc.log("Content Size: " + node.getContentSize());
		``` 
		*/
		getContentSize(): Size;		
		/**
		!#en
		Sets the untransformed size of the node.<br/>
		The contentSize remains the same no matter the node is scaled or rotated.<br/>
		All nodes has a size. Layer and Scene has the same size of the screen.
		!#zh è®¾ç½®?????¹å??å§?å¤§å??ï¼?ä¸????è¯¥è????¹æ?¯å?¦è¢«ç¼©æ?¾æ????????è½¬ç??å½±å?????
		@param size The untransformed size of the node or The untransformed size's width of the node.
		@param height The untransformed size's height of the node.
		
		@example 
		```js
		node.setContentSize(cc.size(100, 100));
		node.setContentSize(100, 100);
		``` 
		*/
		setContentSize(size: Size|number, height?: number): void;		
		/**
		!#en
		Returns a copy of the anchor point.<br/>
		Anchor point is the point around which all transformations and positioning manipulations take place.<br/>
		It's like a pin in the node where it is "attached" to its parent. <br/>
		The anchorPoint is normalized, like a percentage. (0,0) means the bottom-left corner and (1,1) means the top-right corner. <br/>
		But you can use values higher than (1,1) and lower than (0,0) too.  <br/>
		The default anchor point is (0.5,0.5), so it starts at the center of the node.
		!#zh
		??·å???????¹é????¹ï????¨ç?¾å??æ¯?è¡¨ç¤º???<br/>
		?????¹å????¨ä?????????????¢å??????????¹ç?????ä½?ï¼?å®?å°±å????¨è????¹ä??è¿???¥å?¶ç?¶è????¹ç??å¤§å¤´??????<br/>
		?????¹æ?¯æ???????????ï¼?å°±å????¾å??æ¯?ä¸???·ã??(0ï¼?0) è¡¨ç¤ºå·¦ä??è§?ï¼?(1ï¼?1) è¡¨ç¤º??³ä??è§????<br/>
		ä½???¯ä????¯ä»¥ä½¿ç?¨æ??ï¼?1ï¼?1ï¼???´é???????¼æ?????æ¯?ï¼?0ï¼?0ï¼???´ä???????¼ã??<br/>
		é»?è®¤ç???????¹æ?¯ï??0.5ï¼?0.5ï¼?ï¼????æ­¤å??å¼?å§?äº??????¹ç??ä¸­å??ä½?ç½®ã??<br/>
		æ³¨æ??ï¼?Creator ä¸­ç???????¹ä????¨ä??å®?ä½??????¨ç???????¹ï??å­??????¹ç??å®?ä½?ä¸????å½±å?????
		
		@example 
		```js
		cc.log("Node AnchorPoint: " + node.getAnchorPoint());
		``` 
		*/
		getAnchorPoint(): Vec2;		
		/**
		!#en
		Sets the anchor point in percent. <br/>
		anchor point is the point around which all transformations and positioning manipulations take place. <br/>
		It's like a pin in the node where it is "attached" to its parent. <br/>
		The anchorPoint is normalized, like a percentage. (0,0) means the bottom-left corner and (1,1) means the top-right corner.<br/>
		But you can use values higher than (1,1) and lower than (0,0) too.<br/>
		The default anchor point is (0.5,0.5), so it starts at the center of the node.
		!#zh
		è®¾ç½®?????¹ç????¾å??æ¯????<br/>
		?????¹å????¨ä?????????????¢å??????????¹ç?????ä½?ï¼?å®?å°±å????¨è????¹ä??è¿???¥å?¶ç?¶è????¹ç??å¤§å¤´??????<br/>
		?????¹æ?¯æ???????????ï¼?å°±å????¾å??æ¯?ä¸???·ã??(0ï¼?0) è¡¨ç¤ºå·¦ä??è§?ï¼?(1ï¼?1) è¡¨ç¤º??³ä??è§????<br/>
		ä½???¯ä????¯ä»¥ä½¿ç?¨æ??ï¼?1ï¼?1ï¼???´é???????¼æ?????æ¯?ï¼?0ï¼?0ï¼???´ä???????¼ã??<br/>
		é»?è®¤ç???????¹æ?¯ï??0.5ï¼?0.5ï¼?ï¼????æ­¤å??å¼?å§?äº??????¹ç??ä¸­å??ä½?ç½®ã??<br/>
		æ³¨æ??ï¼?Creator ä¸­ç???????¹ä????¨ä??å®?ä½??????¨ç???????¹ï??å­??????¹ç??å®?ä½?ä¸????å½±å?????
		@param point The anchor point of node or The x axis anchor of node.
		@param y The y axis anchor of node.
		
		@example 
		```js
		node.setAnchorPoint(cc.v2(1, 1));
		node.setAnchorPoint(1, 1);
		``` 
		*/
		setAnchorPoint(point: Vec2|number, y?: number): void;		
		/**
		!#en Set rotation by lookAt target point, normally used by Camera Node
		!#zh ???è¿?è§?å¯???®æ????¥è®¾ç½? rotationï¼?ä¸???¬ç?¨ä?? Camera Node ä¸?
		@param pos pos
		@param up default is (0,1,0) 
		*/
		lookAt(pos: Vec3, up?: Vec3): void;		
		/**
		!#en
		Get the local transform matrix (4x4), based on parent node coordinates
		!#zh è¿????å±???¨ç©º??´å?????ç³»ç????©é?µï????ºä????¶è????¹å?????ç³»ã??
		@param out The matrix object to be filled with data
		
		@example 
		```js
		let mat4 = cc.mat4();
		node.getLocalMatrix(mat4);
		``` 
		*/
		getLocalMatrix(out: Mat4): Mat4;		
		/**
		!#en
		Get the world transform matrix (4x4)
		!#zh è¿????ä¸????ç©ºé?´å?????ç³»ç????©é?µã??
		@param out The matrix object to be filled with data
		
		@example 
		```js
		let mat4 = cc.mat4();
		node.getWorldMatrix(mat4);
		``` 
		*/
		getWorldMatrix(out: Mat4): Mat4;		
		/**
		!#en
		Converts a Point to node (local) space coordinates.
		!#zh
		å°?ä¸?ä¸ªç?¹è½¬??¢å?°è????? (å±????) ç©ºé?´å?????ç³»ã??
		@param worldPoint worldPoint
		@param out out
		
		@example 
		```js
		var newVec2 = node.convertToNodeSpaceAR(cc.v2(100, 100));
		var newVec3 = node.convertToNodeSpaceAR(cc.v3(100, 100, 100));
		``` 
		*/
		convertToNodeSpaceAR<T extends cc.Vec2 | cc.Vec3>(worldPoint: T, out?: T): T;		
		/**
		!#en
		Converts a Point in node coordinates to world space coordinates.
		!#zh
		å°??????¹å?????ç³»ä?????ä¸?ä¸ªç?¹è½¬??¢å?°ä?????ç©ºé?´å?????ç³»ã??
		@param nodePoint nodePoint
		@param out out
		
		@example 
		```js
		var newVec2 = node.convertToWorldSpaceAR(cc.v2(100, 100));
		var newVec3 = node.convertToWorldSpaceAR(cc.v3(100, 100, 100));
		``` 
		*/
		convertToWorldSpaceAR<T extends cc.Vec2 | cc.Vec3>(nodePoint: T, out?: T): T;		
		/**
		!#en Converts a Point to node (local) space coordinates then add the anchor point position.
		So the return position will be related to the left bottom corner of the node's bounding box.
		This equals to the API behavior of cocos2d-x, you probably want to use convertToNodeSpaceAR instead
		!#zh å°?ä¸?ä¸ªç?¹è½¬??¢å?°è????? (å±????) ??????ç³»ï??å¹¶å??ä¸??????¹ç???????????<br/>
		ä¹?å°±æ?¯è¯´è¿???????????????¯ç?¸å¯¹äº??????¹å????´ç??å·¦ä??è§?????????????<br/>
		è¿?ä¸? API ???è®¾è®¡??¯ä¸ºäº???? cocos2d-x ä¸­è??ä¸ºä????´ï????´å???????µä??ä½???¯è?½é??è¦?ä½¿ç?? convertToNodeSpaceAR???
		@param worldPoint worldPoint
		
		@example 
		```js
		var newVec2 = node.convertToNodeSpace(cc.v2(100, 100));
		``` 
		*/
		convertToNodeSpace(worldPoint: Vec2): Vec2;		
		/**
		!#en Converts a Point related to the left bottom corner of the node's bounding box to world space coordinates.
		This equals to the API behavior of cocos2d-x, you probably want to use convertToWorldSpaceAR instead
		!#zh å°?ä¸?ä¸ªç?¸å¯¹äº??????¹å·¦ä¸?è§??????????ä½?ç½®è½¬??¢å?°ä?????ç©ºé?´å?????ç³»ã??
		è¿?ä¸? API ???è®¾è®¡??¯ä¸ºäº???? cocos2d-x ä¸­è??ä¸ºä????´ï????´å???????µä??ä½???¯è?½é??è¦?ä½¿ç?? convertToWorldSpaceAR
		@param nodePoint nodePoint
		
		@example 
		```js
		var newVec2 = node.convertToWorldSpace(cc.v2(100, 100));
		``` 
		*/
		convertToWorldSpace(nodePoint: Vec2): Vec2;		
		/**
		!#en
		Returns the matrix that transform the node's (local) space coordinates into the parent's space coordinates.<br/>
		The matrix is in Pixels.
		!#zh è¿????è¿?ä¸ªå???????¹ï??å±???¨ï?????ç©ºé?´å?????ç³»è½¬??¢æ????¶è????¹ç??ç©ºé?´å?????ç³»ç????©é?µã??è¿?ä¸ªç?©é?µä»¥???ç´?ä¸ºå??ä½????
		@param out The affine transform object to be filled with data
		
		@example 
		```js
		let affineTransform = cc.AffineTransform.create();
		node.getNodeToParentTransform(affineTransform);
		``` 
		*/
		getNodeToParentTransform(out?: AffineTransform): AffineTransform;		
		/**
		!#en
		Returns the matrix that transform the node's (local) space coordinates into the parent's space coordinates.<br/>
		The matrix is in Pixels.<br/>
		This method is AR (Anchor Relative).
		!#zh
		è¿????è¿?ä¸ªå???????¹ï??å±???¨ï?????ç©ºé?´å?????ç³»è½¬??¢æ????¶è????¹ç??ç©ºé?´å?????ç³»ç????©é?µã??<br/>
		è¿?ä¸ªç?©é?µä»¥???ç´?ä¸ºå??ä½????<br/>
		è¯¥æ?¹æ????ºä???????¹å????????
		@param out The affine transform object to be filled with data
		
		@example 
		```js
		let affineTransform = cc.AffineTransform.create();
		node.getNodeToParentTransformAR(affineTransform);
		``` 
		*/
		getNodeToParentTransformAR(out?: AffineTransform): AffineTransform;		
		/**
		!#en Returns the world affine transform matrix. The matrix is in Pixels.
		!#zh è¿?????????¹å?°ä???????????ç³»ç??ä»¿å???????¢ç?©é?µã????©é?µå??ä½???¯å??ç´????
		@param out The affine transform object to be filled with data
		
		@example 
		```js
		let affineTransform = cc.AffineTransform.create();
		node.getNodeToWorldTransform(affineTransform);
		``` 
		*/
		getNodeToWorldTransform(out?: AffineTransform): AffineTransform;		
		/**
		!#en
		Returns the world affine transform matrix. The matrix is in Pixels.<br/>
		This method is AR (Anchor Relative).
		!#zh
		è¿?????????¹å?°ä???????????ä»¿å???????¢ç?©é?µã????©é?µå??ä½???¯å??ç´????<br/>
		è¯¥æ?¹æ????ºä???????¹å????????
		@param out The affine transform object to be filled with data
		
		@example 
		```js
		let affineTransform = cc.AffineTransform.create();
		node.getNodeToWorldTransformAR(affineTransform);
		``` 
		*/
		getNodeToWorldTransformAR(out?: AffineTransform): AffineTransform;		
		/**
		!#en
		Returns the matrix that transform parent's space coordinates to the node's (local) space coordinates.<br/>
		The matrix is in Pixels. The returned transform is readonly and cannot be changed.
		!#zh
		è¿????å°???¶è????¹ç????????ç³»è½¬??¢æ???????¹ï??å±???¨ï?????ç©ºé?´å?????ç³»ç????©é?µã??<br/>
		è¯¥ç?©é?µä»¥???ç´?ä¸ºå??ä½????è¿?????????©é?µæ?¯å?ªè¯»???ï¼?ä¸???½æ?´æ?¹ã??
		@param out The affine transform object to be filled with data
		
		@example 
		```js
		let affineTransform = cc.AffineTransform.create();
		node.getParentToNodeTransform(affineTransform);
		``` 
		*/
		getParentToNodeTransform(out?: AffineTransform): AffineTransform;		
		/**
		!#en Returns the inverse world affine transform matrix. The matrix is in Pixels.
		!#en è¿????ä¸??????????ç³»å?°è????¹å?????ç³»ç???????©é?µã??
		@param out The affine transform object to be filled with data
		
		@example 
		```js
		let affineTransform = cc.AffineTransform.create();
		node.getWorldToNodeTransform(affineTransform);
		``` 
		*/
		getWorldToNodeTransform(out?: AffineTransform): AffineTransform;		
		/**
		!#en convenience methods which take a cc.Touch instead of cc.Vec2.
		!#zh å°?è§¦æ?¸ç?¹è½¬??¢æ????¬å?°å?????ç³»ä¸­ä½?ç½®ã??
		@param touch The touch object
		
		@example 
		```js
		var newVec2 = node.convertTouchToNodeSpace(touch);
		``` 
		*/
		convertTouchToNodeSpace(touch: Touch): Vec2;		
		/**
		!#en converts a cc.Touch (world coordinates) into a local coordinate. This method is AR (Anchor Relative).
		!#zh è½¬æ?¢ä??ä¸? cc.Touchï¼?ä¸??????????ï¼???°ä??ä¸ªå????¨å?????ï¼?è¯¥æ?¹æ????ºä???????¹å????????
		@param touch The touch object
		
		@example 
		```js
		var newVec2 = node.convertTouchToNodeSpaceAR(touch);
		``` 
		*/
		convertTouchToNodeSpaceAR(touch: Touch): Vec2;		
		/**
		!#en
		Returns a "local" axis aligned bounding box of the node. <br/>
		The returned box is relative only to its parent.
		!#zh è¿??????¶è????????ç³»ä?????è½´å??å¯¹é??????????´ç?????
		
		@example 
		```js
		var boundingBox = node.getBoundingBox();
		``` 
		*/
		getBoundingBox(): Rect;		
		/**
		!#en
		Returns a "world" axis aligned bounding box of the node.<br/>
		The bounding box contains self and active children's world bounding box.
		!#zh
		è¿?????????¹å?¨ä???????????ç³»ä?????å¯¹é??è½´å??????????´ç??ï¼?AABBï¼????<br/>
		è¯¥è¾¹æ¡??????«è?ªèº«???å·²æ??æ´»ç??å­??????¹ç??ä¸????è¾¹æ?????
		
		@example 
		```js
		var newRect = node.getBoundingBoxToWorld();
		``` 
		*/
		getBoundingBoxToWorld(): Rect;		
		/**
		!#en
		Adds a child to the node with z order and name.
		!#zh
		æ·»å??å­??????¹ï??å¹¶ä????¯ä»¥ä¿®æ?¹è¯¥?????¹ç?? å±???? Z é¡ºå????????å­????
		@param child A child node
		@param zIndex Z order for drawing priority. Please refer to zIndex property
		@param name A name to identify the node easily. Please refer to name property
		
		@example 
		```js
		node.addChild(newNode, 1, "node");
		``` 
		*/
		addChild(child: Node, zIndex?: number, name?: string): void;		
		/**
		!#en Stops all running actions and schedulers.
		!#zh ???æ­¢æ?????æ­???¨æ?­æ?¾ç????¨ä?????è®¡æ?¶å?¨ã??
		
		@example 
		```js
		node.cleanup();
		``` 
		*/
		cleanup(): void;		
		/**
		!#en Sorts the children array depends on children's zIndex and arrivalOrder,
		normally you won't need to invoke this function.
		!#zh ??¹æ?®å???????¹ç?? zIndex ??? arrivalOrder è¿?è¡????åº?ï¼?æ­?å¸¸æ????µä??å¼???????ä¸????è¦??????¨è????¨è??ä¸ªå?½æ?°ã?? 
		*/
		sortAllChildren(): void;		
		/**
		!#en
		Returns the displayed opacity of Node,
		the difference between displayed opacity and opacity is that displayed opacity is calculated based on opacity and parent node's opacity when cascade opacity enabled.
		!#zh
		??·å???????¹æ?¾ç¤º??????åº¦ï??
		??¾ç¤º??????åº¦å????????åº¦ä????´ç??ä¸????ä¹?å¤???¨ä??å½???¯ç?¨çº§è¿???????åº¦æ?¶ï??
		??¾ç¤º??????åº¦æ?¯å?ºä????ªèº«??????åº¦å????¶è????¹é?????åº¦è®¡ç®??????? 
		*/
		getDisplayedOpacity(): number;		
		/**
		!#en
		Returns the displayed color of Node,
		the difference between displayed color and color is that displayed color is calculated based on color and parent node's color when cascade color enabled.
		!#zh
		??·å???????¹ç????¾ç¤ºé¢???²ï??
		??¾ç¤ºé¢???²å??é¢???²ä????´ç??ä¸????ä¹?å¤???¨ä??å½???¯ç?¨çº§è¿?é¢???²æ?¶ï??
		??¾ç¤ºé¢???²æ?¯å?ºä????ªèº«é¢???²å????¶è????¹é????²è®¡ç®??????? 
		*/
		getDisplayedColor(): Color;		
		/** !#en Cascade opacity is removed from v2.0
		Indicate whether node's opacity value affect its child nodes, default value is true.
		!#zh ??????åº¦çº§????????½ä?? v2.0 å¼?å§?å·²ç§»???
		?????¹ç??ä¸???????åº¦å?¼æ?¯å?¦å½±?????¶å???????¹ï??é»?è®¤å?¼ä¸º true??? */
		cascadeOpacity: boolean;		
		/**
		!#en Cascade opacity is removed from v2.0
		Returns whether node's opacity value affect its child nodes.
		!#zh ??????åº¦çº§????????½ä?? v2.0 å¼?å§?å·²ç§»???
		è¿?????????¹ç??ä¸???????åº¦å?¼æ?¯å?¦å½±?????¶å???????¹ã?? 
		*/
		isCascadeOpacityEnabled(): boolean;		
		/**
		!#en Cascade opacity is removed from v2.0
		Enable or disable cascade opacity, if cascade enabled, child nodes' opacity will be the multiplication of parent opacity and its own opacity.
		!#zh ??????åº¦çº§????????½ä?? v2.0 å¼?å§?å·²ç§»???
		??¯ç?¨æ??ç¦???¨çº§è¿?ä¸???????åº¦ï??å¦????çº§è????¯ç?¨ï??å­??????¹ç??ä¸???????åº¦å????¯ç?¶ä????????åº¦ä??ä¸?å®???ªå·±???ä¸???????åº¦ã??
		@param cascadeOpacityEnabled cascadeOpacityEnabled 
		*/
		setCascadeOpacityEnabled(cascadeOpacityEnabled: boolean): void;		
		/**
		!#en Opacity modify RGB have been removed since v2.0
		Set whether color should be changed with the opacity value,
		useless in ccsg.Node, but this function is override in some class to have such behavior.
		!#zh ??????åº¦å½±???é¢???²é??ç½®å·²ç»?è¢«å??å¼?
		è®¾ç½®??´æ?¹é?????åº¦æ?¶æ?¯å?¦ä¿®??¹RGB??¼ï??
		@param opacityValue opacityValue 
		*/
		setOpacityModifyRGB(opacityValue: boolean): void;		
		/**
		!#en Opacity modify RGB have been removed since v2.0
		Get whether color should be changed with the opacity value.
		!#zh ??????åº¦å½±???é¢???²é??ç½®å·²ç»?è¢«å??å¼?
		??·å????´æ?¹é?????åº¦æ?¶æ?¯å?¦ä¿®??¹RGB??¼ã?? 
		*/
		isOpacityModifyRGB(): boolean;	
	}	
	/** !#en
	Class of private entities in Cocos Creator scenes.<br/>
	The PrivateNode is hidden in editor, and completely transparent to users.<br/>
	It's normally used as Node's private content created by components in parent node.<br/>
	So in theory private nodes are not children, they are part of the parent node.<br/>
	Private node have two important characteristics:<br/>
	1. It has the minimum z index and cannot be modified, because they can't be displayed over real children.<br/>
	2. The positioning of private nodes is also special, they will consider the left bottom corner of the parent node's bounding box as the origin of local coordinates.<br/>
	   In this way, they can be easily kept inside the bounding box.<br/>
	Currently, it's used by RichText component and TileMap component.
	!#zh
	Cocos Creator ??ºæ?¯ä¸­???ç§?????????¹ç±»???<br/>
	ç§?????????¹å?¨ç??è¾???¨ä¸­ä¸???¯è??ï¼?å¯¹ç?¨æ?·é????????<br/>
	???å¸¸ç??????????¹æ?¯è¢«ä¸?äº???¹æ?????ç»?ä»¶å??å»ºå?ºæ?¥ä??ä¸ºç?¶è????¹ç??ä¸???¨å?????å­???¨ç??ï¼????è®ºä????¥è¯´ï¼?å®?ä»¬ä????¯å???????¹ï???????¯ç?¶è????¹ç??ç»??????¨å?????<br/>
	ç§?????????¹æ??ä¸¤ä¸ª???å¸¸é??è¦??????¹æ?§ï??<br/>
	1. å®??????????å°????æ¸²æ?????åº???? Z è½´æ·±åº¦ï??å¹¶ä?????æ³?è¢«æ?´æ?¹ï?????ä¸ºå??ä»¬ä????½è¢«??¾ç¤º??¨å?¶ä??æ­?å¸¸å???????¹ä??ä¸????<br/>
	2. å®????å®?ä½?ä¹???¯ç?¹æ?????ï¼?å¯¹ä??ç§?????????¹æ?¥è¯´ï¼???¶è????¹å????´ç?????å·¦ä??è§???¯å?????å±???¨å?????ç³»å????¹ï??è¿?ä¸ªå????¹ç?¸å??äº???¶è????¹ç??ä½?ç½®å????»å???????¹ç?????ç§»ã??è¿???·ç??????????¹å?¯ä»¥æ¯?è¾?å®¹æ??è¢«æ?§å?¶å?¨å????´ç??ä¹?ä¸­ã??<br/>
	??®å????¨å?????ä¸­ï??RichText ??? TileMap ??½æ????¯è?½ç?????ç§?????????¹ã?? */
	export class PrivateNode extends Node {		
		/**
		
		@param name name 
		*/
		constructor(name?: string);	
	}	
	/** !#en
	cc.Scene is a subclass of cc.Node that is used only as an abstract concept.<br/>
	cc.Scene and cc.Node are almost identical with the difference that users can not modify cc.Scene manually.
	!#zh
	cc.Scene ??? cc.Node ???å­?ç±»ï??ä»?ä½?ä¸ºä??ä¸ªæ?½è±¡???æ¦?å¿µã??<br/>
	cc.Scene ??? cc.Node ?????¹ä?????ï¼???¨æ?·ä??åº???´æ?¥ä¿®??? cc.Scene??? */
	export class Scene extends Node {		
		/** !#en Indicates whether all (directly or indirectly) static referenced assets of this scene are releasable by default after scene unloading.
		!#zh ???ç¤ºè¯¥??ºæ?¯ä¸­??´æ?¥æ????´æ?¥é?????å¼???¨å?°ç????????èµ?æº???¯å?¦é??è®¤å?¨å?ºæ?¯å????¢å????ªå?¨é????¾ã?? */
		autoReleaseAssets: boolean;	
	}	
	/** !#en
	Scheduler is responsible of triggering the scheduled callbacks.<br/>
	You should not use NSTimer. Instead use this class.<br/>
	<br/>
	There are 2 different types of callbacks (selectors):<br/>
	    - update callback: the 'update' callback will be called every frame. You can customize the priority.<br/>
	    - custom callback: A custom callback will be called every frame, or with a custom interval of time<br/>
	<br/>
	The 'custom selectors' should be avoided when possible. It is faster,
	and consumes less memory to use the 'update callback'. *
	!#zh
	Scheduler ??¯è??è´?è§¦å?????è°???½æ?°ç??ç±»ã??<br/>
	???å¸¸æ????µä??ï¼?å»ºè®®ä½¿ç?? cc.director.getScheduler() ??¥è?·å??ç³»ç??å®???¶å?¨ã??<br/>
	???ä¸¤ç??ä¸????ç±»å?????å®???¶å?¨ï??<br/>
	    - update å®???¶å?¨ï??æ¯?ä¸?å¸§é?½ä??è§¦å???????¨å?¯ä»¥??ªå??ä¹?ä¼????çº§ã??<br/>
	    - ??ªå??ä¹?å®???¶å?¨ï????ªå??ä¹?å®???¶å?¨å?¯ä»¥æ¯?ä¸?å¸§æ???????ªå??ä¹??????¶é?´é?´é??è§¦å?????<br/>
	å¦????å¸????æ¯?å¸§é?½è§¦???ï¼?åº?è¯¥ä½¿??? update å®???¶å?¨ï??ä½¿ç?? update å®???¶å?¨æ?´å¿«ï¼????ä¸?æ¶??????´å????????å­???? */
	export class Scheduler {		
		/**
		!#en This method should be called for any target which needs to schedule tasks, and this method should be called before any scheduler API usage.
		This method will add a `_id` property if it doesn't exist.
		!#zh ä»»ä?????è¦???? Scheduler ç®¡ç??ä»»å?¡ç??å¯¹è±¡ä¸»ä????½å??è¯¥è????¨è??ä¸ªæ?¹æ??ï¼?å¹¶ä??åº?è¯¥å?¨è????¨ä»»ä½? Scheduler API ä¹????è°???¨è??ä¸ªæ?¹æ?????
		è¿?ä¸ªæ?¹æ??ä¼?ç»?å¯¹è±¡æ·»å??ä¸?ä¸? `_id` å±???§ï??å¦????è¿?ä¸ªå????§ä??å­???¨ç??è¯????
		@param target target 
		*/
		enableForTarget(target: any): void;		
		/**
		!#en
		Modifies the time of all scheduled callbacks.<br/>
		You can use this property to create a 'slow motion' or 'fast forward' effect.<br/>
		Default is 1.0. To create a 'slow motion' effect, use values below 1.0.<br/>
		To create a 'fast forward' effect, use values higher than 1.0.<br/>
		Noteï¼?It will affect EVERY scheduled selector / action.
		!#zh
		è®¾ç½®??¶é?´é?´é?????ç¼©æ?¾æ??ä¾????<br/>
		??¨å?¯ä»¥ä½¿ç?¨è??ä¸ªæ?¹æ????¥å??å»ºä??ä¸? ???slow motionï¼???¢å?¨ä??ï¼???? ??? ???fast forwardï¼?å¿«è??ï¼???? ????????????<br/>
		é»?è®¤æ?? 1.0???è¦????å»ºä??ä¸? ???slow motionï¼???¢å?¨ä??ï¼???? ??????,ä½¿ç?¨å?¼ä??äº? 1.0???<br/>
		è¦?ä½¿ç?? ???fast forwardï¼?å¿«è??ï¼???? ??????ï¼?ä½¿ç?¨å?¼å¤§äº? 1.0???<br/>
		æ³¨æ??ï¼?å®?å½±å??è¯? Scheduler ä¸?ç®¡ç???????????å®???¶å?¨ã??
		@param timeScale timeScale 
		*/
		setTimeScale(timeScale: number): void;		
		/**
		!#en Returns time scale of scheduler.
		!#zh ??·å????¶é?´é?´é?????ç¼©æ?¾æ??ä¾???? 
		*/
		getTimeScale(): number;		
		/**
		!#en 'update' the scheduler. (You should NEVER call this method, unless you know what you are doing.)
		!#zh update è°?åº¦å?½æ?°ã??(ä¸?åº?è¯¥ç?´æ?¥è????¨è??ä¸ªæ?¹æ??ï¼???¤é??å®???¨ä??è§?è¿?ä¹???????ç»????)
		@param dt delta time 
		*/
		update(dt: number): void;		
		/**
		!#en
		<p>
		  The scheduled method will be called every 'interval' seconds.<br/>
		  If paused is YES, then it won't be called until it is resumed.<br/>
		  If 'interval' is 0, it will be called every frame, but if so, it recommended to use 'scheduleUpdateForTarget:' instead.<br/>
		  If the callback function is already scheduled, then only the interval parameter will be updated without re-scheduling it again.<br/>
		  repeat let the action be repeated repeat + 1 times, use cc.macro.REPEAT_FOREVER to let the action run continuously<br/>
		  delay is the amount of time the action will wait before it'll start<br/>
		</p>
		!#zh
		???å®????è°???½æ?°ï??è°???¨å¯¹è±¡ç??ä¿¡æ?¯æ?¥æ·»???ä¸?ä¸ªæ?°ç??å®???¶å?¨ã??<br/>
		å¦???? paused ??¼ä¸º trueï¼????ä¹???´å?? resume è¢«è????¨æ??å¼?å§?è®¡æ?¶ã??<br/>
		å½???¶é?´é?´é??è¾¾å?°æ??å®???¼æ?¶ï??è®¾ç½®??????è°???½æ?°å??ä¼?è¢«è????¨ã??<br/>
		å¦???? interval ??¼ä¸º 0ï¼????ä¹????è°???½æ?°æ??ä¸?å¸§é?½ä??è¢«è????¨ï??ä½?å¦??????¯è????·ï??
		å»ºè®®ä½¿ç?? scheduleUpdateForTarget ä»???¿ã??<br/>
		å¦???????è°???½æ?°å·²ç»?è¢«å????¶å?¨ä½¿??¨ï?????ä¹???ªä????´æ?°ä?????å®???¶å?¨ç????¶é?´é?´é???????°ï??ä¸?ä¼?è®¾ç½®??°ç??å®???¶å?¨ã??<br/>
		repeat ??¼å?¯ä»¥è®©å????¶å?¨è§¦??? repeat + 1 æ¬¡ï??ä½¿ç?? cc.macro.REPEAT_FOREVER
		??¯ä»¥è®©å????¶å?¨ä????´å¾ª??¯è§¦??????<br/>
		delay ??¼æ??å®?å»¶è????¶é?´ï??å®???¶å?¨ä????¨å»¶è¿????å®??????¶é?´ä?????å¼?å§?è®¡æ?¶ã??
		@param callback callback
		@param target target
		@param interval interval
		@param repeat repeat
		@param delay delay
		@param paused paused
		
		@example 
		```js
		//register a schedule to scheduler
		cc.director.getScheduler().schedule(callback, this, interval, !this._isRunning);
		
		``` 
		*/
		schedule(callback: Function, target: any, interval: number, repeat: number, delay: number, paused?: boolean): void;
		schedule(callback: Function, target: any, interval: number, paused?: boolean): void;		
		/**
		!#en
		Schedules the update callback for a given target,
		During every frame after schedule started, the "update" function of target will be invoked.
		!#zh
		ä½¿ç?¨æ??å®????ä¼????çº§ä¸º???å®????å¯¹è±¡è®¾ç½® update å®???¶å?¨ã??
		update å®???¶å?¨æ??ä¸?å¸§é?½ä??è¢«è§¦???ï¼?è§¦å????¶è?ªå?¨è????¨æ??å®?å¯¹è±¡??? "update" ??½æ?°ã??
		ä¼????çº§ç????¼è??ä½?ï¼?å®???¶å?¨è¢«è§¦å?????è¶???©ã??
		@param target target
		@param priority priority
		@param paused paused 
		*/
		scheduleUpdate(target: any, priority: number, paused: boolean): void;		
		/**
		!#en
		Unschedules a callback for a callback and a given target.
		If you want to unschedule the "update", use `unscheduleUpdate()`
		!#zh
		???æ¶????å®?å¯¹è±¡å®???¶å?¨ã??
		å¦???????è¦????æ¶? update å®???¶å?¨ï??è¯·ä½¿??? unscheduleUpdate()???
		@param callback The callback to be unscheduled
		@param target The target bound to the callback. 
		*/
		unschedule(callback: Function, target: any): void;		
		/**
		!#en Unschedules the update callback for a given target.
		!#zh ???æ¶????å®?å¯¹è±¡??? update å®???¶å?¨ã??
		@param target The target to be unscheduled. 
		*/
		unscheduleUpdate(target: any): void;		
		/**
		!#en
		Unschedules all scheduled callbacks for a given target.
		This also includes the "update" callback.
		!#zh ???æ¶????å®?å¯¹è±¡?????????å®???¶å?¨ï???????? update å®???¶å?¨ã??
		@param target The target to be unscheduled. 
		*/
		unscheduleAllForTarget(target: any): void;		
		/**
		!#en
		Unschedules all scheduled callbacks from all targets including the system callbacks.<br/>
		You should NEVER call this method, unless you know what you are doing.
		!#zh
		???æ¶???????å¯¹è±¡?????????å®???¶å?¨ï???????¬ç³»ç»?å®???¶å?¨ã??<br/>
		ä¸?è¦?è°???¨æ­¤??½æ?°ï????¤é??ä½?ç¡®å??ä½???¨å??ä»?ä¹???? 
		*/
		unscheduleAll(): void;		
		/**
		!#en
		Unschedules all callbacks from all targets with a minimum priority.<br/>
		You should only call this with `PRIORITY_NON_SYSTEM_MIN` or higher.
		!#zh
		???æ¶???????ä¼????çº§ç????¼å¤§äº????å®?ä¼????çº§ç??å®???¶å?¨ã??<br/>
		ä½?åº?è¯¥å?ªå??æ¶?ä¼????çº§ç????¼å¤§äº? PRIORITY_NON_SYSTEM_MIN ???å®???¶å?¨ã??
		@param minPriority The minimum priority of selector to be unscheduled. Which means, all selectors which
		       priority is higher than minPriority will be unscheduled. 
		*/
		unscheduleAllWithMinPriority(minPriority: number): void;		
		/**
		!#en Checks whether a callback for a given target is scheduled.
		!#zh æ£???¥æ??å®???????è°???½æ?°å?????è°?å¯¹è±¡ç»??????¯å?¦å????¨å????¶å?¨ã??
		@param callback The callback to check.
		@param target The target of the callback. 
		*/
		isScheduled(callback: Function, target: any): boolean;		
		/**
		!#en
		Pause all selectors from all targets.<br/>
		You should NEVER call this method, unless you know what you are doing.
		!#zh
		????????????å¯¹è±¡?????????å®???¶å?¨ã??<br/>
		ä¸?è¦?è°???¨è??ä¸ªæ?¹æ??ï¼???¤é??ä½???¥é??ä½?æ­???¨å??ä»?ä¹???? 
		*/
		pauseAllTargets(): void;		
		/**
		!#en
		Pause all selectors from all targets with a minimum priority. <br/>
		You should only call this with kCCPriorityNonSystemMin or higher.
		!#zh
		????????????ä¼????çº§ç????¼å¤§äº????å®?ä¼????çº§ç??å®???¶å?¨ã??<br/>
		ä½?åº?è¯¥å?ªæ?????ä¼????çº§ç????¼å¤§äº? PRIORITY_NON_SYSTEM_MIN ???å®???¶å?¨ã??
		@param minPriority minPriority 
		*/
		pauseAllTargetsWithMinPriority(minPriority: number): void;		
		/**
		!#en
		Resume selectors on a set of targets.<br/>
		This can be useful for undoing a call to pauseAllCallbacks.
		!#zh
		??¢å?????å®???°ç??ä¸­æ?????å¯¹è±¡???å®???¶å?¨ã??<br/>
		è¿?ä¸ªå?½æ?°æ?? pauseAllCallbacks ?????????ä½????
		@param targetsToResume targetsToResume 
		*/
		resumeTargets(targetsToResume: any[]): void;		
		/**
		!#en
		Pauses the target.<br/>
		All scheduled selectors/update for a given target won't be 'ticked' until the target is resumed.<br/>
		If the target is not present, nothing happens.
		!#zh
		?????????å®?å¯¹è±¡???å®???¶å?¨ã??<br/>
		???å®?å¯¹è±¡?????????å®???¶å?¨é?½ä??è¢«æ????????<br/>
		å¦???????å®????å¯¹è±¡æ²¡æ??å®???¶å?¨ï??ä»?ä¹?ä¹?ä¸?ä¼??????????
		@param target target 
		*/
		pauseTarget(target: any): void;		
		/**
		!#en
		Resumes the target.<br/>
		The 'target' will be unpaused, so all schedule selectors/update will be 'ticked' again.<br/>
		If the target is not present, nothing happens.
		!#zh
		??¢å?????å®?å¯¹è±¡?????????å®???¶å?¨ã??<br/>
		???å®?å¯¹è±¡?????????å®???¶å?¨å??ç»§ç»­å·¥ä?????<br/>
		å¦???????å®????å¯¹è±¡æ²¡æ??å®???¶å?¨ï??ä»?ä¹?ä¹?ä¸?ä¼??????????
		@param target target 
		*/
		resumeTarget(target: any): void;		
		/**
		!#en Returns whether or not the target is paused.
		!#zh è¿???????å®?å¯¹è±¡???å®???¶å?¨æ?¯å?¦æ?????äº????
		@param target target 
		*/
		isTargetPaused(target: any): boolean;		
		/** !#en Priority level reserved for system services.
		!#zh ç³»ç???????¡ç??ä¼????çº§ã?? */
		static PRIORITY_SYSTEM: number;		
		/** !#en Minimum priority level for user scheduling.
		!#zh ??¨æ?·è??åº¦æ??ä½?ä¼????çº§ã?? */
		static PRIORITY_NON_SYSTEM: number;	
	}	
	/** !#en cc.VideoPlayer is a component for playing videos, you can use it for showing videos in your game. Because different platforms have different authorization, API and control methods for VideoPlayer component. And have not yet formed a unified standard, only Web, iOS, and Android platforms are currently supported.
	!#zh Video ç»?ä»¶ï????¨ä????¨æ¸¸???ä¸­æ?­æ?¾è??é¢??????±ä??ä¸????å¹³å?°å¯¹äº? VideoPlayer ç»?ä»¶ç???????????API?????§å?¶æ?¹å????½ä?????ï¼?è¿?æ²¡æ??å½¢æ??ç»?ä¸??????????ï¼????ä»¥ç?®å????ªæ?¯æ?? Web???iOS ??? Android å¹³å?°ã?? */
	export class VideoPlayer extends Component {		
		/** !#en The resource type of videoplayer, REMOTE for remote url and LOCAL for local file path.
		!#zh è§?é¢???¥æ??ï¼?REMOTE è¡¨ç¤ºè¿?ç¨?è§?é¢? URLï¼?LOCAL è¡¨ç¤º??¬å?°è??é¢???°å????? */
		resourceType: VideoPlayer.ResourceType;		
		/** !#en The remote URL of video.
		!#zh è¿?ç¨?è§?é¢???? URL */
		remoteURL: string;		
		/** !#en The local video full path.
		!#zh ??¬å?°è??é¢???? URL */
		clip: string;		
		/** !#en The current playback time of the now playing item in seconds, you could also change the start playback time.
		!#zh ???å®?è§?é¢?ä»?ä»?ä¹???¶é?´ç?¹å??å§???­æ?¾ï?????ä½???¯ç??ï¼?ä¹???¯ä»¥??¨æ?¥è?·å??å½????è§?é¢???­æ?¾ç????¶é?´è??åº¦ã?? */
		currentTime: number;		
		/** !#en The volume of the video.
		!#zh è§?é¢??????³é??ï¼?0.0 ~ 1.0ï¼? */
		volume: number;		
		/** !#en Mutes the VideoPlayer. Mute sets the volume=0, Un-Mute restore the original volume.
		!#zh ??¯å?¦é????³è??é¢?????????³æ?¶è®¾ç½®é?³é??ä¸? 0ï¼????æ¶??????³æ?¯æ?¢å???????¥ç????³é????? */
		mute: boolean;		
		/** !#en Whether keep the aspect ration of the original video.
		!#zh ??¯å?¦ä?????è§?é¢??????¥ç??å®½é??æ¯? */
		keepAspectRatio: boolean;		
		/** !#en Whether play video in fullscreen mode.
		!#zh ??¯å?¦å?¨å????­æ?¾è??é¢? */
		isFullscreen: boolean;		
		/** !#en Always below the game view (only useful on Web. Note: The specific effects are not guaranteed to be consistent, depending on whether each browser supports or restricts).
		!#zh æ°¸è????¨æ¸¸???è§???¾æ??åº?å±?ï¼?è¿?ä¸ªå????§å?ªæ????? Web å¹³å?°ä??????????????æ³¨æ??ï¼???·ä???????????æ³?ä¿?è¯?ä¸???´ï??è·????ä¸ªæ??è§???¨æ?¯å?¦æ?¯æ??ä¸??????¶æ????³ï?? */
		stayOnBottom: boolean;		
		/** !#en the video player's callback, it will be triggered when certain event occurs, like: playing, paused, stopped and completed.
		!#zh è§?é¢???­æ?¾å??è°???½æ?°ï??è¯¥å??è°???½æ?°ä????¨ç?¹å???????µè¢«è§¦å??ï¼?æ¯?å¦???­æ?¾ä¸­ï¼??????¶ï?????æ­¢å??å®??????­æ?¾ã?? */
		videoPlayerEvent: Component.EventHandler[];		
		/**
		!#en If a video is paused, call this method could resume playing. If a video is stopped, call this method to play from scratch.
		!#zh å¦????è§?é¢?è¢«æ???????­æ?¾ä??ï¼?è°???¨è??ä¸ªæ?¥å????¯ä»¥ç»§ç»­??­æ?¾ã??å¦????è§?é¢?è¢«å??æ­¢æ?­æ?¾ä??ï¼?è°???¨è??ä¸ªæ?¥å????¯ä»¥ä»?å¤´å??å§???­æ?¾ã?? 
		*/
		play(): void;		
		/**
		!#en If a video is paused, call this method to resume playing.
		!#zh å¦????ä¸?ä¸ªè??é¢???­æ?¾è¢«????????­æ?¾ä??ï¼?è°???¨è??ä¸ªæ?¥å????¯ä»¥ç»§ç»­??­æ?¾ã?? 
		*/
		resume(): void;		
		/**
		!#en If a video is playing, call this method to pause playing.
		!#zh å¦????ä¸?ä¸ªè??é¢?æ­???¨æ?­æ?¾ï??è°???¨è??ä¸ªæ?¥å????¯ä»¥????????­æ?¾ã?? 
		*/
		pause(): void;		
		/**
		!#en If a video is playing, call this method to stop playing immediately.
		!#zh å¦????ä¸?ä¸ªè??é¢?æ­???¨æ?­æ?¾ï??è°???¨è??ä¸ªæ?¥å????¯ä»¥ç«?é©¬å??æ­¢æ?­æ?¾ã?? 
		*/
		stop(): void;		
		/**
		!#en Gets the duration of the video
		!#zh ??·å??è§?é¢????ä»¶ç????­æ?¾æ?»æ?¶é?? 
		*/
		getDuration(): number;		
		/**
		!#en Determine whether video is playing or not.
		!#zh ??¤æ?­å?????è§?é¢???¯å?¦å??äº???­æ?¾ç?¶æ?? 
		*/
		isPlaying(): boolean;		
		/**
		!#en if you don't need the VideoPlayer and it isn't in any running Scene, you should
		call the destroy method on this component or the associated node explicitly.
		Otherwise, the created DOM element won't be removed from web page.
		!#zh
		å¦????ä½?ä¸????ä½¿ç?? VideoPlayerï¼?å¹¶ä??ç»?ä»¶æ?ªæ·»?????°å?ºæ?¯ä¸­ï¼????ä¹?ä½?å¿?é¡»æ????¨å¯¹ç»?ä»¶æ???????¨è????¹è????? destroy???
		è¿???·æ????½ç§»??¤ç??é¡µä????? DOM ?????¹ï????¿å?? Web å¹³å?°å??å­?æ³???²ã??
		
		@example 
		```js
		videoplayer.node.parent = null;  // or  videoplayer.node.removeFromParent(false);
		// when you don't need videoplayer anymore
		videoplayer.node.destroy();
		``` 
		*/
		destroy(): boolean;	
	}	
	/** Class for particle asset handling. */
	export class ParticleAsset extends Asset {	
	}	
	/** Particle System base class. <br/>
	Attributes of a Particle System:<br/>
	 - emmision rate of the particles<br/>
	 - Gravity Mode (Mode A): <br/>
	 - gravity <br/>
	 - direction <br/>
	 - speed +-  variance <br/>
	 - tangential acceleration +- variance<br/>
	 - radial acceleration +- variance<br/>
	 - Radius Mode (Mode B):      <br/>
	 - startRadius +- variance    <br/>
	 - endRadius +- variance      <br/>
	 - rotate +- variance         <br/>
	 - Properties common to all modes: <br/>
	 - life +- life variance      <br/>
	 - start spin +- variance     <br/>
	 - end spin +- variance       <br/>
	 - start size +- variance     <br/>
	 - end size +- variance       <br/>
	 - start color +- variance    <br/>
	 - end color +- variance      <br/>
	 - life +- variance           <br/>
	 - blending function          <br/>
	 - texture                    <br/>
	<br/>
	cocos2d also supports particles generated by Particle Designer (http://particledesigner.71squared.com/).<br/>
	'Radius Mode' in Particle Designer uses a fixed emit rate of 30 hz. Since that can't be guarateed in cocos2d,  <br/>
	cocos2d uses a another approach, but the results are almost identical.<br/>
	cocos2d supports all the variables used by Particle Designer plus a bit more:  <br/>
	 - spinning particles (supported when using ParticleSystem)       <br/>
	 - tangential acceleration (Gravity mode)                               <br/>
	 - radial acceleration (Gravity mode)                                   <br/>
	 - radius direction (Radius mode) (Particle Designer supports outwards to inwards direction only) <br/>
	It is possible to customize any of the above mentioned properties in runtime. Example:   <br/> */
	export class ParticleSystem extends RenderComponent implements BlendFunc {		
		/** !#en Play particle in edit mode.
		!#zh ??¨ç??è¾???¨æ¨¡å¼?ä¸?é¢?è§?ç²?å­?ï¼???¯ç?¨å?????ä¸­ç??å­???¶ï??ç²?å­?å°???ªå?¨æ?­æ?¾ã?? */
		preview: boolean;		
		/** !#en
		If set custom to true, then use custom properties insteadof read particle file.
		!#zh ??¯å?¦è?ªå??ä¹?ç²?å­?å±???§ã?? */
		custom: boolean;		
		/** !#en The plist file.
		!#zh plist ??¼å?????ç²?å­????ç½®æ??ä»¶ã?? */
		file: ParticleAsset;		
		/** !#en SpriteFrame used for particles display
		!#zh ??¨ä??ç²?å­??????°ç?? SpriteFrame */
		spriteFrame: SpriteFrame;		
		/** !#en Texture of Particle System, readonly, please use spriteFrame to setup new texture???
		!#zh ç²?å­?è´´å?¾ï????ªè¯»å±???§ï??è¯·ä½¿??? spriteFrame å±???§æ?¥æ?¿æ?¢è´´??¾ã?? */
		texture: string;		
		/** !#en Current quantity of particles that are being simulated.
		!#zh å½??????­æ?¾ç??ç²?å­???°é????? */
		particleCount: number;		
		/** !#en Indicate whether the system simulation have stopped.
		!#zh ???ç¤ºç??å­???­æ?¾æ?¯å?¦å??æ¯???? */
		stopped: boolean;		
		/** !#en If set to true, the particle system will automatically start playing on onLoad.
		!#zh å¦????è®¾ç½®ä¸? true è¿?è¡???¶ä????ªå?¨å??å°?ç²?å­???? */
		playOnLoad: boolean;		
		/** !#en Indicate whether the owner node will be auto-removed when it has no particles left.
		!#zh ç²?å­???­æ?¾å??æ¯??????ªå?¨é??æ¯??????¨ç???????¹ã?? */
		autoRemoveOnFinish: boolean;		
		/** !#en Indicate whether the particle system is activated.
		!#zh ??¯å?¦æ??æ´»ç??å­???? */
		active: boolean;		
		/** !#en Maximum particles of the system.
		!#zh ç²?å­????å¤§æ?°é????? */
		totalParticles: number;		
		/** !#en How many seconds the emitter wil run. -1 means 'forever'.
		!#zh ???å°???¨ç??å­???¶é?´ï?????ä½?ç§?ï¼?-1è¡¨ç¤º???ç»­å??å°???? */
		duration: number;		
		/** !#en Emission rate of the particles.
		!#zh æ¯?ç§????å°????ç²?å­???°ç?®ã?? */
		emissionRate: number;		
		/** !#en Life of each particle setter.
		!#zh ç²?å­????è¿?è¡???¶é?´ã?? */
		life: number;		
		/** !#en Variation of life.
		!#zh ç²?å­????è¿?è¡???¶é?´å??????????´ã?? */
		lifeVar: number;		
		/** !#en Start color of each particle.
		!#zh ç²?å­????å§?é¢???²ã?? */
		startColor: Color;		
		/** !#en Variation of the start color.
		!#zh ç²?å­????å§?é¢???²å??????????´ã?? */
		startColorVar: Color;		
		/** !#en Ending color of each particle.
		!#zh ç²?å­?ç»????é¢???²ã?? */
		endColor: Color;		
		/** !#en Variation of the end color.
		!#zh ç²?å­?ç»????é¢???²å??????????´ã?? */
		endColorVar: Color;		
		/** !#en Angle of each particle setter.
		!#zh ç²?å­?è§?åº¦ã?? */
		angle: number;		
		/** !#en Variation of angle of each particle setter.
		!#zh ç²?å­?è§?åº¦å??????????´ã?? */
		angleVar: number;		
		/** !#en Start size in pixels of each particle.
		!#zh ç²?å­???????å§?å¤§å????? */
		startSize: number;		
		/** !#en Variation of start size in pixels.
		!#zh ç²?å­????å§?å¤§å????????????????´ã?? */
		startSizeVar: number;		
		/** !#en End size in pixels of each particle.
		!#zh ç²?å­?ç»??????¶ç??å¤§å????? */
		endSize: number;		
		/** !#en Variation of end size in pixels.
		!#zh ç²?å­?ç»????å¤§å????????????????´ã?? */
		endSizeVar: number;		
		/** !#en Start angle of each particle.
		!#zh ç²?å­?å¼?å§???ªæ??è§?åº¦ã?? */
		startSpin: number;		
		/** !#en Variation of start angle.
		!#zh ç²?å­?å¼?å§???ªæ??è§?åº¦å??????????´ã?? */
		startSpinVar: number;		
		/** !#en End angle of each particle.
		!#zh ç²?å­?ç»??????ªæ??è§?åº¦ã?? */
		endSpin: number;		
		/** !#en Variation of end angle.
		!#zh ç²?å­?ç»??????ªæ??è§?åº¦å??????????´ã?? */
		endSpinVar: number;		
		/** !#en Source position of the emitter.
		!#zh ???å°???¨ä??ç½®ã?? */
		sourcePos: Vec2;		
		/** !#en Variation of source position.
		!#zh ???å°???¨ä??ç½®ç?????????????´ã??ï¼?æ¨ªå?????çºµå??ï¼? */
		posVar: Vec2;		
		/** !#en Particles movement type.
		!#zh ç²?å­?ä½?ç½®ç±»?????? */
		positionType: ParticleSystem.PositionType;		
		/** !#en Particles emitter modes.
		!#zh ???å°???¨ç±»?????? */
		emitterMode: ParticleSystem.EmitterMode;		
		/** !#en Gravity of the emitter.
		!#zh ????????? */
		gravity: Vec2;		
		/** !#en Speed of the emitter.
		!#zh ???åº¦ã?? */
		speed: number;		
		/** !#en Variation of the speed.
		!#zh ???åº¦å??????????´ã?? */
		speedVar: number;		
		/** !#en Tangential acceleration of each particle. Only available in 'Gravity' mode.
		!#zh æ¯?ä¸ªç??å­????????????????åº¦ï????³å????´ä??????????¹å???????????åº¦ï????ªæ????¨é?????æ¨¡å??ä¸???¯ç?¨ã?? */
		tangentialAccel: number;		
		/** !#en Variation of the tangential acceleration.
		!#zh æ¯?ä¸ªç??å­????????????????åº¦å??????????´ã?? */
		tangentialAccelVar: number;		
		/** !#en Acceleration of each particle. Only available in 'Gravity' mode.
		!#zh ç²?å­?å¾??????????åº¦ï????³å¹³è¡?äº?????????¹å???????????åº¦ï????ªæ????¨é?????æ¨¡å??ä¸???¯ç?¨ã?? */
		radialAccel: number;		
		/** !#en Variation of the radial acceleration.
		!#zh ç²?å­?å¾??????????åº¦å??????????´ã?? */
		radialAccelVar: number;		
		/** !#en Indicate whether the rotation of each particle equals to its direction. Only available in 'Gravity' mode.
		!#zh æ¯?ä¸ªç??å­???????è½¬æ?¯å?¦ç??äº???¶æ?¹å??ï¼???ªæ????¨é?????æ¨¡å??ä¸???¯ç?¨ã?? */
		rotationIsDir: boolean;		
		/** !#en Starting radius of the particles. Only available in 'Radius' mode.
		!#zh ???å§????å¾?ï¼?è¡¨ç¤ºç²?å­???ºç????¶ç?¸å¯¹???å°???¨ç??è·?ç¦»ï????ªæ????¨å??å¾?æ¨¡å??ä¸???¯ç?¨ã?? */
		startRadius: number;		
		/** !#en Variation of the starting radius.
		!#zh ???å§????å¾????????????´ã?? */
		startRadiusVar: number;		
		/** !#en Ending radius of the particles. Only available in 'Radius' mode.
		!#zh ç»???????å¾?ï¼???ªæ????¨å??å¾?æ¨¡å??ä¸???¯ç?¨ã?? */
		endRadius: number;		
		/** !#en Variation of the ending radius.
		!#zh ç»???????å¾????????????´ã?? */
		endRadiusVar: number;		
		/** !#en Number of degress to rotate a particle around the source pos per second. Only available in 'Radius' mode.
		!#zh ç²?å­?æ¯?ç§???´ç??èµ·å????¹ç?????è½¬è??åº¦ï????ªæ????¨å??å¾?æ¨¡å??ä¸???¯ç?¨ã?? */
		rotatePerS: number;		
		/** !#en Variation of the degress to rotate a particle around the source pos per second.
		!#zh ç²?å­?æ¯?ç§???´ç??èµ·å????¹ç?????è½¬è??åº¦å??????????´ã?? */
		rotatePerSVar: number;		
		/** !#en The Particle emitter lives forever.
		!#zh è¡¨ç¤º???å°???¨æ°¸ä¹?å­???? */
		static DURATION_INFINITY: number;		
		/** !#en The starting size of the particle is equal to the ending size.
		!#zh è¡¨ç¤ºç²?å­????èµ·å??å¤§å??ç­?äº?ç»????å¤§å????? */
		static START_SIZE_EQUAL_TO_END_SIZE: number;		
		/** !#en The starting radius of the particle is equal to the ending radius.
		!#zh è¡¨ç¤ºç²?å­????èµ·å?????å¾?ç­?äº?ç»???????å¾???? */
		static START_RADIUS_EQUAL_TO_END_RADIUS: number;		
		/**
		!#en Stop emitting particles. Running particles will continue to run until they die.
		!#zh ???æ­¢å??å°???¨å??å°?ç²?å­?ï¼????å°???ºå?»ç??ç²?å­?å°?ç»§ç»­è¿?è¡?ï¼???´è?³ç??å­??????½ç????????
		
		@example 
		```js
		// stop particle system.
		myParticleSystem.stopSystem();
		``` 
		*/
		stopSystem(): void;		
		/**
		!#en Kill all living particles.
		!#zh ???æ­»æ?????å­???¨ç??ç²?å­?ï¼???¶å???????°å?¯å?¨ç??å­????å°???¨ã??
		
		@example 
		```js
		// play particle system.
		myParticleSystem.resetSystem();
		``` 
		*/
		resetSystem(): void;		
		/**
		!#en Whether or not the system is full.
		!#zh ???å°???¨ä¸­ç²?å­???¯å?¦å¤§äº?ç­?äº?è®¾ç½®?????»ç??å­???°é????? 
		*/
		isFull(): boolean;		
		/**
		!#en Sets a new texture with a rect. The rect is in texture position and size.
		Please use spriteFrame property instead, this function is deprecated since v1.9
		!#zh è®¾ç½®ä¸?å¼???°è´´??¾å????³è???????©å½¢???
		è¯·ç?´æ?¥è®¾ç½? spriteFrame å±???§ï??è¿?ä¸ªå?½æ?°ä?? v1.9 ?????¬å??å§?å·²ç??è¢«å??å¼?
		@param texture texture
		@param rect rect 
		*/
		setTextureWithRect(texture: Texture2D, rect: Rect): void;		
		/** !#en specify the source Blend Factor, this will generate a custom material object, please pay attention to the memory cost.
		!#zh ???å®??????¾ç??æ··å??æ¨¡å??ï¼?è¿?ä¼???????ä¸?ä¸ªæ?°ç?????è´¨å¯¹è±¡ï??æ³¨æ??è¿?å¸¦æ?¥ç??å¼???? */
		srcBlendFactor: macro.BlendFactor;		
		/** !#en specify the destination Blend Factor.
		!#zh ???å®???®æ?????æ··å??æ¨¡å?? */
		dstBlendFactor: macro.BlendFactor;	
	}	
	/** cc.TMXLayerInfo contains the information about the layers like:
	- Layer name
	- Layer size
	- Layer opacity at creation time (it can be modified at runtime)
	- Whether the layer is visible (if it's not visible, then the CocosNode won't be created)
	This information is obtained from the TMX file. */
	export class TMXLayerInfo {		
		/** Properties of the layer info. */
		properties: any;	
	}	
	/** cc.TMXImageLayerInfo contains the information about the image layers.
	This information is obtained from the TMX file. */
	export class TMXImageLayerInfo {	
	}	
	/** <p>cc.TMXObjectGroupInfo contains the information about the object group like:
	- group name
	- group size
	- group opacity at creation time (it can be modified at runtime)
	- Whether the group is visible
	
	This information is obtained from the TMX file.</p> */
	export class TMXObjectGroupInfo {		
		/** Properties of the ObjectGroup info. */
		properties: any[];	
	}	
	/** <p>cc.TMXTilesetInfo contains the information about the tilesets like: <br />
	- Tileset name<br />
	- Tileset spacing<br />
	- Tileset margin<br />
	- size of the tiles<br />
	- Image used for the tiles<br />
	- Image size<br />
	
	This information is obtained from the TMX file. </p> */
	export class TMXTilesetInfo {		
		/** Tileset name */
		name: string;		
		/** First grid */
		firstGid: number;		
		/** Spacing */
		spacing: number;		
		/** Margin */
		margin: number;		
		/** Texture containing the tiles (should be sprite sheet / texture atlas) */
		sourceImage: any;		
		/** Size in pixels of the image */
		imageSize: Size;	
	}	
	/** <p>cc.TMXMapInfo contains the information about the map like: <br/>
	- Map orientation (hexagonal, isometric or orthogonal)<br/>
	- Tile size<br/>
	- Map size</p>
	
	<p>And it also contains: <br/>
	- Layers (an array of TMXLayerInfo objects)<br/>
	- Tilesets (an array of TMXTilesetInfo objects) <br/>
	- ObjectGroups (an array of TMXObjectGroupInfo objects) </p>
	
	<p>This information is obtained from the TMX file. </p> */
	export class TMXMapInfo {		
		/** Properties of the map info. */
		properties: any[];		
		/** Map orientation. */
		orientation: number;		
		/** Parent element. */
		parentElement: any;		
		/** Parent GID. */
		parentGID: number;		
		/** Layer attributes. */
		layerAttrs: any;		
		/** Is reading storing characters stream. */
		storingCharacters: boolean;		
		/** Current string stored from characters stream. */
		currentString: string;		
		/** Width of the map */
		mapWidth: number;		
		/** Height of the map */
		mapHeight: number;		
		/** Width of a tile */
		tileWidth: number;		
		/** Height of a tile */
		tileHeight: number;		
		static ATTRIB_NONE: number;		
		static ATTRIB_BASE64: number;		
		static ATTRIB_GZIP: number;		
		static ATTRIB_ZLIB: number;	
	}	
	/** !#en Render the TMX layer.
	!#zh æ¸²æ?? TMX layer??? */
	export class TiledLayer extends Component {		
		/**
		!#en enable or disable culling
		!#zh å¼???¯æ????³é?­è????ªã??
		@param value value 
		*/
		enableCulling(value: any): void;		
		/**
		!#en Adds user's node into layer.
		!#zh æ·»å????¨æ?·è????¹ã??
		@param node node 
		*/
		addUserNode(node: Node): boolean;		
		/**
		!#en Removes user's node.
		!#zh ç§»é?¤ç?¨æ?·è????¹ã??
		@param node node 
		*/
		removeUserNode(node: Node): boolean;		
		/**
		!#en Destroy user's node.
		!#zh ???æ¯???¨æ?·è????¹ã??
		@param node node 
		*/
		destroyUserNode(node: Node): void;		
		/**
		!#en Gets the layer name.
		!#zh ??·å??å±???????ç§°ã??
		
		@example 
		```js
		let layerName = tiledLayer.getLayerName();
		cc.log(layerName);
		``` 
		*/
		getLayerName(): string;		
		/**
		!#en Set the layer name.
		!#zh è®¾ç½®å±???????ç§?
		@param layerName layerName
		
		@example 
		```js
		tiledLayer.setLayerName("New Layer");
		``` 
		*/
		SetLayerName(layerName: string): void;		
		/**
		!#en Return the value for the specific property name.
		!#zh ??·å?????å®?å±???§å???????¼ã??
		@param propertyName propertyName
		
		@example 
		```js
		let property = tiledLayer.getProperty("info");
		cc.log(property);
		``` 
		*/
		getProperty(propertyName: string): any;		
		/**
		!#en Returns the position in pixels of a given tile coordinate.
		!#zh ??·å?????å®? tile ??????ç´??????????
		@param pos position or x
		@param y y
		
		@example 
		```js
		let pos = tiledLayer.getPositionAt(cc.v2(0, 0));
		cc.log("Pos: " + pos);
		let pos = tiledLayer.getPositionAt(0, 0);
		cc.log("Pos: " + pos);
		``` 
		*/
		getPositionAt(pos: Vec2|number, y?: number): Vec2;		
		/**
		!#en
		Sets the tiles gid (gid = tile global id) at a given tiles rect.
		!#zh
		è®¾ç½®ç»?å®???ºå????? tile ??? gid (gid = tile ??¨å?? id)ï¼?
		@param gids an array contains gid
		@param beginCol begin col number
		@param beginRow begin row number
		@param totalCols count of column
		
		@example 
		```js
		tiledLayer.setTilesGIDAt([1, 1, 1, 1], 10, 10, 2)
		``` 
		*/
		setTilesGIDAt(gids: any[], beginCol: number, beginRow: number, totalCols: number): void;		
		/**
		!#en
		Sets the tile gid (gid = tile global id) at a given tile coordinate.<br />
		The Tile GID can be obtained by using the method "tileGIDAt" or by using the TMX editor . Tileset Mgr +1.<br />
		If a tile is already placed at that position, then it will be removed.
		!#zh
		è®¾ç½®ç»?å®?????????? tile ??? gid (gid = tile ??¨å?? id)ï¼?
		tile ??? GID ??¯ä»¥ä½¿ç?¨æ?¹æ?? ???tileGIDAt??? ??¥è?·å?????<br />
		å¦????ä¸?ä¸? tile å·²ç????¾å?¨é??ä¸ªä??ç½®ï?????ä¹?å®?å°?è¢«å????¤ã??
		@param gid gid
		@param posOrX position or x
		@param flagsOrY flags or y
		@param flags flags
		
		@example 
		```js
		tiledLayer.setTileGIDAt(1001, 10, 10, 1)
		``` 
		*/
		setTileGIDAt(gid: number, posOrX: Vec2|number, flagsOrY: number, flags?: number): void;		
		/**
		!#en
		Returns the tiles data.An array fill with GIDs. <br />
		!#zh
		è¿???? tiles ??°æ??. ??±GID?????????ä¸?ä¸ªæ?°ç??. <br /> 
		*/
		getTiles(): number[];		
		/**
		!#en
		Returns the tile gid at a given tile coordinate. <br />
		if it returns 0, it means that the tile is empty. <br />
		!#zh
		???è¿?ç»?å®???? tile ?????????flagsï¼???¯é??ï¼?è¿???? tile ??? GID. <br />
		å¦????å®?è¿???? 0ï¼????è¡¨ç¤ºè¯? tile ä¸ºç©º???<br />
		@param pos or x
		@param y y
		
		@example 
		```js
		let tileGid = tiledLayer.getTileGIDAt(0, 0);
		``` 
		*/
		getTileGIDAt(pos: Vec2|number, y?: number): number;		
		/**
		!#en Layer orientation, which is the same as the map orientation.
		!#zh ??·å?? Layer ??¹å??(?????°å?¾æ?¹å??)???
		
		@example 
		```js
		let orientation = tiledLayer.getLayerOrientation();
		cc.log("Layer Orientation: " + orientation);
		``` 
		*/
		getLayerOrientation(): number;		
		/**
		!#en properties from the layer. They can be added using Tiled.
		!#zh ??·å?? layer ???å±???§ï????¯ä»¥ä½¿ç?? Tiled ç¼?è¾???¨æ·»???å±???§ã??
		
		@example 
		```js
		let properties = tiledLayer.getProperties();
		cc.log("Properties: " + properties);
		``` 
		*/
		getProperties(): any;		
		/**
		!#en
		Get the TiledTile with the tile coordinate.<br/>
		If there is no tile in the specified coordinate and forceCreate parameter is true, <br/>
		then will create a new TiledTile at the coordinate.
		The renderer will render the tile with the rotation, scale, position and color property of the TiledTile.
		!#zh
		???è¿????å®???? tile ????????·å??å¯¹å????? TiledTile??? <br/>
		å¦???????å®??????????æ²¡æ?? tileï¼?å¹¶ä??è®¾ç½®äº? forceCreate ???ä¹?å°?ä¼???¨æ??å®?????????????å»ºä??ä¸ªæ?°ç?? TiledTile ???<br/>
		??¨æ¸²???è¿?ä¸? tile ?????¶å??ï¼?å°?ä¼?ä½¿ç?? TiledTile ????????¹ç?????è½¬ã??ç¼©æ?¾ã??ä½?ç§»ã??é¢???²å????§ã??<br/>
		@param x x
		@param y y
		@param forceCreate forceCreate
		
		@example 
		```js
		let tile = tiledLayer.getTiledTileAt(100, 100, true);
		cc.log(tile);
		``` 
		*/
		getTiledTileAt(x: number, y: number, forceCreate: boolean): TiledTile;		
		/**
		!#en
		Change tile to TiledTile at the specified coordinate.
		!#zh
		å°????å®???? tile ????????¿æ?¢ä¸º???å®???? TiledTile???
		@param x x
		@param y y
		@param tiledTile tiledTile 
		*/
		setTiledTileAt(x: number, y: number, tiledTile: TiledTile): TiledTile;		
		/**
		!#en Return texture.
		!#zh ??·å??çº¹ç?????
		@param index The index of textures 
		*/
		getTexture(index: any): Texture2D;		
		/**
		!#en Return texture.
		!#zh ??·å??çº¹ç????? 
		*/
		getTextures(): Texture2D;		
		/**
		!#en Set the texture.
		!#zh è®¾ç½®çº¹ç?????
		@param texture texture 
		*/
		setTexture(texture: Texture2D): void;		
		/**
		!#en Set the texture.
		!#zh è®¾ç½®çº¹ç?????
		@param textures textures 
		*/
		setTexture(textures: Texture2D): void;		
		/**
		!#en Gets layer size.
		!#zh ??·å??å±?å¤§å?????
		
		@example 
		```js
		let size = tiledLayer.getLayerSize();
		cc.log("layer size: " + size);
		``` 
		*/
		getLayerSize(): Size;		
		/**
		!#en Size of the map's tile (could be different from the tile's size).
		!#zh ??·å?? tile ???å¤§å??( tile ???å¤§å????¯è?½ä????????ä¸????)???
		
		@example 
		```js
		let mapTileSize = tiledLayer.getMapTileSize();
		cc.log("MapTile size: " + mapTileSize);
		``` 
		*/
		getMapTileSize(): Size;		
		/**
		!#en Gets Tile set first information for the layer.
		!#zh ??·å?? layer ç´¢å??ä½?ç½®ä¸º0??? Tileset ä¿¡æ?¯ã??
		@param index The index of tilesets 
		*/
		getTileSet(index: any): TMXTilesetInfo;		
		/**
		!#en Gets tile set all information for the layer.
		!#zh ??·å?? layer ????????? Tileset ä¿¡æ?¯ã?? 
		*/
		getTileSet(): TMXTilesetInfo;		
		/**
		!#en Sets tile set information for the layer.
		!#zh è®¾ç½® layer ??? tileset ä¿¡æ?¯ã??
		@param tileset tileset 
		*/
		setTileSet(tileset: TMXTilesetInfo): void;		
		/**
		!#en Sets Tile set information for the layer.
		!#zh è®¾ç½® layer ??? Tileset ä¿¡æ?¯ã??
		@param tilesets tilesets 
		*/
		setTileSets(tilesets: TMXTilesetInfo): void;	
	}	
	/** !#en Renders a TMX Tile Map in the scene.
	!#zh ??¨å?ºæ?¯ä¸­æ¸²æ??ä¸?ä¸? tmx ??¼å????? Tile Map??? */
	export class TiledMap extends Component {		
		/** !#en The TiledMap Asset.
		!#zh TiledMap èµ?æº???? */
		tmxAsset: TiledMapAsset;		
		/**
		!#en Gets the map size.
		!#zh ??·å????°å?¾å¤§å°????
		
		@example 
		```js
		let mapSize = tiledMap.getMapSize();
		cc.log("Map Size: " + mapSize);
		``` 
		*/
		getMapSize(): Size;		
		/**
		!#en Gets the tile size.
		!#zh ??·å????°å?¾è????¯ä¸­ tile ???ç´????å¤§å?????
		
		@example 
		```js
		let tileSize = tiledMap.getTileSize();
		cc.log("Tile Size: " + tileSize);
		``` 
		*/
		getTileSize(): Size;		
		/**
		!#en map orientation.
		!#zh ??·å????°å?¾æ?¹å?????
		
		@example 
		```js
		let mapOrientation = tiledMap.getMapOrientation();
		cc.log("Map Orientation: " + mapOrientation);
		``` 
		*/
		getMapOrientation(): number;		
		/**
		!#en object groups.
		!#zh ??·å???????????å¯¹è±¡å±????
		
		@example 
		```js
		let objGroups = titledMap.getObjectGroups();
		for (let i = 0; i < objGroups.length; ++i) {
		    cc.log("obj: " + objGroups[i]);
		}
		``` 
		*/
		getObjectGroups(): TiledObjectGroup[];		
		/**
		!#en Return the TMXObjectGroup for the specific group.
		!#zh ??·å?????å®???? TMXObjectGroup???
		@param groupName groupName
		
		@example 
		```js
		let group = titledMap.getObjectGroup("Players");
		cc.log("ObjectGroup: " + group);
		``` 
		*/
		getObjectGroup(groupName: string): TiledObjectGroup;		
		/**
		!#en enable or disable culling
		!#zh å¼???¯æ????³é?­è????ªã??
		@param value value 
		*/
		enableCulling(value: any): void;		
		/**
		!#en Gets the map properties.
		!#zh ??·å????°å?¾ç??å±???§ã??
		
		@example 
		```js
		let properties = titledMap.getProperties();
		for (let i = 0; i < properties.length; ++i) {
		    cc.log("Properties: " + properties[i]);
		}
		``` 
		*/
		getProperties(): any[];		
		/**
		!#en Return All layers array.
		!#zh è¿?????????«æ????? layer ?????°ç?????
		
		@example 
		```js
		let layers = titledMap.getLayers();
		for (let i = 0; i < layers.length; ++i) {
		    cc.log("Layers: " + layers[i]);
		}
		``` 
		*/
		getLayers(): TiledLayer[];		
		/**
		!#en return the cc.TiledLayer for the specific layer.
		!#zh ??·å?????å®????ç§°ç?? layer???
		@param layerName layerName
		
		@example 
		```js
		let layer = titledMap.getLayer("Player");
		cc.log(layer);
		``` 
		*/
		getLayer(layerName: string): TiledLayer;		
		/**
		!#en Return the value for the specific property name.
		!#zh ???è¿?å±???§å??ç§°ï????·å?????å®????å±???§ã??
		@param propertyName propertyName
		
		@example 
		```js
		let property = titledMap.getProperty("info");
		cc.log("Property: " + property);
		``` 
		*/
		getProperty(propertyName: string): string;		
		/**
		!#en Return properties dictionary for tile GID.
		!#zh ???è¿? GID ï¼???·å?????å®????å±???§ã??
		@param GID GID
		
		@example 
		```js
		let properties = titledMap.getPropertiesForGID(GID);
		cc.log("Properties: " + properties);
		``` 
		*/
		getPropertiesForGID(GID: number): any;	
	}	
	/** Class for tiled map asset handling. */
	export class TiledMapAsset extends Asset {		
		textures: Texture2D[];		
		textureNames: string[];		
		textureSizes: Size[];		
		imageLayerTextures: Texture2D[];		
		imageLayerTextureNames: string[];	
	}	
	/** !#en Renders the TMX object group.
	!#zh æ¸²æ?? tmx object group??? */
	export class TiledObjectGroup extends Component {		
		/**
		!#en Offset position of child objects.
		!#zh ??·å??å­?å¯¹è±¡??????ç§»ä??ç½®ã??
		
		@example 
		```js
		let offset = tMXObjectGroup.getPositionOffset();
		``` 
		*/
		getPositionOffset(): Vec2;		
		/**
		!#en List of properties stored in a dictionary.
		!#zh ä»¥æ??å°????å½¢å????·å??å±???§å??è¡¨ã??
		
		@example 
		```js
		let offset = tMXObjectGroup.getProperties();
		``` 
		*/
		getProperties(): any;		
		/**
		!#en Gets the Group name.
		!#zh ??·å??ç»????ç§°ã??
		
		@example 
		```js
		let groupName = tMXObjectGroup.getGroupName;
		``` 
		*/
		getGroupName(): string;		
		/**
		!#en
		Return the object for the specific object name. <br />
		It will return the 1st object found on the array for the given name.
		!#zh ??·å?????å®????å¯¹è±¡???
		@param objectName objectName
		
		@example 
		```js
		let object = tMXObjectGroup.getObject("Group");
		``` 
		*/
		getObject(objectName: string): any;		
		/**
		!#en Gets the objects.
		!#zh ??·å??å¯¹è±¡??°ç?????
		
		@example 
		```js
		let objects = tMXObjectGroup.getObjects();
		``` 
		*/
		getObjects(): any[];	
	}	
	/** !#en TiledTile can control the specified map tile.
	It will apply the node rotation, scale, translate to the map tile.
	You can change the TiledTile's gid to change the map tile's style.
	!#zh TiledTile ??¯ä»¥?????¬å¯¹???ä¸?ä¸ªå?°å?¾å??è¿?è¡????ä½????
	ä»?ä¼?å°??????¹ç?????è½¬ï??ç¼©æ?¾ï??å¹³ç§»???ä½?åº???¨å?¨è??ä¸ªå?°å?¾å??ä¸?ï¼?å¹¶å?¯ä»¥???è¿???´æ?¢å???????°å?¾å????? gid ??¥æ?´æ?¢å?°å?¾å???????¾ç¤º??·å????? */
	export class TiledTile extends Component {		
		/** !#en Specify the TiledTile horizontal coordinateï¼?use map tile as the unit.
		!#zh ???å®? TiledTile ???æ¨ªå????????ï¼?ä»¥å?°å?¾å??ä¸ºå??ä½? */
		x: number;		
		/** !#en Specify the TiledTile vertical coordinateï¼?use map tile as the unit.
		!#zh ???å®? TiledTile ???çºµå????????ï¼?ä»¥å?°å?¾å??ä¸ºå??ä½? */
		y: number;		
		/** !#en Specify the TiledTile gid.
		!#zh ???å®? TiledTile ??? gid ??? */
		gid: number;	
	}	
	/** !#en cc.WebView is a component for display web pages in the game. Because different platforms have different authorization, API and control methods for WebView component. And have not yet formed a unified standard, only Web, iOS, and Android platforms are currently supported.
	!#zh WebView ç»?ä»¶ï????¨ä????¨æ¸¸???ä¸­æ?¾ç¤ºç½?é¡µã????±ä??ä¸????å¹³å?°å¯¹äº? WebView ç»?ä»¶ç???????????API?????§å?¶æ?¹å????½ä?????ï¼?è¿?æ²¡æ??å½¢æ??ç»?ä¸??????????ï¼????ä»¥ç?®å????ªæ?¯æ?? Web???iOS ??? Android å¹³å?°ã?? */
	export class WebView extends Component {		
		/** !#en A given URL to be loaded by the WebView, it should have a http or https prefix.
		!#zh ???å®? WebView ???è½½ç??ç½????ï¼?å®?åº?è¯¥æ?¯ä??ä¸? http ?????? https å¼?å¤´ç??å­?ç¬¦ä¸² */
		url: string;		
		/** !#en The webview's event callback , it will be triggered when certain webview event occurs.
		!#zh WebView ??????è°?äº?ä»¶ï??å½?ç½?é¡µå??è½½è??ç¨?ä¸­ï?????è½½å?????????????????è½½å?ºé????¶é?½ä?????è°?æ­¤å?½æ?? */
		webviewLoadedEvents: Component.EventHandler[];		
		/**
		!#en
		Set javascript interface scheme (see also setOnJSCallback). <br/>
		Note: Supports only on the Android and iOS. For HTML5, please refer to the official documentation.<br/>
		Please refer to the official documentation for more details.
		!#zh
		è®¾ç½® JavaScript ??¥å????¹æ??ï¼?ä¸? 'setOnJSCallback' ???å¥?ä½¿ç?¨ï?????<br/>
		æ³¨æ??ï¼???ªæ?¯æ?? Android ??? iOS ï¼?Web ç«¯ç?¨æ??è¯·å??å¾?å®???¹æ??æ¡???¥ç?????<br/>
		è¯¦æ??è¯·å?????å®???¹æ??æ¡?
		@param scheme scheme 
		*/
		setJavascriptInterfaceScheme(scheme: string): void;		
		/**
		!#en
		This callback called when load URL that start with javascript
		interface scheme (see also setJavascriptInterfaceScheme). <br/>
		Note: Supports only on the Android and iOS. For HTML5, please refer to the official documentation.<br/>
		Please refer to the official documentation for more details.
		!#zh
		å½????è½? URL ä»? JavaScript ??¥å????¹æ??å¼?å§???¶è????¨è??ä¸ªå??è°???½æ?°ã??<br/>
		æ³¨æ??ï¼???ªæ?¯æ?? Android ??? iOSï¼?Web ç«¯ç?¨æ??è¯·å??å¾?å®???¹æ??æ¡???¥ç?????
		è¯¦æ??è¯·å?????å®???¹æ??æ¡?
		@param callback callback 
		*/
		setOnJSCallback(callback: Function): void;		
		/**
		!#en
		Evaluates JavaScript in the context of the currently displayed page. <br/>
		Please refer to the official document for more details <br/>
		Note: Cross domain issues need to be resolved by yourself <br/>
		!#zh
		??§è?? WebView ?????¨é¡µ??¢è????¬ï??è¯¦æ??è¯·å?????å®???¹æ??æ¡?ï¼? <br/>
		æ³¨æ??ï¼????è¦???ªè??è§???³è·¨?????®é??
		@param str str 
		*/
		evaluateJS(str: string): void;		
		/**
		!#en if you don't need the WebView and it isn't in any running Scene, you should
		call the destroy method on this component or the associated node explicitly.
		Otherwise, the created DOM element won't be removed from web page.
		!#zh
		å¦????ä½?ä¸????ä½¿ç?? WebViewï¼?å¹¶ä??ç»?ä»¶æ?ªæ·»?????°å?ºæ?¯ä¸­ï¼????ä¹?ä½?å¿?é¡»æ????¨å¯¹ç»?ä»¶æ???????¨è????¹è????? destroy???
		è¿???·æ????½ç§»??¤ç??é¡µä????? DOM ?????¹ï????¿å?? Web å¹³å?°å??å­?æ³???²ã??
		
		@example 
		```js
		webview.node.parent = null;  // or  webview.node.removeFromParent(false);
		// when you don't need webview anymore
		webview.node.destroy();
		``` 
		*/
		destroy(): boolean;	
	}	
	/** !#en
	 cc.NodePool is the cache pool designed for node type.<br/>
	 It can helps you to improve your game performance for objects which need frequent release and recreate operations<br/>
	
	It's recommended to create cc.NodePool instances by node type, the type corresponds to node type in game design, not the class,
	for example, a prefab is a specific node type. <br/>
	When you create a node pool, you can pass a Component which contains `unuse`, `reuse` functions to control the content of node.<br/>
	
	Some common use case is :<br/>
	     1. Bullets in game (die very soon, massive creation and recreation, no side effect on other objects)<br/>
	     2. Blocks in candy crash (massive creation and recreation)<br/>
	     etc...
	!#zh
	cc.NodePool ??¯ç?¨ä??ç®¡ç???????¹å¯¹è±¡ç??å¯¹è±¡ç¼?å­?æ±????<br/>
	å®???¯ä»¥å¸®å?©æ?¨æ??é«?æ¸¸æ????§è?½ï???????¨ä??ä¼????å¯¹è±¡??????å¤????å»ºå?????æ¯?<br/>
	ä»¥å?? cocos2d-x ä¸­ç?? cc.pool ?????°ç???????¹ä??ä»¶æ³¨???ç³»ç??ä¸???¼å®¹ï¼????æ­¤è¯·ä½¿ç?? cc.NodePool ??¥ä»£??¿ã??
	
	??°ç?? NodePool ???è¦?å®?ä¾????ä¹?????????½ä½¿??¨ï??æ¯?ç§?ä¸????????????¹å¯¹è±¡æ?????è¦?ä¸?ä¸ªä????????å¯¹è±¡æ±?å®?ä¾?ï¼?è¿???????ç§?ç±»å¯¹åº?äº?æ¸¸æ??ä¸­ç???????¹è®¾è®¡ï??ä¸?ä¸? prefab ??¸å??äº?ä¸?ä¸ªç??ç±»ç???????¹ã??<br/>
	??¨å??å»ºç????²æ????¶ï????¯ä»¥ä¼???¥ä??ä¸ªå????? unuse, reuse ??½æ?°ç??ç»?ä»¶ç±»?????¨ä???????¹ç???????¶å??å¤???¨é?»è?????<br/>
	
	ä¸?äº?å¸¸è???????¨ä????¯ï??<br/>
	     1.??¨æ¸¸???ä¸­ç??å­?å¼¹ï??æ­»äº¡å¾?å¿«ï??é¢?ç¹????å»ºï??å¯¹å?¶ä??å¯¹è±¡?????¯ä????¨ï??<br/>
	     2.ç³????ç²?ç¢?ä¼?å¥?ä¸­ç????¨å??ï¼?é¢?ç¹????å»ºï?????
	     ç­?ç­?.... */
	export class NodePool {		
		/**
		!#en
		Constructor for creating a pool for a specific node template (usually a prefab). You can pass a component (type or name) argument for handling event for reusing and recycling node.
		!#zh
		ä½¿ç?¨æ???????½æ?°æ?¥å??å»ºä??ä¸ªè????¹ä????¨ç??å¯¹è±¡æ±?ï¼???¨å?¯ä»¥ä¼????ä¸?ä¸ªç??ä»¶ç±»?????????ç§°ï????¨ä??å¤?????????¹å????¶å??å¤???¨æ?¶ç??äº?ä»¶é?»è?????
		@param poolHandlerComp !#en The constructor or the class name of the component to control the unuse/reuse logic. !#zh å¤?????????¹å????¶å??å¤???¨ä??ä»¶é?»è?????ç»?ä»¶ç±»?????????ç§°ã??
		
		@example 
		```js
		properties: {
		   template: cc.Prefab
		 },
		 onLoad () {
		// MyTemplateHandler is a component with 'unuse' and 'reuse' to handle events when node is reused or recycled.
		   this.myPool = new cc.NodePool('MyTemplateHandler');
		 }
		``` 
		*/
		constructor(poolHandlerComp?: {prototype: Component}|string);		
		/** !#en The pool handler component, it could be the class name or the constructor.
		!#zh ç¼???²æ??å¤????ç»?ä»¶ï????¨ä???????¹ç???????¶å??å¤???¨é?»è??ï¼?è¿?ä¸ªå????§å?¯ä»¥??¯ç??ä»¶ç±»??????ç»?ä»¶ç??????????½æ?°ã?? */
		poolHandlerComp: Function|string;		
		/**
		!#en The current available size in the pool
		!#zh ??·å??å½????ç¼???²æ???????¯ç?¨å¯¹è±¡æ?°é?? 
		*/
		size(): number;		
		/**
		!#en Destroy all cached nodes in the pool
		!#zh ???æ¯?å¯¹è±¡æ±?ä¸­ç??å­???????????????? 
		*/
		clear(): void;		
		/**
		!#en Put a new Node into the pool.
		It will automatically remove the node from its parent without cleanup.
		It will also invoke unuse method of the poolHandlerComp if exist.
		!#zh ???ç¼???²æ??ä¸­å????¥ä??ä¸ªä????????è¦?????????¹å¯¹è±¡ã??
		è¿?ä¸ªå?½æ?°ä????ªå?¨å????®æ???????¹ä????¶è????¹ä??ç§»é?¤ï??ä½???¯ä??ä¼?è¿?è¡? cleanup ???ä½????
		è¿?ä¸ªå?½æ?°ä??è°???? poolHandlerComp ??? unuse ??½æ?°ï??å¦????ç»?ä»¶å????½æ?°é?½å????¨ç??è¯????
		@param obj obj
		
		@example 
		```js
		let myNode = cc.instantiate(this.template);
		  this.myPool.put(myNode);
		``` 
		*/
		put(obj: Node): void;		
		/**
		!#en Get a obj from pool, if no available object in pool, null will be returned.
		This function will invoke the reuse function of poolHandlerComp if exist.
		!#zh ??·å??å¯¹è±¡æ±?ä¸­ç??å¯¹è±¡ï¼?å¦????å¯¹è±¡æ±?æ²¡æ????¯ç?¨å¯¹è±¡ï?????è¿????ç©ºã??
		è¿?ä¸ªå?½æ?°ä??è°???? poolHandlerComp ??? reuse ??½æ?°ï??å¦????ç»?ä»¶å????½æ?°é?½å????¨ç??è¯????
		@param params !#en Params to pass to 'reuse' method in poolHandlerComp !#zh ??? poolHandlerComp ä¸­ç?? 'reuse' ??½æ?°ä??????????????
		
		@example 
		```js
		let newNode = this.myPool.get();
		``` 
		*/
		get(...params: any[]): Node;	
	}	
	/** !#en
	Camera is usefull when making reel game or other games which need scroll screen.
	Using camera will be more efficient than moving node to scroll screen.
	Camera
	!#zh
	????????ºå?¨å?¶ä????·è½´?????¯å?¶ä?????è¦?ç§»å?¨å??å¹????æ¸¸æ????¶æ??è¾??????¨ï??ä½¿ç?¨æ???????ºå??ä¼?æ¯?ç§»å?¨è????¹æ?¥ç§»??¨å??å¹???´å??é«??????? */
	export class Camera extends Component {		
		/** !#en
		The camera zoom ratio, only support 2D camera.
		!#zh
		????????ºç¼©??¾æ?????, ??ªæ?¯æ?? 2D camera??? */
		zoomRatio: number;		
		/** !#en
		Field of view. The width of the Camera???s view angle, measured in degrees along the local Y axis.
		!#zh
		??³å??????????ºè??è§????å®½åº¦ï¼?å½?????????ºå??äº????è§????å½±æ¨¡å¼?ä¸?è¿?ä¸ªå????§æ??ä¼?????????? */
		fov: number;		
		/** !#en
		The viewport size of the Camera when set to orthographic projection.
		!#zh
		????????ºå?¨æ­£äº¤æ??å½±æ¨¡å¼?ä¸????è§?çª?å¤§å????? */
		orthoSize: number;		
		/** !#en
		The near clipping plane.
		!#zh
		????????ºç??è¿???ªè????¢ã?? */
		nearClip: number;		
		/** !#en
		The far clipping plane.
		!#zh
		????????ºç??è¿???ªè????¢ã?? */
		farClip: number;		
		/** !#en
		Is the camera orthographic (true) or perspective (false)?
		!#zh
		è®¾ç½®????????ºç?????å½±æ¨¡å¼???¯æ­£äº¤è????¯é??è§?æ¨¡å????? */
		ortho: boolean;		
		/** !#en
		Four values (0 ~ 1) that indicate where on the screen this camera view will be drawn.
		!#zh
		??³å??????????ºç????¶å?¨å??å¹?ä¸???ªä¸ªä½?ç½®ï????¼ä¸ºï¼?0 ~ 1ï¼???? */
		rect: Rect;		
		/** !#en
		This is used to render parts of the scene selectively.
		!#zh
		??³å??????????ºä??æ¸²æ????ºæ?¯ç????ªä????¨å????? */
		cullingMask: number;		
		/** !#en
		Determining what to clear when camera rendering.
		!#zh
		??³å??????????ºæ¸²?????¶ä??æ¸???¤å?ªä????¶æ????? */
		clearFlags: Camera.ClearFlags;		
		/** !#en
		The color with which the screen will be cleared.
		!#zh
		????????ºç?¨ä??æ¸???¤å??å¹?????????¯è?²ã?? */
		backgroundColor: Color;		
		/** !#en
		Camera's depth in the camera rendering order. Cameras with higher depth are rendered after cameras with lower depth.
		!#zh
		????????ºæ·±åº¦ã????¨ä????³å??????????ºç??æ¸²æ??é¡ºå??ï¼???¼è??å¤§æ¸²?????¨è??ä¸?å±???? */
		depth: number;		
		/** !#en
		Destination render texture.
		Usually cameras render directly to screen, but for some effects it is useful to make a camera render into a texture.
		!#zh
		????????ºæ¸²????????®æ?? RenderTexture???
		ä¸???¬æ???????ºä????´æ?¥æ¸²?????°å??å¹?ä¸?ï¼?ä½???¯æ??ä¸?äº?????????¯ä»¥ä½¿ç?¨æ???????ºæ¸²?????? RenderTexture ä¸????å¯? RenderTexture è¿?è¡?å¤??????¥å????°ã?? */
		targetTexture: RenderTexture;		
		/** !#en
		Sets the camera's render stages.
		!#zh
		è®¾ç½®????????ºæ¸²????????¶æ®µ */
		renderStages: number;		
		/** !#en Whether auto align camera viewport to screen
		!#zh ??¯å?¦è?ªå?¨å??????????ºç??è§????å¯¹å??å±?å¹? */
		alignWithScreen: boolean;		
		/** !#en
		The primary camera in the scene. Returns the rear most rendered camera, which is the camera with the lowest depth.
		!#zh
		å½??????ºæ?¯ä¸­æ¿?æ´»ç??ä¸»æ???????ºã??å°?ä¼?è¿????æ¸²æ????¨å??å¹????åº?å±?ï¼?ä¹?å°±æ?? depth ???å°????????????ºã?? */
		static main: Camera;		
		/** !#en
		All enabled cameras.
		!#zh
		å½????æ¿?æ´»ç????????????????ºã?? */
		static cameras: Camera[];		
		/**
		!#en
		Get the first camera which the node belong to.
		!#zh
		??·å???????¹æ????¨ç??ç¬¬ä??ä¸ªæ???????ºã??
		@param node node 
		*/
		static findCamera(node: Node): Camera;		
		/**
		!#en
		Get the screen to world matrix, only support 2D camera which alignWithScreen is true.
		!#zh
		??·å??å±?å¹???????ç³»å?°ä???????????ç³»ç????©é?µï????ªé????¨ä?? alignWithScreen ä¸? true ??? 2D ????????ºã??
		@param out the matrix to receive the result 
		*/
		getScreenToWorldMatrix2D(out: Mat4): Mat4;		
		/**
		!#en
		Get the world to camera matrix, only support 2D camera which alignWithScreen is true.
		!#zh
		??·å??ä¸??????????ç³»å?°æ???????ºå?????ç³»ç????©é?µï????ªé????¨ä?? alignWithScreen ä¸? true ??? 2D ????????ºã??
		@param out the matrix to receive the result 
		*/
		getWorldToScreenMatrix2D(out: Mat4): Mat4;		
		/**
		!#en
		Convert point from screen to world.
		!#zh
		å°???????ä»?å±?å¹???????ç³»è½¬??¢å?°ä???????????ç³»ã??
		@param screenPosition screenPosition
		@param out out 
		*/
		getScreenToWorldPoint(screenPosition: Vec3|Vec2, out?: Vec3|Vec2): Vec3;		
		/**
		!#en
		Convert point from world to screen.
		!#zh
		å°???????ä»?ä¸??????????ç³»è½¬?????°å??å¹???????ç³»ã??
		@param worldPosition worldPosition
		@param out out 
		*/
		getWorldToScreenPoint(worldPosition: Vec3|Vec2, out?: Vec3|Vec2): Vec3;		
		/**
		!#en
		Get a ray from screen position
		!#zh
		ä»?å±?å¹?????????·å??ä¸???¡å??çº?
		@param screenPos screenPos 
		*/
		getRay(screenPos: Vec2): geomUtils.Ray;		
		/**
		!#en
		Check whether the node is in the camera.
		!#zh
		æ£?æµ??????¹æ?¯å?¦è¢«æ­¤æ???????ºå½±???
		@param node the node which need to check 
		*/
		containsNode(node: Node): boolean;		
		/**
		!#en
		Render the camera manually.
		!#zh
		?????¨æ¸²???????????ºã??
		@param rootNode rootNode 
		*/
		render(rootNode?: Node): void;		
		/**
		!#en
		Returns the matrix that transform the node's (local) space coordinates into the camera's space coordinates.
		!#zh
		è¿????ä¸?ä¸ªå???????¹å?????ç³»è½¬??¢å?°æ???????ºå?????ç³»ä???????©é??
		@param node the node which should transform 
		*/
		getNodeToCameraTransform(node: Node): AffineTransform;		
		/**
		!#en
		Conver a camera coordinates point to world coordinates.
		!#zh
		å°?ä¸?ä¸ªæ???????ºå?????ç³»ä???????¹è½¬??¢å?°ä???????????ç³»ä?????
		@param point the point which should transform
		@param out the point to receive the result 
		*/
		getCameraToWorldPoint(point: Vec2, out?: Vec2): Vec2;		
		/**
		!#en
		Conver a world coordinates point to camera coordinates.
		!#zh
		å°?ä¸?ä¸ªä???????????ç³»ä???????¹è½¬??¢å?°æ???????ºå?????ç³»ä?????
		@param point point
		@param out the point to receive the result 
		*/
		getWorldToCameraPoint(point: Vec2, out?: Vec2): Vec2;		
		/**
		!#en
		Get the camera to world matrix
		!#zh
		??·å??????????ºå?????ç³»å?°ä???????????ç³»ç????©é??
		@param out the matrix to receive the result 
		*/
		getCameraToWorldMatrix(out: Mat4): Mat4;		
		/**
		!#en
		Get the world to camera matrix
		!#zh
		??·å??ä¸??????????ç³»å?°æ???????ºå?????ç³»ç????©é??
		@param out the matrix to receive the result 
		*/
		getWorldToCameraMatrix(out: Mat4): Mat4;	
	}	
	/** !#en The Light Component
	
	!#zh ???æº?ç»?ä»? */
	export class Light extends Component {	
	}	
	/** !#en
	This module controls asset's behaviors and information, include loading, releasing etc. it is a singleton
	All member can be accessed with `cc.assetManager`.
	
	!#zh
	æ­¤æ¨¡???ç®¡ç??èµ?æº????è¡?ä¸ºå??ä¿¡æ?¯ï???????¬å??è½½ï???????¾ç??ï¼?è¿???¯ä??ä¸ªå??ä¾?ï¼???????????????½å?????è¿? `cc.assetManager` è°???? */
	export class AssetManager {		
		/** !#en
		Normal loading pipeline
		
		!#zh
		æ­?å¸¸å??è½½ç®¡çº? */
		pipeline: cc.AssetManager.Pipeline;		
		/** !#en
		Fetching pipeline
		
		!#zh
		ä¸?è½½ç®¡çº? */
		fetchPipeline: cc.AssetManager.Pipeline;		
		/** !#en
		Url transformer
		
		!#zh
		Url è½¬æ?¢å?? */
		transformPipeline: cc.AssetManager.Pipeline;		
		/** !#en
		The collection of bundle which is already loaded, you can remove cache with {{#crossLink "AssetManager/removeBundle:method"}}{{/crossLink}}
		
		!#zh
		å·²å??è½? bundle ?????????ï¼? ä½???½é??è¿? {{#crossLink "AssetManager/removeBundle:method"}}{{/crossLink}} ??¥ç§»??¤ç??å­? */
		bundles: AssetManager.Cache<AssetManager.Bundle>;		
		/** !#en
		The collection of asset which is already loaded, you can remove cache with {{#crossLink "AssetManager/releaseAsset:method"}}{{/crossLink}}
		
		!#zh
		å·²å??è½½è??æº??????????ï¼? ä½???½é??è¿? {{#crossLink "AssetManager/releaseAsset:method"}}{{/crossLink}} ??¥ç§»??¤ç??å­? */
		assets: AssetManager.Cache<cc.Asset>;		
		/** !#en
		Manage relationship between asset and its dependencies
		
		!#zh
		ç®¡ç??èµ?æº?ä¾?èµ???³ç³» */
		dependUtil: cc.AssetManager.DependUtil;		
		/** !#en
		Whether or not cache the loaded asset
		
		!#zh
		??¯å?¦ç??å­?å·²å??è½½ç??èµ?æº? */
		cacheAsset: boolean;		
		/** !#en
		Whether or not load asset forcely, if it is true, asset will be loaded regardless of error
		
		!#zh
		??¯å?¦å¼º??¶å??è½½è??æº?, å¦????ä¸? true ï¼????è½½è??æº?å°?ä¼?å¿½ç?¥æ?¥é?? */
		force: boolean;		
		/** !#en
		Some useful function
		
		!#zh
		ä¸?äº??????¨ç????¹æ?? */
		utils: cc.AssetManager.Helper;		
		/** !#en
		Manage all downloading task
		
		!#zh
		ç®¡ç????????ä¸?è½½ä»»??? */
		downloader: cc.AssetManager.Downloader;		
		/** !#en
		Manage all parsing task
		
		!#zh
		ç®¡ç????????è§????ä»»å?? */
		parser: cc.AssetManager.Parser;		
		/** !#en
		Manage internal asset
		
		!#zh
		ç®¡ç?????ç½®è??æº? */
		builtins: cc.AssetManager.Builtins;		
		/** !#en
		Manage all packed asset
		
		!#zh
		ç®¡ç???????????å¹¶å?????èµ?æº? */
		packManager: cc.AssetManager.PackManager;		
		/** !#en
		Cache manager is a module which controls all caches downloaded from server in non-web platform.
		
		!#zh
		ç¼?å­?ç®¡ç????¨æ?¯ä??ä¸ªæ¨¡???ï¼???¨é?? WEB å¹³å?°ä??ï¼???¨ä??ç®¡ç????????ä»??????¡å?¨ä??ä¸?è½½ä????¥ç??ç¼?å­? */
		cacheManager: cc.AssetManager.CacheManager|null;		
		/** !#en
		The preset of options
		
		!#zh
		??¯é???????°ç??é¢?è®¾é?? */
		presets: Record<string, Record<string, any>>;		
		/** !#en
		The builtin 'main' bundle
		
		!#zh
		???ç½? main ??? */
		main: cc.AssetManager.Bundle;		
		/** !#en
		The builtin 'resources' bundle
		
		!#zh
		???ç½? resources ??? */
		resources: cc.AssetManager.Bundle;		
		/** !#en
		The builtin 'internal' bundle
		
		!#zh
		???ç½? internal ??? */
		internal: cc.AssetManager.Bundle;		
		/**
		!#en
		Initialize assetManager with options
		
		!#zh
		???å§????èµ?æº?ç®¡ç?????
		@param options options 
		*/
		init(options: Record<string, any>): void;		
		/**
		!#en
		Get the bundle which has been loaded
		
		!#zh
		??·å??å·²å??è½½ç????????
		@param name The name of bundle
		
		@example 
		```js
		// ${project}/assets/test1
		cc.assetManager.getBundle('test1');
		
		cc.assetManager.getBundle('resources');
		``` 
		*/
		getBundle (name: string): cc.AssetManager.Bundle;		
		/**
		!#en
		Remove this bundle. NOTE: The asset whthin this bundle will not be released automatically, you can call {{#crossLink "Bundle/releaseAll:method"}}{{/crossLink}} manually before remove it if you need
		
		!#zh
		ç§»é?¤æ­¤???, æ³¨æ??ï¼?è¿?ä¸ªå????????èµ?æº?ä¸?ä¼???ªå?¨é?????, å¦???????è¦????è¯?ä½???¯ä»¥??¨æ?§æ??ä¹?????????¨è????? {{#crossLink "Bundle/releaseAll:method"}}{{/crossLink}} è¿?è¡???????
		@param bundle The bundle to be removed 
		*/
		removeBundle(bundle: cc.AssetManager.Bundle): void;		
		/**
		!#en
		General interface used to load assets with a progression callback and a complete callback. You can achieve almost all effect you want with combination of `requests` and `options`.
		It is highly recommended that you use more simple API, such as `load`, `loadDir` etc. Every custom parameter in `options` will be distribute to each of `requests`.
		if request already has same one, the parameter in request will be given priority. Besides, if request has dependencies, `options` will distribute to dependencies too.
		Every custom parameter in `requests` will be tranfered to handler of `downloader` and `parser` as `options`.
		You can register you own handler downloader or parser to collect these custom parameters for some effect.
		
		Reserved Keyword: `uuid`, `url`, `path`, `dir`, `scene`, `type`, `priority`, `preset`, `audioLoadMode`, `ext`, `bundle`, `onFileProgress`, `maxConcurrency`, `maxRequestsPerFrame`
		`maxRetryCount`, `version`, `responseType`, `withCredentials`, `mimeType`, `timeout`, `header`, `reload`, `cacheAsset`, `cacheEnabled`,
		Please DO NOT use these words as custom options!
		
		!#zh
		?????¨å??è½½è??æº???¥å??ï¼???¯ä????¥è??åº¦å??è°?ä»¥å??å®???????è°?ï¼????è¿?ç»???? `request` ??? `options` ?????°ï?????ä¹???¯ä»¥å®???°å????©å??????????³è????????è½½æ???????????å¸¸å»ºè®®ä??ä½¿ç?¨æ?´ç????????APIï¼?ä¾?å¦? `load`???`loadDir` ç­????
		`options` ä¸­ç????ªå??ä¹??????°å??ä¼?????????? `requests` ???æ¯?ä¸?é¡¹ä¸­ï¼?å¦????requestä¸­å·²å­???¨å?????????????°å??ä»? `requests` ä¸­ä¸º???ï¼??????¶å??????????¶ä??
		ä¾?èµ?èµ?æº?ï¼???? `options` ä¸­ç???????°ä??ç»§ç»­???ä¾?èµ?é¡¹ä¸­?????????requestä¸­ç????ªå??ä¹??????°é?½ä??ä»? `options` å½¢å??ä¼???¥å??è½½æ??ç¨?ä¸­ç?? `downloader`, `parser` ?????¹æ??ä¸?, ä½???¯ä»¥
		??©å?? `downloader`, `parser` ??¶é???????°å???????³å????°ç???????????
		
		ä¿??????³é?®å??: `uuid`, `url`, `path`, `dir`, `scene`, `type`, `priority`, `preset`, `audioLoadMode`, `ext`, `bundle`, `onFileProgress`, `maxConcurrency`, `maxRequestsPerFrame`
		`maxRetryCount`, `version`, `responseType`, `withCredentials`, `mimeType`, `timeout`, `header`, `reload`, `cacheAsset`, `cacheEnabled`,
		è¯·ä??è¦?ä½¿ç?¨è??äº?å­?æ®µä¸º??ªå??ä¹???????!
		@param requests The request you want to load
		@param options Optional parameters
		@param onProgress Callback invoked when progression change
		@param onComplete Callback invoked when finish loading
		
		@example 
		```js
		cc.assetManager.loadAny({url: 'http://example.com/a.png'}, (err, img) => cc.log(img));
		cc.assetManager.loadAny(['60sVXiTH1D/6Aft4MRt9VC'], (err, assets) => cc.log(assets));
		cc.assetManager.loadAny([{ uuid: '0cbZa5Y71CTZAccaIFluuZ'}, {url: 'http://example.com/a.png'}], (err, assets) => cc.log(assets));
		cc.assetManager.downloader.register('.asset', (url, options, onComplete) => {
		     url += '?userName=' + options.userName + "&password=" + options.password;
		     cc.assetManager.downloader.downloadFile(url, null, onComplete);
		});
		cc.assetManager.parser.register('.asset', (file, options, onComplete) => {
		     var json = JSON.parse(file);
		     var skin = json[options.skin];
		     var model = json[options.model];
		     onComplete(null, {skin, model});
		});
		cc.assetManager.loadAny({ url: 'http://example.com/my.asset', skin: 'xxx', model: 'xxx', userName: 'xxx', password: 'xxx' });
		``` 
		*/
		loadAny(requests: string | string[] | Record<string, any> | Record<string, any>[], options: Record<string, any>, onProgress: (finished: number, total: number, item: cc.AssetManager.RequestItem) => void, onComplete: (err: Error, data: any) => void): void;
		loadAny(requests: string | string[] | Record<string, any> | Record<string, any>[], onProgress: (finished: number, total: number, item: cc.AssetManager.RequestItem) => void, onComplete: (err: Error, data: any) => void): void;
		loadAny(requests: string | string[] | Record<string, any> | Record<string, any>[], options: Record<string, any>, onComplete: (err: Error, data: any) => void): void;
		loadAny(requests: string | string[] | Record<string, any> | Record<string, any>[], onComplete: (err: Error, data: any) => void): void;
		loadAny(requests: string | string[] | Record<string, any> | Record<string, any>[], options: Record<string, any>): void;
		loadAny(requests: string | string[] | Record<string, any> | Record<string, any>[]): void;		
		/**
		!#en
		General interface used to preload assets with a progression callback and a complete callback.It is highly recommended that you use more simple API, such as `preloadRes`, `preloadResDir` etc.
		Everything about preload is just likes `cc.assetManager.loadAny`, the difference is `cc.assetManager.preloadAny` will only download asset but not parse asset. You need to invoke `cc.assetManager.loadAny(preloadTask)`
		to finish loading asset
		
		!#zh
		?????¨é?????è½½è??æº???¥å??ï¼???¯ä????¥è??åº¦å??è°?ä»¥å??å®???????è°?ï¼????å¸¸å»ºè®®ä??ä½¿ç?¨æ?´ç???????? API ï¼?ä¾?å¦? `preloadRes`, `preloadResDir` ç­????`preloadAny` ??? `loadAny` ???ä¹?ä¸???·ï????ºå?«å?¨ä?? `preloadAny` ??ªä??ä¸?è½½è??æº?ï¼?ä¸?ä¼???»è§£???èµ?æº?ï¼?ä½????è¦?è°???? `cc.assetManager.loadAny(preloadTask)`
		??¥å?????èµ?æº????è½½ã??
		@param requests The request you want to preload
		@param options Optional parameters
		@param onProgress Callback invoked when progression change
		@param onComplete Callback invoked when finish preloading
		
		@example 
		```js
		cc.assetManager.preloadAny('0cbZa5Y71CTZAccaIFluuZ', (err) => cc.assetManager.loadAny('0cbZa5Y71CTZAccaIFluuZ'));
		``` 
		*/
		preloadAny(requests: string | string[] | Record<string, any> | Record<string, any>[], options: Record<string, any>, onProgress: (finished: number, total: number, item: cc.AssetManager.RequestItem) => void, onComplete: (err: Error, items: cc.AssetManager.RequestItem[]) => void): void;
		preloadAny(requests: string | string[] | Record<string, any> | Record<string, any>[], onProgress: (finished: number, total: number, item: cc.AssetManager.RequestItem) => void, onComplete: (err: Error, items: cc.AssetManager.RequestItem[]) => void): void;
		preloadAny(requests: string | string[] | Record<string, any> | Record<string, any>[], options: Record<string, any>, onComplete: (err: Error, items: cc.AssetManager.RequestItem[]) => void): void;
		preloadAny(requests: string | string[] | Record<string, any> | Record<string, any>[], onComplete: (err: Error, items: cc.AssetManager.RequestItem[]) => void): void;
		preloadAny(requests: string | string[] | Record<string, any> | Record<string, any>[], options: Record<string, any>): void;
		preloadAny(requests: string | string[] | Record<string, any> | Record<string, any>[]): void;		
		/**
		!#en
		Load native file of asset, if you check the option 'Async Load Assets', you may need to load native file with this before you use the asset
		
		!#zh
		???è½½è??æº?????????????ä»¶ï??å¦????ä½???¾é??äº?'å»¶è?????è½½è??æº?'???é¡¹ï??ä½???¯è?½é??è¦???¨ä½¿??¨è??æº?ä¹????è°???¨æ­¤??¹æ????¥å??è½½å????????ä»?
		@param asset The asset
		@param options Some optional parameters
		@param onComplete Callback invoked when finish loading
		
		@example 
		```js
		cc.assetManager.postLoadNative(texture, (err) => console.log(err));
		``` 
		*/
		postLoadNative(asset: cc.Asset, options: Record<string, any>, onComplete: (err: Error) => void): void;
		postLoadNative(asset: cc.Asset, onComplete: (err: Error) => void): void;
		postLoadNative(asset: cc.Asset, options: Record<string, any>): void;
		postLoadNative(asset: cc.Asset): void;		
		/**
		!#en
		Load remote asset with url, such as audio, image, text and so on.
		
		!#zh
		ä½¿ç?? url ???è½½è??ç¨?èµ?æº?ï¼?ä¾?å¦???³é??ï¼???¾ç??ï¼??????¬ç??ç­????
		@param url The url of asset
		@param options Some optional parameters
		@param onComplete Callback invoked when finish loading
		
		@example 
		```js
		cc.assetManager.loadRemote('http://www.cloud.com/test1.jpg', (err, texture) => console.log(err));
		cc.assetManager.loadRemote('http://www.cloud.com/test2.mp3', (err, audioClip) => console.log(err));
		cc.assetManager.loadRemote('http://www.cloud.com/test3', { ext: '.png' }, (err, texture) => console.log(err));
		``` 
		*/
		loadRemote<T extends cc.Asset>(url: string, options: Record<string, any>, onComplete: (err: Error, asset: T) => void): void;
		loadRemote<T extends cc.Asset>(url: string, onComplete: (err: Error, asset: T) => void): void;
		loadRemote<T extends cc.Asset>(url: string, options: Record<string, any>): void;
		loadRemote<T extends cc.Asset>(url: string): void;		
		/**
		!#en
		Load script
		
		!#zh
		???è½½è?????
		@param url Url of the script
		@param options Some optional paramters
		@param onComplete Callback when script loaded or failed
		
		@example 
		```js
		loadScript('http://localhost:8080/index.js', null, (err) => console.log(err));
		``` 
		*/
		loadScript(url: string|string[], options: Record<string, any>, onComplete: (err: Error) => void): void;
		loadScript(url: string|string[], onComplete: (err: Error) => void): void;
		loadScript(url: string|string[], options: Record<string, any>): void;
		loadScript(url: string|string[]): void;		
		/**
		!#en
		load bundle
		
		!#zh
		???è½½è??æº????
		@param nameOrUrl The name or root path of bundle
		@param options Some optional paramter, same like downloader.downloadFile
		@param onComplete Callback when bundle loaded or failed
		
		@example 
		```js
		loadBundle('http://localhost:8080/test', null, (err, bundle) => console.log(err));
		``` 
		*/
		loadBundle(nameOrUrl: string, options: Record<string, any>, onComplete: (err: Error, bundle: cc.AssetManager.Bundle) => void): void;
		loadBundle(nameOrUrl: string, onComplete: (err: Error, bundle: cc.AssetManager.Bundle) => void): void;
		loadBundle(nameOrUrl: string, options: Record<string, any>): void;
		loadBundle(nameOrUrl: string): void;		
		/**
		!#en
		Release asset and it's dependencies.
		This method will not only remove the cache of the asset in assetManager, but also clean up its content.
		For example, if you release a texture, the texture asset and its gl texture data will be freed up.
		Notice, this method may cause the texture to be unusable, if there are still other nodes use the same texture, they may turn to black and report gl errors.
		
		!#zh
		?????¾è??æº?ä»¥å????¶ä??èµ?èµ?æº?, è¿?ä¸ªæ?¹æ??ä¸?ä»?ä¼?ä»? assetManager ä¸­å????¤è??æº????ç¼?å­?å¼???¨ï??è¿?ä¼?æ¸????å®????èµ?æº????å®¹ã??
		æ¯?å¦?è¯´ï??å½?ä½??????¾ä??ä¸? texture èµ?æº?ï¼?è¿?ä¸? texture ???å®???? gl è´´å?¾æ?°æ?®é?½ä??è¢«é????¾ã??
		æ³¨æ??ï¼?è¿?ä¸ªå?½æ?°å?¯è?½ä??å¯¼è?´è??æº?è´´å?¾æ??èµ?æº????ä¾?èµ????è´´å?¾ä????¯ç?¨ï??å¦??????ºæ?¯ä¸­å­???¨è????¹ä????¶ä??èµ??????·ç??è´´å?¾ï??å®?ä»¬å?¯è?½ä?????é»?å¹¶æ?? GL ???è¯¯ã??
		@param asset The asset to be released
		
		@example 
		```js
		// release a texture which is no longer need
		cc.assetManager.releaseAsset(texture);
		``` 
		*/
		releaseAsset(asset: cc.Asset): void;		
		/**
		!#en
		Release all assets. Refer to {{#crossLink "AssetManager/releaseAsset:method"}}{{/crossLink}} for detailed informations.
		
		!#zh
		?????¾æ?????èµ?æº????è¯¦ç??ä¿¡æ?¯è¯·?????? {{#crossLink "AssetManager/releaseAsset:method"}}{{/crossLink}} 
		*/
		releaseAll(): void;	
	}	
	/** `cc.loader` is deprecated, please backup your project and upgrade to {{#crossLink "AssetManager"}}{{/crossLink}} */
	export class loader {		
		/** `cc.loader.onProgress` is deprecated, please transfer onProgress to API as a parameter */
		static onProgress: any;		
		/**
		`cc.loader.load` is deprecated, please use {{#crossLink "AssetManager/loadAny:method"}}{{/crossLink}} instead
		@param resources Url list in an array
		@param progressCallback Callback invoked when progression change
		@param completeCallback Callback invoked when all resources loaded 
		*/
		static load(resources: string|string[]|{uuid?: string, url?: string, type?: string}, completeCallback?: Function): void;
		static load(resources: string|string[]|{uuid?: string, url?: string, type?: string}, progressCallback: (completedCount: number, totalCount: number, item: any) => void, completeCallback: Function|null): void;		
		/**
		`cc.loader.getXMLHttpRequest` is deprecated, please use `XMLHttpRequest` directly 
		*/
		static getXMLHttpRequest(): XMLHttpRequest;		
		/**
		`cc.loader.getItem` is deprecated, please use `cc.assetManager.asset.get` instead
		@param id The id of the item 
		*/
		static getItem(id: any): any;		
		/**
		`cc.loader.loadRes` is deprecated, please use {{#crossLink "Bundle/load:method"}}{{/crossLink}}  instead
		@param url Url of the target resource.
		                      The url is relative to the "resources" folder, extensions must be omitted.
		@param type Only asset of type will be loaded if this argument is supplied.
		@param progressCallback Callback invoked when progression change.
		@param completeCallback Callback invoked when the resource loaded. 
		*/
		static loadRes(url: string, type: typeof cc.Asset, progressCallback: (completedCount: number, totalCount: number, item: any) => void, completeCallback: ((error: Error, resource: any) => void)|null): void;
		static loadRes(url: string, type: typeof cc.Asset, completeCallback: (error: Error, resource: any) => void): void;
		static loadRes(url: string, type: typeof cc.Asset): void;
		static loadRes(url: string, progressCallback: (completedCount: number, totalCount: number, item: any) => void, completeCallback: ((error: Error, resource: any) => void)|null): void;
		static loadRes(url: string, completeCallback: (error: Error, resource: any) => void): void;
		static loadRes(url: string): void;		
		/**
		`cc.loader.loadResArray` is deprecated, please use {{#crossLink "Bundle/load:method"}}{{/crossLink}} instead
		@param urls Array of URLs of the target resource.
		                         The url is relative to the "resources" folder, extensions must be omitted.
		@param type Only asset of type will be loaded if this argument is supplied.
		@param progressCallback Callback invoked when progression change.
		@param completeCallback A callback which is called when all assets have been loaded, or an error occurs. 
		*/
		static loadResArray(url: string[], type: typeof cc.Asset, progressCallback: (completedCount: number, totalCount: number, item: any) => void, completeCallback: ((error: Error, resource: any[]) => void)|null): void;
		static loadResArray(url: string[], type: typeof cc.Asset, completeCallback: (error: Error, resource: any[]) => void): void;
		static loadResArray(url: string[], type: typeof cc.Asset): void;
		static loadResArray(url: string[], progressCallback: (completedCount: number, totalCount: number, item: any) => void, completeCallback: ((error: Error, resource: any[]) => void)|null): void;
		static loadResArray(url: string[], completeCallback: (error: Error, resource: any[]) => void): void;
		static loadResArray(url: string[]): void;
		static loadResArray(url: string[], type: typeof cc.Asset[]): void;		
		/**
		`cc.loader.loadResDir` is deprecated, please use {{#crossLink "Bundle/loadDir:method"}}{{/crossLink}} instead
		@param url Url of the target folder.
		                      The url is relative to the "resources" folder, extensions must be omitted.
		@param type Only asset of type will be loaded if this argument is supplied.
		@param progressCallback Callback invoked when progression change.
		@param completeCallback A callback which is called when all assets have been loaded, or an error occurs. 
		*/
		static loadResDir(url: string, type: typeof cc.Asset, progressCallback: (completedCount: number, totalCount: number, item: any) => void, completeCallback: ((error: Error, resource: any[], urls: string[]) => void)|null): void;
		static loadResDir(url: string, type: typeof cc.Asset, completeCallback: (error: Error, resource: any[], urls: string[]) => void): void;
		static loadResDir(url: string, type: typeof cc.Asset): void;
		static loadResDir(url: string, progressCallback: (completedCount: number, totalCount: number, item: any) => void, completeCallback: ((error: Error, resource: any[], urls: string[]) => void)|null): void;
		static loadResDir(url: string, completeCallback: (error: Error, resource: any[], urls: string[]) => void): void;
		static loadResDir(url: string): void;		
		/**
		`cc.loader.getRes` is deprecated, please use {{#crossLink "Bundle/get:method"}}{{/crossLink}} instead
		@param url url
		@param type Only asset of type will be returned if this argument is supplied. 
		*/
		static getRes(url: string, type?: Function): any;		
		/**
		`cc.loader.getDependsRecursively` is deprecated, please use use {{#crossLink "DependUtil/getDepsRecursively:method"}}{{/crossLink}} instead
		@param owner The owner asset or the resource url or the asset's uuid 
		*/
		static getDependsRecursively(owner: Asset|string): any[];		
		/** `cc.loader.assetLoader` was removed, assetLoader and md5Pipe were merged into {{#crossLink "AssetManager/transformPipeline:property"}}{{/crossLink}} */
		static assetLoader: any;		
		/** `cc.loader.md5Pipe` is deprecated, assetLoader and md5Pipe were merged into {{#crossLink "AssetManager/transformPipeline:property"}}{{/crossLink}} */
		static md5Pipe: any;		
		/** `cc.loader.downloader` is deprecated, please use {{#crossLink "AssetManager/downloader:property"}}{{/crossLink}} instead */
		static downloader: any;		
		/** `cc.loader.loader` is deprecated, please use {{#crossLink "AssetManager/parser:property"}}{{/crossLink}} instead */
		static loader: any;		
		/**
		`cc.loader.addDownloadHandlers` is deprecated, please use `cc.assetManager.downloader.register` instead
		@param extMap Custom supported types with corresponded handler 
		*/
		static addDownloadHandlers(extMap: any): void;		
		/**
		`cc.loader.addLoadHandlers` is deprecated, please use `cc.assetManager.parser.register` instead
		@param extMap Custom supported types with corresponded handler 
		*/
		static addLoadHandlers(extMap: any): void;		
		/**
		`cc.loader.release` is deprecated, please use {{#crossLink "AssetManager/releaseAsset:method"}}{{/crossLink}} instead
		@param asset asset 
		*/
		static release(asset: Asset|string|any[]): void;		
		/**
		`cc.loader.releaseAsset` is deprecated, please use {{#crossLink "AssetManager/releaseAsset:method"}}{{/crossLink}} instead
		@param asset asset 
		*/
		static releaseAsset(asset: Asset): void;		
		/**
		`cc.loader.releaseRes` is deprecated, please use {{#crossLink "AssetManager/releaseRes:method"}}{{/crossLink}} instead
		@param url url
		@param type Only asset of type will be released if this argument is supplied. 
		*/
		static releaseRes(url: string, type?: Function): void;		
		/**
		`cc.loader.releaseResDir` was removed, please use {{#crossLink "AssetManager/releaseRes:method"}}{{/crossLink}} instead 
		*/
		static releaseResDir(): void;		
		/**
		`cc.loader.releaseAll` is deprecated, please use {{#crossLink "AssetManager/releaseAll:method"}}{{/crossLink}} instead 
		*/
		static releaseAll(): void;		
		/**
		`cc.loader.removeItem` is deprecated, please use `cc.assetManager.assets.remove` instead
		@param id The id of the item 
		*/
		static removeItem(id: any): boolean;		
		/**
		`cc.loader.setAutoRelease` is deprecated, if you want to prevent some asset from auto releasing, please use {{#crossLink "Asset/addRef:method"}}{{/crossLink}} instead
		@param assetOrUrlOrUuid asset object or the raw asset's url or uuid
		@param autoRelease indicates whether should release automatically 
		*/
		static setAutoRelease(assetOrUrlOrUuid: Asset|string, autoRelease: boolean): void;		
		/**
		`cc.loader.setAutoReleaseRecursively` is deprecated, if you want to prevent some asset from auto releasing, please use {{#crossLink "Asset/addRef:method"}}{{/crossLink}} instead
		@param assetOrUrlOrUuid asset object or the raw asset's url or uuid
		@param autoRelease indicates whether should release automatically 
		*/
		static setAutoReleaseRecursively(assetOrUrlOrUuid: Asset|string, autoRelease: boolean): void;		
		/**
		`cc.loader.isAutoRelease` is deprecated
		@param assetOrUrl asset object or the raw asset's url 
		*/
		static isAutoRelease(assetOrUrl: Asset|string): boolean;	
	}	
	/** `cc.url` is deprecated */
	export class url {		
		/**
		`cc.url.raw` is deprecated, please use `cc.resources.load` directly, or use `Asset.nativeUrl` instead.
		@param url url 
		*/
		static raw(url: string): string;	
	}	
	/** `cc.LoadingItems` was removed, please use {{#crossLink "Task"}}{{/crossLink}} instead */
	export class LoadingItems {	
	}	
	/** !#en
	Base class for handling assets used in Creator.<br/>
	
	You may want to override:<br/>
	- createNode<br/>
	- getset functions of _nativeAsset<br/>
	- cc.Object._serialize<br/>
	- cc.Object._deserialize<br/>
	!#zh
	Creator ä¸­ç??èµ?æº???ºç±»???<br/>
	
	??¨å?¯è?½é??è¦???????ï¼?<br/>
	- createNode <br/>
	- _nativeAsset ??? getset ??¹æ??<br/>
	- cc.Object._serialize<br/>
	- cc.Object._deserialize<br/> */
	export class Asset extends Object {		
		/** `cc.Asset.url` is deprecated, please use {{#crossLink "Asset/nativeUrl:property"}}{{/crossLink}} instead */
		url: string;		
		/** !#en
		Whether the asset is loaded or not.
		!#zh
		è¯¥è??æº???¯å?¦å·²ç»??????????è½½ã?? */
		loaded: boolean;		
		/** !#en
		Returns the url of this asset's native object, if none it will returns an empty string.
		!#zh
		è¿????è¯¥è??æº?å¯¹å???????®æ??å¹³å?°è??æº???? URLï¼?å¦????æ²¡æ??å°?è¿????ä¸?ä¸ªç©ºå­?ç¬¦ä¸²??? */
		nativeUrl: string;		
		/** !#en
		The number of reference
		
		!#zh
		å¼???¨ç????°é?? */
		refCount: number;		
		/** !#en Indicates whether its dependent raw assets can support deferred load if the owner scene (or prefab) is marked as `asyncLoadAssets`.
		!#zh å½???ºæ?¯æ?? Prefab è¢«æ??è®°ä¸º `asyncLoadAssets`ï¼?ç¦?æ­¢å»¶è¿????è½½è¯¥èµ?æº????ä¾?èµ??????¶å?????å§?èµ?æº???? */
		static preventDeferredLoadDependents: boolean;		
		/** !#en Indicates whether its native object should be preloaded from native url.
		!#zh ç¦?æ­¢é?????è½½å?????å¯¹è±¡??? */
		static preventPreloadNativeObject: boolean;		
		/**
		!#en
		Returns the asset's url.
		
		The `Asset` object overrides the `toString()` method of the `Object` object.
		For `Asset` objects, the `toString()` method returns a string representation of the object.
		JavaScript calls the `toString()` method automatically when an asset is to be represented as a text value or when a texture is referred to in a string concatenation.
		!#zh
		è¿????èµ?æº???? URL???
		
		Asset å¯¹è±¡å°?ä¼??????? Object å¯¹è±¡??? `toString()` ??¹æ?????
		å¯¹ä?? Asset å¯¹è±¡ï¼?`toString()` ??¹æ??è¿????è¯¥å¯¹è±¡ç??å­?ç¬¦ä¸²è¡¨ç¤ºå½¢å?????
		å½?èµ?æº?è¦?è¡¨ç¤ºä¸ºæ????¬å?¼æ?¶æ????¨å??ç¬¦ä¸²è¿???¥æ?¶å????¨æ?¶ï??JavaScript ä¼???ªå?¨è????? `toString()` ??¹æ????? 
		*/
		toString(): string;		
		/**
		!#en
		Create a new node using this asset in the scene.<br/>
		If this type of asset dont have its corresponding node type, this method should be null.
		!#zh
		ä½¿ç?¨è¯¥èµ?æº???¨å?ºæ?¯ä¸­???å»ºä??ä¸ªæ?°è????¹ã??<br/>
		å¦????è¿?ç±»è??æº?æ²¡æ????¸å??????????¹ç±»???ï¼?è¯¥æ?¹æ??åº?è¯¥æ?¯ç©º??????
		@param callback callback 
		*/
		createNode(callback: (error: string, node: any) => void): void;		
		/**
		!#en
		Add references of asset
		
		!#zh
		å¢????èµ?æº????å¼???? 
		*/
		addRef(): cc.Asset;		
		/**
		!#en
		Reduce references of asset and it will be auto released when refCount equals 0.
		
		!#zh
		???å°?èµ?æº????å¼???¨å¹¶å°?è¯?è¿?è¡???ªå?¨é????¾ã?? 
		*/
		decRef(): cc.Asset;	
	}	
	/** Predefined constants */
	export class macro {		
		/** `cc.macro.DOWNLOAD_MAX_CONCURRENT` is deprecated now, please use {{#crossLink "Downloader/maxConcurrency:property"}}{{/crossLink}} instead */
		static DOWNLOAD_MAX_CONCURRENT: number;		
		/** PI / 180 */
		static RAD: number;		
		/** One degree */
		static DEG: number;		
		static REPEAT_FOREVER: number;		
		static FLT_EPSILON: number;		
		/** Minimum z index value for node */
		static MIN_ZINDEX: number;		
		/** Maximum z index value for node */
		static MAX_ZINDEX: number;		
		static ONE: number;		
		static ZERO: number;		
		static SRC_ALPHA: number;		
		static SRC_ALPHA_SATURATE: number;		
		static SRC_COLOR: number;		
		static DST_ALPHA: number;		
		static DST_COLOR: number;		
		static ONE_MINUS_SRC_ALPHA: number;		
		static ONE_MINUS_SRC_COLOR: number;		
		static ONE_MINUS_DST_ALPHA: number;		
		static ONE_MINUS_DST_COLOR: number;		
		static ONE_MINUS_CONSTANT_ALPHA: number;		
		static ONE_MINUS_CONSTANT_COLOR: number;		
		/** Oriented vertically */
		static ORIENTATION_PORTRAIT: number;		
		/** Oriented horizontally */
		static ORIENTATION_LANDSCAPE: number;		
		/** Oriented automatically */
		static ORIENTATION_AUTO: number;		
		/** <p>
		  If enabled, the texture coordinates will be calculated by using this formula: <br/>
		     - texCoord.left = (rect.x*2+1) / (texture.wide*2);                  <br/>
		     - texCoord.right = texCoord.left + (rect.width*2-2)/(texture.wide*2); <br/>
		                                                                                <br/>
		 The same for bottom and top.                                                   <br/>
		                                                                                <br/>
		 This formula prevents artifacts by using 99% of the texture.                   <br/>
		 The "correct" way to prevent artifacts is by expand the texture's border with the same color by 1 pixel<br/>
		                                                                                 <br/>
		 Affected component:                                                                 <br/>
		     - cc.TMXLayer                                                       <br/>
		                                                                                 <br/>
		 Enabled by default. To disabled set it to 0. <br/>
		 To modify it, in Web engine please refer to CCMacro.js, in JSB please refer to CCConfig.h
		</p> */
		static FIX_ARTIFACTS_BY_STRECHING_TEXEL_TMX: number;		
		/** Position of the FPS (Default: 0,0 (bottom-left corner))<br/>
		To modify it, in Web engine please refer to CCMacro.js, in JSB please refer to CCConfig.h */
		static DIRECTOR_STATS_POSITION: Vec2;		
		/** <p>
		   If enabled, actions that alter the position property (eg: CCMoveBy, CCJumpBy, CCBezierBy, etc..) will be stacked.                  <br/>
		   If you run 2 or more 'position' actions at the same time on a node, then end position will be the sum of all the positions.        <br/>
		   If disabled, only the last run action will take effect.
		</p> */
		static ENABLE_STACKABLE_ACTIONS: number;		
		/** !#en
		The timeout to determine whether a touch is no longer active and should be removed.
		The reason to add this timeout is due to an issue in X5 browser core,
		when X5 is presented in wechat on Android, if a touch is glissed from the bottom up, and leave the page area,
		no touch cancel event is triggered, and the touch will be considered active forever.
		After multiple times of this action, our maximum touches number will be reached and all new touches will be ignored.
		So this new mechanism can remove the touch that should be inactive if it's not updated during the last 5000 milliseconds.
		Though it might remove a real touch if it's just not moving for the last 5 seconds which is not easy with the sensibility of mobile touch screen.
		You can modify this value to have a better behavior if you find it's not enough.
		!#zh
		??¨ä???????«ä??ä¸ªè§¦??¹å¯¹è±¡æ?¯å?¦å·²ç»?å¤±æ??å¹¶ä????¯ä»¥è¢«ç§»??¤ç??å»¶æ?¶æ?¶é??
		æ·»å??è¿?ä¸ªæ?¶é?¿ç??????????? X5 ?????¸å?¨å¾®ä¿¡æ??è§???¨ä¸­??ºç?°ç??ä¸?ä¸? bug???
		??¨è??ä¸ªç?¯å??ä¸?ï¼?å¦??????¨æ?·å??ä¸?ä¸ªè§¦??¹ä??åº????ä¸?ç§»å?ºé¡µ??¢å?ºå??ï¼?å°?ä¸?ä¼?è§¦å??ä»»ä?? touch cancel ??? touch end äº?ä»¶ï?????è¿?ä¸ªè§¦??¹ä??è¢«æ°¸è¿?å½?ä½?????????¨é¡µ??¢ä???????????è§¦ç?¹ã??
		???å¤?è¿???·æ??ä½????æ¬¡ä?????ï¼?å±?å¹?ä¸????è§¦ç?¹æ?°é??å°?è¾¾å?°æ??ä»¬ç??äº?ä»¶ç³»ç»??????¯æ????????é«?è§¦ç?¹æ?°é??ï¼?ä¹?????????????è§¦æ?¸ä??ä»¶é?½å??è¢«å¿½??¥ã??
		???ä»¥è??ä¸ªæ?°ç????ºå?¶å?¯ä»¥??¨è§¦??¹å?¨ä??å®???¶é?´å??æ²¡æ??ä»»ä????´æ?°ç???????µä??è§?ä¸ºå¤±???è§¦ç?¹å¹¶ä»?äº?ä»¶ç³»ç»?ä¸­ç§»??¤ã??
		å½???¶ï??è¿?ä¹???¯è?½ç§»??¤ä??ä¸ªç??å®????è§¦ç?¹ï??å¦??????¨æ?·ç??è§¦ç?¹ç???????¨ä??å®???¶é?´æ®µ???å®???¨æ²¡???ç§»å?¨ï??è¿???¨å??????????ºå??å¹??????µæ??åº¦ä??ä¼?å¾???¾ï?????
		ä½???¯ä»¥ä¿®æ?¹è??ä¸ªå?¼æ?¥è?·å??ä½????è¦??????????ï¼?é»?è®¤å?¼æ?? 5000 æ¯«ç????? */
		static TOUCH_TIMEOUT: number;		
		/** !#en
		The maximum vertex count for a single batched draw call.
		!#zh
		???å¤§å?¯ä»¥è¢«å??æ¬¡æ?¹å?????æ¸²æ?????é¡¶ç?¹æ?°é????? */
		static BATCH_VERTEX_COUNT: number;		
		/** !#en
		Whether or not enabled tiled map auto culling. If you set the TiledMap skew or rotation, then need to manually disable this, otherwise, the rendering will be wrong.
		!#zh
		??¯å?¦å????¯ç?¦ç????°å?¾ç????ªå?¨è??????????½ã????¦ç????°å?¾å?????è®¾ç½®äº? skew, rotation ???????????¨ä??????????ºç??è¯?ï¼????è¦??????¨å?³é?­ï????¦å??æ¸²æ??ä¼???ºé????? */
		static ENABLE_TILEDMAP_CULLING: boolean;		
		/** !#en
		Boolean that indicates if the canvas contains an alpha channel, default sets to false for better performance.
		Though if you want to make your canvas background transparent and show other dom elements at the background,
		you can set it to true before `cc.game.run`.
		Web only.
		!#zh
		??¨ä??è®¾ç½® Canvas ?????¯æ?¯å?¦æ?¯æ?? alpha ??????ï¼?é»?è®¤ä¸º falseï¼?è¿???·å?¯ä»¥?????´é???????§è?½è¡¨??°ã??
		å¦????ä½?å¸???? Canvas ?????¯æ?¯é????????ï¼?å¹¶æ?¾ç¤º???????????¶ä?? DOM ???ç´?ï¼?ä½???¯ä»¥??? `cc.game.run` ä¹????å°?è¿?ä¸ªå?¼è®¾ä¸? true???
		ä»???¯æ?? Web */
		static ENABLE_TRANSPARENT_CANVAS: boolean;		
		/** !#en
		Boolean that indicates if the WebGL context is created with `antialias` option turned on, default value is false.
		Set it to true could make your game graphics slightly smoother, like texture hard edges when rotated.
		Whether to use this really depend on your game design and targeted platform,
		device with retina display usually have good detail on graphics with or without this option,
		you probably don't want antialias if your game style is pixel art based.
		Also, it could have great performance impact with some browser / device using software MSAA.
		You can set it to true before `cc.game.run`.
		Web only.
		!#zh
		??¨ä??è®¾ç½®??¨å??å»? WebGL Context ??¶æ?¯å?¦å????¯æ????¯é½¿???é¡¹ï??é»?è®¤å?¼æ?? false???
		å°?è¿?ä¸ªé??é¡¹è®¾ç½®ä¸º true ä¼?è®©ä?????æ¸¸æ????»é?¢ç??ç¨?å¹³æ??ä¸?äº?ï¼?æ¯?å¦????è½¬ç¡¬è¾¹è´´??¾æ?¶ç????¯é½¿?????¯å?¦å????¯è??ä¸ªé??é¡¹å??å¤§ç??åº¦ä???????³ä??ä½????æ¸¸æ???????¢å?????å¹³å?°ã??
		??¨å¤§å¤???°æ?¥æ?? retina çº§å?«å??å¹????è®¾å??ä¸???¨æ?·å??å¾????æ³???ºå??è¿?ä¸ªé??é¡¹å¸¦??¥ç????????ï¼?å¦????ä½????æ¸¸æ???????©å??ç´???ºæ?¯é????¼ï??ä½?ä¹?å¤????ä¸?ä¼???³å????¯è??ä¸ªé??é¡¹ã??
		?????¶ï????¨å????¨å??ä½¿ç?¨è½¯ä»¶çº§??«æ????¯é½¿ç®?æ³????è®¾å?????æµ?è§???¨ä??ï¼?è¿?ä¸ªé??é¡¹ä??å¯¹æ?§è?½äº§???æ¯?è¾?å¤§ç??å½±å?????
		ä½???¯ä»¥??? `cc.game.run` ä¹????è®¾ç½®è¿?ä¸ªå?¼ï????¦å??å®?ä¸?ä¼??????????
		ä»???¯æ?? Web */
		static ENABLE_WEBGL_ANTIALIAS: boolean;		
		/** !#en
		Whether or not enable auto culling.
		This feature have been removed in v2.0 new renderer due to overall performance consumption.
		We have no plan currently to re-enable auto culling.
		If your game have more dynamic objects, we suggest to disable auto culling.
		If your game have more static objects, we suggest to enable auto culling.
		!#zh
		??¯å?¦å????¯è?ªå?¨è??????????½ï??å¼???¯è??????????½å??ä¼??????¨å??å¹?å¤??????©ä??ä»?æ¸²æ????????ä¸­å?»é?¤æ?????
		è¿?ä¸ªå????½å?? v2.0 ?????°æ¸²?????¨ä¸­è¢«ç§»??¤ä??ï¼????ä¸ºå????¨å¤§å¤???°æ¸¸???ä¸­æ??å¸¦æ?¥ç????????è¦?é«?äº???§è?½ç????????ï¼???®å?????ä»¬æ²¡???è®¡å???????°æ?¯æ????ªå?¨è????ªã??
		å¦????æ¸¸æ??ä¸­ç????¨æ????©ä??æ¯?è¾?å¤????è¯?ï¼?å»ºè®®å°?æ­¤é??é¡¹å?³é?­ã??
		å¦????æ¸¸æ??ä¸­ç??????????©ä??æ¯?è¾?å¤????è¯?ï¼?å»ºè®®å°?æ­¤é??é¡¹æ??å¼???? */
		static ENABLE_CULLING: boolean;		
		/** !#en
		Whether to clear the original image cache after uploaded a texture to GPU. If cleared, [Dynamic Atlas](https://docs.cocos.com/creator/manual/en/advanced-topics/dynamic-atlas.html) will not be supported.
		Normally you don't need to enable this option on the web platform, because Image object doesn't consume too much memory.
		But on WeChat Game platform, the current version cache decoded data in Image object, which has high memory usage.
		So we enabled this option by default on WeChat, so that we can release Image cache immediately after uploaded to GPU.
		!#zh
		??¯å?¦å?¨å??è´´å?¾ä??ä¼???? GPU ä¹?????????¤å??å§???¾ç??ç¼?å­?ï¼??????¤ä???????¾ç??å°????æ³?è¿?è¡? [??¨æ???????¾](https://docs.cocos.com/creator/manual/zh/advanced-topics/dynamic-atlas.html)???
		??? Web å¹³å?°ï??ä½????å¸¸ä?????è¦?å¼???¯è??ä¸ªé??é¡¹ï?????ä¸ºå?? Web å¹³å?? Image å¯¹è±¡????????¨ç?????å­?å¾?å°????
		ä½???¯å?¨å¾®ä¿¡å??æ¸¸æ??å¹³å?°ç??å½?????????¬ï??Image å¯¹è±¡ä¼?ç¼?å­?è§????????????¾ç????°æ?®ï??å®?????????¨ç?????å­?ç©ºé?´å??å¤§ã??
		???ä»¥æ??ä»¬å?¨å¾®ä¿¡å¹³??°é??è®¤å????¯ä??è¿?ä¸ªé??é¡¹ï??è¿???·æ??ä»¬å°±??¯ä»¥??¨ä??ä¼? GL è´´å?¾ä?????ç«???³é????? Image å¯¹è±¡??????å­?ï¼???¿å??è¿?é«???????å­??????¨ã?? */
		static CLEANUP_IMAGE_CACHE: boolean;		
		/** !#en
		Whether or not show mesh wire frame.
		!#zh
		??¯å?¦æ?¾ç¤ºç½???¼ç??çº¿æ????? */
		static SHOW_MESH_WIREFRAME: boolean;		
		/** !#en
		Whether or not show mesh normal.
		!#zh
		??¯å?¦æ?¾ç¤ºç½???¼ç??æ³?çº¿ã?? */
		static SHOW_MESH_NORMAL: boolean;		
		/** !#en
		Whether to enable multi-touch.
		!#zh
		??¯å?¦å????¯å????¹è§¦??? */
		static ENABLE_MULTI_TOUCH: boolean;		
		/** References:
		https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap
		https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/createImageBitmap
		
		!#en
		Whether to use image bitmap first. If enabled, memory usage will increase.
		
		!#zh
		??¯å?¦ä?????ä½¿ç?? image bitmapï¼???¯ç?¨ä?????ï¼????å­??????¨ä?????é«? */
		static ALLOW_IMAGE_BITMAP: boolean;		
		/** !#en
		Whether to use native TTF renderer which is faster but layout slightly different.
		
		!#zh
		??¯å?¦ä½¿??¨å?????????????¬æ¸²?????ºå??, å¸?å±????ç¼?è¾???¨æ??å·®å??. */
		static ENABLE_NATIVE_TTF_RENDERER: boolean;		
		/** !#en
		The image format supported by the engine defaults, and the supported formats may differ in different build platforms and device types.
		Currently all platform and device support ['.webp', '.jpg', '.jpeg', '.bmp', '.png'], The iOS mobile platform also supports the PVR format???
		!#zh
		å¼????é»?è®¤æ?¯æ???????¾ç????¼å??ï¼???¯æ???????¼å????¯è?½å?¨ä???????????å»ºå¹³??°å??è®¾å??ç±»å??ä¸???????å·®å?«ã??
		??®å????????å¹³å?°å??è®¾å????¯æ???????¼å????? ['.webp', '.jpg', '.jpeg', '.bmp', '.png']. ??¦å?? Ios ?????ºå¹³??°è??é¢?å¤???¯æ??äº? PVR ??¼å????? */
		static SUPPORT_TEXTURE_FORMATS: string[];	
	}	
	/** !#en Class for audio data handling.
	!#zh ??³é??èµ?æº?ç±»ã?? */
	export class AudioClip extends Asset implements EventTarget {		
		/** !#en Get the audio clip duration
		!#zh ??·å????³é????ªè???????¿åº¦ */
		duration: number;		
		/**
		!#en Checks whether the EventTarget object has any callback registered for a specific type of event.
		!#zh æ£???¥ä??ä»¶ç?®æ??å¯¹è±¡??¯å?¦æ??ä¸ºç?¹å??ç±»å?????äº?ä»¶æ³¨?????????è°????
		@param type The type of event. 
		*/
		hasEventListener(type: string): boolean;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget.
		This type of event should be triggered via `emit`.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°????è¿?ç§?ç±»å?????äº?ä»¶å??è¯¥è¢« `emit` è§¦å?????
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, node);
		``` 
		*/
		on<T extends Function>(type: string, callback: T, target?: any, useCapture?: boolean): T;		
		/**
		!#en
		Removes the listeners previously registered with the same type, callback, target and or useCapture,
		if only type is passed as parameter, all listeners registered with that type will be removed.
		!#zh
		?????¤ä???????¨å??ç±»å??ï¼????è°?ï¼???®æ????? useCapture æ³¨å?????äº?ä»¶ç????¬å?¨ï??å¦??????ªä????? typeï¼?å°?ä¼??????? type ç±»å???????????äº?ä»¶ç????¬å?¨ã??
		@param type A string representing the event type being removed.
		@param callback The callback to remove.
		@param target The target (this object) to invoke the callback, if it's not given, only callback without target will be removed
		
		@example 
		```js
		// register fire eventListener
		var callback = eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, target);
		// remove fire event listener
		eventTarget.off('fire', callback, target);
		// remove all fire event listeners
		eventTarget.off('fire');
		``` 
		*/
		off(type: string, callback?: Function, target?: any): void;		
		/**
		!#en Removes all callbacks previously registered with the same target (passed as parameter).
		This is not for removing all listeners in the current event target,
		and this is not for removing all listeners the target parameter have registered.
		It's only for removing all listeners (callback and target couple) registered on the current event target by the target parameter.
		!#zh ??¨å????? EventTarget ä¸??????¤æ??å®???®æ??ï¼?target ?????°ï??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°æ??æ³??????¤å????? EventTarget ?????????äº?ä»¶ç????¬å?¨ï??ä¹????æ³??????? target ?????°æ??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°å?ªè?½å????? target ?????°å?¨å????? EventTarget ä¸?æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		@param target The target to be searched for all related listeners 
		*/
		targetOff(target: any): void;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget,
		the callback will remove itself after the first time it is triggered.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°?ï¼????è°?ä¼???¨ç¬¬ä¸???¶é?´è¢«è§¦å??????????¤è?ªèº«???
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.once('fire', function () {
		    cc.log("this is the callback and will be invoked only once");
		}, node);
		``` 
		*/
		once(type: string, callback: (arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any) => void, target?: any): void;		
		/**
		!#en
		Send an event with the event object.
		!#zh
		???è¿?äº?ä»¶å¯¹è±¡æ´¾???äº?ä»?
		@param event event 
		*/
		dispatchEvent(event: Event): void;		
		/**
		!#en
		Destroy all callbackInfos.
		!#zh
		???æ¯?è®°å?????äº?ä»? 
		*/
		clear(): void;	
	}	
	/** !#en Class for BitmapFont handling.
	!#zh ä½???¾å??ä½?èµ?æº?ç±»ã?? */
	export class BitmapFont extends Font {	
	}	
	/** undefined */
	export class BufferAsset extends Asset {	
	}	
	/** !#en Class for Font handling.
	!#zh å­?ä½?èµ?æº?ç±»ã?? */
	export class Font extends Asset {	
	}	
	/** !#en
	Class for JSON file. When the JSON file is loaded, this object is returned.
	The parsed JSON object can be accessed through the `json` attribute in it.<br>
	If you want to get the original JSON text, you should modify the extname to `.txt`
	so that it is loaded as a `TextAsset` instead of a `JsonAsset`.
	
	!#zh
	JSON èµ?æº?ç±»ã??JSON ???ä»¶å??è½½å??ï¼?å°?ä¼?è¿????è¯¥å¯¹è±¡ã????¯ä»¥???è¿???¶ä¸­??? `json` å±???§è®¿??®è§£????????? JSON å¯¹è±¡???<br>
	å¦????ä½???³è????·å?? JSON ??????å§??????¬ï?????ä¹?åº?è¯¥ä¿®??¹æ?????ä»¶ç?????ç¼?ä¸? `.txt`ï¼?è¿???·å°±ä¼????è½½ä¸ºä¸?ä¸? `TextAsset` ???ä¸???? `JsonAsset`??? */
	export class JsonAsset extends Asset {		
		/** The loaded JSON object. */
		json: any;	
	}	
	/** !#en Class for LabelAtlas handling.
	!#zh ??ºæ?¯æ?°å??å­?ä½?èµ?æº?ç±»ã?? */
	export class LabelAtlas extends BitmapFont {	
	}	
	/** !#en Class for prefab handling.
	!#zh é¢???¶è??æº?ç±»ã?? */
	export class Prefab extends Asset {		
		/** the main cc.Node in the prefab */
		data: Node;		
		/** !#zh
		è®¾ç½®å®?ä¾????è¿?ä¸? prefab ??¶æ????¨ç??ä¼????ç­???¥ã????¹æ?®ä½¿??¨æ????µè®¾ç½®ä¸º???????????¼ï????½ä?????è¯? prefab å®?ä¾?????????¨ç????¶é?´ã??
		!#en
		Indicates the optimization policy for instantiating this prefab.
		Set to a suitable value based on usage, can optimize the time it takes to instantiate this prefab. */
		optimizationPolicy: Prefab.OptimizationPolicy;		
		/** !#en Indicates the raw assets of this prefab can be load after prefab loaded.
		!#zh ???ç¤ºè¯¥ Prefab ä¾?èµ????èµ?æº???¯å?¦å?? Prefab ???è½½å?????å»¶è?????è½½ã?? */
		asyncLoadAssets: boolean;		
		readonly: boolean;		
		/**
		Dynamically translation prefab data into minimized code.<br/>
		This method will be called automatically before the first time the prefab being instantiated,
		but you can re-call to refresh the create function once you modified the original prefab data in script. 
		*/
		compileCreateFunction(): void;	
	}	
	/** Render textures are textures that can be rendered to. */
	export class RenderTexture extends Texture2D {		
		/**
		!#en
		Init the render texture with size.
		!#zh
		???å§???? render texture
		@param width width
		@param height height
		@param depthStencilFormat depthStencilFormat 
		*/
		initWithSize(width?: number, height?: number, depthStencilFormat?: number): void;		
		/**
		!#en
		Get pixels from render texture, the pixels data stores in a RGBA Uint8Array.
		It will return a new (width * height * 4) length Uint8Array by default???
		You can specify a data to store the pixels to reuse the data,
		you and can specify other params to specify the texture region to read.
		!#zh
		ä»? render texture è¯»å?????ç´???°æ?®ï????°æ?®ç±»???ä¸? RGBA ??¼å????? Uint8Array ??°ç?????
		é»?è®¤æ??æ¬¡è????¨æ­¤??½æ?°ä????????ä¸?ä¸ªå¤§å°?ä¸? ï¼???? x é«? x 4ï¼? ??? Uint8Array???
		ä½???¯ä»¥???è¿?ä¼???? data ??¥æ?¥æ?¶å??ç´???°æ?®ï??ä¹???¯ä»¥???è¿?ä¼??????¥æ??å®????è¦?è¯»å???????ºå????????ç´????
		@param data data
		@param x x
		@param y y
		@param w w
		@param h h 
		*/
		readPixels(data?: Uint8Array, x?: number, y?: number, w?: number, h?: number): Uint8Array;	
	}	
	/** !#en Class for scene handling.
	!#zh ??ºæ?¯è??æº?ç±»ã?? */
	export class SceneAsset extends Asset {		
		scene: Scene;		
		/** !#en Indicates the raw assets of this scene can be load after scene launched.
		!#zh ???ç¤ºè¯¥??ºæ?¯ä??èµ????èµ?æº???¯å?¦å?¨å?ºæ?¯å????¢å?????å»¶è?????è½½ã?? */
		asyncLoadAssets: boolean;	
	}	
	/** !#en Class for script handling.
	!#zh Script èµ?æº?ç±»ã?? */
	export class _Script extends Asset {	
	}	
	/** !#en Class for JavaScript handling.
	!#zh JavaScript èµ?æº?ç±»ã?? */
	export class _JavaScript extends Asset {	
	}	
	/** !#en Class for TypeScript handling.
	!#zh TypeScript èµ?æº?ç±»ã?? */
	export class TypeScript extends Asset {	
	}	
	/** !#en Class for sprite atlas handling.
	!#zh ç²¾ç?µå?¾é??èµ?æº?ç±»ã?? */
	export class SpriteAtlas extends Asset {		
		/**
		Returns the texture of the sprite atlas 
		*/
		getTexture(): Texture2D;		
		/**
		Returns the sprite frame correspond to the given key in sprite atlas.
		@param key key 
		*/
		getSpriteFrame(key: string): SpriteFrame;		
		/**
		Returns the sprite frames in sprite atlas. 
		*/
		getSpriteFrames(): SpriteFrame[];	
	}	
	/** !#en
	A cc.SpriteFrame has:<br/>
	 - texture: A cc.Texture2D that will be used by render components<br/>
	 - rectangle: A rectangle of the texture
	
	!#zh
	ä¸?ä¸? SpriteFrame ?????«ï??<br/>
	 - çº¹ç??ï¼?ä¼?è¢«æ¸²???ç»?ä»¶ä½¿??¨ç?? Texture2D å¯¹è±¡???<br/>
	 - ??©å½¢ï¼???¨çº¹???ä¸­ç????©å½¢??ºå????? */
	export class SpriteFrame extends Asset implements EventTarget {		
		/** !#en Top border of the sprite
		!#zh sprite ???é¡¶é?¨è¾¹æ¡? */
		insetTop: number;		
		/** !#en Bottom border of the sprite
		!#zh sprite ???åº???¨è¾¹æ¡? */
		insetBottom: number;		
		/** !#en Left border of the sprite
		!#zh sprite ???å·¦è¾¹è¾¹æ?? */
		insetLeft: number;		
		/** !#en Right border of the sprite
		!#zh sprite ???å·¦è¾¹è¾¹æ?? */
		insetRight: number;		
		/**
		!#en
		Constructor of SpriteFrame class.
		!#zh
		SpriteFrame ç±»ç??????????½æ?°ã??
		@param filename filename
		@param rect rect
		@param rotated Whether the frame is rotated in the texture
		@param offset The offset of the frame in the texture
		@param originalSize The size of the frame in the texture 
		*/
		constructor(filename?: string|Texture2D, rect?: Rect, rotated?: boolean, offset?: Vec2, originalSize?: Size);		
		/**
		!#en Returns whether the texture have been loaded
		!#zh è¿??????¯å?¦å·²???è½½çº¹??? 
		*/
		textureLoaded(): boolean;		
		/**
		!#en Returns whether the sprite frame is rotated in the texture.
		!#zh ??·å?? SpriteFrame ??¯å?¦æ??è½? 
		*/
		isRotated(): boolean;		
		/**
		!#en Set whether the sprite frame is rotated in the texture.
		!#zh è®¾ç½® SpriteFrame ??¯å?¦æ??è½?
		@param bRotated bRotated 
		*/
		setRotated(bRotated: boolean): void;		
		/**
		!#en Returns whether the sprite frame is flip x axis in the texture.
		!#zh ??·å?? SpriteFrame ??¯å?¦å??è½? x è½? 
		*/
		isFlipX(): boolean;		
		/**
		!#en Returns whether the sprite frame is flip y axis in the texture.
		!#zh ??·å?? SpriteFrame ??¯å?¦å??è½? y è½? 
		*/
		isFlipY(): boolean;		
		/**
		!#en Set whether the sprite frame is flip x axis in the texture.
		!#zh è®¾ç½® SpriteFrame ??¯å?¦ç¿»è½? x è½?
		@param flipX flipX 
		*/
		setFlipX(flipX: boolean): void;		
		/**
		!#en Set whether the sprite frame is flip y axis in the texture.
		!#zh è®¾ç½® SpriteFrame ??¯å?¦ç¿»è½? y è½?
		@param flipY flipY 
		*/
		setFlipY(flipY: boolean): void;		
		/**
		!#en Returns the rect of the sprite frame in the texture.
		!#zh ??·å?? SpriteFrame ???çº¹ç????©å½¢??ºå?? 
		*/
		getRect(): Rect;		
		/**
		!#en Sets the rect of the sprite frame in the texture.
		!#zh è®¾ç½® SpriteFrame ???çº¹ç????©å½¢??ºå??
		@param rect rect 
		*/
		setRect(rect: Rect): void;		
		/**
		!#en Returns the original size of the trimmed image.
		!#zh ??·å??ä¿®å?ªå????????å§?å¤§å?? 
		*/
		getOriginalSize(): Size;		
		/**
		!#en Sets the original size of the trimmed image.
		!#zh è®¾ç½®ä¿®å?ªå????????å§?å¤§å??
		@param size size 
		*/
		setOriginalSize(size: Size): void;		
		/**
		!#en Returns the texture of the frame.
		!#zh ??·å??ä½¿ç?¨ç??çº¹ç??å®?ä¾? 
		*/
		getTexture(): Texture2D;		
		/**
		!#en Returns the offset of the frame in the texture.
		!#zh ??·å?????ç§»é?? 
		*/
		getOffset(): Vec2;		
		/**
		!#en Sets the offset of the frame in the texture.
		!#zh è®¾ç½®???ç§»é??
		@param offsets offsets 
		*/
		setOffset(offsets: Vec2): void;		
		/**
		!#en Clone the sprite frame.
		!#zh ?????? SpriteFrame 
		*/
		clone(): SpriteFrame;		
		/**
		!#en Set SpriteFrame with Texture, rect, rotated, offset and originalSize.<br/>
		!#zh ???è¿? Textureï¼?rectï¼?rotatedï¼?offset ??? originalSize è®¾ç½® SpriteFrame???
		@param texture texture
		@param rect rect
		@param rotated rotated
		@param offset offset
		@param originalSize originalSize 
		*/
		setTexture(texture: Texture2D, rect?: Rect, rotated?: boolean, offset?: Vec2, originalSize?: Size): boolean;		
		/**
		!#en If a loading scene (or prefab) is marked as `asyncLoadAssets`, all the textures of the SpriteFrame which
		associated by user's custom Components in the scene, will not preload automatically.
		These textures will be load when Sprite component is going to render the SpriteFrames.
		You can call this method if you want to load the texture early.
		!#zh å½????è½½ä¸­?????ºæ?¯æ?? Prefab è¢«æ??è®°ä¸º `asyncLoadAssets` ??¶ï????¨æ?·å?¨å?ºæ?¯ä¸­??±è?ªå??ä¹?ç»?ä»¶å?³è????°ç???????? SpriteFrame ???è´´å?¾é?½ä??ä¼?è¢«æ????????è½½ã??
		??ªæ??å½? Sprite ç»?ä»¶è??æ¸²æ??è¿?äº? SpriteFrame ??¶ï?????ä¼?æ£???¥è´´??¾æ?¯å?¦å??è½½ã??å¦????ä½?å¸???????è½½è??ç¨???????ï¼?ä½???¯ä»¥???å·¥è????¨è??ä¸ªæ?¹æ?????
		
		@example 
		```js
		if (spriteFrame.textureLoaded()) {
		    this._onSpriteFrameLoaded();
		}
		else {
		    spriteFrame.once('load', this._onSpriteFrameLoaded, this);
		    spriteFrame.ensureLoadTexture();
		}
		``` 
		*/
		ensureLoadTexture(): void;		
		/**
		!#en
		If you do not need to use the SpriteFrame temporarily, you can call this method so that its texture could be garbage collected. Then when you need to render the SpriteFrame, you should call `ensureLoadTexture` manually to reload texture.
		!#zh
		å½?ä½??????¶ä?????ä½¿ç?¨è??ä¸? SpriteFrame ??¶ï????¯ä»¥è°???¨è??ä¸ªæ?¹æ????¥ä??è¯?å¼???¨ç??è´´å?¾å¯¹è±¡è?½è¢« GC?????¶å??å½?ä½?è¦?æ¸²æ?? SpriteFrame ??¶ï??ä½????è¦??????¨è????? `ensureLoadTexture` ??¥é????°å??è½½è´´??¾ã?? 
		*/
		clearTexture(): void;		
		/**
		!#en Checks whether the EventTarget object has any callback registered for a specific type of event.
		!#zh æ£???¥ä??ä»¶ç?®æ??å¯¹è±¡??¯å?¦æ??ä¸ºç?¹å??ç±»å?????äº?ä»¶æ³¨?????????è°????
		@param type The type of event. 
		*/
		hasEventListener(type: string): boolean;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget.
		This type of event should be triggered via `emit`.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°????è¿?ç§?ç±»å?????äº?ä»¶å??è¯¥è¢« `emit` è§¦å?????
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, node);
		``` 
		*/
		on<T extends Function>(type: string, callback: T, target?: any, useCapture?: boolean): T;		
		/**
		!#en
		Removes the listeners previously registered with the same type, callback, target and or useCapture,
		if only type is passed as parameter, all listeners registered with that type will be removed.
		!#zh
		?????¤ä???????¨å??ç±»å??ï¼????è°?ï¼???®æ????? useCapture æ³¨å?????äº?ä»¶ç????¬å?¨ï??å¦??????ªä????? typeï¼?å°?ä¼??????? type ç±»å???????????äº?ä»¶ç????¬å?¨ã??
		@param type A string representing the event type being removed.
		@param callback The callback to remove.
		@param target The target (this object) to invoke the callback, if it's not given, only callback without target will be removed
		
		@example 
		```js
		// register fire eventListener
		var callback = eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, target);
		// remove fire event listener
		eventTarget.off('fire', callback, target);
		// remove all fire event listeners
		eventTarget.off('fire');
		``` 
		*/
		off(type: string, callback?: Function, target?: any): void;		
		/**
		!#en Removes all callbacks previously registered with the same target (passed as parameter).
		This is not for removing all listeners in the current event target,
		and this is not for removing all listeners the target parameter have registered.
		It's only for removing all listeners (callback and target couple) registered on the current event target by the target parameter.
		!#zh ??¨å????? EventTarget ä¸??????¤æ??å®???®æ??ï¼?target ?????°ï??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°æ??æ³??????¤å????? EventTarget ?????????äº?ä»¶ç????¬å?¨ï??ä¹????æ³??????? target ?????°æ??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°å?ªè?½å????? target ?????°å?¨å????? EventTarget ä¸?æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		@param target The target to be searched for all related listeners 
		*/
		targetOff(target: any): void;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget,
		the callback will remove itself after the first time it is triggered.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°?ï¼????è°?ä¼???¨ç¬¬ä¸???¶é?´è¢«è§¦å??????????¤è?ªèº«???
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.once('fire', function () {
		    cc.log("this is the callback and will be invoked only once");
		}, node);
		``` 
		*/
		once(type: string, callback: (arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any) => void, target?: any): void;		
		/**
		!#en
		Send an event with the event object.
		!#zh
		???è¿?äº?ä»¶å¯¹è±¡æ´¾???äº?ä»?
		@param event event 
		*/
		dispatchEvent(event: Event): void;		
		/**
		!#en
		Destroy all callbackInfos.
		!#zh
		???æ¯?è®°å?????äº?ä»? 
		*/
		clear(): void;	
	}	
	/** !#en Class for TTFFont handling.
	!#zh TTF å­?ä½?èµ?æº?ç±»ã?? */
	export class TTFFont extends Font {	
	}	
	/** !#en Class for text file.
	!#zh ?????¬è??æº?ç±»ã?? */
	export class TextAsset extends Asset {		
		/** The text contents of the resource. */
		text: string;	
	}	
	/** This class allows to easily create OpenGL or Canvas 2D textures from images or raw data. */
	export class Texture2D extends Asset implements EventTarget {		
		/** !#en Sets whether generate mipmaps for the texture
		!#zh ??¯å?¦ä¸ºçº¹ç??è®¾ç½®?????? mipmaps??? */
		genMipmaps: boolean;		
		/** !#en
		Sets whether texture can be packed into texture atlas.
		If need use texture uv in custom Effect, please sets packable to false.
		!#zh
		è®¾ç½®çº¹ç????¯å?¦å??è®¸å??ä¸??????¾ã??
		å¦???????è¦???¨è?ªå??ä¹? Effect ä¸­ä½¿??¨çº¹??? UVï¼????è¦?ç¦?æ­¢è¯¥???é¡¹ã?? */
		packable: boolean;		
		/** !#en
		Whether the texture is loaded or not
		!#zh
		è´´å?¾æ?¯å?¦å·²ç»??????????è½? */
		loaded: boolean;		
		/** !#en
		Texture width in pixel
		!#zh
		è´´å?¾å??ç´?å®½åº¦ */
		width: number;		
		/** !#en
		Texture height in pixel
		!#zh
		è´´å?¾å??ç´?é«?åº? */
		height: number;		
		/**
		!#en
		Get renderer texture implementation object
		extended from render.Texture2D
		!#zh  è¿????æ¸²æ????¨å????¨è´´??¾å¯¹è±? 
		*/
		getImpl(): void;		
		/**
		Update texture options, not available in Canvas render mode.
		image, format, premultiplyAlpha can not be updated in native.
		@param options options 
		*/
		update(options: {image: DOMImageElement; genMipmaps: boolean; format: Texture2D.PixelFormat; minFilter: Texture2D.Filter; magFilter: Texture2D.Filter; wrapS: WrapMode; wrapT: WrapMode; premultiplyAlpha: boolean; }): void;		
		/**
		!#en
		Init with HTML element.
		!#zh ??? HTML Image ??? Canvas å¯¹è±¡???å§????è´´å?¾ã??
		@param element element
		
		@example 
		```js
		var img = new Image();
		img.src = dataURL;
		texture.initWithElement(img);
		``` 
		*/
		initWithElement(element: HTMLImageElement|HTMLCanvasElement): void;		
		/**
		!#en
		Intializes with texture data in ArrayBufferView.
		!#zh ä½¿ç?¨ä??ä¸ªå????¨å?? ArrayBufferView ä¸­ç????¾å????°æ?®ï??raw dataï¼????å§??????°æ?®ã??
		@param data data
		@param pixelFormat pixelFormat
		@param pixelsWidth pixelsWidth
		@param pixelsHeight pixelsHeight 
		*/
		initWithData(data: ArrayBufferView, pixelFormat: number, pixelsWidth: number, pixelsHeight: number): boolean;		
		/**
		!#en
		HTMLElement Object getter, available only on web.<br/>
		Note: texture is packed into texture atlas by default<br/>
		you should set texture.packable as false before getting Html element object.
		!#zh ??·å??å½????è´´å?¾å¯¹åº???? HTML Image ??? Canvas å¯¹è±¡ï¼???ªå?? Web å¹³å?°ä???????????<br/>
		æ³¨æ??ï¼?<br/>
		texture é»?è®¤å??ä¸???¨æ???????¾ï??å¦???????è¦???·å????°æ­£ç¡®ç?? Html ???ç´?å¯¹è±¡ï¼????è¦????è®¾ç½® texture.packable ä¸? false 
		*/
		getHtmlElementObj(): HTMLImageElement;		
		/**
		!#en
		Destory this texture and immediately release its video memory. (Inherit from cc.Object.destroy)<br>
		After destroy, this object is not usable anymore.
		You can use cc.isValid(obj) to check whether the object is destroyed before accessing it.
		!#zh
		???æ¯?è¯¥è´´??¾ï??å¹¶ç????³é????¾å??å¯¹å???????¾å?????ï¼?ç»§æ?¿è?? cc.Object.destroyï¼?<br/>
		???æ¯????ï¼?è¯¥å¯¹è±¡ä???????¯ç?¨ã????¨å?¯ä»¥??¨è®¿??®å¯¹è±¡ä?????ä½¿ç?? cc.isValid(obj) ??¥æ????¥å¯¹è±¡æ?¯å?¦å·²è¢«é??æ¯???? 
		*/
		destroy(): boolean;		
		/**
		!#en
		Pixel format of the texture.
		!#zh ??·å??çº¹ç????????ç´???¼å????? 
		*/
		getPixelFormat(): number;		
		/**
		!#en
		Whether or not the texture has their Alpha premultiplied.
		!#zh æ£???¥çº¹?????¨ä??ä¼? GPU ??¶é??ä¹????é¡¹æ?¯å?¦å????¯ã?? 
		*/
		hasPremultipliedAlpha(): boolean;		
		/**
		!#en
		Handler of texture loaded event.
		Since v2.0, you don't need to invoke this function, it will be invoked automatically after texture loaded.
		!#zh è´´å?¾å??è½½ä??ä»¶å???????¨ã??v2.0 ä¹????ä½?å°?ä¸???¨é??è¦??????¨æ?§è??è¿?ä¸ªå?½æ?°ï??å®?ä¼???¨è´´??¾å??è½½æ?????ä¹??????ªå?¨æ?§è?????
		@param premultiplied premultiplied 
		*/
		handleLoadedTexture(premultiplied?: boolean): void;		
		/**
		!#en
		Description of cc.Texture2D.
		!#zh cc.Texture2D ???è¿°ã?? 
		*/
		description(): string;		
		/**
		!#en
		Release texture, please use destroy instead.
		!#zh ?????¾çº¹???ï¼?è¯·ä½¿??? destroy ??¿ä»£??? 
		*/
		releaseTexture(): void;		
		/**
		!#en Sets the wrap s and wrap t options. <br/>
		If the texture size is NPOT (non power of 2), then in can only use gl.CLAMP_TO_EDGE in gl.TEXTURE_WRAP_{S,T}.
		!#zh è®¾ç½®çº¹ç?????è£?æ¨¡å?????
		??¥çº¹???è´´å?¾å°ºå¯¸æ?? NPOTï¼?non power of 2ï¼?ï¼??????ªè?½ä½¿??? Texture2D.WrapMode.CLAMP_TO_EDGE???
		@param wrapS wrapS
		@param wrapT wrapT 
		*/
		setWrapMode(wrapS: Texture2D.WrapMode, wrapT: Texture2D.WrapMode): void;		
		/**
		!#en Sets the minFilter and magFilter options
		!#zh è®¾ç½®çº¹ç??è´´å?¾ç¼©å°??????¾å¤§è¿?æ»¤å?¨ç??æ³????é¡¹ã??
		@param minFilter minFilter
		@param magFilter magFilter 
		*/
		setFilters(minFilter: Texture2D.Filter, magFilter: Texture2D.Filter): void;		
		/**
		!#en
		Sets the flipY options
		!#zh è®¾ç½®è´´å?¾ç??çºµå??ç¿»è½¬???é¡¹ã??
		@param flipY flipY 
		*/
		setFlipY(flipY: boolean): void;		
		/**
		!#en
		Sets the premultiply alpha options
		!#zh è®¾ç½®è´´å?¾ç??é¢?ä¹????é¡¹ã??
		@param premultiply premultiply 
		*/
		setPremultiplyAlpha(premultiply: boolean): void;		
		/**
		!#en Checks whether the EventTarget object has any callback registered for a specific type of event.
		!#zh æ£???¥ä??ä»¶ç?®æ??å¯¹è±¡??¯å?¦æ??ä¸ºç?¹å??ç±»å?????äº?ä»¶æ³¨?????????è°????
		@param type The type of event. 
		*/
		hasEventListener(type: string): boolean;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget.
		This type of event should be triggered via `emit`.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°????è¿?ç§?ç±»å?????äº?ä»¶å??è¯¥è¢« `emit` è§¦å?????
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, node);
		``` 
		*/
		on<T extends Function>(type: string, callback: T, target?: any, useCapture?: boolean): T;		
		/**
		!#en
		Removes the listeners previously registered with the same type, callback, target and or useCapture,
		if only type is passed as parameter, all listeners registered with that type will be removed.
		!#zh
		?????¤ä???????¨å??ç±»å??ï¼????è°?ï¼???®æ????? useCapture æ³¨å?????äº?ä»¶ç????¬å?¨ï??å¦??????ªä????? typeï¼?å°?ä¼??????? type ç±»å???????????äº?ä»¶ç????¬å?¨ã??
		@param type A string representing the event type being removed.
		@param callback The callback to remove.
		@param target The target (this object) to invoke the callback, if it's not given, only callback without target will be removed
		
		@example 
		```js
		// register fire eventListener
		var callback = eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, target);
		// remove fire event listener
		eventTarget.off('fire', callback, target);
		// remove all fire event listeners
		eventTarget.off('fire');
		``` 
		*/
		off(type: string, callback?: Function, target?: any): void;		
		/**
		!#en Removes all callbacks previously registered with the same target (passed as parameter).
		This is not for removing all listeners in the current event target,
		and this is not for removing all listeners the target parameter have registered.
		It's only for removing all listeners (callback and target couple) registered on the current event target by the target parameter.
		!#zh ??¨å????? EventTarget ä¸??????¤æ??å®???®æ??ï¼?target ?????°ï??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°æ??æ³??????¤å????? EventTarget ?????????äº?ä»¶ç????¬å?¨ï??ä¹????æ³??????? target ?????°æ??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°å?ªè?½å????? target ?????°å?¨å????? EventTarget ä¸?æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		@param target The target to be searched for all related listeners 
		*/
		targetOff(target: any): void;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget,
		the callback will remove itself after the first time it is triggered.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°?ï¼????è°?ä¼???¨ç¬¬ä¸???¶é?´è¢«è§¦å??????????¤è?ªèº«???
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.once('fire', function () {
		    cc.log("this is the callback and will be invoked only once");
		}, node);
		``` 
		*/
		once(type: string, callback: (arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any) => void, target?: any): void;		
		/**
		!#en
		Send an event with the event object.
		!#zh
		???è¿?äº?ä»¶å¯¹è±¡æ´¾???äº?ä»?
		@param event event 
		*/
		dispatchEvent(event: Event): void;		
		/**
		!#en
		Destroy all callbackInfos.
		!#zh
		???æ¯?è®°å?????äº?ä»? 
		*/
		clear(): void;	
	}	
	/** !#en Box Collider.
	!#zh ?????´ç??ç¢°æ??ç»?ä»? */
	export class BoxCollider extends Collider implements Collider.Box {		
		/** !#en
		Collider info in world coordinate.
		!#zh
		ç¢°æ??ä½????ä¸??????????ç³»ä?????ä¿¡æ?¯ã?? */
		world: ColliderInfo;		
		/** !#en Position offset
		!#zh ä½?ç½®å??ç§»é?? */
		offset: Vec2;		
		/** !#en Box size
		!#zh ?????´ç??å¤§å?? */
		size: Size;	
	}	
	/** !#en Circle Collider.
	!#zh ???å½¢ç¢°???ç»?ä»? */
	export class CircleCollider extends Collider implements Collider.Circle {		
		/** !#en
		Collider info in world coordinate.
		!#zh
		ç¢°æ??ä½????ä¸??????????ç³»ä?????ä¿¡æ?¯ã?? */
		world: ColliderInfo;		
		/** !#en Position offset
		!#zh ä½?ç½®å??ç§»é?? */
		offset: Vec2;		
		/** !#en Circle radius
		!#zh ???å½¢å??å¾? */
		radius: number;	
	}	
	/** !#en Collider component base class.
	!#zh ç¢°æ??ç»?ä»¶å?ºç±» */
	export class Collider extends Component {		
		/** !#en Tag. If a node has several collider components, you can judge which type of collider is collided according to the tag.
		!#zh ???ç­¾ã??å½?ä¸?ä¸ªè????¹ä?????å¤?ä¸ªç¢°???ç»?ä»¶æ?¶ï????¨å?????ç¢°æ?????ï¼???¯ä»¥ä½¿ç?¨æ­¤???ç­¾æ?¥å?¤æ?­æ?¯è????¹ä???????ªä¸ªç¢°æ??ç»?ä»¶è¢«ç¢°æ??äº???? */
		tag: number;	
	}	
	/** !#en
	Collider Info.
	!#zh
	ç¢°æ??ä½?ä¿¡æ?¯ã?? */
	export class ColliderInfo {		
		/** !#en
		Collider aabb information of last frame
		!#zh
		ç¢°æ??ä½?ä¸?ä¸?å¸§ç?? aabb ä¿¡æ?? */
		preAabb: Rect;		
		/** !#en
		Collider aabb information of current frame
		!#zh
		ç¢°æ??ä½?å½????å¸§ç?? aabb ä¿¡æ?? */
		aabb: Rect;		
		/** !#en
		Collider matrix
		!#zh
		ç¢°æ??ä½??????©é?µä¿¡??? */
		matrix: Mat4;		
		/** !#en
		Collider radius (for CircleCollider)
		!#zh
		ç¢°æ??ä½???????å¾?ï¼???ªå¯¹ CircleCollider ??????ï¼? */
		radius: number;		
		/** !#en
		Collider position (for CircleCollider)
		!#zh
		ç¢°æ??ä½????ä½?ç½®ï????ªå¯¹ CircleCollider ??????ï¼? */
		position: Vec2;		
		/** !#en
		Collider points (for BoxCollider and PolygonCollider)
		!#zh
		ç¢°æ??ä½????é¡¶ç?¹ä¿¡??¯ï????ªå¯¹ BoxCollider ??? PolygonCollider ??????ï¼? */
		points: Vec2[];	
	}	
	/** !#en
	A simple collision manager class.
	It will calculate whether the collider collides other colliders, if collides then call the callbacks.
	!#zh
	ä¸?ä¸ªç????????ç¢°æ??ç»?ä»¶ç®¡???ç±»ï????¨ä??å¤?????????¹ä????´ç??ç¢°æ??ç»?ä»¶æ?¯å?¦äº§???äº?ç¢°æ??ï¼?å¹¶è????¨ç?¸å?????è°???½æ?°ã?? */
	export class CollisionManager implements EventTarget {		
		/** !#en
		!#zh
		??¯å?¦å????¯ç¢°???ç®¡ç??ï¼?é»?è®¤ä¸ºä¸?å¼???? */
		enabled: boolean;		
		/** !#en
		!#zh
		??¯å?¦ç????¶ç¢°???ç»?ä»¶ç???????´ç??ï¼?é»?è®¤ä¸ºä¸?ç»???? */
		enabledDrawBoundingBox: boolean;		
		/** !#en
		!#zh
		??¯å?¦ç????¶ç¢°???ç»?ä»¶ç??å½¢ç?¶ï??é»?è®¤ä¸ºä¸?ç»???? */
		enabledDebugDraw: boolean;		
		/**
		!#en Checks whether the EventTarget object has any callback registered for a specific type of event.
		!#zh æ£???¥ä??ä»¶ç?®æ??å¯¹è±¡??¯å?¦æ??ä¸ºç?¹å??ç±»å?????äº?ä»¶æ³¨?????????è°????
		@param type The type of event. 
		*/
		hasEventListener(type: string): boolean;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget.
		This type of event should be triggered via `emit`.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°????è¿?ç§?ç±»å?????äº?ä»¶å??è¯¥è¢« `emit` è§¦å?????
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, node);
		``` 
		*/
		on<T extends Function>(type: string, callback: T, target?: any, useCapture?: boolean): T;		
		/**
		!#en
		Removes the listeners previously registered with the same type, callback, target and or useCapture,
		if only type is passed as parameter, all listeners registered with that type will be removed.
		!#zh
		?????¤ä???????¨å??ç±»å??ï¼????è°?ï¼???®æ????? useCapture æ³¨å?????äº?ä»¶ç????¬å?¨ï??å¦??????ªä????? typeï¼?å°?ä¼??????? type ç±»å???????????äº?ä»¶ç????¬å?¨ã??
		@param type A string representing the event type being removed.
		@param callback The callback to remove.
		@param target The target (this object) to invoke the callback, if it's not given, only callback without target will be removed
		
		@example 
		```js
		// register fire eventListener
		var callback = eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, target);
		// remove fire event listener
		eventTarget.off('fire', callback, target);
		// remove all fire event listeners
		eventTarget.off('fire');
		``` 
		*/
		off(type: string, callback?: Function, target?: any): void;		
		/**
		!#en Removes all callbacks previously registered with the same target (passed as parameter).
		This is not for removing all listeners in the current event target,
		and this is not for removing all listeners the target parameter have registered.
		It's only for removing all listeners (callback and target couple) registered on the current event target by the target parameter.
		!#zh ??¨å????? EventTarget ä¸??????¤æ??å®???®æ??ï¼?target ?????°ï??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°æ??æ³??????¤å????? EventTarget ?????????äº?ä»¶ç????¬å?¨ï??ä¹????æ³??????? target ?????°æ??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°å?ªè?½å????? target ?????°å?¨å????? EventTarget ä¸?æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		@param target The target to be searched for all related listeners 
		*/
		targetOff(target: any): void;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget,
		the callback will remove itself after the first time it is triggered.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°?ï¼????è°?ä¼???¨ç¬¬ä¸???¶é?´è¢«è§¦å??????????¤è?ªèº«???
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.once('fire', function () {
		    cc.log("this is the callback and will be invoked only once");
		}, node);
		``` 
		*/
		once(type: string, callback: (arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any) => void, target?: any): void;		
		/**
		!#en
		Send an event with the event object.
		!#zh
		???è¿?äº?ä»¶å¯¹è±¡æ´¾???äº?ä»?
		@param event event 
		*/
		dispatchEvent(event: Event): void;		
		/**
		!#en
		Destroy all callbackInfos.
		!#zh
		???æ¯?è®°å?????äº?ä»? 
		*/
		clear(): void;	
	}	
	/** !#en Intersection helper class
	!#zh è¾???©ç±»ï¼???¨ä??æµ?è¯?å½¢ç?¶ä??å½¢ç?¶æ?¯å?¦ç?¸äº¤ */
	export class Intersection {		
		/**
		!#en Test line and line
		!#zh æµ?è¯?çº¿æ®µä¸?çº¿æ®µ??¯å?¦ç?¸äº¤
		@param a1 The start point of the first line
		@param a2 The end point of the first line
		@param b1 The start point of the second line
		@param b2 The end point of the second line 
		*/
		static lineLine(a1: Vec2, a2: Vec2, b1: Vec2, b2: Vec2): boolean;		
		/**
		!#en Test line and rect
		!#zh æµ?è¯?çº¿æ®µä¸???©å½¢??¯å?¦ç?¸äº¤
		@param a1 The start point of the line
		@param a2 The end point of the line
		@param b The rect 
		*/
		static lineRect(a1: Vec2, a2: Vec2, b: Rect): boolean;		
		/**
		!#en Test line and polygon
		!#zh æµ?è¯?çº¿æ®µä¸?å¤?è¾¹å½¢??¯å?¦ç?¸äº¤
		@param a1 The start point of the line
		@param a2 The end point of the line
		@param b The polygon, a set of points 
		*/
		static linePolygon(a1: Vec2, a2: Vec2, b: Vec2[]): boolean;		
		/**
		!#en Test rect and rect
		!#zh æµ?è¯???©å½¢ä¸???©å½¢??¯å?¦ç?¸äº¤
		@param a The first rect
		@param b The second rect 
		*/
		static rectRect(a: Rect, b: Rect): boolean;		
		/**
		!#en Test rect and polygon
		!#zh æµ?è¯???©å½¢ä¸?å¤?è¾¹å½¢??¯å?¦ç?¸äº¤
		@param a The rect
		@param b The polygon, a set of points 
		*/
		static rectPolygon(a: Rect, b: Vec2[]): boolean;		
		/**
		!#en Test polygon and polygon
		!#zh æµ?è¯?å¤?è¾¹å½¢ä¸?å¤?è¾¹å½¢??¯å?¦ç?¸äº¤
		@param a The first polygon, a set of points
		@param b The second polygon, a set of points 
		*/
		static polygonPolygon(a: Vec2[], b: Vec2[]): boolean;		
		/**
		!#en Test circle and circle
		!#zh æµ?è¯????å½¢ä?????å½¢æ?¯å?¦ç?¸äº¤
		@param a Object contains position and radius
		@param b Object contains position and radius 
		*/
		static circleCircle(a: {position: Vec2, radius: number}, b: {position: Vec2, radius: number}): boolean;		
		/**
		!#en Test polygon and circle
		!#zh æµ?è¯???©å½¢ä¸????å½¢æ?¯å?¦ç?¸äº¤
		@param polygon The Polygon, a set of points
		@param circle Object contains position and radius 
		*/
		static polygonCircle(polygon: Vec2[], circle: {position: Vec2, radius: number}): boolean;		
		/**
		!#en Test whether the point is in the polygon
		!#zh æµ?è¯?ä¸?ä¸ªç?¹æ?¯å?¦å?¨ä??ä¸ªå??è¾¹å½¢ä¸?
		@param point The point
		@param polygon The polygon, a set of points 
		*/
		static pointInPolygon(point: Vec2, polygon: Vec2[]): boolean;		
		/**
		!#en Calculate the distance of point to line.
		!#zh è®¡ç????¹å?°ç?´çº¿???è·?ç¦»ã??å¦????è¿???¯ä????¡çº¿æ®µå¹¶ä¸????è¶³ä????¨çº¿æ®µå??ï¼????ä¼?è®¡ç????¹å?°çº¿æ®µç«¯??¹ç??è·?ç¦»ã??
		@param point The point
		@param start The start point of line
		@param end The end point of line
		@param isSegment whether this line is a segment 
		*/
		static pointLineDistance(point: Vec2, start: Vec2, end: Vec2, isSegment: boolean): number;	
	}	
	/** !#en Polygon Collider.
	!#zh å¤?è¾¹å½¢ç¢°æ??ç»?ä»? */
	export class PolygonCollider extends Collider implements Collider.Polygon {		
		/** !#en
		Collider info in world coordinate.
		!#zh
		ç¢°æ??ä½????ä¸??????????ç³»ä?????ä¿¡æ?¯ã?? */
		world: ColliderInfo;		
		/** !#en Position offset
		!#zh ä½?ç½®å??ç§»é?? */
		offset: Vec2;		
		/** !#en Polygon points
		!#zh å¤?è¾¹å½¢é¡¶ç?¹æ?°ç?? */
		points: Vec2[];	
	}	
	/** !#en The touch event class
	!#zh å°?è£?äº?è§¦æ?¸ç?¸å?³ç??ä¿¡æ?¯ã?? */
	export class Touch {		
		/**
		!#en Returns the current touch location in OpenGL coordinates.???
		!#zh ??·å??å½????è§¦ç?¹ä??ç½®ã?? 
		*/
		getLocation(): Vec2;		
		/**
		!#en Returns X axis location value.
		!#zh ??·å??å½????è§¦ç?? X è½´ä??ç½®ã?? 
		*/
		getLocationX(): number;		
		/**
		!#en Returns Y axis location value.
		!#zh ??·å??å½????è§¦ç?? Y è½´ä??ç½®ã?? 
		*/
		getLocationY(): number;		
		/**
		!#en Returns the previous touch location in OpenGL coordinates.
		!#zh ??·å??è§¦ç?¹å?¨ä??ä¸?æ¬¡ä??ä»¶æ?¶ç??ä½?ç½®å¯¹è±¡ï??å¯¹è±¡?????? x ??? y å±???§ã?? 
		*/
		getPreviousLocation(): Vec2;		
		/**
		!#en Returns the start touch location in OpenGL coordinates.
		!#zh ??·å??è§¦ç?¹è?½ä????¶ç??ä½?ç½®å¯¹è±¡ï??å¯¹è±¡?????? x ??? y å±???§ã?? 
		*/
		getStartLocation(): Vec2;		
		/**
		!#en Returns the delta distance from the previous touche to the current one in screen coordinates.
		!#zh ??·å??è§¦ç?¹è??ç¦»ä??ä¸?æ¬¡ä??ä»¶ç§»??¨ç??è·?ç¦»å¯¹è±¡ï??å¯¹è±¡?????? x ??? y å±???§ã?? 
		*/
		getDelta(): Vec2;		
		/**
		!#en Returns the current touch location in screen coordinates.
		!#zh ??·å??å½????äº?ä»¶å?¨æ¸¸???çª????????????????ä½?ç½®å¯¹è±¡ï??å¯¹è±¡?????? x ??? y å±???§ã?? 
		*/
		getLocationInView(): Vec2;		
		/**
		!#en Returns the previous touch location in screen coordinates.
		!#zh ??·å??è§¦ç?¹å?¨ä??ä¸?æ¬¡ä??ä»¶æ?¶å?¨æ¸¸???çª????ä¸­ç??ä½?ç½®å¯¹è±¡ï??å¯¹è±¡?????? x ??? y å±???§ã?? 
		*/
		getPreviousLocationInView(): Vec2;		
		/**
		!#en Returns the start touch location in screen coordinates.
		!#zh ??·å??è§¦ç?¹è?½ä????¶å?¨æ¸¸???çª????ä¸­ç??ä½?ç½®å¯¹è±¡ï??å¯¹è±¡?????? x ??? y å±???§ã?? 
		*/
		getStartLocationInView(): Vec2;		
		/**
		!#en Returns the id of cc.Touch.
		!#zh è§¦ç?¹ç?????è¯? IDï¼???¯ä»¥??¨æ?¥å?¨å????¹è§¦??¸ä¸­è·?è¸ªè§¦??¹ã?? 
		*/
		getID(): number;		
		/**
		!#en Sets information to touch.
		!#zh è®¾ç½®è§¦æ?¸ç?¸å?³ç??ä¿¡æ?¯ã????¨ä???????§è§¦??¸ä??ä»¶ã??
		@param id id
		@param x x
		@param y y 
		*/
		setTouchInfo(id: number, x: number, y: number): void;	
	}	
	/** !#en
	EventTarget is an object to which an event is dispatched when something has occurred.
	Entity are the most common event targets, but other objects can be event targets too.
	
	Event targets are an important part of the Fireball event model.
	The event target serves as the focal point for how events flow through the scene graph.
	When an event such as a mouse click or a keypress occurs, Fireball dispatches an event object
	into the event flow from the root of the hierarchy. The event object then makes its way through
	the scene graph until it reaches the event target, at which point it begins its return trip through
	the scene graph. This round-trip journey to the event target is conceptually divided into three phases:
	- The capture phase comprises the journey from the root to the last node before the event target's node
	- The target phase comprises only the event target node
	- The bubbling phase comprises any subsequent nodes encountered on the return trip to the root of the tree
	See also: http://www.w3.org/TR/DOM-Level-3-Events/#event-flow
	
	Event targets can implement the following methods:
	 - _getCapturingTargets
	 - _getBubblingTargets
	
	!#zh
	äº?ä»¶ç?®æ????¯ä??ä»¶è§¦?????¶ï?????æ´¾ç??äº?ä»¶å¯¹è±¡ï??Node ??¯æ??å¸¸è?????äº?ä»¶ç?®æ??ï¼?
	ä½???¯å?¶ä??å¯¹è±¡ä¹???¯ä»¥??¯ä??ä»¶ç?®æ?????<br/> */
	export class EventTarget extends CallbacksInvoker {		
		/**
		!#en Checks whether the EventTarget object has any callback registered for a specific type of event.
		!#zh æ£???¥ä??ä»¶ç?®æ??å¯¹è±¡??¯å?¦æ??ä¸ºç?¹å??ç±»å?????äº?ä»¶æ³¨?????????è°????
		@param type The type of event. 
		*/
		hasEventListener(type: string): boolean;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget.
		This type of event should be triggered via `emit`.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°????è¿?ç§?ç±»å?????äº?ä»¶å??è¯¥è¢« `emit` è§¦å?????
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, node);
		``` 
		*/
		on<T extends Function>(type: string, callback: T, target?: any, useCapture?: boolean): T;		
		/**
		!#en
		Removes the listeners previously registered with the same type, callback, target and or useCapture,
		if only type is passed as parameter, all listeners registered with that type will be removed.
		!#zh
		?????¤ä???????¨å??ç±»å??ï¼????è°?ï¼???®æ????? useCapture æ³¨å?????äº?ä»¶ç????¬å?¨ï??å¦??????ªä????? typeï¼?å°?ä¼??????? type ç±»å???????????äº?ä»¶ç????¬å?¨ã??
		@param type A string representing the event type being removed.
		@param callback The callback to remove.
		@param target The target (this object) to invoke the callback, if it's not given, only callback without target will be removed
		
		@example 
		```js
		// register fire eventListener
		var callback = eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, target);
		// remove fire event listener
		eventTarget.off('fire', callback, target);
		// remove all fire event listeners
		eventTarget.off('fire');
		``` 
		*/
		off(type: string, callback?: Function, target?: any): void;		
		/**
		!#en Removes all callbacks previously registered with the same target (passed as parameter).
		This is not for removing all listeners in the current event target,
		and this is not for removing all listeners the target parameter have registered.
		It's only for removing all listeners (callback and target couple) registered on the current event target by the target parameter.
		!#zh ??¨å????? EventTarget ä¸??????¤æ??å®???®æ??ï¼?target ?????°ï??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°æ??æ³??????¤å????? EventTarget ?????????äº?ä»¶ç????¬å?¨ï??ä¹????æ³??????? target ?????°æ??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°å?ªè?½å????? target ?????°å?¨å????? EventTarget ä¸?æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		@param target The target to be searched for all related listeners 
		*/
		targetOff(target: any): void;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget,
		the callback will remove itself after the first time it is triggered.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°?ï¼????è°?ä¼???¨ç¬¬ä¸???¶é?´è¢«è§¦å??????????¤è?ªèº«???
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.once('fire', function () {
		    cc.log("this is the callback and will be invoked only once");
		}, node);
		``` 
		*/
		once(type: string, callback: (arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any) => void, target?: any): void;		
		/**
		!#en
		Send an event with the event object.
		!#zh
		???è¿?äº?ä»¶å¯¹è±¡æ´¾???äº?ä»?
		@param event event 
		*/
		dispatchEvent(event: Event): void;		
		/**
		!#en
		Destroy all callbackInfos.
		!#zh
		???æ¯?è®°å?????äº?ä»? 
		*/
		clear(): void;	
	}	
	/** !#en Base class of all kinds of events.
	!#zh ?????«ä??ä»¶ç?¸å?³ä¿¡??¯ç??å¯¹è±¡??? */
	export class Event {		
		/**
		
		@param type The name of the event (case-sensitive), e.g. "click", "fire", or "submit"
		@param bubbles A boolean indicating whether the event bubbles up through the tree or not 
		*/
		constructor(type: string, bubbles: boolean);		
		/** !#en The name of the event (case-sensitive), e.g. "click", "fire", or "submit".
		!#zh äº?ä»¶ç±»?????? */
		type: string;		
		/** !#en Indicate whether the event bubbles up through the tree or not.
		!#zh è¡¨ç¤ºè¯¥ä??ä»¶æ?¯å?¦è??è¡????æ³¡ã?? */
		bubbles: boolean;		
		/** !#en A reference to the target to which the event was originally dispatched.
		!#zh ??????äº?ä»¶è§¦????????®æ?? */
		target: any;		
		/** !#en A reference to the currently registered target for the event.
		!#zh å½??????®æ?? */
		currentTarget: any;		
		/** !#en
		Indicates which phase of the event flow is currently being evaluated.
		Returns an integer value represented by 4 constants:
		 - Event.NONE = 0
		 - Event.CAPTURING_PHASE = 1
		 - Event.AT_TARGET = 2
		 - Event.BUBBLING_PHASE = 3
		The phases are explained in the [section 3.1, Event dispatch and DOM event flow]
		(http://www.w3.org/TR/DOM-Level-3-Events/#event-flow), of the DOM Level 3 Events specification.
		!#zh äº?ä»¶é?¶æ®µ */
		eventPhase: number;		
		/**
		!#en Reset the event for being stored in the object pool.
		!#zh ???ç½®å¯¹è±¡æ??ä¸­å????¨ç??äº?ä»¶ã?? 
		*/
		unuse(): string;		
		/**
		!#en Reuse the event for being used again by the object pool.
		!#zh ??¨ä??å¯¹è±¡æ±????æ¬¡ä½¿??¨ç??äº?ä»¶ã?? 
		*/
		reuse(): string;		
		/**
		!#en Stops propagation for current event.
		!#zh ???æ­¢ä?????å½????äº?ä»¶ã?? 
		*/
		stopPropagation(): void;		
		/**
		!#en Stops propagation for current event immediately,
		the event won't even be dispatched to the listeners attached in the current target.
		!#zh ç«???³å??æ­¢å?????äº?ä»¶ç??ä¼????ï¼?äº?ä»¶ç????³ä??ä¼?è¢«å??æ´¾å?°æ??è¿???¥ç??å½??????®æ????? 
		*/
		stopPropagationImmediate(): void;		
		/**
		!#en Checks whether the event has been stopped.
		!#zh æ£???¥è¯¥äº?ä»¶æ?¯å?¦å·²ç»????æ­¢ä?????. 
		*/
		isStopped(): boolean;		
		/**
		!#en
		<p>
		    Gets current target of the event                                                            <br/>
		    note: It only be available when the event listener is associated with node.                <br/>
		         It returns 0 when the listener is associated with fixed priority.
		</p>
		!#zh ??·å??å½??????®æ???????? 
		*/
		getCurrentTarget(): Node;		
		/**
		!#en Gets the event type.
		!#zh ??·å??äº?ä»¶ç±»??? 
		*/
		getType(): string;		
		/** !#en Code for event without type.
		!#zh æ²¡æ??ç±»å?????äº?ä»? */
		static NO_TYPE: string;		
		/** !#en The type code of Touch event.
		!#zh è§¦æ?¸ä??ä»¶ç±»??? */
		static TOUCH: string;		
		/** !#en The type code of Mouse event.
		!#zh é¼????äº?ä»¶ç±»??? */
		static MOUSE: string;		
		/** !#en The type code of Keyboard event.
		!#zh ??®ç??äº?ä»¶ç±»??? */
		static KEYBOARD: string;		
		/** !#en The type code of Acceleration event.
		!#zh ????????¨ä??ä»¶ç±»??? */
		static ACCELERATION: string;		
		/** !#en Events not currently dispatched are in this phase
		!#zh å°???ªæ´¾???äº?ä»¶é?¶æ®µ */
		static NONE: number;		
		/** !#en
		The capturing phase comprises the journey from the root to the last node before the event target's node
		see http://www.w3.org/TR/DOM-Level-3-Events/#event-flow
		!#zh ?????·é?¶æ®µï¼??????¬ä??ä»¶ç?®æ???????¹ä?????ä»???¹è????¹å?°æ?????ä¸?ä¸ªè????¹ç??è¿?ç¨???? */
		static CAPTURING_PHASE: number;		
		/** !#en
		The target phase comprises only the event target node
		see http://www.w3.org/TR/DOM-Level-3-Events/#event-flow
		!#zh ??®æ????¶æ®µä»??????¬ä??ä»¶ç?®æ???????¹ã?? */
		static AT_TARGET: number;		
		/** !#en
		The bubbling phase comprises any subsequent nodes encountered on the return trip to the root of the hierarchy
		see http://www.w3.org/TR/DOM-Level-3-Events/#event-flow
		!#zh ???æ³¡é?¶æ®µï¼? ?????¬å??ç¨??????°å?°å??æ¬¡æ?¹è????¹ç??ä»»ä?????ç»­è????¹ã?? */
		static BUBBLING_PHASE: number;	
	}	
	/** !#en
	The System event, it currently supports keyboard events and accelerometer events.<br>
	You can get the SystemEvent instance with cc.systemEvent.<br>
	!#zh
	ç³»ç??äº?ä»¶ï??å®???®å????¯æ???????®ä??ä»¶å???????????åº?äº?ä»¶ã??<br>
	ä½???¯ä»¥???è¿? cc.systemEvent ??·å????? SystemEvent ???å®?ä¾????<br> */
	export class SystemEvent extends EventTarget {		
		/**
		!#en whether enable accelerometer event
		!#zh ??¯å?¦å?¯ç?¨å?????åº¦è®¡äº?ä»?
		@param isEnable isEnable 
		*/
		setAccelerometerEnabled(isEnable: boolean): void;		
		/**
		!#en set accelerometer interval value
		!#zh è®¾ç½®??????åº¦è®¡??´é?????
		@param interval interval 
		*/
		setAccelerometerInterval(interval: number): void;	
	}	
	/** !#en The animation component is used to play back animations.
	
	Animation provide several events to registerï¼?
	 - play : Emit when begin playing animation
	 - stop : Emit when stop playing animation
	 - pause : Emit when pause animation
	 - resume : Emit when resume animation
	 - lastframe : If animation repeat count is larger than 1, emit when animation play to the last frame
	 - finished : Emit when finish playing animation
	
	!#zh Animation ç»?ä»¶ç?¨ä????­æ?¾å?¨ç?»ã??
	
	Animation ???ä¾?äº?ä¸?ç³»å????¯æ³¨??????äº?ä»¶ï??
	 - play : å¼?å§???­æ?¾æ??
	 - stop : ???æ­¢æ?­æ?¾æ??
	 - pause : ????????­æ?¾æ??
	 - resume : ??¢å????­æ?¾æ??
	 - lastframe : ???å¦???¨ç?»å¾ª??¯æ¬¡??°å¤§äº? 1ï¼?å½???¨ç?»æ?­æ?¾å?°æ?????ä¸?å¸§æ??
	 - finished : ??¨ç?»æ?­æ?¾å???????? */
	export class Animation extends Component implements EventTarget {		
		/** !#en Animation will play the default clip when start game.
		!#zh ??¨å?¾é????ªå?¨æ?­æ?¾æ??è°???? play() ??¶é??è®¤æ?­æ?¾ç????¨ç?»å?ªè????? */
		defaultClip: AnimationClip;		
		/** !#en Current played clip.
		!#zh å½??????­æ?¾ç????¨ç?»å?ªè????? */
		currentClip: AnimationClip;		
		/** !#en Whether the animation should auto play the default clip when start game.
		!#zh ??¯å?¦å?¨è??è¡?æ¸¸æ???????ªå?¨æ?­æ?¾é??è®¤å?¨ç?»å?ªè????? */
		playOnLoad: boolean;		
		/**
		!#en Get all the clips used in this animation.
		!#zh ??·å????¨ç?»ç??ä»¶ä?????????????¨ç?»å?ªè????? 
		*/
		getClips(): AnimationClip[];		
		/**
		!#en Plays an animation and stop other animations.
		!#zh ??­æ?¾æ??å®??????¨ç?»ï??å¹¶ä?????æ­¢å?????æ­???¨æ?­æ?¾å?¨ç?»ã??å¦????æ²¡æ?????å®???¨ç?»ï???????­æ?¾é??è®¤å?¨ç?»ã??
		@param name The name of animation to play. If no name is supplied then the default animation will be played.
		@param startTime play an animation from startTime
		
		@example 
		```js
		var animCtrl = this.node.getComponent(cc.Animation);
		animCtrl.play("linear");
		``` 
		*/
		play(name?: string, startTime?: number): AnimationState;		
		/**
		!#en
		Plays an additive animation, it will not stop other animations.
		If there are other animations playing, then will play several animations at the same time.
		!#zh ??­æ?¾æ??å®??????¨ç?»ï??å°?ä¸?ä¼????æ­¢å???????­æ?¾ç????¨ç?»ï?????å¦????æ²¡æ?????å®???¨ç?»ï???????­æ?¾é??è®¤å?¨ç?»ã??
		@param name The name of animation to play. If no name is supplied then the default animation will be played.
		@param startTime play an animation from startTime
		
		@example 
		```js
		// linear_1 and linear_2 at the same time playing.
		var animCtrl = this.node.getComponent(cc.Animation);
		animCtrl.playAdditive("linear_1");
		animCtrl.playAdditive("linear_2");
		``` 
		*/
		playAdditive(name?: string, startTime?: number): AnimationState;		
		/**
		!#en Stops an animation named name. If no name is supplied then stops all playing animations that were started with this Animation. <br/>
		Stopping an animation also Rewinds it to the Start.
		!#zh ???æ­¢æ??å®??????¨ç?»ã??å¦????æ²¡æ?????å®????å­?ï¼???????æ­¢å?????æ­???¨æ?­æ?¾ç????¨ç?»ã??
		@param name The animation to stop, if not supplied then stops all playing animations. 
		*/
		stop(name?: string): void;		
		/**
		!#en Pauses an animation named name. If no name is supplied then pauses all playing animations that were started with this Animation.
		!#zh ??????å½?????????????å®??????¨ç?»ã??å¦????æ²¡æ?????å®????å­?ï¼??????????å½????æ­???¨æ?­æ?¾ç????¨ç?»ã??
		@param name The animation to pauses, if not supplied then pauses all playing animations. 
		*/
		pause(name?: string): void;		
		/**
		!#en Resumes an animation named name. If no name is supplied then resumes all paused animations that were started with this Animation.
		!#zh ?????°æ?­æ?¾æ??å®??????¨ç?»ï??å¦????æ²¡æ?????å®????å­?ï¼?????????°æ?­æ?¾å?????æ­???¨æ?­æ?¾ç????¨ç?»ã??
		@param name The animation to resumes, if not supplied then resumes all paused animations. 
		*/
		resume(name?: string): void;		
		/**
		!#en Make an animation named name go to the specified time. If no name is supplied then make all animations go to the specified time.
		!#zh è®¾ç½®???å®???¨ç?»ç????­æ?¾æ?¶é?´ã??å¦????æ²¡æ?????å®????å­?ï¼????è®¾ç½®å½??????­æ?¾å?¨ç?»ç????­æ?¾æ?¶é?´ã??
		@param time The time to go to
		@param name Specified animation name, if not supplied then make all animations go to the time. 
		*/
		setCurrentTime(time?: number, name?: string): void;		
		/**
		!#en Returns the animation state named name. If no animation with the specified name, the function will return null.
		!#zh ??·å??å½?????????????å®??????¨ç?»ç?¶æ??ï¼?å¦??????ªæ?¾å?°æ??å®???¨ç?»å?ªè?????è¿???? null???
		@param name name 
		*/
		getAnimationState(name: string): AnimationState;		
		/**
		!#en Adds a clip to the animation with name newName. If a clip with that name already exists it will be replaced with the new clip.
		!#zh æ·»å????¨ç?»å?ªè??ï¼?å¹¶ä????¯ä»¥?????°è®¾ç½®è¯¥??¨ç?»å?ªè????????ç§°ã??
		@param clip the clip to add
		@param newName newName 
		*/
		addClip(clip: AnimationClip, newName?: string): AnimationState;		
		/**
		!#en
		Remove clip from the animation list. This will remove the clip and any animation states based on it.
		If there are animation states depand on the clip are playing or clip is defaultClip, it will not delete the clip.
		But if force is true, then will always remove the clip and any animation states based on it. If clip is defaultClip, defaultClip will be reset to null
		!#zh
		ä»???¨ç?»å??è¡¨ä¸­ç§»é?¤æ??å®??????¨ç?»å?ªè??ï¼?<br/>
		å¦????ä¾?èµ?äº? clip ??? AnimationState æ­???¨æ?­æ?¾æ????? clip ??? defaultClip ???è¯?ï¼?é»?è®¤æ?¯ä??ä¼??????? clip ??????
		ä½???¯å????? force ?????°ä¸º trueï¼????ä¼?å¼ºå?¶å??æ­¢è¯¥??¨ç?»ï????¶å??ç§»é?¤è¯¥??¨ç?»å?ªè???????¸å?³ç????¨ç?»ã??è¿???¶å??å¦???? clip ??? defaultClipï¼?defaultClip å°?ä¼?è¢«é??ç½®ä¸º null???
		@param clip clip
		@param force If force is true, then will always remove the clip and any animation states based on it. 
		*/
		removeClip(clip: AnimationClip, force?: boolean): void;		
		/**
		!#en
		Samples animations at the current state.<br/>
		This is useful when you explicitly want to set up some animation state, and sample it once.
		!#zh å¯¹æ??å®????å½??????¨ç?»è??è¡??????·ã??ä½???¯ä»¥?????¨å????¨ç?»è®¾ç½®å?°æ??ä¸?ä¸ªç?¶æ??ï¼???¶å???????·ä??æ¬¡ã??
		@param name name 
		*/
		sample(name: string): void;		
		/**
		!#en
		Register animation event callback.
		The event arguments will provide the AnimationState which emit the event.
		When play an animation, will auto register the event callback to the AnimationState, and unregister the event callback from the AnimationState when animation stopped.
		!#zh
		æ³¨å????¨ç?»ä??ä»¶å??è°????
		???è°????äº?ä»¶é??å°?ä¼????ä¸???????äº?ä»¶ç?? AnimationState???
		å½???­æ?¾ä??ä¸ªå?¨ç?»æ?¶ï??ä¼???ªå?¨å??äº?ä»¶æ³¨?????°å¯¹åº???? AnimationState ä¸?ï¼????æ­¢æ?­æ?¾æ?¶ä??å°?äº?ä»¶ä??è¿?ä¸? AnimationState ä¸????æ¶?æ³¨å?????
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param state state
		@param target The target (this object) to invoke the callback, can be null
		@param useCapture When set to true, the capture argument prevents callback
		                             from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE.
		                             When false, callback will NOT be invoked when event's eventPhase attribute value is CAPTURING_PHASE.
		                             Either way, callback will be invoked when event's eventPhase attribute value is AT_TARGET.
		
		@example 
		```js
		onPlay: function (type, state) {
		    // callback
		}
		
		// register event to all animation
		animation.on('play', this.onPlay, this);
		``` 
		*/
		on(type: string, callback: (event: Event.EventCustom) => void, target?: any, useCapture?: boolean): (event: Event.EventCustom) => void;
		on<T>(type: string, callback: (event: T) => void, target?: any, useCapture?: boolean): (event: T) => void;
		on(type: string, callback: (type: string, state: cc.AnimationState) => void, target?: any, useCapture?: boolean): (type: string, state: cc.AnimationState) => void;		
		/**
		!#en
		Unregister animation event callback.
		!#zh
		???æ¶?æ³¨å????¨ç?»ä??ä»¶å??è°????
		@param type A string representing the event type being removed.
		@param callback The callback to remove.
		@param target The target (this object) to invoke the callback, if it's not given, only callback without target will be removed
		@param useCapture Specifies whether the callback being removed was registered as a capturing callback or not.
		                             If not specified, useCapture defaults to false. If a callback was registered twice,
		                             one with capture and one without, each must be removed separately. Removal of a capturing callback
		                             does not affect a non-capturing version of the same listener, and vice versa.
		
		@example 
		```js
		// unregister event to all animation
		animation.off('play', this.onPlay, this);
		``` 
		*/
		off(type: string, callback?: Function, target?: any, useCapture?: boolean): void;		
		/**
		!#en Checks whether the EventTarget object has any callback registered for a specific type of event.
		!#zh æ£???¥ä??ä»¶ç?®æ??å¯¹è±¡??¯å?¦æ??ä¸ºç?¹å??ç±»å?????äº?ä»¶æ³¨?????????è°????
		@param type The type of event. 
		*/
		hasEventListener(type: string): boolean;		
		/**
		!#en Removes all callbacks previously registered with the same target (passed as parameter).
		This is not for removing all listeners in the current event target,
		and this is not for removing all listeners the target parameter have registered.
		It's only for removing all listeners (callback and target couple) registered on the current event target by the target parameter.
		!#zh ??¨å????? EventTarget ä¸??????¤æ??å®???®æ??ï¼?target ?????°ï??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°æ??æ³??????¤å????? EventTarget ?????????äº?ä»¶ç????¬å?¨ï??ä¹????æ³??????? target ?????°æ??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°å?ªè?½å????? target ?????°å?¨å????? EventTarget ä¸?æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		@param target The target to be searched for all related listeners 
		*/
		targetOff(target: any): void;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget,
		the callback will remove itself after the first time it is triggered.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°?ï¼????è°?ä¼???¨ç¬¬ä¸???¶é?´è¢«è§¦å??????????¤è?ªèº«???
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.once('fire', function () {
		    cc.log("this is the callback and will be invoked only once");
		}, node);
		``` 
		*/
		once(type: string, callback: (arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any) => void, target?: any): void;		
		/**
		!#en
		Send an event with the event object.
		!#zh
		???è¿?äº?ä»¶å¯¹è±¡æ´¾???äº?ä»?
		@param event event 
		*/
		dispatchEvent(event: Event): void;		
		/**
		!#en
		Destroy all callbackInfos.
		!#zh
		???æ¯?è®°å?????äº?ä»? 
		*/
		clear(): void;	
	}	
	/** !#en Audio Source.
	!#zh ??³é??æº?ç»?ä»¶ï????½å¯¹??³é????ªè????? */
	export class AudioSource extends Component {		
		/** !#en
		Is the audio source playing (Read Only). <br/>
		Note: isPlaying is not supported for Native platforms.
		!#zh
		è¯¥é?³é????ªè????¯å?¦æ­£??­æ?¾ï????ªè¯»ï¼????<br/>
		æ³¨æ??ï¼?Native å¹³å?°æ????¶ä????¯æ?? isPlaying??? */
		isPlaying: boolean;		
		/** !#en The clip of the audio source to play.
		!#zh è¦???­æ?¾ç????³é????ªè????? */
		clip: AudioClip;		
		/** !#en The volume of the audio source.
		!#zh ??³é??æº??????³é??ï¼?0.0 ~ 1.0ï¼???? */
		volume: number;		
		/** !#en Is the audio source mute?
		!#zh ??¯å?¦é????³é?³é??æº????Mute ??¯è®¾ç½®é?³é??ä¸? 0ï¼????æ¶??????³æ?¯æ?¢å???????¥ç????³é????? */
		mute: boolean;		
		/** !#en Is the audio source looping?
		!#zh ??³é??æº???¯å?¦å¾ª??¯æ?­æ?¾ï?? */
		loop: boolean;		
		/** !#en If set to true, the audio source will automatically start playing on onEnable.
		!#zh å¦????è®¾ç½®ä¸? trueï¼???³é??æº?å°???? onEnable ??¶è?ªå?¨æ?­æ?¾ã?? */
		playOnLoad: boolean;		
		/** !#en If set to true and AudioClip is a deferred load resource, the component will preload AudioClip in the onLoad phase.
		!#zh å¦????è®¾ç½®ä¸? true ä¸? AudioClip ä¸ºå»¶è¿????è½½è??æº?ï¼?ç»?ä»¶å????? onLoad ??¶æ®µé¢????è½? AudioClip??? */
		preload: boolean;		
		/**
		!#en Plays the clip.
		!#zh ??­æ?¾é?³é????ªè????? 
		*/
		play(): void;		
		/**
		!#en Stops the clip.
		!#zh ???æ­¢å???????³é????ªè????? 
		*/
		stop(): void;		
		/**
		!#en Pause the clip.
		!#zh ??????å½??????³é????ªè????? 
		*/
		pause(): void;		
		/**
		!#en Resume the clip.
		!#zh ??¢å????­æ?¾ã?? 
		*/
		resume(): void;		
		/**
		!#en Rewind playing music.
		!#zh ä»?å¤´å??å§???­æ?¾ã?? 
		*/
		rewind(): void;		
		/**
		!#en Get current time
		!#zh ??·å??å½?????????­æ?¾æ?¶é?? 
		*/
		getCurrentTime(): number;		
		/**
		!#en Set current time
		!#zh è®¾ç½®å½?????????­æ?¾æ?¶é??
		@param time time 
		*/
		setCurrentTime(time: number): number;		
		/**
		!#en Get audio duration
		!#zh ??·å??å½??????³é???????¿åº¦ 
		*/
		getDuration(): number;	
	}	
	/** !#en
	This component will block all input events (mouse and touch) within the bounding box of the node, preventing the input from penetrating into the underlying node, typically for the background of the top UI.<br>
	This component does not have any API interface and can be added directly to the scene to take effect.
	!#zh
	è¯¥ç??ä»¶å????¦æ?ªæ??å±??????? bounding box ????????????è¾???¥ä??ä»¶ï??é¼???????è§¦æ?¸ï??ï¼???²æ­¢è¾???¥ç©¿?????°ä??å±??????¹ï??ä¸???¬ç?¨ä??ä¸?å±? UI ????????¯ã??<br>
	è¯¥ç??ä»¶æ²¡???ä»»ä?? API ??¥å??ï¼???´æ?¥æ·»?????°å?ºæ?¯å?³å?¯ç???????? */
	export class BlockInputEvents extends Component {	
	}	
	/** !#en
	Button component. Can be pressed or clicked. Button has 4 Transition types:
	
	  - Button.Transition.NONE   // Button will do nothing
	  - Button.Transition.COLOR  // Button will change target's color
	  - Button.Transition.SPRITE // Button will change target Sprite's sprite
	  - Button.Transition.SCALE // Button will change target node's scale
	
	The button can bind events (but you must be on the button's node to bind events).<br/>
	The following events can be triggered on all platforms.
	
	 - cc.Node.EventType.TOUCH_START  // Press
	 - cc.Node.EventType.TOUCH_MOVE   // After pressing and moving
	 - cc.Node.EventType.TOUCH_END    // After pressing and releasing
	 - cc.Node.EventType.TOUCH_CANCEL // Press to cancel
	
	The following events are only triggered on the PC platform:
	
	  - cc.Node.EventType.MOUSE_DOWN
	  - cc.Node.EventType.MOUSE_MOVE
	  - cc.Node.EventType.MOUSE_ENTER
	  - cc.Node.EventType.MOUSE_LEAVE
	  - cc.Node.EventType.MOUSE_UP
	  - cc.Node.EventType.MOUSE_WHEEL
	
	User can get the current clicked node with 'event.target' from event object which is passed as parameter in the callback function of click event.
	
	!#zh
	?????®ç??ä»¶ã????¯ä»¥è¢«æ??ä¸?ï¼?????????¹å?»ã??
	
	?????®å?¯ä»¥???è¿?ä¿®æ?? Transition ??¥è®¾ç½®æ????®ç?¶æ??è¿?æ¸¡ç????¹å??ï¼?
	
	  - Button.Transition.NONE   // ä¸????ä»»ä??è¿?æ¸?
	  - Button.Transition.COLOR  // è¿?è¡?é¢???²ä????´è??æ¸?
	  - Button.Transition.SPRITE // è¿?è¡?ç²¾ç?µä????´è??æ¸?
	  - Button.Transition.SCALE // è¿?è¡?ç¼©æ?¾è??æ¸?
	
	?????®å?¯ä»¥ç»?å®?äº?ä»¶ï??ä½???¯å??é¡»è????¨æ????®ç?? Node ä¸??????½ç??å®?äº?ä»¶ï??ï¼?<br/>
	ä»¥ä??äº?ä»¶å?¯ä»¥??¨å?¨å¹³??°ä????½è§¦???ï¼?
	
	  - cc.Node.EventType.TOUCH_START  // ???ä¸???¶ä??ä»?
	  - cc.Node.EventType.TOUCH_MOVE   // ???ä½?ç§»å?¨å??äº?ä»?
	  - cc.Node.EventType.TOUCH_END    // ???ä¸??????¾å?????äº?ä»?
	  - cc.Node.EventType.TOUCH_CANCEL // ???ä¸????æ¶?äº?ä»?
	
	ä»¥ä??äº?ä»¶å?ªå?? PC å¹³å?°ä??è§¦å??ï¼?
	
	  - cc.Node.EventType.MOUSE_DOWN  // é¼???????ä¸???¶ä??ä»?
	  - cc.Node.EventType.MOUSE_MOVE  // é¼???????ä½?ç§»å?¨å??äº?ä»?
	  - cc.Node.EventType.MOUSE_ENTER // é¼????è¿???¥ç?®æ??äº?ä»?
	  - cc.Node.EventType.MOUSE_LEAVE // é¼????ç¦»å????®æ??äº?ä»?
	  - cc.Node.EventType.MOUSE_UP    // é¼??????¾å??äº?ä»?
	  - cc.Node.EventType.MOUSE_WHEEL // é¼????æ»?è½®ä??ä»?
	
	??¨æ?·å?¯ä»¥???è¿???·å?? __??¹å?»ä??ä»¶__ ???è°???½æ?°ç???????? event ??? target å±???§è?·å??å½??????¹å?»å¯¹è±¡ã?? */
	export class Button extends Component implements GraySpriteState {		
		/** !#en
		Whether the Button is disabled.
		If true, the Button will trigger event and do transition.
		!#zh
		?????®ä??ä»¶æ?¯å?¦è¢«???åº?ï¼?å¦????ä¸? falseï¼?????????®å??è¢«ç????¨ã?? */
		interactable: boolean;		
		/** !#en When this flag is true, Button target sprite will turn gray when interactable is false.
		!#zh å¦????è¿?ä¸ªæ??è®°ä¸º trueï¼?å½? button ??? interactable å±???§ä¸º false ?????¶å??ï¼?ä¼?ä½¿ç?¨å??ç½? shader è®? button ??? target ?????¹ç?? sprite ç»?ä»¶å????? */
		enableAutoGrayEffect: boolean;		
		/** !#en Transition type
		!#zh ?????®ç?¶æ????¹å????¶è??æ¸¡æ?¹å????? */
		transition: Button.Transition;		
		/** !#en Normal state color.
		!#zh ??®é????¶æ??ä¸??????®æ????¾ç¤º???é¢???²ã?? */
		normalColor: Color;		
		/** !#en Pressed state color
		!#zh ???ä¸???¶æ????¶æ????®æ????¾ç¤º???é¢???²ã?? */
		pressedColor: Color;		
		/** !#en Hover state color
		!#zh ??¬å????¶æ??ä¸??????®æ????¾ç¤º???é¢???²ã?? */
		hoverColor: Color;		
		/** !#en Disabled state color
		!#zh ç¦???¨ç?¶æ??ä¸??????®æ????¾ç¤º???é¢???²ã?? */
		disabledColor: Color;		
		/** !#en Color and Scale transition duration
		!#zh é¢???²è??æ¸¡å??ç¼©æ?¾è??æ¸¡æ?¶æ???????¶é?? */
		duration: number;		
		/** !#en  When user press the button, the button will zoom to a scale.
		The final scale of the button  equals (button original scale * zoomScale)
		!#zh å½???¨æ?·ç?¹å?»æ????®å??ï¼??????®ä??ç¼©æ?¾å?°ä??ä¸ªå?¼ï??è¿?ä¸ªå?¼ç??äº? Button ???å§? scale * zoomScale */
		zoomScale: number;		
		/** !#en Normal state sprite
		!#zh ??®é????¶æ??ä¸??????®æ????¾ç¤º??? Sprite ??? */
		normalSprite: SpriteFrame;		
		/** !#en Pressed state sprite
		!#zh ???ä¸???¶æ????¶æ????®æ????¾ç¤º??? Sprite ??? */
		pressedSprite: SpriteFrame;		
		/** !#en Hover state sprite
		!#zh ??¬å????¶æ??ä¸??????®æ????¾ç¤º??? Sprite ??? */
		hoverSprite: SpriteFrame;		
		/** !#en Disabled state sprite
		!#zh ç¦???¨ç?¶æ??ä¸??????®æ????¾ç¤º??? Sprite ??? */
		disabledSprite: SpriteFrame;		
		/** !#en
		Transition target.
		When Button state changed:
		 If Transition type is Button.Transition.NONE, Button will do nothing
		 If Transition type is Button.Transition.COLOR, Button will change target's color
		 If Transition type is Button.Transition.SPRITE, Button will change target Sprite's sprite
		!#zh
		???è¦?è¿?æ¸¡ç????®æ?????
		å½?????????®ç?¶æ????¹å??è§????ï¼?
		-å¦???? Transition type ?????? Button.Transition.NONEï¼??????®ä?????ä»»ä??è¿?æ¸¡ã??
		-å¦???? Transition type ?????? Button.Transition.COLORï¼??????®ä??å¯¹ç?®æ??é¢???²è??è¡?é¢???²ä????´ç??è¿?æ¸¡ã??
		-å¦???? Transition type ?????? Button.Transition.Spriteï¼??????®ä??å¯¹ç?®æ?? Sprite è¿?è¡? Sprite ä¹???´ç??è¿?æ¸¡ã?? */
		target: Node;		
		/** !#en If Button is clicked, it will trigger event's handler
		!#zh ?????®ç????¹å?»ä??ä»¶å??è¡¨ã?? */
		clickEvents: Component.EventHandler[];		
		/** !#en The normal material.
		!#zh æ­?å¸¸ç?¶æ????????è´¨ã?? */
		normalMaterial: Material;		
		/** !#en The gray material.
		!#zh ç½®ç?°ç?¶æ????????è´¨ã?? */
		grayMaterial: Material;	
	}	
	/** !#zh ä½?ä¸? UI ??¹è????¹ï??ä¸ºæ?????å­??????¹æ??ä¾?è§?çª????è¾¹ç??ä½?ç½®ä¿¡??¯ä»¥ä¾?å¯¹é??ï¼???¦å?????ä¾?å±?å¹???????ç­???¥æ?¥å??ï¼???¹ä¾¿ä»?ç¼?è¾???¨è®¾ç½®ã??<br>
	æ³¨ï????±ä????¬è????¹ç??å°ºå¯¸ä¼?è·????å±?å¹????ä¼¸ï?????ä»? anchorPoint ??ªæ?¯æ?? (0.5, 0.5)ï¼???¦å????????ä¸????å±?å¹???¶å?????ä¼???????å·®ã?? */
	export class Canvas extends Component {		
		/** !#en Current active canvas, the scene should only have one active canvas at the same time.
		!#zh å½????æ¿?æ´»ç????»å??ç»?ä»¶ï????ºæ?¯å??ä¸???¶é?´å?ªè?½æ??ä¸?ä¸ªæ??æ´»ç????»å????? */
		static instance: Canvas;		
		/** !#en The desigin resolution for current scene.
		!#zh å½??????ºæ?¯è®¾è®¡å??è¾¨ç????? */
		designResolution: Size;		
		/** !#en TODO
		!#zh: ??¯å?¦ä?????å°?è®¾è®¡???è¾¨ç??é«?åº¦æ??æ»¡è????¾é??åº¦ã?? */
		fitHeight: boolean;		
		/** !#en TODO
		!#zh: ??¯å?¦ä?????å°?è®¾è®¡???è¾¨ç??å®½åº¦???æ»¡è????¾å®½åº¦ã?? */
		fitWidth: boolean;	
	}	
	/** !#en
	Base class for everything attached to Node(Entity).<br/>
	<br/>
	NOTE: Not allowed to use construction parameters for Component's subclasses,
	because Component is created by the engine.
	!#zh
	??????????????°è????¹ç????ºç±»???<br/>
	<br/>
	æ³¨æ??ï¼?ä¸????è®¸ä½¿??¨ç??ä»¶ç??å­?ç±»æ??????????°ï?????ä¸ºç??ä»¶æ?¯ç?±å????????å»ºç????? */
	export class Component extends Object {		
		/** !#en The node this component is attached to. A component is always attached to a node.
		!#zh è¯¥ç??ä»¶è¢«????????°ç???????¹ã??ç»?ä»¶æ?»ä??????????°ä??ä¸ªè????¹ã?? */
		node: Node;		
		/** !#en The uuid for editor.
		!#zh ç»?ä»¶ç?? uuidï¼???¨ä??ç¼?è¾???¨ã?? */
		uuid: string;		
		/** !#en indicates whether this component is enabled or not.
		!#zh è¡¨ç¤ºè¯¥ç??ä»¶è?ªèº«??¯å?¦å?¯ç?¨ã?? */
		enabled: boolean;		
		/** !#en indicates whether this component is enabled and its node is also active in the hierarchy.
		!#zh è¡¨ç¤ºè¯¥ç??ä»¶æ?¯å?¦è¢«??¯ç?¨å¹¶ä¸??????¨ç???????¹ä??å¤?äº?æ¿?æ´»ç?¶æ????? */
		enabledInHierarchy: boolean;		
		/** !#en Returns a value which used to indicate the onLoad get called or not.
		!#zh è¿????ä¸?ä¸ªå?¼ç?¨æ?¥å?¤æ?? onLoad ??¯å?¦è¢«è°???¨è??ï¼?ä¸?ç­?äº? 0 ??¶è????¨è??ï¼?ç­?äº? 0 ??¶æ?ªè????¨ã?? */
		_isOnLoadCalled: number;		
		/**
		!#en Update is called every frame, if the Component is enabled.<br/>
		This is a lifecycle method. It may not be implemented in the super class. You can only call its super class method inside it. It should not be called manually elsewhere.
		!#zh å¦????è¯¥ç??ä»¶å?¯ç?¨ï?????æ¯?å¸§è????? update???<br/>
		è¯¥æ?¹æ??ä¸ºç????½å?¨æ????¹æ??ï¼???¶ç±»??ªå??ä¼????å®???°ã??å¹¶ä??ä½???ªè?½å?¨è¯¥??¹æ???????¨è????¨ç?¶ç±»???å®???°ï??ä¸???¯å?¨å?¶å????°æ?¹ç?´æ?¥è????¨è¯¥??¹æ?????
		@param dt the delta time in seconds it took to complete the last frame 
		*/
		protected update(dt: number): void;		
		/**
		!#en LateUpdate is called every frame, if the Component is enabled.<br/>
		This is a lifecycle method. It may not be implemented in the super class. You can only call its super class method inside it. It should not be called manually elsewhere.
		!#zh å¦????è¯¥ç??ä»¶å?¯ç?¨ï?????æ¯?å¸§è????? LateUpdate???<br/>
		è¯¥æ?¹æ??ä¸ºç????½å?¨æ????¹æ??ï¼???¶ç±»??ªå??ä¼????å®???°ã??å¹¶ä??ä½???ªè?½å?¨è¯¥??¹æ???????¨è????¨ç?¶ç±»???å®???°ï??ä¸???¯å?¨å?¶å????°æ?¹ç?´æ?¥è????¨è¯¥??¹æ?????
		@param dt the delta time in seconds it took to complete the last frame 
		*/
		protected lateUpdate(dt: number): void;		
		/**
		!#en
		When attaching to an active node or its node first activated.
		onLoad is always called before any start functions, this allows you to order initialization of scripts.<br/>
		This is a lifecycle method. It may not be implemented in the super class. You can only call its super class method inside it. It should not be called manually elsewhere.
		!#zh
		å½?????????°ä??ä¸ªæ??æ´»ç???????¹ä??????????¶è????¹ç¬¬ä¸?æ¬¡æ??æ´»æ?¶å??è°???¨ã??onLoad ??»æ?¯ä????¨ä»»ä½? start ??¹æ??è°???¨å????§è??ï¼?è¿???½ç?¨ä??å®?????????¬ç?????å§????é¡ºå?????<br/>
		è¯¥æ?¹æ??ä¸ºç????½å?¨æ????¹æ??ï¼???¶ç±»??ªå??ä¼????å®???°ã??å¹¶ä??ä½???ªè?½å?¨è¯¥??¹æ???????¨è????¨ç?¶ç±»???å®???°ï??ä¸???¯å?¨å?¶å????°æ?¹ç?´æ?¥è????¨è¯¥??¹æ????? 
		*/
		protected onLoad(): void;		
		/**
		!#en
		Called before all scripts' update if the Component is enabled the first time.
		Usually used to initialize some logic which need to be called after all components' `onload` methods called.<br/>
		This is a lifecycle method. It may not be implemented in the super class. You can only call its super class method inside it. It should not be called manually elsewhere.
		!#zh
		å¦????è¯¥ç??ä»¶ç¬¬ä¸?æ¬¡å?¯ç?¨ï???????¨æ?????ç»?ä»¶ç?? update ä¹????è°???¨ã?????å¸¸ç?¨ä?????è¦???¨æ?????ç»?ä»¶ç?? onLoad ???å§????å®?æ¯??????§è???????»è?????<br/>
		è¯¥æ?¹æ??ä¸ºç????½å?¨æ????¹æ??ï¼???¶ç±»??ªå??ä¼????å®???°ã??å¹¶ä??ä½???ªè?½å?¨è¯¥??¹æ???????¨è????¨ç?¶ç±»???å®???°ï??ä¸???¯å?¨å?¶å????°æ?¹ç?´æ?¥è????¨è¯¥??¹æ????? 
		*/
		protected start(): void;		
		/**
		!#en Called when this component becomes enabled and its node is active.<br/>
		This is a lifecycle method. It may not be implemented in the super class. You can only call its super class method inside it. It should not be called manually elsewhere.
		!#zh å½?è¯¥ç??ä»¶è¢«??¯ç?¨ï??å¹¶ä??å®?????????¹ä??æ¿?æ´»æ?¶ã??<br/>
		è¯¥æ?¹æ??ä¸ºç????½å?¨æ????¹æ??ï¼???¶ç±»??ªå??ä¼????å®???°ã??å¹¶ä??ä½???ªè?½å?¨è¯¥??¹æ???????¨è????¨ç?¶ç±»???å®???°ï??ä¸???¯å?¨å?¶å????°æ?¹ç?´æ?¥è????¨è¯¥??¹æ????? 
		*/
		protected onEnable(): void;		
		/**
		!#en Called when this component becomes disabled or its node becomes inactive.<br/>
		This is a lifecycle method. It may not be implemented in the super class. You can only call its super class method inside it. It should not be called manually elsewhere.
		!#zh å½?è¯¥ç??ä»¶è¢«ç¦???¨æ???????¹å??ä¸ºæ???????¶è????¨ã??<br/>
		è¯¥æ?¹æ??ä¸ºç????½å?¨æ????¹æ??ï¼???¶ç±»??ªå??ä¼????å®???°ã??å¹¶ä??ä½???ªè?½å?¨è¯¥??¹æ???????¨è????¨ç?¶ç±»???å®???°ï??ä¸???¯å?¨å?¶å????°æ?¹ç?´æ?¥è????¨è¯¥??¹æ????? 
		*/
		protected onDisable(): void;		
		/**
		!#en Called when this component will be destroyed.<br/>
		This is a lifecycle method. It may not be implemented in the super class. You can only call its super class method inside it. It should not be called manually elsewhere.
		!#zh å½?è¯¥ç??ä»¶è¢«???æ¯???¶è?????<br/>
		è¯¥æ?¹æ??ä¸ºç????½å?¨æ????¹æ??ï¼???¶ç±»??ªå??ä¼????å®???°ã??å¹¶ä??ä½???ªè?½å?¨è¯¥??¹æ???????¨è????¨ç?¶ç±»???å®???°ï??ä¸???¯å?¨å?¶å????°æ?¹ç?´æ?¥è????¨è¯¥??¹æ????? 
		*/
		protected onDestroy(): void;		
		protected onFocusInEditor(): void;		
		protected onLostFocusInEditor(): void;		
		/**
		!#en Called to initialize the component or node???s properties when adding the component the first time or when the Reset command is used. This function is only called in editor.
		!#zh ??¨æ?¥å??å§????ç»?ä»¶æ???????¹ç??ä¸?äº?å±???§ï??å½?è¯¥ç??ä»¶è¢«ç¬¬ä??æ¬¡æ·»?????°è????¹ä???????¨æ?·ç?¹å?»ä??å®???? Reset ????????¶è????¨ã??è¿?ä¸ªå??è°???ªä????¨ç??è¾???¨ä??è°???¨ã?? 
		*/
		protected resetInEditor(): void;		
		/**
		!#en Adds a component class to the node. You can also add component to node by passing in the name of the script.
		!#zh ????????¹æ·»???ä¸?ä¸ªç??ä»¶ç±»ï¼?ä½?è¿???¯ä»¥???è¿?ä¼???¥è????¬ç?????ç§°æ?¥æ·»???ç»?ä»¶ã??
		@param typeOrClassName the constructor or the class name of the component to add
		
		@example 
		```js
		var sprite = node.addComponent(cc.Sprite);
		var test = node.addComponent("Test");
		``` 
		*/
		addComponent<T extends Component>(type: {new(): T}): T;
		addComponent(className: string): any;		
		/**
		!#en
		Returns the component of supplied type if the node has one attached, null if it doesn't.<br/>
		You can also get component in the node by passing in the name of the script.
		!#zh
		??·å???????¹ä?????å®?ç±»å?????ç»?ä»¶ï??å¦?????????¹æ???????????å®?ç±»å?????ç»?ä»¶ï?????è¿????ï¼?å¦????æ²¡æ?????ä¸ºç©º???<br/>
		ä¼???¥å????°ä????¯ä»¥??¯è????¬ç?????ç§°ã??
		@param typeOrClassName typeOrClassName
		
		@example 
		```js
		// get sprite component.
		var sprite = node.getComponent(cc.Sprite);
		// get custom test calss.
		var test = node.getComponent("Test");
		``` 
		*/
		getComponent<T extends Component>(type: {prototype: T}): T;
		getComponent(className: string): any;		
		/**
		!#en Returns all components of supplied Type in the node.
		!#zh è¿?????????¹ä?????å®?ç±»å???????????ç»?ä»¶ã??
		@param typeOrClassName typeOrClassName
		
		@example 
		```js
		var sprites = node.getComponents(cc.Sprite);
		var tests = node.getComponents("Test");
		``` 
		*/
		getComponents<T extends Component>(type: {prototype: T}): T[];
		getComponents(className: string): any[];		
		/**
		!#en Returns the component of supplied type in any of its children using depth first search.
		!#zh ???å½???¥æ?¾æ?????å­??????¹ä¸­ç¬¬ä??ä¸ªå?¹é?????å®?ç±»å?????ç»?ä»¶ã??
		@param typeOrClassName typeOrClassName
		
		@example 
		```js
		var sprite = node.getComponentInChildren(cc.Sprite);
		var Test = node.getComponentInChildren("Test");
		``` 
		*/
		getComponentInChildren<T extends Component>(type: {prototype: T}): T;
		getComponentInChildren(className: string): any;		
		/**
		!#en Returns the components of supplied type in self or any of its children using depth first search.
		!#zh ???å½???¥æ?¾è?ªèº«?????????å­??????¹ä¸­???å®?ç±»å?????ç»?ä»?
		@param typeOrClassName typeOrClassName
		
		@example 
		```js
		var sprites = node.getComponentsInChildren(cc.Sprite);
		var tests = node.getComponentsInChildren("Test");
		``` 
		*/
		getComponentsInChildren<T extends Component>(type: {prototype: T}): T[];
		getComponentsInChildren(className: string): any[];		
		/**
		!#en
		If the component's bounding box is different from the node's, you can implement this method to supply
		a custom axis aligned bounding box (AABB), so the editor's scene view can perform hit test properly.
		!#zh
		å¦????ç»?ä»¶ç???????´ç??ä¸??????¹ä?????ï¼???¨å?¯ä»¥å®???°è¯¥??¹æ??ä»¥æ??ä¾???ªå??ä¹????è½´å??å¯¹é??????????´ç??ï¼?AABBï¼?ï¼?
		ä»¥ä¾¿ç¼?è¾???¨ç????ºæ?¯è????¾å?¯ä»¥æ­?ç¡®å?°æ?§è????¹é??æµ?è¯????
		@param out_rect the Rect to receive the bounding box 
		*/
		_getLocalBounds(out_rect: Rect): void;		
		/**
		!#en
		onRestore is called after the user clicks the Reset item in the Inspector's context menu or performs
		an undo operation on this component.<br/>
		<br/>
		If the component contains the "internal state", short for "temporary member variables which not included<br/>
		in its CCClass properties", then you may need to implement this function.<br/>
		<br/>
		The editor will call the getset accessors of your component to record/restore the component's state<br/>
		for undo/redo operation. However, in extreme cases, it may not works well. Then you should implement<br/>
		this function to manually synchronize your component's "internal states" with its public properties.<br/>
		Once you implement this function, all the getset accessors of your component will not be called when<br/>
		the user performs an undo/redo operation. Which means that only the properties with default value<br/>
		will be recorded or restored by editor.<br/>
		<br/>
		Similarly, the editor may failed to reset your component correctly in extreme cases. Then if you need<br/>
		to support the reset menu, you should manually synchronize your component's "internal states" with its<br/>
		properties in this function. Once you implement this function, all the getset accessors of your component<br/>
		will not be called during reset operation. Which means that only the properties with default value<br/>
		will be reset by editor.
		
		This function is only called in editor mode.
		!#zh
		onRestore ??¯ç?¨æ?·å?¨æ????¥å?¨è???????¹å?? Reset ??¶ï??å¯¹æ­¤ç»?ä»¶æ?§è????¤æ?????ä½????è°???¨ç?????<br/>
		<br/>
		å¦????ç»?ä»¶å????«ä??????????¨ç?¶æ?????ï¼?ä¸???? CCClass å±???§ä¸­å®?ä¹????ä¸´æ?¶æ???????????ï¼?ï¼????ä¹?ä½???¯è?½é??è¦?å®???°è¯¥??¹æ?????<br/>
		<br/>
		ç¼?è¾???¨æ?§è????¤é??/?????????ä½???¶ï??å°?è°???¨ç??ä»¶ç?? get set ??¥å????¶å??è¿????ç»?ä»¶ç????¶æ???????¶è??ï¼???¨æ??ç«¯ç???????µä??ï¼?å®???¯è?½æ??æ³???¯å¥½è¿?ä½????<br/>
		???ä¹?ä½?å°±å??è¯¥å????°è??ä¸ªæ?¹æ??ï¼??????¨æ?¹æ?®ç??ä»¶ç??å±???§å??æ­¥â???????¨ç?¶æ????????ä¸???¦ä??å®???°è??ä¸ªæ?¹æ??ï¼?å½???¨æ?·æ?¤é?????????????¶ï??ç»?ä»¶ç???????? get set ??½ä??ä¼????è¢«è????¨ã??è¿??????³ç??ä»?ä»????å®?äº?é»?è®¤å?¼ç??å±???§å??è¢«ç??è¾???¨è®°å½????è¿???????<br/>
		<br/>
		?????·ç??ï¼?ç¼?è¾???¯è?½æ??æ³???¨æ??ç«¯æ????µä??æ­?ç¡®å?°é??ç½®æ?¨ç??ç»?ä»¶ã??å¦????ä½????è¦???¯æ??ç»?ä»¶é??ç½®è?????ï¼???????è¦???¨è¯¥??¹æ??ä¸­æ??å·¥å??æ­¥ç??ä»¶å????§å?°â???????¨ç?¶æ????????ä¸???¦ä??å®???°è??ä¸ªæ?¹æ??ï¼?ç»?ä»¶ç???????? get set ??½ä??ä¼???¨é??ç½®æ??ä½???¶è¢«è°???¨ã??è¿??????³ç??ä»?ä»????å®?äº?é»?è®¤å?¼ç??å±???§å??è¢«ç??è¾???¨é??ç½®ã??
		<br/>
		æ­¤æ?¹æ??ä»???¨ç??è¾???¨ä??ä¼?è¢«è????¨ã?? 
		*/
		onRestore(): void;		
		/**
		!#en
		Schedules a custom selector.<br/>
		If the selector is already scheduled, then the interval parameter will be updated without scheduling it again.
		!#zh
		è°?åº¦ä??ä¸ªè?ªå??ä¹???????è°???½æ?°ã??<br/>
		å¦???????è°???½æ?°å·²è°?åº¦ï?????ä¹?å°?ä¸?ä¼????å¤?è°?åº¦å??ï¼???ªä????´æ?°æ?¶é?´é?´é???????°ã??
		@param callback The callback function
		@param interval Tick interval in seconds. 0 means tick every frame.
		@param repeat The selector will be executed (repeat + 1) times, you can use cc.macro.REPEAT_FOREVER for tick infinitely.
		@param delay The amount of time that the first tick will wait before execution. Unit: s
		
		@example 
		```js
		var timeCallback = function (dt) {
		  cc.log("time: " + dt);
		}
		this.schedule(timeCallback, 1);
		``` 
		*/
		schedule(callback: Function, interval?: number, repeat?: number, delay?: number): void;		
		/**
		!#en Schedules a callback function that runs only once, with a delay of 0 or larger.
		!#zh è°?åº¦ä??ä¸ªå?ªè??è¡?ä¸?æ¬¡ç?????è°???½æ?°ï????¯ä»¥???å®? 0 è®©å??è°???½æ?°å?¨ä??ä¸?å¸§ç????³æ?§è??????????¨ä??å®????å»¶æ?¶ä???????§è?????
		@param callback A function wrapped as a selector
		@param delay The amount of time that the first tick will wait before execution. Unit: s
		
		@example 
		```js
		var timeCallback = function (dt) {
		  cc.log("time: " + dt);
		}
		this.scheduleOnce(timeCallback, 2);
		``` 
		*/
		scheduleOnce(callback: Function, delay?: number): void;		
		/**
		!#en Unschedules a custom callback function.
		!#zh ???æ¶?è°?åº¦ä??ä¸ªè?ªå??ä¹???????è°???½æ?°ã??
		@param callback_fn A function wrapped as a selector
		
		@example 
		```js
		this.unschedule(_callback);
		``` 
		*/
		unschedule(callback_fn: Function): void;		
		/**
		!#en
		unschedule all scheduled callback functions: custom callback functions, and the 'update' callback function.<br/>
		Actions are not affected by this method.
		!#zh ???æ¶?è°?åº¦æ?????å·²è??åº¦ç?????è°???½æ?°ï??å®???¶ç?????è°???½æ?°ä»¥??? `update` ???è°???½æ?°ã????¨ä??ä¸????æ­¤æ?¹æ??å½±å?????
		
		@example 
		```js
		this.unscheduleAllCallbacks();
		``` 
		*/
		unscheduleAllCallbacks(): void;	
	}	
	/** !#en The Label Component.
	!#zh ???å­????ç­¾ç??ä»? */
	export class Label extends RenderComponent {		
		/** !#en Content string of label.
		!#zh ???ç­¾æ?¾ç¤º????????¬å??å®¹ã?? */
		string: string;		
		/** !#en Horizontal Alignment of label.
		!#zh ?????¬å??å®¹ç??æ°´å¹³å¯¹é????¹å????? */
		horizontalAlign: Label.HorizontalAlign;		
		/** !#en Vertical Alignment of label.
		!#zh ?????¬å??å®¹ç???????´å¯¹é½???¹å????? */
		verticalAlign: Label.VerticalAlign;		
		/** !#en The actual rendering font size in shrink mode
		!#zh SHRINK æ¨¡å??ä¸???¢æ????¬å?????æ¸²æ?????å­?ä½?å¤§å?? */
		actualFontSize: number;		
		/** !#en Font size of label.
		!#zh ?????¬å??ä½?å¤§å????? */
		fontSize: number;		
		/** !#en Font family of label, only take effect when useSystemFont property is true.
		!#zh ?????¬å??ä½????ç§?, ??ªå?? useSystemFont å±???§ä¸º true ?????¶å??????????? */
		fontFamily: string;		
		/** !#en Line Height of label.
		!#zh ?????¬è??é«???? */
		lineHeight: number;		
		/** !#en Overflow of label.
		!#zh ???å­???¾ç¤ºè¶???ºè????´æ?¶ç??å¤??????¹å????? */
		overflow: Label.Overflow;		
		/** !#en Whether auto wrap label when string width is large than label width.
		!#zh ??¯å?¦è?ªå?¨æ?¢è????? */
		enableWrapText: boolean;		
		/** !#en The font of label.
		!#zh ?????¬å??ä½???? */
		font: Font;		
		/** !#en Whether use system font name or not.
		!#zh ??¯å?¦ä½¿??¨ç³»ç»?å­?ä½???? */
		useSystemFont: boolean;		
		/** !#en The spacing of the x axis between characters, only take Effect when using bitmap fonts.
		!#zh ???å­?ä¹???? x è½´ç????´è??ï¼?ä»???¨ä½¿??¨ä????¾å??ä½???¶ç???????? */
		spacingX: number;		
		/** !#en The cache mode of label. This mode only supports system fonts.
		!#zh ?????¬ç??å­?æ¨¡å??, è¯¥æ¨¡å¼???ªæ?¯æ??ç³»ç??å­?ä½???? */
		cacheMode: Label.CacheMode;		
		/** !#en Whether enable bold.
		!#zh ??¯å?¦å?¯ç?¨é??ä½???? */
		enableBold: boolean;		
		/** !#en Whether enable italic.
		!#zh ??¯å?¦å?¯ç?¨æ??ä½???? */
		enableItalic: boolean;		
		/** !#en Whether enable underline.
		!#zh ??¯å?¦å?¯ç?¨ä?????çº¿ã?? */
		enableUnderline: boolean;		
		/** !#en The height of underline.
		!#zh ä¸????çº¿é??åº¦ã?? */
		underlineHeight: number;		
		/**
		!#zh ???è¦?ä¿?è¯?å½??????ºæ?¯ä¸­æ²¡æ??ä½¿ç?¨CHARç¼?å­????Label?????¯ä»¥æ¸???¤ï????¦å??å·²æ¸²?????????å­?æ²¡æ???????°ç????¶ä??ä¸???¾ç¤º
		!#en It can be cleared that need to ensure there is not use the CHAR cache in the current scene. Otherwise, the rendered text will not be displayed without repainting. 
		*/
		static clearCharCache(): void;	
	}	
	/** !#en Outline effect used to change the display, only for system fonts or TTF fonts
	!#zh ???è¾¹æ?????ç»?ä»?,??¨ä??å­?ä½????è¾?,??ªè?½ç?¨ä??ç³»ç??å­?ä½? */
	export class LabelOutline extends Component {		
		/** !#en outline color
		!#zh ??¹å?????è¾¹ç??é¢???? */
		color: Color;		
		/** !#en Change the outline width
		!#zh ??¹å?????è¾¹ç??å®½åº¦ */
		width: number;	
	}	
	/** !#en Shadow effect for Label component, only for system fonts or TTF fonts
	!#zh ??¨ä??ç»? Label ç»?ä»¶æ·»?????´å½±??????ï¼???ªè?½ç?¨ä??ç³»ç??å­?ä½???? ttf å­?ä½? */
	export class LabelShadow extends Component {		
		/** !#en The shadow color
		!#zh ??´å½±???é¢???? */
		color: Color;		
		/** !#en Offset between font and shadow
		!#zh å­?ä½?ä¸???´å½±??????ç§? */
		offset: Vec2;		
		/** !#en A non-negative float specifying the level of shadow blur
		!#zh ??´å½±???æ¨¡ç??ç¨?åº? */
		blur: number;	
	}	
	/** !#en
	The Layout is a container component, use it to arrange child elements easily.<br>
	Noteï¼?<br>
	1.Scaling and rotation of child nodes are not considered.<br>
	2.After setting the Layout, the results need to be updated until the next frame,
	unless you manually call {{#crossLink "Layout/updateLayout:method"}}{{/crossLink}}???
	!#zh
	Layout ç»?ä»¶ç?¸å??äº?ä¸?ä¸ªå®¹??¨ï????½è?ªå?¨å¯¹å®??????????å­??????¹è??è¡?ç»?ä¸??????????<br>
	æ³¨æ??ï¼?<br>
	1.ä¸?ä¼???????å­??????¹ç??ç¼©æ?¾å?????è½¬ã??<br>
	2.å¯? Layout è®¾ç½®???ç»???????è¦???°ä??ä¸?å¸§æ??ä¼???´æ?°ï????¤é??ä½?è®¾ç½®å®?ä»¥å???????¨è????? {{#crossLink "Layout/updateLayout:method"}}{{/crossLink}}??? */
	export class Layout extends Component {		
		/** !#en The layout type.
		!#zh å¸?å±?ç±»å?? */
		type: Layout.Type;		
		/** !#en
		The are three resize modes for Layout.
		None, resize Container and resize children.
		!#zh ç¼©æ?¾æ¨¡å¼? */
		resizeMode: Layout.ResizeMode;		
		/** !#en The cell size for grid layout.
		!#zh æ¯?ä¸ªæ?¼å?????å¤§å??ï¼???ªæ??å¸?å±?ç±»å??ä¸? GRID ?????¶å?????????????? */
		cellSize: Size;		
		/** !#en
		The start axis for grid layout. If you choose horizontal, then children will layout horizontally at first,
		and then break line on demand. Choose vertical if you want to layout vertically at first .
		!#zh èµ·å??è½´æ?¹å??ç±»å??ï¼???¯è??è¡?æ°´å¹³????????´å??å±???????ï¼???ªæ??å¸?å±?ç±»å??ä¸? GRID ?????¶å?????????????? */
		startAxis: Layout.AxisDirection;		
		/** !#en The left padding of layout, it only effect the layout in one direction.
		!#zh å®¹å?¨å??å·¦è¾¹è·?ï¼???ªä????¨ä??ä¸ªå??å±???¹å??ä¸?????????? */
		paddingLeft: number;		
		/** !#en The right padding of layout, it only effect the layout in one direction.
		!#zh å®¹å?¨å????³è¾¹è·?ï¼???ªä????¨ä??ä¸ªå??å±???¹å??ä¸?????????? */
		paddingRight: number;		
		/** !#en The top padding of layout, it only effect the layout in one direction.
		!#zh å®¹å?¨å??ä¸?è¾¹è??ï¼???ªä????¨ä??ä¸ªå??å±???¹å??ä¸?????????? */
		paddingTop: number;		
		/** !#en The bottom padding of layout, it only effect the layout in one direction.
		!#zh å®¹å?¨å??ä¸?è¾¹è??ï¼???ªä????¨ä??ä¸ªå??å±???¹å??ä¸?????????? */
		paddingBottom: number;		
		/** !#en The distance in x-axis between each element in layout.
		!#zh å­??????¹ä????´ç??æ°´å¹³??´è????? */
		spacingX: number;		
		/** !#en The distance in y-axis between each element in layout.
		!#zh å­??????¹ä????´ç???????´é?´è????? */
		spacingY: number;		
		/** !#en
		Only take effect in Vertical layout mode.
		This option changes the start element's positioning.
		!#zh ?????´æ?????å­??????¹ç????¹å????? */
		verticalDirection: Layout.VerticalDirection;		
		/** !#en
		Only take effect in Horizontal layout mode.
		This option changes the start element's positioning.
		!#zh æ°´å¹³??????å­??????¹ç????¹å????? */
		horizontalDirection: Layout.HorizontalDirection;		
		/** !#en Adjust the layout if the children scaled.
		!#zh å­??????¹ç¼©??¾æ??ä¾???¯å?¦å½±???å¸?å±???? */
		affectedByScale: boolean;		
		/**
		!#en Perform the layout update
		!#zh ç«???³æ?§è????´æ?°å??å±?
		
		@example 
		```js
		layout.type = cc.Layout.HORIZONTAL;
		layout.node.addChild(childNode);
		cc.log(childNode.x); // not yet changed
		layout.updateLayout();
		cc.log(childNode.x); // changed
		``` 
		*/
		updateLayout(): void;	
	}	
	/** !#en The Mask Component
	!#zh ??®ç½©ç»?ä»? */
	export class Mask extends RenderComponent {		
		/** !#en The mask type.
		!#zh ??®ç½©ç±»å?? */
		type: Mask.Type;		
		/** !#en The mask image
		!#zh ??®ç½©??????è¦????è´´å?? */
		spriteFrame: SpriteFrame;		
		/** !#en
		The alpha threshold.(Not supported Canvas Mode) <br/>
		The content is drawn only where the stencil have pixel with alpha greater than the alphaThreshold. <br/>
		Should be a float between 0 and 1. <br/>
		This default to 0.1.
		When it's set to 1, the stencil will discard all pixels, nothing will be shown.
		!#zh
		Alpha ?????¼ï??ä¸???¯æ?? Canvas æ¨¡å??ï¼?<br/>
		??ªæ??å½?æ¨¡æ?¿ç?????ç´???? alpha å¤§ä??ç­?äº? alphaThreshold ??¶ï?????ä¼?ç»???¶å??å®¹ã??<br/>
		è¯¥æ?°å?? 0 ~ 1 ä¹???´ç??æµ®ç?¹æ?°ï??é»?è®¤å?¼ä¸º 0.1
		å½?è¢«è®¾ç½®ä¸º 1 ??¶ï??ä¼?ä¸¢å?????????????????ç´?ï¼????ä»¥ä??ä¼???¾ç¤ºä»»ä?????å®? */
		alphaThreshold: number;		
		/** !#en Reverse mask (Not supported Canvas Mode)
		!#zh ????????®ç½©ï¼?ä¸???¯æ?? Canvas æ¨¡å??ï¼? */
		inverted: boolean;		
		/** TODO: remove segments, not supported by graphics
		!#en The segements for ellipse mask.
		!#zh æ¤­å????®ç½©?????²çº¿ç»??????? */
		segements: number;	
	}	
	/** !#en
	cc.MotionStreak manages a Ribbon based on it's motion in absolute space.                 <br/>
	You construct it with a fadeTime, minimum segment size, texture path, texture            <br/>
	length and color. The fadeTime controls how long it takes each vertex in                 <br/>
	the streak to fade out, the minimum segment size it how many pixels the                  <br/>
	streak will move before adding a new ribbon segment, and the texture                     <br/>
	length is the how many pixels the texture is stretched across. The texture               <br/>
	is vertically aligned along the streak segment.
	!#zh è¿???¨è½¨è¿¹ï????¨ä??æ¸¸æ??å¯¹è±¡???è¿???¨è½¨è¿¹ä??å®???°æ??å°¾æ?????????????? */
	export class MotionStreak extends Component implements BlendFunc {		
		/** !#en
		!#zh ??¨ç??è¾???¨æ¨¡å¼?ä¸?é¢?è§????å°¾æ???????? */
		preview: boolean;		
		/** !#en The fade time to fade.
		!#zh ???å°¾ç??æ¸??????¶é?´ï??ä»¥ç??ä¸ºå??ä½???? */
		fadeTime: number;		
		/** !#en The minimum segment size.
		!#zh ???å°¾ä????´æ??å°?è·?ç¦»ã?? */
		minSeg: number;		
		/** !#en The stroke's width.
		!#zh ???å°¾ç??å®½åº¦??? */
		stroke: number;		
		/** !#en The texture of the MotionStreak.
		!#zh ???å°¾ç??è´´å?¾ã?? */
		texture: Texture2D;		
		/** !#en The color of the MotionStreak.
		!#zh ???å°¾ç??é¢???? */
		color: Color;		
		/** !#en The fast Mode.
		!#zh ??¯å?¦å?¯ç?¨ä??å¿«é??æ¨¡å?????å½???¯ç?¨å¿«???æ¨¡å??ï¼???°ç????¹ä??è¢«æ?´å¿«??°æ·»???ï¼?ä½?ç²¾åº¦è¾?ä½???? */
		fastMode: boolean;		
		/**
		!#en Remove all living segments of the ribbon.
		!#zh ?????¤å?????????????????å°¾ç??æ®µã??
		
		@example 
		```js
		// Remove all living segments of the ribbon.
		myMotionStreak.reset();
		``` 
		*/
		reset(): void;		
		/** !#en specify the source Blend Factor, this will generate a custom material object, please pay attention to the memory cost.
		!#zh ???å®??????¾ç??æ··å??æ¨¡å??ï¼?è¿?ä¼???????ä¸?ä¸ªæ?°ç?????è´¨å¯¹è±¡ï??æ³¨æ??è¿?å¸¦æ?¥ç??å¼???? */
		srcBlendFactor: macro.BlendFactor;		
		/** !#en specify the destination Blend Factor.
		!#zh ???å®???®æ?????æ··å??æ¨¡å?? */
		dstBlendFactor: macro.BlendFactor;	
	}	
	/** !#en The PageView control
	!#zh é¡µé?¢è????¾ç??ä»? */
	export class PageView extends ScrollView {		
		/** !#en Specify the size type of each page in PageView.
		!#zh é¡µé?¢è????¾ä¸­æ¯?ä¸ªé¡µ??¢å¤§å°?ç±»å?? */
		sizeMode: PageView.SizeMode;		
		/** !#en The page view direction
		!#zh é¡µé?¢è????¾æ????¨ç±»??? */
		direction: PageView.Direction;		
		/** !#en
		The scroll threshold value, when drag exceeds this value,
		release the next page will automatically scroll, less than the restore
		!#zh æ»???¨ä¸´?????¼ï??é»?è®¤å??ä½???¾å??æ¯?ï¼?å½??????½è????ºè¯¥??°å?¼æ?¶ï????¾å??ä¼???ªå?¨æ????¨ä??ä¸?é¡µï??å°?äº???¶å??è¿??????? */
		scrollThreshold: number;		
		/** !#en
		Auto page turning velocity threshold. When users swipe the PageView quickly,
		it will calculate a velocity based on the scroll distance and time,
		if the calculated velocity is larger than the threshold, then it will trigger page turning.
		!#zh
		å¿«é??æ»???¨ç¿»é¡µä¸´?????¼ã??
		å½???¨æ?·å¿«???æ»???¨æ?¶ï??ä¼???¹æ?®æ????¨å??å§????ç»???????è·?ç¦»ä????¶é?´è®¡ç®???ºä??ä¸ªé??åº¦å?¼ï??
		è¯¥å?¼ä??æ­¤ä¸´?????¼ç?¸æ??è¾?ï¼?å¦????å¤§ä??ä¸´ç????¼ï?????è¿?è¡???ªå?¨ç¿»é¡µã?? */
		autoPageTurningThreshold: number;		
		/** !#en Change the PageTurning event timing of PageView.
		!#zh è®¾ç½® PageView PageTurning äº?ä»¶ç??????????¶æ?ºã?? */
		pageTurningEventTiming: number;		
		/** !#en The Page View Indicator
		!#zh é¡µé?¢è????¾æ??ç¤ºå?¨ç??ä»? */
		indicator: PageViewIndicator;		
		/** !#en The time required to turn over a page. unit: second
		!#zh æ¯?ä¸ªé¡µ??¢ç¿»é¡µæ?¶æ???????¶é?´ã?????ä½?ï¼?ç§? */
		pageTurningSpeed: number;		
		/** !#en PageView events callback
		!#zh æ»???¨è????¾ç??äº?ä»¶å??è°???½æ?? */
		pageEvents: Component.EventHandler[];		
		/**
		!#en Returns current page index
		!#zh è¿????å½????é¡µé?¢ç´¢å¼? 
		*/
		getCurrentPageIndex(): number;		
		/**
		!#en Set current page index
		!#zh è®¾ç½®å½????é¡µé?¢ç´¢å¼?
		@param index index 
		*/
		setCurrentPageIndex(index: number): void;		
		/**
		!#en Returns all pages of pageview
		!#zh è¿????è§???¾ä¸­?????????é¡µé?? 
		*/
		getPages(): Node[];		
		/**
		!#en At the end of the current page view to insert a new view
		!#zh ??¨å?????é¡µé?¢è????¾ç??å°¾é?¨æ????¥ä??ä¸ªæ?°è?????
		@param page page 
		*/
		addPage(page: Node): void;		
		/**
		!#en Inserts a page in the specified location
		!#zh å°?é¡µé?¢æ????¥æ??å®?ä½?ç½®ä¸­
		@param page page
		@param index index 
		*/
		insertPage(page: Node, index: number): void;		
		/**
		!#en Removes a page from PageView.
		!#zh ç§»é?¤æ??å®?é¡µé??
		@param page page 
		*/
		removePage(page: Node): void;		
		/**
		!#en Removes a page at index of PageView.
		!#zh ç§»é?¤æ??å®?ä¸???????é¡µé??
		@param index index 
		*/
		removePageAtIndex(index: number): void;		
		/**
		!#en Removes all pages from PageView
		!#zh ç§»é?¤æ?????é¡µé?? 
		*/
		removeAllPages(): void;		
		/**
		!#en Scroll PageView to index.
		!#zh æ»???¨å?°æ??å®?é¡µé??
		@param idx index of page.
		@param timeInSecond scrolling time 
		*/
		scrollToPage(idx: number, timeInSecond: number): void;	
	}	
	/** !#en The Page View Indicator Component
	!#zh é¡µé?¢è????¾æ??é¡µæ??è®°ç??ä»? */
	export class PageViewIndicator extends Component {		
		/** !#en The spriteFrame for each element.
		!#zh æ¯?ä¸ªé¡µ??¢æ??è®°æ?¾ç¤º?????¾ç?? */
		spriteFrame: SpriteFrame;		
		/** !#en The location direction of PageViewIndicator.
		!#zh é¡µé?¢æ??è®°æ????¾æ?¹å?? */
		direction: PageViewIndicator.Direction;		
		/** !#en The cellSize for each element.
		!#zh æ¯?ä¸ªé¡µ??¢æ??è®°ç??å¤§å?? */
		cellSize: Size;		
		/** !#en The distance between each element.
		!#zh æ¯?ä¸ªé¡µ??¢æ??è®°ä????´ç??è¾¹è?? */
		spacing: number;		
		/**
		!#en Set Page View
		!#zh è®¾ç½®é¡µé?¢è?????
		@param target target 
		*/
		setPageView(target: PageView): void;	
	}	
	/** !#en
	Visual indicator of progress in some operation.
	Displays a bar to the user representing how far the operation has progressed.
	!#zh
	è¿?åº¦æ?¡ç??ä»¶ï????¯ç?¨ä????¾ç¤º???è½½è??æº???¶ç??è¿?åº¦ã?? */
	export class ProgressBar extends Component {		
		/** !#en The targeted Sprite which will be changed progressively.
		!#zh ??¨æ?¥æ?¾ç¤ºè¿?åº¦æ?¡æ??ä¾???? Sprite å¯¹è±¡??? */
		barSprite: Sprite;		
		/** !#en The progress mode, there are two modes supported now: horizontal and vertical.
		!#zh è¿?åº¦æ?¡ç??æ¨¡å?? */
		mode: ProgressBar.Mode;		
		/** !#en The total width or height of the bar sprite.
		!#zh è¿?åº¦æ?¡å??????????»é?¿åº¦ */
		totalLength: number;		
		/** !#en The current progress of the bar sprite. The valid value is between 0-1.
		!#zh å½????è¿?åº¦å?¼ï??è¯¥æ?°å?¼ç????ºé?´æ?? 0-1 ä¹???´ã?? */
		progress: number;		
		/** !#en Whether reverse the progress direction of the bar sprite.
		!#zh è¿?åº¦æ?¡æ?¯å?¦è??è¡??????¹å??????????? */
		reverse: boolean;	
	}	
	/** !#en
	Base class for components which supports rendering features.
	!#zh
	????????¯æ??æ¸²æ?????ç»?ä»¶ç????ºç±» */
	export class RenderComponent extends Component {		
		/** !#en The materials used by this render component.
		!#zh æ¸²æ??ç»?ä»¶ä½¿??¨ç?????è´¨ã?? */
		sharedMaterials: Material[];		
		/**
		!#en Get the material by index.
		!#zh ??¹æ?®æ??å®?ç´¢å????·å?????è´?
		@param index index 
		*/
		getMaterial(index: number): MaterialVariant;		
		/**
		!#en Gets all the materials.
		!#zh ??·å???????????è´¨ã?? 
		*/
		getMaterials(): MaterialVariant[];		
		/**
		!#en Set the material by index.
		!#zh ??¹æ?®æ??å®?ç´¢å??è®¾ç½®???è´?
		@param index index
		@param material material 
		*/
		setMaterial(index: number, material: Material): Material;	
	}	
	/** !#en The RichText Component.
	!#zh å¯??????¬ç??ä»? */
	export class RichText extends Component {		
		/** !#en Content string of RichText.
		!#zh å¯??????¬æ?¾ç¤º????????¬å??å®¹ã?? */
		string: string;		
		/** !#en Horizontal Alignment of each line in RichText.
		!#zh ?????¬å??å®¹ç??æ°´å¹³å¯¹é????¹å????? */
		horizontalAlign: macro.TextAlignment;		
		/** !#en Font size of RichText.
		!#zh å¯??????¬å??ä½?å¤§å????? */
		fontSize: number;		
		/** !#en Custom System font of RichText
		!#zh å¯??????¬å????¶ç³»ç»?å­?ä½? */
		fontFamily: string;		
		/** !#en Custom TTF font of RichText
		!#zh  å¯??????¬å????¶å??ä½? */
		font: TTFFont;		
		/** !#en Whether use system font name or not.
		!#zh ??¯å?¦ä½¿??¨ç³»ç»?å­?ä½???? */
		useSystemFont: boolean;		
		/** !#en The cache mode of label. This mode only supports system fonts.
		!#zh ?????¬ç??å­?æ¨¡å??, è¯¥æ¨¡å¼???ªæ?¯æ??ç³»ç??å­?ä½???? */
		cacheMode: Label.CacheMode;		
		/** !#en The maximize width of the RichText
		!#zh å¯??????¬ç?????å¤§å®½åº? */
		maxWidth: number;		
		/** !#en Line Height of RichText.
		!#zh å¯??????¬è??é«???? */
		lineHeight: number;		
		/** !#en The image atlas for the img tag. For each src value in the img tag, there should be a valid spriteFrame in the image atlas.
		!#zh å¯¹ä?? img ???ç­¾é????¢ç?? src å±???§å??ç§°ï????½é??è¦???? imageAtlas ?????¢æ?¾å?°ä??ä¸ªæ???????? spriteFrameï¼???¦å?? img tag ä¼???¤å??ä¸ºæ???????? */
		imageAtlas: SpriteAtlas;		
		/** !#en
		Once checked, the RichText will block all input events (mouse and touch) within
		the bounding box of the node, preventing the input from penetrating into the underlying node.
		!#zh
		???ä¸­æ­¤???é¡¹å??ï¼?RichText å°???»æ­¢?????¹è¾¹???æ¡?ä¸­ç????????è¾???¥ä??ä»¶ï??é¼???????è§¦æ?¸ï??ï¼?ä»??????²æ­¢è¾???¥ä??ä»¶ç©¿?????°å??å±??????¹ã?? */
		handleTouchEvent: boolean;	
	}	
	/** !#en
	This component is used to adjust the layout of current node to respect the safe area of a notched mobile device such as the iPhone X.
	It is typically used for the top node of the UI interaction area. For specific usage, refer to the official [example-cases/02_ui/16_safeArea/SafeArea.fire](https://github.com/cocos-creator/example-cases).
	
	The concept of safe area is to give you a fixed inner rectangle in which you can safely display content that will be drawn on screen.
	You are strongly discouraged from providing controls outside of this area. But your screen background could embellish edges.
	
	This component internally uses the API `cc.sys.getSafeAreaRect();` to obtain the safe area of the current iOS or Android device,
	and implements the adaptation by using the Widget component and set anchor.
	
	!#zh
	è¯¥ç??ä»¶ä??å°??????¨è????¹ç??å¸?å±?????????? iPhone X ç­?å¼?å½¢å???????ºç??å®???¨å?ºå?????ï¼????å¸¸ç?¨ä?? UI äº¤ä????ºå?????é¡¶å???????¹ï????·ä????¨æ????¯å?????å®???¹è??ä¾? [example-cases/02_ui/16_safeArea/SafeArea.fire](https://github.com/cocos-creator/example-cases)???
	
	è¯¥ç??ä»¶å????¨é??è¿? API `cc.sys.getSafeAreaRect();` ??·å????°å????? iOS ??? Android è®¾å?????å®???¨å?ºå??ï¼?å¹¶é??è¿? Widget ç»?ä»¶å????°é???????? */
	export class SafeArea extends Component {		
		/**
		!#en Adapt to safe area
		!#zh ç«???³é?????å®???¨å?ºå??
		
		@example 
		```js
		let safeArea = this.node.addComponent(cc.SafeArea);
		safeArea.updateArea();
		``` 
		*/
		updateArea(): void;	
	}	
	/** !#en
	The Scrollbar control allows the user to scroll an image or other view that is too large to see completely
	!#zh æ»???¨æ?¡ç??ä»? */
	export class Scrollbar extends Component {		
		/** !#en The "handle" part of the scrollbar.
		!#zh ä½?ä¸ºå?????æ»???¨å?ºå??ä½?ç½®æ?¾ç¤º???æ»???? Sprite??? */
		handle: Sprite;		
		/** !#en The direction of scrollbar.
		!#zh ScrollBar ???æ»???¨æ?¹å????? */
		direction: Scrollbar.Direction;		
		/** !#en Whether enable auto hide or not.
		!#zh ??¯å?¦å?¨æ²¡???æ»???¨å?¨ä????¶è?ªå?¨é????? ScrollBar??? */
		enableAutoHide: boolean;		
		/** !#en
		The time to hide scrollbar when scroll finished.
		Note: This value is only useful when enableAutoHide is true.
		!#zh
		æ²¡æ??æ»???¨å?¨ä?????ç»?è¿?å¤?ä¹?ä¼???ªå?¨é????????
		æ³¨æ??ï¼???ªè??å½? ???enableAutoHide??? ä¸? true ??¶ï?????????????? */
		autoHideTime: number;	
	}	
	/** !#en
	Layout container for a view hierarchy that can be scrolled by the user,
	allowing it to be larger than the physical display.
	
	!#zh
	æ»???¨è????¾ç??ä»? */
	export class ScrollView extends Component {		
		/** !#en This is a reference to the UI element to be scrolled.
		!#zh ??¯æ????¨å??ç¤ºå??å®¹ç???????¹ã?? */
		content: Node;		
		/** !#en Enable horizontal scroll.
		!#zh ??¯å?¦å????¯æ°´å¹³æ????¨ã?? */
		horizontal: boolean;		
		/** !#en Enable vertical scroll.
		!#zh ??¯å?¦å????¯å????´æ????¨ã?? */
		vertical: boolean;		
		/** !#en When inertia is set, the content will continue to move when touch ended.
		!#zh ??¯å?¦å????¯æ????¨æ?¯æ?§ã?? */
		inertia: boolean;		
		/** !#en
		It determines how quickly the content stop moving. A value of 1 will stop the movement immediately.
		A value of 0 will never stop the movement until it reaches to the boundary of scrollview.
		!#zh
		å¼???¯æ?¯æ?§å??ï¼???¨ç?¨æ?·å??æ­¢è§¦??¸å??æ»???¨å??å¿«å??æ­¢ï??0è¡¨ç¤ºæ°¸ä?????æ­¢ï??1è¡¨ç¤ºç«???»å??æ­¢ã?? */
		brake: number;		
		/** !#en When elastic is set, the content will be bounce back when move out of boundary.
		!#zh ??¯å?¦å??è®¸æ????¨å??å®¹è??è¿?è¾¹ç??ï¼?å¹¶å?¨å??æ­¢è§¦??¸å?????å¼¹ã?? */
		elastic: boolean;		
		/** !#en The elapse time of bouncing back. A value of 0 will bounce back immediately.
		!#zh ???å¼¹æ??ç»­ç????¶é?´ï??0 è¡¨ç¤ºå°?ç«???³å??å¼¹ã?? */
		bounceDuration: number;		
		/** !#en The horizontal scrollbar reference.
		!#zh æ°´å¹³æ»???¨ç?? ScrollBar??? */
		horizontalScrollBar: Scrollbar;		
		/** !#en The vertical scrollbar reference.
		!#zh ?????´æ????¨ç?? ScrollBar??? */
		verticalScrollBar: Scrollbar;		
		/** !#en Scrollview events callback
		!#zh æ»???¨è????¾ç??äº?ä»¶å??è°???½æ?? */
		scrollEvents: Component.EventHandler[];		
		/** !#en If cancelInnerEvents is set to true, the scroll behavior will cancel touch events on inner content nodes
		It's set to true by default.
		!#zh å¦????è¿?ä¸ªå????§è¢«è®¾ç½®ä¸? trueï¼????ä¹?æ»???¨è??ä¸ºä?????æ¶?å­??????¹ä??æ³¨å?????è§¦æ?¸ä??ä»¶ï??é»?è®¤è¢«è®¾ç½®ä¸? true???
		æ³¨æ??ï¼?å­??????¹ä????? touchstart äº?ä»¶ä????¶ä??è§¦å??ï¼?è§¦ç?¹ç§»??¨è??ç¦»é??å¸¸ç?­ç???????µä?? touchmove ??? touchend ä¹?ä¸?ä¼????å½±å????? */
		cancelInnerEvents: boolean;		
		/**
		!#en Scroll the content to the bottom boundary of ScrollView.
		!#zh è§???¾å??å®¹å????¨è??å®???¶é?´å??æ»???¨å?°è????¾å????¨ã??
		@param timeInSecond Scroll time in second, if you don't pass timeInSecond,
		the content will jump to the bottom boundary immediately.
		@param attenuated Whether the scroll acceleration attenuated, default is true.
		
		@example 
		```js
		// Scroll to the bottom of the view.
		scrollView.scrollToBottom(0.1);
		``` 
		*/
		scrollToBottom(timeInSecond?: number, attenuated?: boolean): void;		
		/**
		!#en Scroll the content to the top boundary of ScrollView.
		!#zh è§???¾å??å®¹å????¨è??å®???¶é?´å??æ»???¨å?°è????¾é¡¶??¨ã??
		@param timeInSecond Scroll time in second, if you don't pass timeInSecond,
		the content will jump to the top boundary immediately.
		@param attenuated Whether the scroll acceleration attenuated, default is true.
		
		@example 
		```js
		// Scroll to the top of the view.
		scrollView.scrollToTop(0.1);
		``` 
		*/
		scrollToTop(timeInSecond?: number, attenuated?: boolean): void;		
		/**
		!#en Scroll the content to the left boundary of ScrollView.
		!#zh è§???¾å??å®¹å????¨è??å®???¶é?´å??æ»???¨å?°è????¾å·¦è¾¹ã??
		@param timeInSecond Scroll time in second, if you don't pass timeInSecond,
		the content will jump to the left boundary immediately.
		@param attenuated Whether the scroll acceleration attenuated, default is true.
		
		@example 
		```js
		// Scroll to the left of the view.
		scrollView.scrollToLeft(0.1);
		``` 
		*/
		scrollToLeft(timeInSecond?: number, attenuated?: boolean): void;		
		/**
		!#en Scroll the content to the right boundary of ScrollView.
		!#zh è§???¾å??å®¹å????¨è??å®???¶é?´å??æ»???¨å?°è????¾å?³è¾¹???
		@param timeInSecond Scroll time in second, if you don't pass timeInSecond,
		the content will jump to the right boundary immediately.
		@param attenuated Whether the scroll acceleration attenuated, default is true.
		
		@example 
		```js
		// Scroll to the right of the view.
		scrollView.scrollToRight(0.1);
		``` 
		*/
		scrollToRight(timeInSecond?: number, attenuated?: boolean): void;		
		/**
		!#en Scroll the content to the top left boundary of ScrollView.
		!#zh è§???¾å??å®¹å????¨è??å®???¶é?´å??æ»???¨å?°è????¾å·¦ä¸?è§????
		@param timeInSecond Scroll time in second, if you don't pass timeInSecond,
		the content will jump to the top left boundary immediately.
		@param attenuated Whether the scroll acceleration attenuated, default is true.
		
		@example 
		```js
		// Scroll to the upper left corner of the view.
		scrollView.scrollToTopLeft(0.1);
		``` 
		*/
		scrollToTopLeft(timeInSecond?: number, attenuated?: boolean): void;		
		/**
		!#en Scroll the content to the top right boundary of ScrollView.
		!#zh è§???¾å??å®¹å????¨è??å®???¶é?´å??æ»???¨å?°è????¾å?³ä??è§????
		@param timeInSecond Scroll time in second, if you don't pass timeInSecond,
		the content will jump to the top right boundary immediately.
		@param attenuated Whether the scroll acceleration attenuated, default is true.
		
		@example 
		```js
		// Scroll to the top right corner of the view.
		scrollView.scrollToTopRight(0.1);
		``` 
		*/
		scrollToTopRight(timeInSecond?: number, attenuated?: boolean): void;		
		/**
		!#en Scroll the content to the bottom left boundary of ScrollView.
		!#zh è§???¾å??å®¹å????¨è??å®???¶é?´å??æ»???¨å?°è????¾å·¦ä¸?è§????
		@param timeInSecond Scroll time in second, if you don't pass timeInSecond,
		the content will jump to the bottom left boundary immediately.
		@param attenuated Whether the scroll acceleration attenuated, default is true.
		
		@example 
		```js
		// Scroll to the lower left corner of the view.
		scrollView.scrollToBottomLeft(0.1);
		``` 
		*/
		scrollToBottomLeft(timeInSecond?: number, attenuated?: boolean): void;		
		/**
		!#en Scroll the content to the bottom right boundary of ScrollView.
		!#zh è§???¾å??å®¹å????¨è??å®???¶é?´å??æ»???¨å?°è????¾å?³ä??è§????
		@param timeInSecond Scroll time in second, if you don't pass timeInSecond,
		the content will jump to the bottom right boundary immediately.
		@param attenuated Whether the scroll acceleration attenuated, default is true.
		
		@example 
		```js
		// Scroll to the lower right corner of the view.
		scrollView.scrollToBottomRight(0.1);
		``` 
		*/
		scrollToBottomRight(timeInSecond?: number, attenuated?: boolean): void;		
		/**
		!#en Scroll with an offset related to the ScrollView's top left origin, if timeInSecond is omitted, then it will jump to the
		      specific offset immediately.
		!#zh è§???¾å??å®¹å?¨è??å®???¶é?´å??å°?æ»???¨å?? ScrollView ??¸å¯¹å·¦ä??è§??????¹ç?????ç§»ä??ç½?, å¦???? timeInSecond?????°ä??ä¼?ï¼????ç«???³æ????¨å?°æ??å®????ç§»ä??ç½®ã??
		@param offset A Vec2, the value of which each axis between 0 and maxScrollOffset
		@param timeInSecond Scroll time in second, if you don't pass timeInSecond,
		the content will jump to the specific offset of ScrollView immediately.
		@param attenuated Whether the scroll acceleration attenuated, default is true.
		
		@example 
		```js
		// Scroll to middle position in 0.1 second in x-axis
		let maxScrollOffset = this.getMaxScrollOffset();
		scrollView.scrollToOffset(cc.v2(maxScrollOffset.x / 2, 0), 0.1);
		``` 
		*/
		scrollToOffset(offset: Vec2, timeInSecond?: number, attenuated?: boolean): void;		
		/**
		!#en  Get the positive offset value corresponds to the content's top left boundary.
		!#zh  ??·å??æ»???¨è????¾ç?¸å¯¹äº?å·¦ä??è§??????¹ç??å½????æ»???¨å??ç§? 
		*/
		getScrollOffset(): Vec2;		
		/**
		!#en Get the maximize available  scroll offset
		!#zh ??·å??æ»???¨è????¾æ??å¤§å?¯ä»¥æ»???¨ç?????ç§»é?? 
		*/
		getMaxScrollOffset(): Vec2;		
		/**
		!#en Scroll the content to the horizontal percent position of ScrollView.
		!#zh è§???¾å??å®¹å?¨è??å®???¶é?´å??å°?æ»???¨å?? ScrollView æ°´å¹³??¹å???????¾å??æ¯?ä½?ç½®ä?????
		@param percent A value between 0 and 1.
		@param timeInSecond Scroll time in second, if you don't pass timeInSecond,
		the content will jump to the horizontal percent position of ScrollView immediately.
		@param attenuated Whether the scroll acceleration attenuated, default is true.
		
		@example 
		```js
		// Scroll to middle position.
		scrollView.scrollToBottomRight(0.5, 0.1);
		``` 
		*/
		scrollToPercentHorizontal(percent: number, timeInSecond?: number, attenuated?: boolean): void;		
		/**
		!#en Scroll the content to the percent position of ScrollView in any direction.
		!#zh è§???¾å??å®¹å?¨è??å®???¶é?´å??è¿?è¡??????´æ?¹å?????æ°´å¹³??¹å?????æ»???¨ï??å¹¶ä??æ»???¨å?°æ??å®???¾å??æ¯?ä½?ç½®ä?????
		@param anchor A point which will be clamp between cc.v2(0,0) and cc.v2(1,1).
		@param timeInSecond Scroll time in second, if you don't pass timeInSecond,
		the content will jump to the percent position of ScrollView immediately.
		@param attenuated Whether the scroll acceleration attenuated, default is true.
		
		@example 
		```js
		// Vertical scroll to the bottom of the view.
		scrollView.scrollTo(cc.v2(0, 1), 0.1);
		
		// Horizontal scroll to view right.
		scrollView.scrollTo(cc.v2(1, 0), 0.1);
		``` 
		*/
		scrollTo(anchor: Vec2, timeInSecond?: number, attenuated?: boolean): void;		
		/**
		!#en Scroll the content to the vertical percent position of ScrollView.
		!#zh è§???¾å??å®¹å?¨è??å®???¶é?´å??æ»???¨å?? ScrollView ?????´æ?¹å???????¾å??æ¯?ä½?ç½®ä?????
		@param percent A value between 0 and 1.
		@param timeInSecond Scroll time in second, if you don't pass timeInSecond,
		the content will jump to the vertical percent position of ScrollView immediately.
		@param attenuated Whether the scroll acceleration attenuated, default is true.
		// Scroll to middle position.
		scrollView.scrollToPercentVertical(0.5, 0.1); 
		*/
		scrollToPercentVertical(percent: number, timeInSecond?: number, attenuated?: boolean): void;		
		/**
		!#en  Stop auto scroll immediately
		!#zh  ???æ­¢è?ªå?¨æ?????, è°???¨æ­¤ API ??¯ä»¥è®? Scrollview ç«???³å??æ­¢æ????? 
		*/
		stopAutoScroll(): void;		
		/**
		!#en Modify the content position.
		!#zh è®¾ç½®å½????è§???¾å??å®¹ç??????????¹ã??
		@param position The position in content's parent space. 
		*/
		setContentPosition(position: Vec2): void;		
		/**
		!#en Query the content's position in its parent space.
		!#zh ??·å??å½????è§???¾å??å®¹ç??????????¹ã?? 
		*/
		getContentPosition(): Vec2;		
		/**
		!#en Query whether the user is currently dragging the ScrollView to scroll it
		!#zh ??¨æ?·æ?¯å?¦å?¨æ????½å?????æ»???¨è????? 
		*/
		isScrolling(): boolean;		
		/**
		!#en Query whether the ScrollView is currently scrolling because of a bounceback or inertia slowdown.
		!#zh å½????æ»???¨è????¾æ?¯å?¦å?¨æ?¯æ?§æ????? 
		*/
		isAutoScrolling(): boolean;	
	}	
	/** !#en The Slider Control
	!#zh æ»???¨å?¨ç??ä»? */
	export class Slider extends Component {		
		/** !#en The "handle" part of the slider
		!#zh æ»???¨å?¨æ??????????®é?¨ä»¶ */
		handle: Button;		
		/** !#en The slider direction
		!#zh æ»???¨å?¨æ?¹å?? */
		direction: Slider.Direction;		
		/** !#en The current progress of the slider. The valid value is between 0-1
		!#zh å½????è¿?åº¦å?¼ï??è¯¥æ?°å?¼ç????ºé?´æ?? 0-1 ä¹???? */
		progress: number;		
		/** !#en The slider slide events' callback array
		!#zh æ»???¨å?¨ç??ä»¶æ????¨ä??ä»¶å??è°???½æ?°æ?°ç?? */
		slideEvents: Component.EventHandler[];	
	}	
	/** !#en Renders a sprite in the scene.
	!#zh è¯¥ç??ä»¶ç?¨ä????¨å?ºæ?¯ä¸­æ¸²æ??ç²¾ç?µã?? */
	export class Sprite extends RenderComponent implements BlendFunc {		
		/** !#en The sprite frame of the sprite.
		!#zh ç²¾ç?µç??ç²¾ç?µå¸§ */
		spriteFrame: SpriteFrame;		
		/** !#en The sprite render type.
		!#zh ç²¾ç?µæ¸²???ç±»å?? */
		type: Sprite.Type;		
		/** !#en
		The fill type, This will only have any effect if the "type" is set to ???cc.Sprite.Type.FILLED???.
		!#zh
		ç²¾ç?µå¡«???ç±»å??ï¼?ä»?æ¸²æ??ç±»å??è®¾ç½®ä¸? cc.Sprite.Type.FILLED ??¶æ???????? */
		fillType: Sprite.FillType;		
		/** !#en
		The fill Center, This will only have any effect if the "type" is set to ???cc.Sprite.Type.FILLED???.
		!#zh
		å¡«å??ä¸­å????¹ï??ä»?æ¸²æ??ç±»å??è®¾ç½®ä¸? cc.Sprite.Type.FILLED ??¶æ???????? */
		fillCenter: Vec2;		
		/** !#en
		The fill Start, This will only have any effect if the "type" is set to ???cc.Sprite.Type.FILLED???.
		!#zh
		å¡«å??èµ·å????¹ï??ä»?æ¸²æ??ç±»å??è®¾ç½®ä¸? cc.Sprite.Type.FILLED ??¶æ???????? */
		fillStart: number;		
		/** !#en
		The fill Range, This will only have any effect if the "type" is set to ???cc.Sprite.Type.FILLED???.
		!#zh
		å¡«å???????´ï??ä»?æ¸²æ??ç±»å??è®¾ç½®ä¸? cc.Sprite.Type.FILLED ??¶æ???????? */
		fillRange: number;		
		/** !#en specify the frame is trimmed or not.
		!#zh ??¯å?¦ä½¿??¨è????ªæ¨¡å¼? */
		trim: boolean;		
		/** !#en specify the size tracing mode.
		!#zh ç²¾ç?µå°ºå¯¸è????´æ¨¡å¼? */
		sizeMode: Sprite.SizeMode;		
		/**
		Change the state of sprite.
		@param state NORMAL or GRAY State. 
		*/
		setState(state: Sprite.State): void;		
		/**
		Gets the current state. 
		*/
		getState(): Sprite.State;		
		/** !#en specify the source Blend Factor, this will generate a custom material object, please pay attention to the memory cost.
		!#zh ???å®??????¾ç??æ··å??æ¨¡å??ï¼?è¿?ä¼???????ä¸?ä¸ªæ?°ç?????è´¨å¯¹è±¡ï??æ³¨æ??è¿?å¸¦æ?¥ç??å¼???? */
		srcBlendFactor: macro.BlendFactor;		
		/** !#en specify the destination Blend Factor.
		!#zh ???å®???®æ?????æ··å??æ¨¡å?? */
		dstBlendFactor: macro.BlendFactor;	
	}	
	/** !#en The toggle component is a CheckBox, when it used together with a ToggleGroup, it
	could be treated as a RadioButton.
	!#zh Toggle ??¯ä??ä¸? CheckBoxï¼?å½?å®???? ToggleGroup ä¸?èµ·ä½¿??¨ç????¶å??ï¼???¯ä»¥?????? RadioButton??? */
	export class Toggle extends Button implements GraySpriteState {		
		/** !#en When this value is true, the check mark component will be enabled, otherwise
		the check mark component will be disabled.
		!#zh å¦????è¿?ä¸ªè®¾ç½®ä¸º trueï¼???? check mark ç»?ä»¶ä??å¤?äº? enabled ??¶æ??ï¼???¦å??å¤?äº? disabled ??¶æ????? */
		isChecked: boolean;		
		/** !#en The toggle group which the toggle belongs to, when it is null, the toggle is a CheckBox.
		Otherwise, the toggle is a RadioButton.
		!#zh Toggle ???å±???? ToggleGroupï¼?è¿?ä¸ªå????§æ?¯å?¯é????????å¦????è¿?ä¸ªå????§ä¸º nullï¼???? Toggle ??¯ä??ä¸? CheckBoxï¼?
		??¦å??ï¼?Toggle ??¯ä??ä¸? RadioButton??? */
		toggleGroup: ToggleGroup;		
		/** !#en The image used for the checkmark.
		!#zh Toggle å¤?äº????ä¸­ç?¶æ????¶æ?¾ç¤º?????¾ç?? */
		checkMark: Sprite;		
		/** !#en If Toggle is clicked, it will trigger event's handler
		!#zh Toggle ?????®ç????¹å?»ä??ä»¶å??è¡¨ã?? */
		checkEvents: Component.EventHandler[];		
		/**
		!#en Make the toggle button checked.
		!#zh ä½? toggle ?????®å??äº????ä¸­ç?¶æ?? 
		*/
		check(): void;		
		/**
		!#en Make the toggle button unchecked.
		!#zh ä½? toggle ?????®å??äº???ªé??ä¸­ç?¶æ?? 
		*/
		uncheck(): void;		
		/** !#en The normal material.
		!#zh æ­?å¸¸ç?¶æ????????è´¨ã?? */
		normalMaterial: Material;		
		/** !#en The gray material.
		!#zh ç½®ç?°ç?¶æ????????è´¨ã?? */
		grayMaterial: Material;	
	}	
	/** !#en ToggleContainer is not a visiable UI component but a way to modify the behavior of a set of Toggles. <br/>
	Toggles that belong to the same group could only have one of them to be switched on at a time.<br/>
	Note: All the first layer child node containing the toggle component will auto be added to the container
	!#zh ToggleContainer ä¸???¯ä??ä¸ªå?¯è????? UI ç»?ä»¶ï??å®???¯ä»¥??¨æ?¥ä¿®??¹ä??ç»? Toggle ç»?ä»¶ç??è¡?ä¸ºã??<br/>
	å½?ä¸?ç»? Toggle å±?äº????ä¸?ä¸? ToggleContainer ?????¶å??ï¼?ä»»ä????¶å????ªè?½æ??ä¸?ä¸? Toggle å¤?äº????ä¸­ç?¶æ?????<br/>
	æ³¨æ??ï¼????????????? Toggle ç»?ä»¶ç??ä¸?çº§å???????¹é?½ä????ªå?¨è¢«æ·»å????°è¯¥å®¹å?¨ä¸­ */
	export class ToggleContainer extends Component {		
		/** !#en If this setting is true, a toggle could be switched off and on when pressed.
		If it is false, it will make sure there is always only one toggle could be switched on
		and the already switched on toggle can't be switched off.
		!#zh å¦????è¿?ä¸ªè®¾ç½®ä¸º trueï¼? ???ä¹? toggle ?????®å?¨è¢«??¹å?»ç????¶å????¯ä»¥???å¤???°è¢«???ä¸­å????ªé??ä¸­ã?? */
		allowSwitchOff: boolean;		
		/** !#en If Toggle is clicked, it will trigger event's handler
		!#zh Toggle ?????®ç????¹å?»ä??ä»¶å??è¡¨ã?? */
		checkEvents: Component.EventHandler[];		
		/** !#en Read only property, return the toggle items array reference managed by ToggleContainer.
		!#zh ??ªè¯»å±???§ï??è¿???? ToggleContainer ç®¡ç????? toggle ??°ç??å¼???? */
		toggleItems: Toggle[];	
	}	
	/** !#en ToggleGroup is not a visiable UI component but a way to modify the behavior of a set of Toggles.
	Toggles that belong to the same group could only have one of them to be switched on at a time.
	!#zh ToggleGroup ä¸???¯ä??ä¸ªå?¯è????? UI ç»?ä»¶ï??å®???¯ä»¥??¨æ?¥ä¿®??¹ä??ç»? Toggle  ç»?ä»¶ç??è¡?ä¸ºã??å½?ä¸?ç»? Toggle å±?äº????ä¸?ä¸? ToggleGroup ?????¶å??ï¼?
	ä»»ä????¶å????ªè?½æ??ä¸?ä¸? Toggle å¤?äº????ä¸­ç?¶æ????? */
	export class ToggleGroup extends Component {		
		/** !#en If this setting is true, a toggle could be switched off and on when pressed.
		If it is false, it will make sure there is always only one toggle could be switched on
		and the already switched on toggle can't be switched off.
		!#zh å¦????è¿?ä¸ªè®¾ç½®ä¸º trueï¼? ???ä¹? toggle ?????®å?¨è¢«??¹å?»ç????¶å????¯ä»¥???å¤???°è¢«???ä¸­å????ªé??ä¸­ã?? */
		allowSwitchOff: boolean;		
		/** !#en Read only property, return the toggle items array reference managed by toggleGroup.
		!#zh ??ªè¯»å±???§ï??è¿???? toggleGroup ç®¡ç????? toggle ??°ç??å¼???? */
		toggleItems: any[];	
	}	
	/** !#en
	Handling touch events in a ViewGroup takes special care,
	because it's common for a ViewGroup to have children that are targets for different touch events than the ViewGroup itself.
	To make sure that each view correctly receives the touch events intended for it,
	ViewGroup should register capture phase event and handle the event propagation properly.
	Please refer to Scrollview for more  information.
	
	!#zh
	ViewGroup???äº?ä»¶å?????æ¯?è¾???¹æ??ï¼????ä¸? ViewGroup ?????¢ç??å­??????¹å?³å?????äº?ä»¶è?? ViewGroup ??¬èº«??¯è?½ä??ä¸???·ã??
	ä¸ºä??è®©å???????¹è?½å??æ­?ç¡®å?°å?????äº?ä»¶ï??ViewGroup ???è¦?æ³¨å?? capture ??¶æ®µ???äº?ä»¶ï??å¹¶ä??????????°å????? ViewGroup ä¹???´ç??äº?ä»¶ä????????
	è¯·å????? ScrollView ???å®???°æ?¥è?·å????´å??ä¿¡æ?¯ã?? */
	export class ViewGroup extends Component {	
	}	
	/** !#en
	Stores and manipulate the anchoring based on its parent.
	Widget are used for GUI but can also be used for other things.
	Widget will adjust current node's position and size automatically, but the results after adjustment can not be obtained until the next frame unless you call {{#crossLink "Widget/updateAlignment:method"}}{{/crossLink}} manually.
	!#zh
	Widget ç»?ä»¶ï????¨ä??è®¾ç½®???????????¶ç?¸å¯¹äº???¶è????¹ç??è¾¹è??ï¼?Widget ???å¸¸è¢«??¨ä?? UI ?????¢ï??ä¹???¯ä»¥??¨ä????¶ä????°æ?¹ã??
	Widget ä¼???ªå?¨è????´å??????????¹ç???????????å®½é??ï¼?ä¸?è¿???®å??è°???´å?????ç»????è¦???°ä??ä¸?å¸§æ????½å?¨è????¬é????·å????°ï????¤é??ä½?????????¨è????? {{#crossLink "Widget/updateAlignment:method"}}{{/crossLink}}??? */
	export class Widget extends Component {		
		/** !#en Specifies an alignment target that can only be one of the parent nodes of the current node.
		The default value is null, and when null, indicates the current parent.
		!#zh ???å®?ä¸?ä¸ªå¯¹é½???®æ??ï¼???ªè?½æ?¯å??????????¹ç????¶ä¸­ä¸?ä¸ªç?¶è????¹ï??é»?è®¤ä¸ºç©ºï??ä¸ºç©º??¶è¡¨ç¤ºå???????¶è????¹ã?? */
		target: Node;		
		/** !#en Whether to align the top.
		!#zh ??¯å?¦å¯¹é½?ä¸?è¾¹ã?? */
		isAlignTop: boolean;		
		/** !#en
		Vertically aligns the midpoint, This will open the other vertical alignment options cancel.
		!#zh
		??¯å?¦å????´æ?¹å??å¯¹é??ä¸­ç?¹ï??å¼???¯æ­¤é¡¹ä??å°??????´æ?¹å????¶ä??å¯¹é?????é¡¹å??æ¶???? */
		isAlignVerticalCenter: boolean;		
		/** !#en Whether to align the bottom.
		!#zh ??¯å?¦å¯¹é½?ä¸?è¾¹ã?? */
		isAlignBottom: boolean;		
		/** !#en Whether to align the left.
		!#zh ??¯å?¦å¯¹é½?å·¦è¾¹ */
		isAlignLeft: boolean;		
		/** !#en
		Horizontal aligns the midpoint. This will open the other horizontal alignment options canceled.
		!#zh
		??¯å?¦æ°´å¹³æ?¹å??å¯¹é??ä¸­ç?¹ï??å¼???¯æ­¤???é¡¹ä??å°?æ°´å¹³??¹å????¶ä??å¯¹é?????é¡¹å??æ¶???? */
		isAlignHorizontalCenter: boolean;		
		/** !#en Whether to align the right.
		!#zh ??¯å?¦å¯¹é½???³è¾¹??? */
		isAlignRight: boolean;		
		/** !#en
		Whether the stretched horizontally, when enable the left and right alignment will be stretched horizontally,
		the width setting is invalid (read only).
		!#zh
		å½??????¯å?¦æ°´å¹³æ??ä¼¸ã??å½??????¶å?¯ç?¨å·¦??³å¯¹é½???¶ï???????¹å??ä¼?è¢«æ°´å¹³æ??ä¼¸ï??æ­¤æ?¶è????¹ç??å®½åº¦??ªè¯»??? */
		isStretchWidth: boolean;		
		/** !#en
		Whether the stretched vertically, when enable the left and right alignment will be stretched vertically,
		then height setting is invalid (read only)
		!#zh
		å½??????¯å?¦å????´æ??ä¼¸ã??å½??????¶å?¯ç?¨ä??ä¸?å¯¹é????¶ï???????¹å??ä¼?è¢«å????´æ??ä¼¸ï??æ­¤æ?¶è????¹ç??é«?åº¦å?ªè¯»??? */
		isStretchHeight: boolean;		
		/** !#en
		The margins between the top of this node and the top of parent node,
		the value can be negative, Only available in 'isAlignTop' open.
		!#zh
		??¬è????¹é¡¶è¾¹å????¶è????¹é¡¶è¾¹ç??è·?ç¦»ï????¯å¡«???è´???¼ï????ªæ????? isAlignTop å¼???¯æ?¶æ?????ä½???¨ã?? */
		top: number;		
		/** !#en
		The margins between the bottom of this node and the bottom of parent node,
		the value can be negative, Only available in 'isAlignBottom' open.
		!#zh
		??¬è????¹å??è¾¹å????¶è????¹å??è¾¹ç??è·?ç¦»ï????¯å¡«???è´???¼ï????ªæ????? isAlignBottom å¼???¯æ?¶æ?????ä½???¨ã?? */
		bottom: number;		
		/** !#en
		The margins between the left of this node and the left of parent node,
		the value can be negative, Only available in 'isAlignLeft' open.
		!#zh
		??¬è????¹å·¦è¾¹å????¶è????¹å·¦è¾¹ç??è·?ç¦»ï????¯å¡«???è´???¼ï????ªæ????? isAlignLeft å¼???¯æ?¶æ?????ä½???¨ã?? */
		left: number;		
		/** !#en
		The margins between the right of this node and the right of parent node,
		the value can be negative, Only available in 'isAlignRight' open.
		!#zh
		??¬è????¹å?³è¾¹?????¶è????¹å?³è¾¹???è·?ç¦»ï????¯å¡«???è´???¼ï????ªæ????? isAlignRight å¼???¯æ?¶æ?????ä½???¨ã?? */
		right: number;		
		/** !#en
		Horizontal aligns the midpoint offset value,
		the value can be negative, Only available in 'isAlignHorizontalCenter' open.
		!#zh æ°´å¹³å±?ä¸­ç?????ç§»å?¼ï????¯å¡«???è´???¼ï????ªæ????? isAlignHorizontalCenter å¼???¯æ?¶æ?????ä½???¨ã?? */
		horizontalCenter: number;		
		/** !#en
		Vertical aligns the midpoint offset value,
		the value can be negative, Only available in 'isAlignVerticalCenter' open.
		!#zh ?????´å??ä¸­ç?????ç§»å?¼ï????¯å¡«???è´???¼ï????ªæ????? isAlignVerticalCenter å¼???¯æ?¶æ?????ä½???¨ã?? */
		verticalCenter: number;		
		/** !#en If true, horizontalCenter is pixel margin, otherwise is percentage (0 - 1) margin.
		!#zh å¦????ä¸? trueï¼?"horizontalCenter" å°?ä¼?ä»¥å??ç´?ä½?ä¸ºå??ç§»å?¼ï?????ä¹?ä¸ºç?¾å??æ¯?ï¼?0 ??? 1ï¼???? */
		isAbsoluteHorizontalCenter: boolean;		
		/** !#en If true, verticalCenter is pixel margin, otherwise is percentage (0 - 1) margin.
		!#zh å¦????ä¸? trueï¼?"verticalCenter" å°?ä¼?ä»¥å??ç´?ä½?ä¸ºå??ç§»å?¼ï?????ä¹?ä¸ºç?¾å??æ¯?ï¼?0 ??? 1ï¼???? */
		isAbsoluteVerticalCenter: boolean;		
		/** !#en
		If true, top is pixel margin, otherwise is percentage (0 - 1) margin relative to the parent's height.
		!#zh
		å¦????ä¸? trueï¼?"top" å°?ä¼?ä»¥å??ç´?ä½?ä¸ºè¾¹è·?ï¼???¦å??å°?ä¼?ä»¥ç?¸å¯¹??¶ç?©ä??é«?åº¦ç????¾å??æ¯?ï¼?0 ??? 1ï¼?ä½?ä¸ºè¾¹è·???? */
		isAbsoluteTop: boolean;		
		/** !#en
		If true, bottom is pixel margin, otherwise is percentage (0 - 1) margin relative to the parent's height.
		!#zh
		å¦????ä¸? trueï¼?"bottom" å°?ä¼?ä»¥å??ç´?ä½?ä¸ºè¾¹è·?ï¼???¦å??å°?ä¼?ä»¥ç?¸å¯¹??¶ç?©ä??é«?åº¦ç????¾å??æ¯?ï¼?0 ??? 1ï¼?ä½?ä¸ºè¾¹è·???? */
		isAbsoluteBottom: boolean;		
		/** !#en
		If true, left is pixel margin, otherwise is percentage (0 - 1) margin relative to the parent's width.
		!#zh
		å¦????ä¸? trueï¼?"left" å°?ä¼?ä»¥å??ç´?ä½?ä¸ºè¾¹è·?ï¼???¦å??å°?ä¼?ä»¥ç?¸å¯¹??¶ç?©ä??å®½åº¦?????¾å??æ¯?ï¼?0 ??? 1ï¼?ä½?ä¸ºè¾¹è·???? */
		isAbsoluteLeft: boolean;		
		/** !#en
		If true, right is pixel margin, otherwise is percentage (0 - 1) margin relative to the parent's width.
		!#zh
		å¦????ä¸? trueï¼?"right" å°?ä¼?ä»¥å??ç´?ä½?ä¸ºè¾¹è·?ï¼???¦å??å°?ä¼?ä»¥ç?¸å¯¹??¶ç?©ä??å®½åº¦?????¾å??æ¯?ï¼?0 ??? 1ï¼?ä½?ä¸ºè¾¹è·???? */
		isAbsoluteRight: boolean;		
		/** !#en Specifies the alignment mode of the Widget, which determines when the widget should refresh.
		!#zh ???å®? Widget ???å¯¹é??æ¨¡å??ï¼???¨ä????³å?? Widget åº?è¯¥ä????¶å?·æ?°ã?? */
		alignMode: Widget.AlignMode;		
		/**
		!#en
		Immediately perform the widget alignment. You need to manually call this method only if
		you need to get the latest results after the alignment before the end of current frame.
		!#zh
		ç«???»æ?§è?? widget å¯¹é?????ä½????è¿?ä¸ªæ?¥å??ä¸???¬ä?????è¦????å·¥è????¨ã??
		??ªæ??å½?ä½????è¦???¨å?????å¸§ç??????????·å?? widget å¯¹é?????????????°ç???????¶æ?????è¦??????¨è????¨è??ä¸ªæ?¹æ?????
		
		@example 
		```js
		widget.top = 10;       // change top margin
		cc.log(widget.node.y); // not yet changed
		widget.updateAlignment();
		cc.log(widget.node.y); // changed
		``` 
		*/
		updateAlignment(): void;		
		/** !#en
		When turned on, it will only be aligned once at the end of the onEnable frame,
		then immediately disables the current component.
		This will allow the script or animation to continue controlling the current node.
		Note: It will still be aligned at the frame when onEnable is called.
		!#zh
		å¼???¯å??ä»?ä¼???? onEnable ???å½?å¸§ç???????¶å¯¹é½?ä¸?æ¬¡ï????¶å??ç«???»ç????¨å?????ç»?ä»¶ã??
		è¿???·ä¾¿äº??????¬æ????¨ç?»ç»§ç»­æ?§å?¶å??????????¹ã??
		æ³¨æ??ï¼?onEnable ??¶æ????¨ç?????ä¸?å¸§ä????¶ä??è¿?è¡?å¯¹é????? */
		isAlignOnce: boolean;	
	}	
	/** !#en SubContextView is a view component which controls open data context viewport in minigame platform.<br/>
	The component's node size decide the viewport of the sub context content in main context,
	the entire sub context texture will be scaled to the node's bounding box area.<br/>
	This component provides multiple important features:<br/>
	1. Sub context could use its own resolution size and policy.<br/>
	2. Sub context could be minized to smallest size it needed.<br/>
	3. Resolution of sub context content could be increased.<br/>
	4. User touch input is transformed to the correct viewport.<br/>
	5. Texture update is handled by this component. User don't need to worry.<br/>
	One important thing to be noted, whenever the node's bounding box change,
	!#zh SubContextView ??¯ä»¥??¨æ?¥æ?§å?¶å??æ¸¸æ??å¹³å?°å????¾æ?°æ?®å????¨ä¸»???ä¸­ç??è§?çª????ä½?ç½®ã??<br/>
	è¿?ä¸ªç??ä»¶ç???????¹å°ºå¯¸å?³å??äº?å¼???¾æ?°æ?®å?????å®¹å?¨ä¸»???ä¸­ç??å°ºå¯¸ï¼???´ä¸ªå¼???¾æ?°æ?®å??ä¼?è¢«ç¼©??¾å?°è????¹ç???????´ç???????´å?????<br/>
	??¨è??ä¸ªç??ä»¶ç????§å?¶ä??ï¼???¨æ?·å?¯ä»¥??´è?ªç?±å????§å?¶å????¾æ?°æ?®å??ï¼?<br/>
	1. å­????ä¸­å?¯ä»¥ä½¿ç?¨ç?¬ç?????è®¾è®¡???è¾¨ç???????????æ¨¡å??<br/>
	2. å­??????ºå??å°ºå¯¸??¯ä»¥ç¼©å????°å?ªå®¹çº³å??å®¹å?³å??<br/>
	3. å­??????????è¾¨ç??ä¹???¯ä»¥è¢«æ?¾å¤§ï¼?ä»¥ä¾¿??·å????´æ????°ç????¾ç¤º??????<br/>
	4. ??¨æ?·è????¥å?????ä¼?è¢«è?ªå?¨è½¬??¢å?°æ­£ç¡®ç??å­????è§?çª?ä¸?<br/>
	5. å­???????å®¹è´´??¾ç????´æ?°ç?±ç??ä»¶è??è´?ï¼???¨æ?·ä?????è¦?å¤????<br/> */
	export class SubContextView extends Component {		
		/**
		!#en Reset open data context size and viewport
		!#zh ???ç½®å????¾æ?°æ?®å?????å°ºå¯¸???è§?çª? 
		*/
		reset(): void;		
		/**
		!#en Update the sub context viewport manually, it should be called whenever the node's bounding box changes.
		!#zh ??´æ?°å????¾æ?°æ?®å????¸å¯¹äº?ä¸»å????? viewportï¼?è¿?ä¸ªå?½æ?°å??è¯¥å?¨è????¹å????´ç????¹å????¶æ????¨è????¨ã?? 
		*/
		updateSubContextViewport(): void;	
	}	
	/** !#en WXSubContextView is deprecated since v2.4.1, please use SubContextView instead.
	!#zh ??? v2.4.1 èµ·ï??WXSubContextView å·²ç??åº?å¼?ï¼?è¯·ä½¿??? SubContextView */
	export class WXSubContextView extends Component {	
	}	
	/** !#en SwanSubContextView is deprecated since v2.4.1, please use SubContextView instead.
	!#zh ??? v2.4.1 èµ·ï??SwanSubContextView å·²ç??åº?å¼?ï¼?è¯·ä½¿??? SubContextView */
	export class SwanSubContextView extends Component {	
	}	
	/** !#en Mesh Asset.
	!#zh ç½???¼è??æº???? */
	export class Mesh extends Asset implements EventTarget {		
		/** !#en Get ir set the sub meshes.
		!#zh è®¾ç½®????????·å??å­?ç½???¼ã?? */
		subMeshes: InputAssembler[];		
		/**
		!#en
		Init vertex buffer according to the vertex format.
		!#zh
		??¹æ?®é¡¶??¹æ?¼å?????å§????é¡¶ç?¹å??å­????
		@param vertexFormat vertex format
		@param vertexCount how much vertex should be create in this buffer.
		@param dynamic whether or not to use dynamic buffer.
		@param index index 
		*/
		init(vertexFormat: gfx.VertexFormat, vertexCount: number, dynamic?: boolean, index?: boolean): void;		
		/**
		!#en
		Set the vertex values.
		!#zh
		è®¾ç½®é¡¶ç?¹æ?°æ??
		@param name the attribute name, e.g. gfx.ATTR_POSITION
		@param values the vertex values 
		*/
		setVertices(name: string, values: Vec2[]|Vec3[]|Color[]|number[]|Uint8Array|Float32Array): void;		
		/**
		!#en
		Set the sub mesh indices.
		!#zh
		è®¾ç½®å­?ç½???¼ç´¢å¼????
		@param indices the sub mesh indices.
		@param index sub mesh index.
		@param dynamic whether or not to use dynamic buffer. 
		*/
		setIndices(indices: number[]|Uint16Array|Uint8Array, index?: number, dynamic?: boolean): void;		
		/**
		!#en
		Set the sub mesh primitive type.
		!#zh
		è®¾ç½®å­?ç½???¼ç????¶çº¿??¡ç????¹å?????
		@param type type
		@param index index 
		*/
		setPrimitiveType(type: number, index: number): void;		
		/**
		!#en
		Clear the buffer data.
		!#zh
		æ¸???¤ç????¼å??å»ºç?????å­???°æ?®ã?? 
		*/
		clear(): void;		
		/**
		!#en Set mesh bounding box
		!#zh è®¾ç½®ç½???¼ç???????´ç??
		@param min min
		@param max max 
		*/
		setBoundingBox(min: Vec3, max: Vec3): void;		
		/**
		!#en Read the specified attributes of the subgrid into the target buffer.
		!#zh è¯»å??å­?ç½???¼ç?????å®?å±???§å?°ç?®æ??ç¼???²å?ºä¸­???
		@param primitiveIndex The subgrid index.
		@param attributeName attribute name.
		@param buffer The target buffer.
		@param stride The byte interval between adjacent attributes in the target buffer.
		@param offset The offset of the first attribute in the target buffer. 
		*/
		copyAttribute(primitiveIndex: number, attributeName: string, buffer: ArrayBuffer, stride: number, offset: number): boolean;		
		/**
		!#en Read the index data of the subgrid into the target array.
		!#zh è¯»å??å­?ç½???¼ç??ç´¢å????°æ?®å?°ç?®æ????°ç??ä¸­ã??
		@param primitiveIndex The subgrid index.
		@param outputArray The target array. 
		*/
		copyIndices(primitiveIndex: number, outputArray: DataView): boolean;		
		/**
		!#en Checks whether the EventTarget object has any callback registered for a specific type of event.
		!#zh æ£???¥ä??ä»¶ç?®æ??å¯¹è±¡??¯å?¦æ??ä¸ºç?¹å??ç±»å?????äº?ä»¶æ³¨?????????è°????
		@param type The type of event. 
		*/
		hasEventListener(type: string): boolean;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget.
		This type of event should be triggered via `emit`.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°????è¿?ç§?ç±»å?????äº?ä»¶å??è¯¥è¢« `emit` è§¦å?????
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, node);
		``` 
		*/
		on<T extends Function>(type: string, callback: T, target?: any, useCapture?: boolean): T;		
		/**
		!#en
		Removes the listeners previously registered with the same type, callback, target and or useCapture,
		if only type is passed as parameter, all listeners registered with that type will be removed.
		!#zh
		?????¤ä???????¨å??ç±»å??ï¼????è°?ï¼???®æ????? useCapture æ³¨å?????äº?ä»¶ç????¬å?¨ï??å¦??????ªä????? typeï¼?å°?ä¼??????? type ç±»å???????????äº?ä»¶ç????¬å?¨ã??
		@param type A string representing the event type being removed.
		@param callback The callback to remove.
		@param target The target (this object) to invoke the callback, if it's not given, only callback without target will be removed
		
		@example 
		```js
		// register fire eventListener
		var callback = eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, target);
		// remove fire event listener
		eventTarget.off('fire', callback, target);
		// remove all fire event listeners
		eventTarget.off('fire');
		``` 
		*/
		off(type: string, callback?: Function, target?: any): void;		
		/**
		!#en Removes all callbacks previously registered with the same target (passed as parameter).
		This is not for removing all listeners in the current event target,
		and this is not for removing all listeners the target parameter have registered.
		It's only for removing all listeners (callback and target couple) registered on the current event target by the target parameter.
		!#zh ??¨å????? EventTarget ä¸??????¤æ??å®???®æ??ï¼?target ?????°ï??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°æ??æ³??????¤å????? EventTarget ?????????äº?ä»¶ç????¬å?¨ï??ä¹????æ³??????? target ?????°æ??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°å?ªè?½å????? target ?????°å?¨å????? EventTarget ä¸?æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		@param target The target to be searched for all related listeners 
		*/
		targetOff(target: any): void;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget,
		the callback will remove itself after the first time it is triggered.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°?ï¼????è°?ä¼???¨ç¬¬ä¸???¶é?´è¢«è§¦å??????????¤è?ªèº«???
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.once('fire', function () {
		    cc.log("this is the callback and will be invoked only once");
		}, node);
		``` 
		*/
		once(type: string, callback: (arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any) => void, target?: any): void;		
		/**
		!#en
		Send an event with the event object.
		!#zh
		???è¿?äº?ä»¶å¯¹è±¡æ´¾???äº?ä»?
		@param event event 
		*/
		dispatchEvent(event: Event): void;	
	}	
	/** !#en
	Mesh Renderer Component
	!#zh
	ç½???¼æ¸²???ç»?ä»? */
	export class MeshRenderer extends RenderComponent {		
		/** !#en
		The mesh which the renderer uses.
		!#zh
		è®¾ç½®ä½¿ç?¨ç??ç½???? */
		mesh: Mesh;		
		/** !#en
		Whether the mesh should receive shadows.
		!#zh
		ç½???¼æ?¯å?¦æ?¥å?????æº????å°??????´å½± */
		receiveShadows: boolean;		
		/** !#en
		Shadow Casting Mode
		!#zh
		ç½???¼æ??å°???´å½±???æ¨¡å?? */
		shadowCastingMode: MeshRenderer.ShadowCastingMode;		
		/** !#en
		Enable auto merge mesh, only support when mesh's VertexFormat, PrimitiveType, materials are all the same
		!#zh
		å¼???¯è?ªå?¨å??å¹? mesh ?????½ï????ªæ????¨ç????¼ç?? é¡¶ç?¹æ?¼å??ï¼?PrimitiveType, ä½¿ç?¨ç?????è´? ??½ä????´ç???????µä?????ä¼??????? */
		enableAutoBatch: boolean;	
	}	
	/** The class BufferRange denotes a range of the buffer. */
	export class BufferRange {		
		/** The offset of the range. */
		offset: number;		
		/** The length of the range. */
		length: number;	
	}	
	/** undefined */
	export class VertexFormat {		
		/** The data range of this bundle.
		This range of data is essentially mapped to a GPU vertex buffer. */
		data: BufferRange;		
		/** The attribute formats. */
		formats: VertexFormat;		
		/** The vertex bundle that the primitive use. */
		vertexBundleIndices: number[];		
		/** The data range of the primitive.
		This range of data is essentially mapped to a GPU indices buffer. */
		data: BufferRange;		
		/** The type of this primitive's indices. */
		indexUnit: number;		
		/** The primitive's topology. */
		topology: number;	
	}	
	/** undefined */
	export class Graphics extends RenderComponent {		
		/** !#en
		Current line width.
		!#zh
		å½????çº¿æ?¡å®½åº? */
		lineWidth: number;		
		/** !#en
		lineJoin determines how two connecting segments (of lines, arcs or curves) with non-zero lengths in a shape are joined together.
		!#zh
		lineJoin ??¨æ?¥è®¾ç½?2ä¸ªé?¿åº¦ä¸?ä¸?0?????¸è????¨å??ï¼?çº¿æ®µï¼????å¼§ï????²çº¿ï¼?å¦?ä½?è¿???¥å?¨ä??èµ·ç??å±???§ã?? */
		lineJoin: Graphics.LineJoin;		
		/** !#en
		lineCap determines how the end points of every line are drawn.
		!#zh
		lineCap ???å®?å¦?ä½?ç»???¶æ??ä¸???¡çº¿æ®µæ?«ç«¯??? */
		lineCap: Graphics.LineCap;		
		/** !#en
		stroke color
		!#zh
		çº¿æ®µé¢???? */
		strokeColor: Color;		
		/** !#en
		fill color
		!#zh
		å¡«å??é¢???? */
		fillColor: Color;		
		/** !#en
		Sets the miter limit ratio
		!#zh
		è®¾ç½®?????¥é?¢é????¶æ??ä¾? */
		miterLimit: number;		
		/**
		!#en Move path start point to (x,y).
		!#zh ç§»å?¨è·¯å¾?èµ·ç?¹å?°å?????(x, y)
		@param x The x axis of the coordinate for the end point.
		@param y The y axis of the coordinate for the end point. 
		*/
		moveTo(x?: number, y?: number): void;		
		/**
		!#en Adds a straight line to the path
		!#zh ç»???¶ç?´çº¿è·¯å??
		@param x The x axis of the coordinate for the end point.
		@param y The y axis of the coordinate for the end point. 
		*/
		lineTo(x?: number, y?: number): void;		
		/**
		!#en Adds a cubic BÃ©zier curve to the path
		!#zh ç»???¶ä??æ¬¡è??èµ?å°???²çº¿è·¯å??
		@param c1x The x axis of the coordinate for the first control point.
		@param c1y The y axis of the coordinate for first control point.
		@param c2x The x axis of the coordinate for the second control point.
		@param c2y The y axis of the coordinate for the second control point.
		@param x The x axis of the coordinate for the end point.
		@param y The y axis of the coordinate for the end point. 
		*/
		bezierCurveTo(c1x?: number, c1y?: number, c2x?: number, c2y?: number, x?: number, y?: number): void;		
		/**
		!#en Adds a quadratic BÃ©zier curve to the path
		!#zh ç»???¶ä??æ¬¡è??èµ?å°???²çº¿è·¯å??
		@param cx The x axis of the coordinate for the control point.
		@param cy The y axis of the coordinate for the control point.
		@param x The x axis of the coordinate for the end point.
		@param y The y axis of the coordinate for the end point. 
		*/
		quadraticCurveTo(cx?: number, cy?: number, x?: number, y?: number): void;		
		/**
		!#en Adds an arc to the path which is centered at (cx, cy) position with radius r starting at startAngle and ending at endAngle going in the given direction by counterclockwise (defaulting to false).
		!#zh ç»???¶å??å¼§è·¯å¾???????å¼§è·¯å¾???????å¿???? (cx, cy) ä½?ç½®ï?????å¾?ä¸? r ï¼???¹æ?? counterclockwise ï¼?é»?è®¤ä¸ºfalseï¼????å®??????¹å??ä»? startAngle å¼?å§?ç»???¶ï????? endAngle ç»???????
		@param cx The x axis of the coordinate for the center point.
		@param cy The y axis of the coordinate for the center point.
		@param r The arc's radius.
		@param startAngle The angle at which the arc starts, measured clockwise from the positive x axis and expressed in radians.
		@param endAngle The angle at which the arc ends, measured clockwise from the positive x axis and expressed in radians.
		@param counterclockwise An optional Boolean which, if true, causes the arc to be drawn counter-clockwise between the two angles. By default it is drawn clockwise. 
		*/
		arc(cx?: number, cy?: number, r?: number, startAngle?: number, endAngle?: number, counterclockwise?: boolean): void;		
		/**
		!#en Adds an ellipse to the path.
		!#zh ç»???¶æ¤­???è·¯å?????
		@param cx The x axis of the coordinate for the center point.
		@param cy The y axis of the coordinate for the center point.
		@param rx The ellipse's x-axis radius.
		@param ry The ellipse's y-axis radius. 
		*/
		ellipse(cx?: number, cy?: number, rx?: number, ry?: number): void;		
		/**
		!#en Adds an circle to the path.
		!#zh ç»???¶å??å½¢è·¯å¾????
		@param cx The x axis of the coordinate for the center point.
		@param cy The y axis of the coordinate for the center point.
		@param r The circle's radius. 
		*/
		circle(cx?: number, cy?: number, r?: number): void;		
		/**
		!#en Adds an rectangle to the path.
		!#zh ç»???¶ç?©å½¢è·¯å?????
		@param x The x axis of the coordinate for the rectangle starting point.
		@param y The y axis of the coordinate for the rectangle starting point.
		@param w The rectangle's width.
		@param h The rectangle's height. 
		*/
		rect(x?: number, y?: number, w?: number, h?: number): void;		
		/**
		!#en Adds an round corner rectangle to the path.
		!#zh ç»???¶å??è§???©å½¢è·¯å?????
		@param x The x axis of the coordinate for the rectangle starting point.
		@param y The y axis of the coordinate for the rectangle starting point.
		@param w The rectangles width.
		@param h The rectangle's height.
		@param r The radius of the rectangle. 
		*/
		roundRect(x?: number, y?: number, w?: number, h?: number, r?: number): void;		
		/**
		!#en Draws a filled rectangle.
		!#zh ç»???¶å¡«?????©å½¢???
		@param x The x axis of the coordinate for the rectangle starting point.
		@param y The y axis of the coordinate for the rectangle starting point.
		@param w The rectangle's width.
		@param h The rectangle's height. 
		*/
		fillRect(x?: number, y?: number, w?: number, h?: number): void;		
		/**
		!#en Erasing any previously drawn content.
		!#zh ??¦é?¤ä?????ç»???¶ç???????????å®¹ç????¹æ?????
		@param clean Whether to clean the graphics inner cache. 
		*/
		clear(clean?: boolean): void;		
		/**
		!#en Causes the point of the pen to move back to the start of the current path. It tries to add a straight line from the current point to the start.
		!#zh å°?ç¬???¹è???????°å?????è·¯å??èµ·å????¹ç?????å®?å°?è¯?ä»?å½??????¹å?°èµ·å§???¹ç????¶ä????¡ç?´çº¿??? 
		*/
		close(): void;		
		/**
		!#en Strokes the current or given path with the current stroke style.
		!#zh ??¹æ?®å??????????»çº¿??·å??ï¼?ç»???¶å????????å·²ç??å­???¨ç??è·¯å????? 
		*/
		stroke(): void;		
		/**
		!#en Fills the current or given path with the current fill style.
		!#zh ??¹æ?®å??????????»çº¿??·å??ï¼?å¡«å??å½???????å·²ç??å­???¨ç??è·¯å????? 
		*/
		fill(): void;	
	}	
	/** !#en The module provides utilities for working with file and directory paths
	!#zh ??¨ä??å¤???????ä»¶ä????®å?????è·¯å?????æ¨¡å?? */
	export class path {		
		/**
		!#en Join strings to be a path.
		!#zh ??¼æ?¥å??ç¬¦ä¸²ä¸? Path
		
		@example 
		```js
		------------------------------
		cc.path.join("a", "b.png");        //-->"a/b.png"
		cc.path.join("a", "b", "c.png");   //-->"a/b/c.png"
		cc.path.join("a", "b");            //-->"a/b"
		cc.path.join("a", "b", "/");       //-->"a/b/"
		cc.path.join("a", "b/", "/");      //-->"a/b/"
		
		``` 
		*/
		static join(): string;		
		/**
		!#en Get the ext name of a path including '.', like '.png'.
		!#zh è¿???? Path ?????©å?????ï¼??????? '.'ï¼?ä¾?å¦? '.png'???
		@param pathStr pathStr
		
		@example 
		```js
		---------------------------
		cc.path.extname("a/b.png");		//-->".png"
		cc.path.extname("a/b.png?a=1&b=2");	//-->".png"
		cc.path.extname("a/b");			//-->null
		cc.path.extname("a/b?a=1&b=2");		//-->null
		
		``` 
		*/
		static extname(pathStr: string): any;		
		/**
		!#en Get the main name of a file name
		!#zh ??·å?????ä»¶å?????ä¸»å??ç§?
		@param fileName fileName 
		*/
		static mainFileName(fileName: string): string;		
		/**
		!#en Get the file name of a file path.
		!#zh ??·å?????ä»¶è·¯å¾???????ä»¶å?????
		@param pathStr pathStr
		@param extname extname
		
		@example 
		```js
		---------------------------------
		cc.path.basename("a/b.png");			//-->"b.png"
		cc.path.basename("a/b.png?a=1&b=2");		//-->"b.png"
		cc.path.basename("a/b.png", ".png");		//-->"b"
		cc.path.basename("a/b.png?a=1&b=2", ".png");	//-->"b"
		cc.path.basename("a/b.png", ".txt");		//-->"b.png"
		
		``` 
		*/
		static basename(pathStr: string, extname?: string): any;		
		/**
		!#en Get dirname of a file path.
		!#zh ??·å?????ä»¶è·¯å¾??????®å????????
		@param pathStr pathStr
		
		@example 
		```js
		---------------------------------
		* unix
		cc.path.driname("a/b/c.png");		//-->"a/b"
		cc.path.driname("a/b/c.png?a=1&b=2");	//-->"a/b"
		cc.path.dirname("a/b/");		//-->"a/b"
		cc.path.dirname("c.png");		//-->""
		* windows
		cc.path.driname("a\\b\\c.png");		//-->"a\b"
		cc.path.driname("a\\b\\c.png?a=1&b=2");	//-->"a\b"
		
		``` 
		*/
		static dirname(pathStr: string): any;		
		/**
		!#en Change extname of a file path.
		!#zh ??´æ?¹æ??ä»¶è·¯å¾??????©å????????
		@param pathStr pathStr
		@param extname extname
		
		@example 
		```js
		---------------------------------
		cc.path.changeExtname("a/b.png", ".plist");		//-->"a/b.plist"
		cc.path.changeExtname("a/b.png?a=1&b=2", ".plist");	//-->"a/b.plist?a=1&b=2"
		
		``` 
		*/
		static changeExtname(pathStr: string, extname?: string): string;	
	}	
	/** !#en
	AffineTransform class represent an affine transform matrix. It's composed basically by translation, rotation, scale transformations.<br/>
	!#zh
	AffineTransform ç±»ä»£è¡¨ä??ä¸ªä»¿å°??????¢ç?©é?µã??å®???ºæ?¬ä????¯ç?±å¹³ç§»æ??è½¬ï??ç¼©æ?¾è½¬??????ç»???????<br/> */
	export class AffineTransform {		
		/**
		!#en Create a AffineTransform object with all contents in the matrix.
		!#zh ??¨å?¨ç?©é?µä¸­????????????å®¹å??å»ºä??ä¸? AffineTransform å¯¹è±¡???
		@param a a
		@param b b
		@param c c
		@param d d
		@param tx tx
		@param ty ty 
		*/
		static create(a: number, b: number, c: number, d: number, tx: number, ty: number): AffineTransform;		
		/**
		!#en
		Create a identity transformation matrix: <br/>
		[ 1, 0, 0, <br/>
		  0, 1, 0 ]
		!#zh
		???ä½???©é?µï??<br/>
		[ 1, 0, 0, <br/>
		  0, 1, 0 ] 
		*/
		static identity(): AffineTransform;		
		/**
		!#en Clone a AffineTransform object from the specified transform.
		!#zh ?????????å®???? AffineTransform å¯¹è±¡???
		@param t t 
		*/
		static clone(t: AffineTransform): AffineTransform;		
		/**
		!#en
		Concatenate a transform matrix to another
		The results are reflected in the out affine transform
		out = t1 * t2
		This function is memory free, you should create the output affine transform by yourself and manage its memory.
		!#zh
		??¼æ?¥ä¸¤ä¸ªç?©é?µï??å°?ç»????ä¿?å­???? out ??©é?µã??è¿?ä¸ªå?½æ?°ä?????å»ºä»»ä½????å­?ï¼?ä½????è¦???????å»? AffineTransform å¯¹è±¡??¨æ?¥å????¨ç?????ï¼?å¹¶ä??ä¸ºç¬¬ä¸?ä¸ªå????°ä????¥å?½æ?°ã??
		out = t1 * t2
		@param out Out object to store the concat result
		@param t1 The first transform object.
		@param t2 The transform object to concatenate. 
		*/
		static concat(out: AffineTransform, t1: AffineTransform, t2: AffineTransform): AffineTransform;		
		/**
		!#en Get the invert transform of an AffineTransform object.
		This function is memory free, you should create the output affine transform by yourself and manage its memory.
		!#zh æ±??????©é?µã??è¿?ä¸ªå?½æ?°ä?????å»ºä»»ä½????å­?ï¼?ä½????è¦???????å»? AffineTransform å¯¹è±¡??¨æ?¥å????¨ç?????ï¼?å¹¶ä??ä¸ºç¬¬ä¸?ä¸ªå????°ä????¥å?½æ?°ã??
		@param out out
		@param t t 
		*/
		static invert(out: AffineTransform, t: AffineTransform): AffineTransform;		
		/**
		!#en Get an AffineTransform object from a given matrix 4x4.
		This function is memory free, you should create the output affine transform by yourself and manage its memory.
		!#zh ä»?ä¸?ä¸? 4x4 Matrix ??·å?? AffineTransform å¯¹è±¡???è¿?ä¸ªå?½æ?°ä?????å»ºä»»ä½????å­?ï¼?ä½????è¦???????å»? AffineTransform å¯¹è±¡??¨æ?¥å????¨ç?????ï¼?å¹¶ä??ä¸ºç¬¬ä¸?ä¸ªå????°ä????¥å?½æ?°ã??
		@param out out
		@param mat mat 
		*/
		static invert(out: AffineTransform, mat: Mat4): AffineTransform;		
		/**
		!#en Apply the affine transformation on a point.
		This function is memory free, you should create the output Vec2 by yourself and manage its memory.
		!#zh å¯¹ä??ä¸ªç?¹å????¨ç?©é?µå????¢ã??è¿?ä¸ªå?½æ?°ä?????å»ºä»»ä½????å­?ï¼?ä½????è¦???????å»ºä??ä¸? Vec2 å¯¹è±¡??¨æ?¥å????¨ç?????ï¼?å¹¶ä??ä¸ºç¬¬ä¸?ä¸ªå????°ä????¥å?½æ?°ã??
		@param out The output point to store the result
		@param point Point to apply transform or x.
		@param transOrY transform matrix or y.
		@param t transform matrix. 
		*/
		static transformVec2(out: Vec2, point: Vec2|number, transOrY: AffineTransform|number, t?: AffineTransform): Vec2;		
		/**
		!#en Apply the affine transformation on a size.
		This function is memory free, you should create the output Size by yourself and manage its memory.
		!#zh åº???¨ä»¿å°??????¢ç?©é?µå?? Size ä¸????è¿?ä¸ªå?½æ?°ä?????å»ºä»»ä½????å­?ï¼?ä½????è¦???????å»ºä??ä¸? Size å¯¹è±¡??¨æ?¥å????¨ç?????ï¼?å¹¶ä??ä¸ºç¬¬ä¸?ä¸ªå????°ä????¥å?½æ?°ã??
		@param out The output point to store the result
		@param size size
		@param t t 
		*/
		static transformSize(out: Size, size: Size, t: AffineTransform): Size;		
		/**
		!#en Apply the affine transformation on a rect.
		This function is memory free, you should create the output Rect by yourself and manage its memory.
		!#zh åº???¨ä»¿å°??????¢ç?©é?µå?? Rect ä¸????è¿?ä¸ªå?½æ?°ä?????å»ºä»»ä½????å­?ï¼?ä½????è¦???????å»ºä??ä¸? Rect å¯¹è±¡??¨æ?¥å????¨ç?????ï¼?å¹¶ä??ä¸ºç¬¬ä¸?ä¸ªå????°ä????¥å?½æ?°ã??
		@param out out
		@param rect rect
		@param anAffineTransform anAffineTransform 
		*/
		static transformRect(out: Rect, rect: Rect, anAffineTransform: AffineTransform): Rect;		
		/**
		!#en Apply the affine transformation on a rect, and truns to an Oriented Bounding Box.
		This function is memory free, you should create the output vectors by yourself and manage their memory.
		!#zh åº???¨ä»¿å°??????¢ç?©é?µå?? Rect ä¸?, å¹¶è½¬??¢ä¸º???????????´ç?????è¿?ä¸ªå?½æ?°ä?????å»ºä»»ä½????å­?ï¼?ä½????è¦???????å»ºå????´ç????????ä¸? Vector å¯¹è±¡??¨æ?¥å????¨ç?????ï¼?å¹¶ä??ä¸ºå?????ä¸ªå????°ä????¥å?½æ?°ã??
		@param out_bl out_bl
		@param out_tl out_tl
		@param out_tr out_tr
		@param out_br out_br
		@param rect rect
		@param anAffineTransform anAffineTransform 
		*/
		static transformObb(out_bl: Vec2, out_tl: Vec2, out_tr: Vec2, out_br: Vec2, rect: Rect, anAffineTransform: AffineTransform): void;	
	}	
	/** A base node for CCNode, it will:
	- maintain scene hierarchy and active logic
	- notifications if some properties changed
	- define some interfaces shares between CCNode
	- define machanisms for Enity Component Systems
	- define prefab and serialize functions */
	export class _BaseNode extends Object implements EventTarget {		
		/** !#en Name of node.
		!#zh è¯¥è????¹å??ç§°ã?? */
		name: string;		
		/** !#en The uuid for editor, will be stripped before building project.
		!#zh ä¸»è????¨ä??ç¼?è¾???¨ç?? uuidï¼???¨ç??è¾???¨ä????¯ç?¨ä?????ä¹????å­???¨ï????¨é¡¹??®æ??å»ºä?????å°?????????ªå????? id??? */
		uuid: string;		
		/** !#en All children nodes.
		!#zh ?????¹ç????????å­??????¹ã?? */
		children: Node[];		
		/** !#en All children nodes.
		!#zh ?????¹ç??å­??????¹æ?°é????? */
		childrenCount: number;		
		/** !#en
		The local active state of this node.<br/>
		Note that a Node may be inactive because a parent is not active, even if this returns true.<br/>
		Use {{#crossLink "Node/activeInHierarchy:property"}}{{/crossLink}} if you want to check if the Node is actually treated as active in the scene.
		!#zh
		å½?????????¹ç????ªèº«æ¿?æ´»ç?¶æ?????<br/>
		??¼å??æ³¨æ???????¯ï??ä¸?ä¸ªè????¹ç????¶è????¹å?????ä¸?è¢«æ??æ´»ï?????ä¹???³ä½¿å®???ªèº«è®¾ä¸ºæ¿?æ´»ï??å®?ä»???¶æ??æ³?æ¿?æ´»ã??<br/>
		å¦????ä½???³æ????¥è????¹å?¨å?ºæ?¯ä¸­å®???????æ¿?æ´»ç?¶æ????¯ä»¥ä½¿ç?? {{#crossLink "Node/activeInHierarchy:property"}}{{/crossLink}}??? */
		active: boolean;		
		/** !#en Indicates whether this node is active in the scene.
		!#zh è¡¨ç¤ºæ­¤è????¹æ?¯å?¦å?¨å?ºæ?¯ä¸­æ¿?æ´»ã?? */
		activeInHierarchy: boolean;		
		/**
		
		@param name name 
		*/
		constructor(name?: string);		
		/** !#en The parent of the node.
		!#zh è¯¥è????¹ç????¶è????¹ã?? */
		parent: Node;		
		/**
		!#en Get parent of the node.
		!#zh ??·å??è¯¥è????¹ç????¶è????¹ã??
		
		@example 
		```js
		var parent = this.node.getParent();
		``` 
		*/
		getParent(): Node;		
		/**
		!#en Set parent of the node.
		!#zh è®¾ç½®è¯¥è????¹ç????¶è????¹ã??
		@param value value
		
		@example 
		```js
		node.setParent(newNode);
		``` 
		*/
		setParent(value: Node): void;		
		/**
		!#en
		Properties configuration function <br/>
		All properties in attrs will be set to the node, <br/>
		when the setter of the node is available, <br/>
		the property will be set via setter function.<br/>
		!#zh å±???§é??ç½®å?½æ?°ã????? attrs ?????????å±???§å??è¢«è®¾ç½®ä¸º?????¹å????§ã??
		@param attrs Properties to be set to node
		
		@example 
		```js
		var attrs = { key: 0, num: 100 };
		node.attr(attrs);
		``` 
		*/
		attr(attrs: any): void;		
		/**
		!#en Returns a child from the container given its uuid.
		!#zh ???è¿? uuid ??·å???????¹ç??å­??????¹ã??
		@param uuid The uuid to find the child node.
		
		@example 
		```js
		var child = node.getChildByUuid(uuid);
		``` 
		*/
		getChildByUuid(uuid: string): Node;		
		/**
		!#en Returns a child from the container given its name.
		!#zh ???è¿????ç§°è?·å???????¹ç??å­??????¹ã??
		@param name A name to find the child node.
		
		@example 
		```js
		var child = node.getChildByName("Test Node");
		``` 
		*/
		getChildByName(name: string): Node;		
		/**
		!#en
		Inserts a child to the node at a specified index.
		!#zh
		?????¥å???????¹å?°æ??å®?ä½?ç½?
		@param child the child node to be inserted
		@param siblingIndex the sibling index to place the child in
		
		@example 
		```js
		node.insertChild(child, 2);
		``` 
		*/
		insertChild(child: Node, siblingIndex: number): void;		
		/**
		!#en Get the sibling index.
		!#zh ??·å?????çº§ç´¢å¼????
		
		@example 
		```js
		var index = node.getSiblingIndex();
		``` 
		*/
		getSiblingIndex(): number;		
		/**
		!#en Set the sibling index of this node.
		!#zh è®¾ç½®?????¹å??çº§ç´¢å¼????
		@param index index
		
		@example 
		```js
		node.setSiblingIndex(1);
		``` 
		*/
		setSiblingIndex(index: number): void;		
		/**
		!#en Walk though the sub children tree of the current node.
		Each node, including the current node, in the sub tree will be visited two times, before all children and after all children.
		This function call is not recursive, it's based on stack.
		Please don't walk any other node inside the walk process.
		!#zh ??????è¯¥è????¹ç??å­?????????????????????¹å¹¶???è§??????§è?????è°???½æ?°ã??
		å¯¹å?????ä¸­ç?????????????¹ï???????«å??????????¹ï??ä¼???§è??ä¸¤æ¬¡???è°?ï¼?prefunc ä¼???¨è®¿??®å?????å­??????¹ä?????è°???¨ï??postfunc ä¼???¨è®¿??®æ?????å­??????¹ä?????è°???¨ã??
		è¿?ä¸ªå?½æ?°ç??å®???°ä????¯å?ºä?????å½????ï¼??????¯å?ºä?????å±?å¼????å½??????¹å?????
		è¯·ä??è¦???? walk è¿?ç¨?ä¸­å¯¹ä»»ä????¶ä??????????¹å??å¥???§è?? walk???
		@param prefunc The callback to process node when reach the node for the first time
		@param postfunc The callback to process node when re-visit the node after walked all children in its sub tree
		
		@example 
		```js
		node.walk(function (target) {
		    console.log('Walked through node ' + target.name + ' for the first time');
		}, function (target) {
		    console.log('Walked through node ' + target.name + ' after walked all children in its sub tree');
		});
		``` 
		*/
		walk(prefunc: (target: _BaseNode) => void, postfunc: (target: _BaseNode) => void): void;		
		/**
		!#en
		Remove itself from its parent node. If cleanup is `true`, then also remove all events and actions. <br/>
		If the cleanup parameter is not passed, it will force a cleanup, so it is recommended that you always pass in the `false` parameter when calling this API.<br/>
		If the node orphan, then nothing happens.
		!#zh
		ä»???¶è????¹ä¸­?????¤è¯¥?????¹ã??å¦????ä¸?ä¼???? cleanup ?????°æ?????ä¼???? `true`ï¼????ä¹?è¿?ä¸ªè????¹ä????????ç»?å®????äº?ä»¶ã??action ??½ä??è¢«å????¤ã??<br/>
		???æ­¤å»ºè®®è????¨è??ä¸? API ??¶æ?»æ?¯ä????? `false` ?????°ã??<br/>
		å¦????è¿?ä¸ªè????¹æ?¯ä??ä¸ªå­¤?????¹ï?????ä¹?ä»?ä¹???½ä??ä¼??????????
		@param cleanup true if all actions and callbacks on this node should be removed, false otherwise.
		
		@example 
		```js
		node.removeFromParent();
		node.removeFromParent(false);
		``` 
		*/
		removeFromParent(cleanup?: boolean): void;		
		/**
		!#en
		Removes a child from the container. It will also cleanup all running actions depending on the cleanup parameter. </p>
		If the cleanup parameter is not passed, it will force a cleanup. <br/>
		"remove" logic MUST only be on this method  <br/>
		If a class wants to extend the 'removeChild' behavior it only needs <br/>
		to override this method.
		!#zh
		ç§»é?¤è????¹ä¸­???å®????å­??????¹ï????¯å?¦é??è¦?æ¸??????????æ­???¨è??è¡????è¡?ä¸ºå????³ä?? cleanup ?????°ã??<br/>
		å¦???? cleanup ?????°ä??ä¼???¥ï??é»?è®¤ä¸º true è¡¨ç¤ºæ¸???????<br/>
		@param child The child node which will be removed.
		@param cleanup true if all running actions and callbacks on the child node will be cleanup, false otherwise.
		
		@example 
		```js
		node.removeChild(newNode);
		node.removeChild(newNode, false);
		``` 
		*/
		removeChild(child: Node, cleanup?: boolean): void;		
		/**
		!#en
		Removes all children from the container and do a cleanup all running actions depending on the cleanup parameter. <br/>
		If the cleanup parameter is not passed, it will force a cleanup.
		!#zh
		ç§»é?¤è????¹æ????????å­??????¹ï????¯å?¦é??è¦?æ¸??????????æ­???¨è??è¡????è¡?ä¸ºå????³ä?? cleanup ?????°ã??<br/>
		å¦???? cleanup ?????°ä??ä¼???¥ï??é»?è®¤ä¸º true è¡¨ç¤ºæ¸???????
		@param cleanup true if all running actions on all children nodes should be cleanup, false otherwise.
		
		@example 
		```js
		node.removeAllChildren();
		node.removeAllChildren(false);
		``` 
		*/
		removeAllChildren(cleanup?: boolean): void;		
		/**
		!#en Is this node a child of the given node?
		!#zh ??¯å?¦æ?¯æ??å®??????¹ç??å­??????¹ï??
		@param parent parent
		
		@example 
		```js
		node.isChildOf(newNode);
		``` 
		*/
		isChildOf(parent: Node): boolean;		
		/**
		!#en
		Returns the component of supplied type if the node has one attached, null if it doesn't.<br/>
		You can also get component in the node by passing in the name of the script.
		!#zh
		??·å???????¹ä?????å®?ç±»å?????ç»?ä»¶ï??å¦?????????¹æ???????????å®?ç±»å?????ç»?ä»¶ï?????è¿????ï¼?å¦????æ²¡æ?????ä¸ºç©º???<br/>
		ä¼???¥å????°ä????¯ä»¥??¯è????¬ç?????ç§°ã??
		@param typeOrClassName typeOrClassName
		
		@example 
		```js
		// get sprite component
		var sprite = node.getComponent(cc.Sprite);
		// get custom test class
		var test = node.getComponent("Test");
		``` 
		*/
		getComponent<T extends Component>(type: {prototype: T}): T;
		getComponent(className: string): any;		
		/**
		!#en Returns all components of supplied type in the node.
		!#zh è¿?????????¹ä?????å®?ç±»å???????????ç»?ä»¶ã??
		@param typeOrClassName typeOrClassName
		
		@example 
		```js
		var sprites = node.getComponents(cc.Sprite);
		var tests = node.getComponents("Test");
		``` 
		*/
		getComponents<T extends Component>(type: {prototype: T}): T[];
		getComponents(className: string): any[];		
		/**
		!#en Returns the component of supplied type in any of its children using depth first search.
		!#zh ???å½???¥æ?¾æ?????å­??????¹ä¸­ç¬¬ä??ä¸ªå?¹é?????å®?ç±»å?????ç»?ä»¶ã??
		@param typeOrClassName typeOrClassName
		
		@example 
		```js
		var sprite = node.getComponentInChildren(cc.Sprite);
		var Test = node.getComponentInChildren("Test");
		``` 
		*/
		getComponentInChildren<T extends Component>(type: {prototype: T}): T;
		getComponentInChildren(className: string): any;		
		/**
		!#en Returns all components of supplied type in self or any of its children.
		!#zh ???å½???¥æ?¾è?ªèº«?????????å­??????¹ä¸­???å®?ç±»å?????ç»?ä»?
		@param typeOrClassName typeOrClassName
		
		@example 
		```js
		var sprites = node.getComponentsInChildren(cc.Sprite);
		var tests = node.getComponentsInChildren("Test");
		``` 
		*/
		getComponentsInChildren<T extends Component>(type: {prototype: T}): T[];
		getComponentsInChildren(className: string): any[];		
		/**
		!#en Adds a component class to the node. You can also add component to node by passing in the name of the script.
		!#zh ????????¹æ·»???ä¸?ä¸ªæ??å®?ç±»å?????ç»?ä»¶ç±»ï¼?ä½?è¿???¯ä»¥???è¿?ä¼???¥è????¬ç?????ç§°æ?¥æ·»???ç»?ä»¶ã??
		@param typeOrClassName The constructor or the class name of the component to add
		
		@example 
		```js
		var sprite = node.addComponent(cc.Sprite);
		var test = node.addComponent("Test");
		``` 
		*/
		addComponent<T extends Component>(type: {new(): T}): T;
		addComponent(className: string): any;		
		/**
		!#en
		Removes a component identified by the given name or removes the component object given.
		You can also use component.destroy() if you already have the reference.
		!#zh
		?????¤è????¹ä????????å®?ç»?ä»¶ï??ä¼???¥å????°å?¯ä»¥??¯ä??ä¸ªç??ä»¶æ???????½æ?°æ??ç»?ä»¶å??ï¼?ä¹???¯ä»¥??¯å·²ç»???·å?????ç»?ä»¶å????¨ã??
		å¦????ä½?å·²ç????·å??ç»?ä»¶å????¨ï??ä½?ä¹???¯ä»¥??´æ?¥è????? component.destroy()
		@param component The need remove component.
		
		@example 
		```js
		node.removeComponent(cc.Sprite);
		var Test = require("Test");
		node.removeComponent(Test);
		``` 
		*/
		removeComponent(component: string|Function|Component): void;		
		/**
		!#en
		Destroy all children from the node, and release all their own references to other objects.<br/>
		Actual destruct operation will delayed until before rendering.
		!#zh
		???æ¯???????å­??????¹ï??å¹¶é????¾æ?????å®?ä»¬å¯¹??¶å??å¯¹è±¡???å¼???¨ã??<br/>
		å®???????æ¯????ä½?ä¼?å»¶è????°å?????å¸§æ¸²????????§è?????
		
		@example 
		```js
		node.destroyAllChildren();
		``` 
		*/
		destroyAllChildren(): void;		
		/**
		!#en Checks whether the EventTarget object has any callback registered for a specific type of event.
		!#zh æ£???¥ä??ä»¶ç?®æ??å¯¹è±¡??¯å?¦æ??ä¸ºç?¹å??ç±»å?????äº?ä»¶æ³¨?????????è°????
		@param type The type of event. 
		*/
		hasEventListener(type: string): boolean;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget.
		This type of event should be triggered via `emit`.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°????è¿?ç§?ç±»å?????äº?ä»¶å??è¯¥è¢« `emit` è§¦å?????
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, node);
		``` 
		*/
		on<T extends Function>(type: string, callback: T, target?: any, useCapture?: boolean): T;		
		/**
		!#en
		Removes the listeners previously registered with the same type, callback, target and or useCapture,
		if only type is passed as parameter, all listeners registered with that type will be removed.
		!#zh
		?????¤ä???????¨å??ç±»å??ï¼????è°?ï¼???®æ????? useCapture æ³¨å?????äº?ä»¶ç????¬å?¨ï??å¦??????ªä????? typeï¼?å°?ä¼??????? type ç±»å???????????äº?ä»¶ç????¬å?¨ã??
		@param type A string representing the event type being removed.
		@param callback The callback to remove.
		@param target The target (this object) to invoke the callback, if it's not given, only callback without target will be removed
		
		@example 
		```js
		// register fire eventListener
		var callback = eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, target);
		// remove fire event listener
		eventTarget.off('fire', callback, target);
		// remove all fire event listeners
		eventTarget.off('fire');
		``` 
		*/
		off(type: string, callback?: Function, target?: any): void;		
		/**
		!#en Removes all callbacks previously registered with the same target (passed as parameter).
		This is not for removing all listeners in the current event target,
		and this is not for removing all listeners the target parameter have registered.
		It's only for removing all listeners (callback and target couple) registered on the current event target by the target parameter.
		!#zh ??¨å????? EventTarget ä¸??????¤æ??å®???®æ??ï¼?target ?????°ï??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°æ??æ³??????¤å????? EventTarget ?????????äº?ä»¶ç????¬å?¨ï??ä¹????æ³??????? target ?????°æ??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°å?ªè?½å????? target ?????°å?¨å????? EventTarget ä¸?æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		@param target The target to be searched for all related listeners 
		*/
		targetOff(target: any): void;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget,
		the callback will remove itself after the first time it is triggered.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°?ï¼????è°?ä¼???¨ç¬¬ä¸???¶é?´è¢«è§¦å??????????¤è?ªèº«???
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.once('fire', function () {
		    cc.log("this is the callback and will be invoked only once");
		}, node);
		``` 
		*/
		once(type: string, callback: (arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any) => void, target?: any): void;		
		/**
		!#en
		Send an event with the event object.
		!#zh
		???è¿?äº?ä»¶å¯¹è±¡æ´¾???äº?ä»?
		@param event event 
		*/
		dispatchEvent(event: Event): void;		
		/**
		!#en
		Destroy all callbackInfos.
		!#zh
		???æ¯?è®°å?????äº?ä»? 
		*/
		clear(): void;	
	}	
	/** !#en
	Helper class for setting material blend function.
	!#zh
	è®¾ç½®???è´¨æ··???æ¨¡å?????è¾???©ç±»??? */
	export class BlendFunc {		
		/** !#en specify the source Blend Factor, this will generate a custom material object, please pay attention to the memory cost.
		!#zh ???å®??????¾ç??æ··å??æ¨¡å??ï¼?è¿?ä¼???????ä¸?ä¸ªæ?°ç?????è´¨å¯¹è±¡ï??æ³¨æ??è¿?å¸¦æ?¥ç??å¼???? */
		srcBlendFactor: macro.BlendFactor;		
		/** !#en specify the destination Blend Factor.
		!#zh ???å®???®æ?????æ··å??æ¨¡å?? */
		dstBlendFactor: macro.BlendFactor;	
	}	
	/** An internal helper class for switching render component's material between normal sprite material and gray sprite material. */
	export class GraySpriteState {		
		/** !#en The normal material.
		!#zh æ­?å¸¸ç?¶æ????????è´¨ã?? */
		normalMaterial: Material;		
		/** !#en The gray material.
		!#zh ç½®ç?°ç?¶æ????????è´¨ã?? */
		grayMaterial: Material;	
	}	
	/** misc utilities */
	export class misc {		
		/**
		!#en Clamp a value between from and to.
		!#zh
		???å®?æµ®ç?¹æ?°ç?????å¤§æ??å°???¼ã??<br/>
		??°å?¼å¤§äº? max_inclusive ???è¿???? max_inclusive???<br/>
		??°å?¼å??äº? min_inclusive ???è¿???? min_inclusive???<br/>
		??¦å??è¿??????ªèº«???
		@param value value
		@param min_inclusive min_inclusive
		@param max_inclusive max_inclusive
		
		@example 
		```js
		var v1 = cc.misc.clampf(20, 0, 20); // 20;
		var v2 = cc.misc.clampf(-1, 0, 20); //  0;
		var v3 = cc.misc.clampf(10, 0, 20); // 10;
		``` 
		*/
		static clampf(value: number, min_inclusive: number, max_inclusive: number): number;		
		/**
		!#en Clamp a value between 0 and 1.
		!#zh ???å®?æµ®ç?¹æ?°ç???????¼è????´ä¸º 0 ~ 1 ä¹???´ã??
		@param value value
		
		@example 
		```js
		var v1 = cc.misc.clamp01(20);  // 1;
		var v2 = cc.misc.clamp01(-1);  // 0;
		var v3 = cc.misc.clamp01(0.5); // 0.5;
		``` 
		*/
		static clamp01(value: number): number;		
		/**
		Linear interpolation between 2 numbers, the ratio sets how much it is biased to each end
		@param a number A
		@param b number B
		@param r ratio between 0 and 1
		
		@example 
		```js
		----
		lerp
		cc.misc.lerp(2,10,0.5)//returns 6
		cc.misc.lerp(2,10,0.2)//returns 3.6
		
		``` 
		*/
		static lerp(a: number, b: number, r: number): number;		
		/**
		converts degrees to radians
		@param angle angle 
		*/
		static degreesToRadians(angle: number): number;		
		/**
		converts radians to degrees
		@param angle angle 
		*/
		static radiansToDegrees(angle: number): number;	
	}	
	/** !#en The renderer object which provide access to render system APIs,
	detailed APIs will be available progressively.
	!#zh ???ä¾???ºç??æ¸²æ????¥å?????æ¸²æ????¨å¯¹è±¡ï??æ¸²æ??å±??????ºç????¥å??å°????æ­¥å????¾ç????¨æ?? */
	export class renderer {		
		/** !#en The render engine is available only after cc.game.EVENT_ENGINE_INITED event.<br/>
		Normally it will be inited as the webgl render engine, but in wechat open context domain,
		it will be inited as the canvas render engine. Canvas render engine is no longer available for other use case since v2.0.
		!#zh ??ºç??æ¸²æ??å¼????å¯¹è±¡??ªå?? cc.game.EVENT_ENGINE_INITED äº?ä»¶è§¦???????????¯è?·å?????<br/>
		å¤§å????°æ????µä??ï¼?å®???½ä????? WebGL æ¸²æ??å¼????å®?ä¾?ï¼?ä½???¯å?¨å¾®ä¿¡å????¾æ?°æ?®å??å½?ä¸­ï??å®?ä¼???? Canvas æ¸²æ??å¼????å®?ä¾????è¯·æ³¨???ï¼?ä»? 2.0 å¼?å§?ï¼????ä»¬å?¨å?¶ä??å¹³å?°å????¯å??ä¸???½å??å¼?äº? Canvas æ¸²æ????¨ã?? */
		static renderEngine: any;		
		/** !#en The total draw call count in last rendered frame.
		!#zh ä¸?ä¸?æ¬¡æ¸²???å¸§æ?????äº¤ç??æ¸²æ????¹æ¬¡??»æ?°ã?? */
		static drawCalls: number;	
	}	
	/** !#en the device accelerometer reports values for each axis in units of g-force.
	!#zh è®¾å????????ä¼??????¨ä???????????ä¸ªè½´?????°æ?®ã?? */
	export class constructor {		
		/**
		whether enable accelerometer event
		@param isEnable isEnable 
		*/
		setAccelerometerEnabled(isEnable: boolean): void;		
		/**
		set accelerometer interval value
		@param interval interval 
		*/
		setAccelerometerInterval(interval: number): void;	
	}	
	/** undefined */
	export enum VerticalTextAlignment {		
		TOP = 0,
		CENTER = 0,
		BOTTOM = 0,	
	}	
	/** The base class of most of all the objects in Fireball. */
	export class Object {		
		/** !#en The name of the object.
		!#zh è¯¥å¯¹è±¡ç?????ç§°ã?? */
		name: string;		
		/** !#en
		Indicates whether the object is not yet destroyed. (It will not be available after being destroyed)<br>
		When an object's `destroy` is called, it is actually destroyed after the end of this frame.
		So `isValid` will return false from the next frame, while `isValid` in the current frame will still be true.
		If you want to determine whether the current frame has called `destroy`, use `cc.isValid(obj, true)`,
		but this is often caused by a particular logical requirements, which is not normally required.
		
		!#zh
		è¡¨ç¤ºè¯¥å¯¹è±¡æ?¯å?¦å?¯ç?¨ï??è¢? destroy ???å°?ä¸???¯ç?¨ï?????<br>
		å½?ä¸?ä¸ªå¯¹è±¡ç?? `destroy` è°???¨ä»¥???ï¼?ä¼???¨è??ä¸?å¸§ç??????????????æ­????æ¯???????æ­¤ä??ä¸?ä¸?å¸§å??å§? `isValid` å°±ä??è¿???? falseï¼????å½????å¸§å?? `isValid` ä»???¶ä????? true???å¦????å¸??????¤æ?­å?????å¸§æ?¯å?¦è????¨è?? `destroy`ï¼?è¯·ä½¿??? `cc.isValid(obj, true)`ï¼?ä¸?è¿?è¿?å¾?å¾???¯ç?¹æ?????ä¸???¡é??æ±?å¼?èµ·ç??ï¼????å¸¸æ????µä??ä¸????è¦?è¿???·ã?? */
		isValid: boolean;		
		/**
		!#en
		Destroy this Object, and release all its own references to other objects.<br/>
		Actual object destruction will delayed until before rendering.
		From the next frame, this object is not usable anymore.
		You can use `cc.isValid(obj)` to check whether the object is destroyed before accessing it.
		!#zh
		???æ¯?è¯¥å¯¹è±¡ï??å¹¶é????¾æ?????å®?å¯¹å?¶å??å¯¹è±¡???å¼???¨ã??<br/>
		å®???????æ¯????ä½?ä¼?å»¶è????°å?????å¸§æ¸²????????§è?????ä»?ä¸?ä¸?å¸§å??å§?ï¼?è¯¥å¯¹è±¡å??ä¸??????¯ç?¨ã??
		??¨å?¯ä»¥??¨è®¿??®å¯¹è±¡ä?????ä½¿ç?? `cc.isValid(obj)` ??¥æ????¥å¯¹è±¡æ?¯å?¦å·²è¢«é??æ¯????
		
		@example 
		```js
		obj.destroy();
		``` 
		*/
		destroy(): boolean;	
	}	
	/** Bit mask that controls object states. */
	export enum Flags {		
		DontSave = 0,
		EditorOnly = 0,
		HideInHierarchy = 0,	
	}	
	/** System variables */
	export class sys {		
		/** English language code */
		static LANGUAGE_ENGLISH: string;		
		/** Chinese language code */
		static LANGUAGE_CHINESE: string;		
		/** French language code */
		static LANGUAGE_FRENCH: string;		
		/** Italian language code */
		static LANGUAGE_ITALIAN: string;		
		/** German language code */
		static LANGUAGE_GERMAN: string;		
		/** Spanish language code */
		static LANGUAGE_SPANISH: string;		
		/** Spanish language code */
		static LANGUAGE_DUTCH: string;		
		/** Russian language code */
		static LANGUAGE_RUSSIAN: string;		
		/** Korean language code */
		static LANGUAGE_KOREAN: string;		
		/** Japanese language code */
		static LANGUAGE_JAPANESE: string;		
		/** Hungarian language code */
		static LANGUAGE_HUNGARIAN: string;		
		/** Portuguese language code */
		static LANGUAGE_PORTUGUESE: string;		
		/** Arabic language code */
		static LANGUAGE_ARABIC: string;		
		/** Norwegian language code */
		static LANGUAGE_NORWEGIAN: string;		
		/** Polish language code */
		static LANGUAGE_POLISH: string;		
		/** Turkish language code */
		static LANGUAGE_TURKISH: string;		
		/** Ukrainian language code */
		static LANGUAGE_UKRAINIAN: string;		
		/** Romanian language code */
		static LANGUAGE_ROMANIAN: string;		
		/** Bulgarian language code */
		static LANGUAGE_BULGARIAN: string;		
		/** Unknown language code */
		static LANGUAGE_UNKNOWN: string;		
		static OS_IOS: string;		
		static OS_ANDROID: string;		
		static OS_WINDOWS: string;		
		static OS_MARMALADE: string;		
		static OS_LINUX: string;		
		static OS_BADA: string;		
		static OS_BLACKBERRY: string;		
		static OS_OSX: string;		
		static OS_WP8: string;		
		static OS_WINRT: string;		
		static OS_UNKNOWN: string;		
		static UNKNOWN: number;		
		static WIN32: number;		
		static LINUX: number;		
		static MACOS: number;		
		static ANDROID: number;		
		static IPHONE: number;		
		static IPAD: number;		
		static BLACKBERRY: number;		
		static NACL: number;		
		static EMSCRIPTEN: number;		
		static TIZEN: number;		
		static WINRT: number;		
		static WP8: number;		
		static MOBILE_BROWSER: number;		
		static DESKTOP_BROWSER: number;		
		/** Indicates whether executes in editor's window process (Electron's renderer context) */
		static EDITOR_PAGE: number;		
		/** Indicates whether executes in editor's main process (Electron's browser context) */
		static EDITOR_CORE: number;		
		static WECHAT_GAME: number;		
		static QQ_PLAY: number;		
		static FB_PLAYABLE_ADS: number;		
		static BAIDU_GAME: number;		
		static VIVO_GAME: number;		
		static OPPO_GAME: number;		
		static HUAWEI_GAME: number;		
		static XIAOMI_GAME: number;		
		static JKW_GAME: number;		
		static ALIPAY_GAME: number;		
		static WECHAT_GAME_SUB: number;		
		static BAIDU_GAME_SUB: number;		
		static QTT_GAME: number;		
		static BYTEDANCE_GAME: number;		
		static BYTEDANCE_GAME_SUB: number;		
		static LINKSURE: number;		
		/** BROWSER_TYPE_WECHAT */
		static BROWSER_TYPE_WECHAT: string;		
		static BROWSER_TYPE_ANDROID: string;		
		static BROWSER_TYPE_IE: string;		
		static BROWSER_TYPE_EDGE: string;		
		static BROWSER_TYPE_QQ: string;		
		static BROWSER_TYPE_MOBILE_QQ: string;		
		static BROWSER_TYPE_UC: string;		
		/** uc third party integration. */
		static BROWSER_TYPE_UCBS: string;		
		static BROWSER_TYPE_360: string;		
		static BROWSER_TYPE_BAIDU_APP: string;		
		static BROWSER_TYPE_BAIDU: string;		
		static BROWSER_TYPE_MAXTHON: string;		
		static BROWSER_TYPE_OPERA: string;		
		static BROWSER_TYPE_OUPENG: string;		
		static BROWSER_TYPE_MIUI: string;		
		static BROWSER_TYPE_FIREFOX: string;		
		static BROWSER_TYPE_SAFARI: string;		
		static BROWSER_TYPE_CHROME: string;		
		static BROWSER_TYPE_LIEBAO: string;		
		static BROWSER_TYPE_QZONE: string;		
		static BROWSER_TYPE_SOUGOU: string;		
		static BROWSER_TYPE_HUAWEI: string;		
		static BROWSER_TYPE_UNKNOWN: string;		
		/** Is native ? This is set to be true in jsb auto. */
		static isNative: boolean;		
		/** Is web browser ? */
		static isBrowser: boolean;		
		/**
		Is webgl extension support?
		@param name name 
		*/
		static glExtension(name: any): boolean;		
		/**
		Get max joint matrix size for skinned mesh renderer. 
		*/
		static getMaxJointMatrixSize(): void;		
		/**
		!#en
		Returns the safe area of the screen (in design resolution). If the screen is not notched, the visibleRect will be returned by default.
		Currently supports Android, iOS and WeChat Mini Game platform.
		!#zh
		è¿?????????ºå??å¹?å®???¨å?ºå??ï¼?è®¾è®¡???è¾¨ç??ä¸ºå??ä½?ï¼?ï¼?å¦????ä¸???¯å??å½¢å??å°?é»?è®¤è????? visibleRect?????®å????¯æ??å®???????iOS ??????å¹³å?°å??å¾®ä¿¡å°?æ¸¸æ??å¹³å?°ã?? 
		*/
		static getSafeAreaRect(): Rect;		
		/** Indicate whether system is mobile system */
		static isMobile: boolean;		
		/** Indicate the running platform */
		static platform: number;		
		/** Get current language iso 639-1 code.
		Examples of valid language codes include "zh-tw", "en", "en-us", "fr", "fr-fr", "es-es", etc.
		The actual value totally depends on results provided by destination platform. */
		static languageCode: string;		
		/** Indicate the current language of the running system */
		static language: string;		
		/** Indicate the running os name */
		static os: string;		
		/** Indicate the running os version */
		static osVersion: string;		
		/** Indicate the running os main version */
		static osMainVersion: number;		
		/** Indicate the running browser type */
		static browserType: string|void;		
		/** Indicate the running browser version */
		static browserVersion: string|void;		
		/** Indicate the real pixel resolution of the whole game window */
		static windowPixelResolution: Size;		
		/** cc.sys.localStorage is a local storage component. */
		static localStorage: any;		
		/** The capabilities of the current platform */
		static capabilities: any;		
		/**
		!#en
		Get the network type of current device, return cc.sys.NetworkType.LAN if failure.
		!#zh
		??·å??å½????è®¾å?????ç½?ç»?ç±»å??, å¦????ç½?ç»?ç±»å?????æ³???·å??ï¼?é»?è®¤å??è¿???? cc.sys.NetworkType.LAN 
		*/
		static getNetworkType(): sys.NetworkType;		
		/**
		!#en
		Get the battery level of current device, return 1.0 if failure.
		!#zh
		??·å??å½????è®¾å???????µæ????µé??ï¼?å¦??????µé?????æ³???·å??ï¼?é»?è®¤å??è¿???? 1 
		*/
		static getBatteryLevel(): number;		
		/**
		Forces the garbage collection, only available in JSB 
		*/
		static garbageCollect(): void;		
		/**
		Restart the JS VM, only available in JSB 
		*/
		static restartVM(): void;		
		/**
		Check whether an object is valid,
		In web engine, it will return true if the object exist
		In native engine, it will return true if the JS object and the correspond native object are both valid
		@param obj obj 
		*/
		static isObjectValid(obj: any): boolean;		
		/**
		Dump system informations 
		*/
		static dump(): void;		
		/**
		Open a url in browser
		@param url url 
		*/
		static openURL(url: string): void;		
		/**
		Get the number of milliseconds elapsed since 1 January 1970 00:00:00 UTC. 
		*/
		static now(): number;	
	}	
	/** The fullscreen API provides an easy way for web content to be presented using the user's entire screen.
	It's invalid on safari, QQbrowser and android browser */
	export class screen {		
		/**
		initialize 
		*/
		init(): void;		
		/**
		return true if it's full now. 
		*/
		fullScreen(): boolean;		
		/**
		change the screen to full mode.
		@param element element
		@param onFullScreenChange onFullScreenChange
		@param onFullScreenError onFullScreenError 
		*/
		requestFullScreen(element: Element, onFullScreenChange: Function, onFullScreenError: Function): void;		
		/**
		exit the full mode. 
		*/
		exitFullScreen(): boolean;		
		/**
		Automatically request full screen with a touch/click event
		@param element element
		@param onFullScreenChange onFullScreenChange 
		*/
		autoFullScreen(element: Element, onFullScreenChange: Function): void;	
	}	
	/** cc.view is the singleton object which represents the game window.<br/>
	It's main task include: <br/>
	 - Apply the design resolution policy<br/>
	 - Provide interaction with the window, like resize event on web, retina display support, etc...<br/>
	 - Manage the game view port which can be different with the window<br/>
	 - Manage the content scale and translation<br/>
	<br/>
	Since the cc.view is a singleton, you don't need to call any constructor or create functions,<br/>
	the standard way to use it is by calling:<br/>
	 - cc.view.methodName(); <br/> */
	export class View extends EventTarget {		
		/**
		!#en
		Sets view's target-densitydpi for android mobile browser. it can be set to:           <br/>
		  1. cc.macro.DENSITYDPI_DEVICE, value is "device-dpi"                                      <br/>
		  2. cc.macro.DENSITYDPI_HIGH, value is "high-dpi"  (default value)                         <br/>
		  3. cc.macro.DENSITYDPI_MEDIUM, value is "medium-dpi" (browser's default value)            <br/>
		  4. cc.macro.DENSITYDPI_LOW, value is "low-dpi"                                            <br/>
		  5. Custom value, e.g: "480"                                                         <br/>
		!#zh è®¾ç½®??®æ?????å®¹ç??æ¯???±å¯¸???ç´???¹å??åº¦ã??
		@param densityDPI densityDPI 
		*/
		setTargetDensityDPI(densityDPI: string): void;		
		/**
		!#en
		Returns the current target-densitydpi value of cc.view.
		!#zh ??·å????®æ?????å®¹ç??æ¯???±å¯¸???ç´???¹å??åº¦ã?? 
		*/
		getTargetDensityDPI(): string;		
		/**
		!#en
		Sets whether resize canvas automatically when browser's size changed.<br/>
		Useful only on web.
		!#zh è®¾ç½®å½??????°æ??è§???¨ç??å°ºå¯¸??¹å????¶ï????¯å?¦è?ªå?¨è????? canvas å°ºå¯¸å¤§å?????
		ä»???? Web æ¨¡å??ä¸??????????
		@param enabled Whether enable automatic resize with browser's resize event 
		*/
		resizeWithBrowserSize(enabled: boolean): void;		
		/**
		!#en
		Sets the callback function for cc.view's resize action,<br/>
		this callback will be invoked before applying resolution policy, <br/>
		so you can do any additional modifications within the callback.<br/>
		Useful only on web.
		!#zh è®¾ç½® cc.view è°???´è??çª?å°ºå¯¸è¡?ä¸ºç?????è°???½æ?°ï??
		è¿?ä¸ªå??è°???½æ?°ä????¨å????¨é?????æ¨¡å??ä¹????è¢«è????¨ï??
		???æ­¤ä????¯ä»¥??¨è??ä¸ªå??è°???½æ?°å??æ·»å??ä»»æ??????????¹å??ï¼?
		ä»???? Web å¹³å?°ä???????????
		@param callback The callback function 
		*/
		setResizeCallback(callback: Function|void): void;		
		/**
		!#en
		Sets the orientation of the game, it can be landscape, portrait or auto.
		When set it to landscape or portrait, and screen w/h ratio doesn't fit,
		cc.view will automatically rotate the game canvas using CSS.
		Note that this function doesn't have any effect in native,
		in native, you need to set the application orientation in native project settings
		!#zh è®¾ç½®æ¸¸æ??å±?å¹???????ï¼?å®???½å????¯æ¨ª???ï¼?ç«?????????ªå?¨ã??
		å½?è®¾ç½®ä¸ºæ¨ª??????ç«????ï¼?å¹¶ä??å±?å¹????å®½é??æ¯?ä¾?ä¸???¹é????¶ï??
		cc.view ä¼???ªå?¨ç?? CSS ???è½¬æ¸¸?????ºæ?¯ç?? canvasï¼?
		è¿?ä¸ªæ?¹æ??ä¸?ä¼?å¯? native ??¨å??äº§ç??ä»»ä??å½±å??ï¼?å¯¹ä?? native ???è¨?ï¼?ä½????è¦???¨å????¨è®¾ç½®ä¸­???è®¾ç½®?????????
		@param orientation Possible values: cc.macro.ORIENTATION_LANDSCAPE | cc.macro.ORIENTATION_PORTRAIT | cc.macro.ORIENTATION_AUTO 
		*/
		setOrientation(orientation: number): void;		
		/**
		!#en
		Sets whether the engine modify the "viewport" meta in your web page.<br/>
		It's enabled by default, we strongly suggest you not to disable it.<br/>
		And even when it's enabled, you can still set your own "viewport" meta, it won't be overridden<br/>
		Only useful on web
		!#zh è®¾ç½®å¼??????¯å?¦è????? viewport meta ??¥é?????å±?å¹??????????
		é»?è®¤è®¾ç½®ä¸º??¯å?¨ï?????ä»¬å¼º???å»ºè®®ä½?ä¸?è¦?å°?å®?è®¾ç½®ä¸ºå?³é?­ã??
		??³ä½¿å½?å®???¯å?¨æ?¶ï??ä½?ä»???¶è?½å??è®¾ç½®ä½???? viewport metaï¼?å®?ä¸?ä¼?è¢«è????????
		ä»???? Web æ¨¡å??ä¸???????
		@param enabled Enable automatic modification to "viewport" meta 
		*/
		adjustViewportMeta(enabled: boolean): void;		
		/**
		!#en
		Retina support is enabled by default for Apple device but disabled for other devices,<br/>
		it takes effect only when you called setDesignResolutionPolicy<br/>
		Only useful on web
		!#zh å¯¹ä?? Apple è¿?ç§???¯æ?? Retina ??¾ç¤º???è®¾å??ä¸?é»?è®¤è??è¡?ä¼?????????¶ä??ç±»å??è®¾å??é»?è®¤ä??è¿?è¡?ä¼????ï¼?
		å®?ä»?ä¼???¨ä??è°???? setDesignResolutionPolicy ??¹æ????¶æ??å½±å?????
		ä»???? Web æ¨¡å??ä¸??????????
		@param enabled Enable or disable retina display 
		*/
		enableRetina(enabled: boolean): void;		
		/**
		!#en
		Check whether retina display is enabled.<br/>
		Only useful on web
		!#zh æ£???¥æ?¯å?¦å¯¹ Retina ??¾ç¤ºè®¾å??è¿?è¡?ä¼???????
		ä»???? Web æ¨¡å??ä¸?????????? 
		*/
		isRetinaEnabled(): boolean;		
		/**
		!#en Whether to Enable on anti-alias
		!#zh ??§å?¶æ????¯é½¿??¯å?¦å?????
		@param enabled Enable or not anti-alias 
		*/
		enableAntiAlias(enabled: boolean): void;		
		/**
		!#en Returns whether the current enable on anti-alias
		!#zh è¿????å½??????¯å?¦æ????¯é½¿ 
		*/
		isAntiAliasEnabled(): boolean;		
		/**
		!#en
		If enabled, the application will try automatically to enter full screen mode on mobile devices<br/>
		You can pass true as parameter to enable it and disable it by passing false.<br/>
		Only useful on web
		!#zh ??¯å?¨æ?¶ï??ç§»å?¨ç«¯æ¸¸æ??ä¼???¨ç§»??¨ç«¯??ªå?¨å??è¯?è¿???¥å?¨å??æ¨¡å?????
		ä½???½å??ä¼???? true ä¸ºå????°å?»å?¯å?¨å??ï¼???? false ?????°æ?¥å?³é?­å?????
		@param enabled Enable or disable auto full screen on mobile devices 
		*/
		enableAutoFullScreen(enabled: boolean): void;		
		/**
		!#en
		Check whether auto full screen is enabled.<br/>
		Only useful on web
		!#zh æ£???¥è?ªå?¨è????¥å?¨å??æ¨¡å????¯å?¦å?¯å?¨ã??
		ä»???? Web æ¨¡å??ä¸?????????? 
		*/
		isAutoFullScreenEnabled(): boolean;		
		/**
		!#en
		Returns the canvas size of the view.<br/>
		On native platforms, it returns the screen size since the view is a fullscreen view.<br/>
		On web, it returns the size of the canvas element.
		!#zh è¿????è§???¾ä¸­ canvas ???å°ºå¯¸???
		??? native å¹³å?°ä??ï¼?å®?è¿??????¨å??è§???¾ä??å±?å¹????å°ºå¯¸???
		??? Web å¹³å?°ä??ï¼?å®?è¿???? canvas ???ç´?å°ºå¯¸??? 
		*/
		getCanvasSize(): Size;		
		/**
		!#en
		Returns the frame size of the view.<br/>
		On native platforms, it returns the screen size since the view is a fullscreen view.<br/>
		On web, it returns the size of the canvas's outer DOM element.
		!#zh è¿????è§???¾ä¸­è¾¹æ??å°ºå¯¸???
		??? native å¹³å?°ä??ï¼?å®?è¿??????¨å??è§???¾ä??å±?å¹????å°ºå¯¸???
		??? web å¹³å?°ä??ï¼?å®?è¿???? canvas ???ç´????å¤?å±? DOM ???ç´?å°ºå¯¸??? 
		*/
		getFrameSize(): Size;		
		/**
		!#en
		On native, it sets the frame size of view.<br/>
		On web, it sets the size of the canvas's outer DOM element.
		!#zh ??? native å¹³å?°ä??ï¼?è®¾ç½®è§???¾æ????¶å°ºå¯¸ã??
		??? web å¹³å?°ä??ï¼?è®¾ç½® canvas å¤?å±? DOM ???ç´?å°ºå¯¸???
		@param width width
		@param height height 
		*/
		setFrameSize(width: number, height: number): void;		
		/**
		!#en
		Returns the visible area size of the view port.
		!#zh è¿????è§???¾ç???????¯è????ºå??å°ºå¯¸??? 
		*/
		getVisibleSize(): Size;		
		/**
		!#en
		Returns the visible area size of the view port.
		!#zh è¿????è§???¾ç???????¯è????ºå?????ç´?å°ºå¯¸??? 
		*/
		getVisibleSizeInPixel(): Size;		
		/**
		!#en
		Returns the visible origin of the view port.
		!#zh è¿????è§???¾ç???????¯è????ºå???????¹ã?? 
		*/
		getVisibleOrigin(): Vec2;		
		/**
		!#en
		Returns the visible origin of the view port.
		!#zh è¿????è§???¾ç???????¯è????ºå?????ç´??????¹ã?? 
		*/
		getVisibleOriginInPixel(): Vec2;		
		/**
		!#en
		Returns the current resolution policy
		!#zh è¿????å½???????è¾¨ç????¹æ?? 
		*/
		getResolutionPolicy(): ResolutionPolicy;		
		/**
		!#en
		Sets the current resolution policy
		!#zh è®¾ç½®å½???????è¾¨ç??æ¨¡å??
		@param resolutionPolicy resolutionPolicy 
		*/
		setResolutionPolicy(resolutionPolicy: ResolutionPolicy|number): void;		
		/**
		!#en
		Sets the resolution policy with designed view size in points.<br/>
		The resolution policy include: <br/>
		[1] ResolutionExactFit       Fill screen by stretch-to-fit: if the design resolution ratio of width to height is different from the screen resolution ratio, your game view will be stretched.<br/>
		[2] ResolutionNoBorder       Full screen without black border: if the design resolution ratio of width to height is different from the screen resolution ratio, two areas of your game view will be cut.<br/>
		[3] ResolutionShowAll        Full screen with black border: if the design resolution ratio of width to height is different from the screen resolution ratio, two black borders will be shown.<br/>
		[4] ResolutionFixedHeight    Scale the content's height to screen's height and proportionally scale its width<br/>
		[5] ResolutionFixedWidth     Scale the content's width to screen's width and proportionally scale its height<br/>
		[cc.ResolutionPolicy]        [Web only feature] Custom resolution policy, constructed by cc.ResolutionPolicy<br/>
		!#zh ???è¿?è®¾ç½®è®¾è®¡???è¾¨ç???????¹é??æ¨¡å????¥è??è¡?æ¸¸æ????»é?¢ç??å±?å¹??????????
		@param width Design resolution width.
		@param height Design resolution height.
		@param resolutionPolicy The resolution policy desired 
		*/
		setDesignResolutionSize(width: number, height: number, resolutionPolicy: ResolutionPolicy|number): void;		
		/**
		!#en
		Returns the designed size for the view.
		Default resolution size is the same as 'getFrameSize'.
		!#zh è¿????è§???¾ç??è®¾è®¡???è¾¨ç?????
		é»?è®¤ä?????è¾¨ç??å°ºå¯¸??? `getFrameSize` ??¹æ????¸å?? 
		*/
		getDesignResolutionSize(): Size;		
		/**
		!#en
		Sets the container to desired pixel resolution and fit the game content to it.
		This function is very useful for adaptation in mobile browsers.
		In some HD android devices, the resolution is very high, but its browser performance may not be very good.
		In this case, enabling retina display is very costy and not suggested, and if retina is disabled, the image may be blurry.
		But this API can be helpful to set a desired pixel resolution which is in between.
		This API will do the following:
		    1. Set viewport's width to the desired width in pixel
		    2. Set body width to the exact pixel resolution
		    3. The resolution policy will be reset with designed view size in points.
		!#zh è®¾ç½®å®¹å?¨ï??containerï¼????è¦???????ç´????è¾¨ç??å¹¶ä??????????¸å?????è¾¨ç?????æ¸¸æ?????å®¹ã??
		@param width Design resolution width.
		@param height Design resolution height.
		@param resolutionPolicy The resolution policy desired 
		*/
		setRealPixelResolution(width: number, height: number, resolutionPolicy: ResolutionPolicy|number): void;		
		/**
		!#en
		Sets view port rectangle with points.
		!#zh ??¨è®¾è®¡å??è¾¨ç??ä¸??????¹å°ºå¯¸æ?¥è®¾ç½®è??çª????
		@param x x
		@param y y
		@param w width
		@param h height 
		*/
		setViewportInPoints(x: number, y: number, w: number, h: number): void;		
		/**
		!#en
		Sets Scissor rectangle with points.
		!#zh ??¨è®¾è®¡å??è¾¨ç??ä¸??????¹ç??å°ºå¯¸??¥è®¾ç½? scissor ??ªè????ºå?????
		@param x x
		@param y y
		@param w w
		@param h h 
		*/
		setScissorInPoints(x: number, y: number, w: number, h: number): void;		
		/**
		!#en
		Returns whether GL_SCISSOR_TEST is enable
		!#zh æ£???? scissor ??¯å?¦ç???????? 
		*/
		isScissorEnabled(): boolean;		
		/**
		!#en
		Returns the current scissor rectangle
		!#zh è¿????å½??????? scissor ??ªè????ºå????? 
		*/
		getScissorRect(): Rect;		
		/**
		!#en
		Returns the view port rectangle.
		!#zh è¿????è§?çª???ªè????ºå????? 
		*/
		getViewportRect(): Rect;		
		/**
		!#en
		Returns scale factor of the horizontal direction (X axis).
		!#zh è¿????æ¨ªè½´???ç¼©æ?¾æ??ï¼?è¿?ä¸ªç¼©??¾æ????¯å????»å?????ç´????è¾¨ç????¾å?°è®¾è®¡å??è¾¨ç?????æ¯?ä¾???? 
		*/
		getScaleX(): number;		
		/**
		!#en
		Returns scale factor of the vertical direction (Y axis).
		!#zh è¿????çºµè½´???ç¼©æ?¾æ??ï¼?è¿?ä¸ªç¼©??¾æ????¯å????»å?????ç´????è¾¨ç??ç¼©æ?¾å?°è®¾è®¡å??è¾¨ç?????æ¯?ä¾???? 
		*/
		getScaleY(): number;		
		/**
		!#en
		Returns device pixel ratio for retina display.
		!#zh è¿????è®¾å?????æµ?è§???¨å??ç´?æ¯?ä¾???? 
		*/
		getDevicePixelRatio(): number;		
		/**
		!#en
		Returns the real location in view for a translation based on a related position
		!#zh å°?å±?å¹???????è½¬æ?¢ä¸ºæ¸¸æ??è§???¾ä??????????????
		@param tx The X axis translation
		@param ty The Y axis translation
		@param relatedPos The related position object including "left", "top", "width", "height" informations 
		*/
		convertToLocationInView(tx: number, ty: number, relatedPos: any): Vec2;	
	}	
	/** <p>cc.game.containerStrategy class is the root strategy class of container's scale strategy,
	it controls the behavior of how to scale the cc.game.container and cc.game.canvas object</p> */
	export class ContainerStrategy {		
		/**
		!#en
		Manipulation before appling the strategy
		!#zh ??¨å????¨ç????¥ä???????????ä½?
		@param view The target view 
		*/
		preApply(view: View): void;		
		/**
		!#en
		Function to apply this strategy
		!#zh ç­???¥å????¨æ?¹æ??
		@param view view
		@param designedResolution designedResolution 
		*/
		apply(view: View, designedResolution: Size): void;		
		/**
		!#en
		Manipulation after applying the strategy
		!#zh ç­???¥è????¨ä???????????ä½?
		@param view The target view 
		*/
		postApply(view: View): void;	
	}	
	/** <p>cc.ContentStrategy class is the root strategy class of content's scale strategy,
	it controls the behavior of how to scale the scene and setup the viewport for the game</p> */
	export class ContentStrategy {		
		/**
		!#en
		Manipulation before applying the strategy
		!#zh ç­???¥å????¨å????????ä½?
		@param view The target view 
		*/
		preApply(view: View): void;		
		/**
		!#en Function to apply this strategy
		The return value is {scale: [scaleX, scaleY], viewport: {cc.Rect}},
		The target view can then apply these value to itself, it's preferred not to modify directly its private variables
		!#zh è°???¨ç????¥æ?¹æ??
		@param view view
		@param designedResolution designedResolution 
		*/
		apply(view: View, designedResolution: Size): any;		
		/**
		!#en
		Manipulation after applying the strategy
		!#zh ç­???¥è????¨ä???????????ä½?
		@param view The target view 
		*/
		postApply(view: View): void;	
	}	
	/** undefined */
	export class EqualToFrame extends ContainerStrategy {	
	}	
	/** undefined */
	export class ProportionalToFrame extends ContainerStrategy {	
	}	
	/** undefined */
	export class EqualToWindow extends EqualToFrame {	
	}	
	/** undefined */
	export class ProportionalToWindow extends ProportionalToFrame {	
	}	
	/** undefined */
	export class OriginalContainer extends ContainerStrategy {	
	}	
	/** <p>cc.ResolutionPolicy class is the root strategy class of scale strategy,
	its main task is to maintain the compatibility with Cocos2d-x</p> */
	export class ResolutionPolicy {		
		/**
		
		@param containerStg The container strategy
		@param contentStg The content strategy 
		*/
		constructor(containerStg: ContainerStrategy, contentStg: ContentStrategy);		
		/**
		!#en Manipulation before applying the resolution policy
		!#zh ç­???¥å????¨å????????ä½?
		@param view The target view 
		*/
		preApply(view: View): void;		
		/**
		!#en Function to apply this resolution policy
		The return value is {scale: [scaleX, scaleY], viewport: {cc.Rect}},
		The target view can then apply these value to itself, it's preferred not to modify directly its private variables
		!#zh è°???¨ç????¥æ?¹æ??
		@param view The target view
		@param designedResolution The user defined design resolution 
		*/
		apply(view: View, designedResolution: Size): any;		
		/**
		!#en Manipulation after appyling the strategy
		!#zh ç­???¥å????¨ä???????????ä½?
		@param view The target view 
		*/
		postApply(view: View): void;		
		/**
		!#en
		Setup the container's scale strategy
		!#zh è®¾ç½®å®¹å?¨ç????????ç­????
		@param containerStg containerStg 
		*/
		setContainerStrategy(containerStg: ContainerStrategy): void;		
		/**
		!#en
		Setup the content's scale strategy
		!#zh è®¾ç½®???å®¹ç????????ç­????
		@param contentStg contentStg 
		*/
		setContentStrategy(contentStg: ContentStrategy): void;		
		/** The entire application is visible in the specified area without trying to preserve the original aspect ratio.<br/>
		Distortion can occur, and the application may appear stretched or compressed. */
		static EXACT_FIT: number;		
		/** The entire application fills the specified area, without distortion but possibly with some cropping,<br/>
		while maintaining the original aspect ratio of the application. */
		static NO_BORDER: number;		
		/** The entire application is visible in the specified area without distortion while maintaining the original<br/>
		aspect ratio of the application. Borders can appear on two sides of the application. */
		static SHOW_ALL: number;		
		/** The application takes the height of the design resolution size and modifies the width of the internal<br/>
		canvas so that it fits the aspect ratio of the device<br/>
		no distortion will occur however you must make sure your application works on different<br/>
		aspect ratios */
		static FIXED_HEIGHT: number;		
		/** The application takes the width of the design resolution size and modifies the height of the internal<br/>
		canvas so that it fits the aspect ratio of the device<br/>
		no distortion will occur however you must make sure your application works on different<br/>
		aspect ratios */
		static FIXED_WIDTH: number;		
		/** Unknow policy */
		static UNKNOWN: number;	
	}	
	/** cc.visibleRect is a singleton object which defines the actual visible rect of the current view,
	it should represent the same rect as cc.view.getViewportRect() */
	export class visibleRect {		
		/**
		initialize
		@param visibleRect visibleRect 
		*/
		static init(visibleRect: Rect): void;		
		/** Top left coordinate of the screen related to the game scene. */
		static topLeft: Vec2;		
		/** Top right coordinate of the screen related to the game scene. */
		static topRight: Vec2;		
		/** Top center coordinate of the screen related to the game scene. */
		static top: Vec2;		
		/** Bottom left coordinate of the screen related to the game scene. */
		static bottomLeft: Vec2;		
		/** Bottom right coordinate of the screen related to the game scene. */
		static bottomRight: Vec2;		
		/** Bottom center coordinate of the screen related to the game scene. */
		static bottom: Vec2;		
		/** Center coordinate of the screen related to the game scene. */
		static center: Vec2;		
		/** Left center coordinate of the screen related to the game scene. */
		static left: Vec2;		
		/** Right center coordinate of the screen related to the game scene. */
		static right: Vec2;		
		/** Width of the screen. */
		static width: number;		
		/** Height of the screen. */
		static height: number;	
	}	
	/** !#en The callbacks invoker to handle and invoke callbacks by key.
	!#zh CallbacksInvoker ??¨æ?¥æ?¹æ?? Key ç®¡ç??å¹¶è????¨å??è°???¹æ????? */
	export class CallbacksInvoker {		
		/**
		!#zh
		 æ£???¥æ??å®?äº?ä»¶æ?¯å?¦å·²æ³¨å?????è°????
		!#en
		 Check if the specified key has any registered callback. If a callback is also specified,
		 it will only return true if the callback is registered.
		@param key key
		@param callback callback
		@param target target 
		*/
		hasEventListener(key: string, callback?: Function, target?: any): boolean;		
		/**
		!#zh
		ç§»é?¤å?¨ç?¹å??äº?ä»¶ç±»???ä¸­æ³¨???????????????è°??????¨æ??ä¸ªç?®æ??ä¸­æ³¨???????????????è°????
		
		!#en
		Removes all callbacks registered in a certain event type or all callbacks registered with a certain target
		@param keyOrTarget The event key to be removed or the target to be removed 
		*/
		removeAll(keyOrTarget: string|any): void;		
		/**
		!#zh
		?????¤ä?????ä¸????ç±»å??ï¼????è°?ï¼???®æ??æ³¨å????????è°????
		@param key key
		@param callback callback
		@param target target 
		*/
		off(key: string, callback: Function, target?: any): void;		
		/**
		!#en
		Trigger an event directly with the event name and necessary arguments.
		!#zh
		???è¿?äº?ä»¶å??????????ªå??ä¹?äº?ä»?
		@param key event type
		@param arg1 First argument
		@param arg2 Second argument
		@param arg3 Third argument
		@param arg4 Fourth argument
		@param arg5 Fifth argument
		
		@example 
		```js
		eventTarget.emit('fire', event);
		eventTarget.emit('fire', message, emitter);
		``` 
		*/
		emit(key: string, arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any): void;	
	}	
	/** !#en Contains information collected during deserialization
	!#zh ?????«å??åº?????????¶ç??ä¸?äº?ä¿¡æ?? */
	export class Details {		
		/** the obj list whose field needs to load asset by uuid */
		uuidObjList: any[];		
		/** the corresponding field name which referenced to the asset */
		uuidPropList: (String|Number)[];		
		/** list of the depends assets' uuid */
		uuidList: string[];		
		/**
		
		@param data data 
		*/
		init(data: any): void;		
		reset(): void;		
		/**
		
		@param obj obj
		@param propName propName
		@param uuid uuid 
		*/
		push(obj: any, propName: string, uuid: string): void;		
		/** list of the depends assets' uuid */
		uuidList: string[];		
		/** the obj list whose field needs to load asset by uuid */
		uuidObjList: any[];		
		/** the corresponding field name which referenced to the asset */
		uuidPropList: string[];		
		reset(): void;		
		/**
		
		@param obj obj
		@param propName propName
		@param uuid uuid 
		*/
		push(obj: any, propName: string, uuid: string): void;	
	}	
	/** undefined */
	export class WorldManifold {		
		/** !#en
		world contact point (point of intersection)
		!#zh
		ç¢°æ????¹é????? */
		points: Vec2[];		
		/** !#en
		world vector pointing from A to B
		!#zh
		ä¸??????????ç³»ä????? A ?????? B ????????? */
		normal: Vec2;	
	}	
	/** !#en
	A manifold point is a contact point belonging to a contact manifold.
	It holds details related to the geometry and dynamics of the contact points.
	Note: the impulses are used for internal caching and may not
	provide reliable contact forces, especially for high speed collisions.
	!#zh
	ManifoldPoint ??¯æ?¥è§¦ä¿¡æ?¯ä¸­?????¥è§¦??¹ä¿¡??¯ã??å®???¥æ????³ä?????ä½??????¥è§¦??¹ç??è¯¦ç??ä¿¡æ?¯ã??
	æ³¨æ??ï¼?ä¿¡æ?¯ä¸­?????²é????¨ä??ç³»ç???????¨ç??å­?ï¼????ä¾??????¥è§¦?????¯è?½ä????¯å?????ç¡®ï????¹å?«æ?¯é?????ç§»å?¨ä¸­???ç¢°æ??ä¿¡æ?¯ã?? */
	export class ManifoldPoint {		
		/** !#en
		The local point usage depends on the manifold type:
		-e_circles: the local center of circleB
		-e_faceA: the local center of circleB or the clip point of polygonB
		-e_faceB: the clip point of polygonA
		!#zh
		??¬å?°å???????¹ç????¨é???????³ä?? manifold ???ç±»å??
		- e_circles: circleB ?????¬å?°ä¸­å¿????
		- e_faceA: circleB ?????¬å?°ä¸­å¿???? ????????? polygonB ?????ªå?????
		- e_faceB: polygonB ?????ªå????? */
		localPoint: Vec2;		
		/** !#en
		Normal impulse.
		!#zh
		æ³?çº¿å?²é????? */
		normalImpulse: number;		
		/** !#en
		Tangent impulse.
		!#zh
		???çº¿å?²é????? */
		tangentImpulse: number;	
	}	
	/** undefined */
	export class Manifold {		
		/** !#en
		Manifold type :  0: e_circles, 1: e_faceA, 2: e_faceB
		!#zh
		Manifold ç±»å?? :  0: e_circles, 1: e_faceA, 2: e_faceB */
		type: number;		
		/** !#en
		The local point usage depends on the manifold type:
		-e_circles: the local center of circleA
		-e_faceA: the center of faceA
		-e_faceB: the center of faceB
		!#zh
		??¨é???????³ä?? manifold ç±»å??
		-e_circles: circleA ?????¬å?°ä¸­å¿????
		-e_faceA: faceA ?????¬å?°ä¸­å¿????
		-e_faceB: faceB ?????¬å?°ä¸­å¿???? */
		localPoint: Vec2;		
		/** !#en
		-e_circles: not used
		-e_faceA: the normal on polygonA
		-e_faceB: the normal on polygonB
		!#zh
		-e_circles: æ²¡è¢«ä½¿ç?¨å??
		-e_faceA: polygonA ???æ³???????
		-e_faceB: polygonB ???æ³??????? */
		localNormal: Vec2;		
		/** !#en
		the points of contact.
		!#zh
		??¥è§¦??¹ä¿¡??¯ã?? */
		points: ManifoldPoint[];	
	}	
	/** !#en
	Contact impulses for reporting.
	!#zh
	??¨ä??è¿????ç»????è°??????¥è§¦??²é????? */
	export class PhysicsImpulse {		
		/** !#en
		Normal impulses.
		!#zh
		æ³?çº¿æ?¹å???????²é?? */
		normalImpulses: any;		
		/** !#en
		Tangent impulses
		!#zh
		???çº¿æ?¹å???????²é?? */
		tangentImpulses: any;	
	}	
	/** !#en
	PhysicsContact will be generated during begin and end collision as a parameter of the collision callback.
	Note that contacts will be reused for speed up cpu time, so do not cache anything in the contact.
	!#zh
	??©ç????¥è§¦ä¼???¨å??å§????ç»????ç¢°æ??ä¹???´ç?????ï¼?å¹¶ä??ä¸ºå????°ä????¥å?°ç¢°??????è°???½æ?°ä¸­???
	æ³¨æ??ï¼?ä¼???¥ç????©ç????¥è§¦ä¼?è¢«ç³»ç»?è¿?è¡??????¨ï?????ä»¥ä??è¦???¨ä½¿??¨ä¸­ç¼?å­??????¢ç??ä»»ä??ä¿¡æ?¯ã?? */
	export class PhysicsContact {		
		/**
		!#en
		Get the world manifold.
		!#zh
		??·å??ä¸??????????ç³»ä?????ç¢°æ??ä¿¡æ?¯ã?? 
		*/
		getWorldManifold(): WorldManifold;		
		/**
		!#en
		Get the manifold.
		!#zh
		??·å????¬å?°ï??å±???¨ï????????ç³»ä?????ç¢°æ??ä¿¡æ?¯ã?? 
		*/
		getManifold(): Manifold;		
		/**
		!#en
		Get the impulses.
		Note: PhysicsImpulse can only used in onPostSolve callback.
		!#zh
		??·å????²é??ä¿¡æ??
		æ³¨æ??ï¼?è¿?ä¸ªä¿¡??¯å?ªæ????? onPostSolve ???è°?ä¸­æ????½è?·å????? 
		*/
		getImpulse(): PhysicsImpulse;		
		/** !#en
		One of the collider that collided
		!#zh
		??????ç¢°æ?????ç¢°æ??ä½?ä¹?ä¸? */
		colliderA: Collider;		
		/** !#en
		One of the collider that collided
		!#zh
		??????ç¢°æ?????ç¢°æ??ä½?ä¹?ä¸? */
		colliderB: Collider;		
		/** !#en
		If set disabled to true, the contact will be ignored until contact end.
		If you just want to disabled contact for current time step or sub-step, please use disabledOnce.
		!#zh
		å¦???? disabled è¢«è®¾ç½®ä¸º trueï¼????ä¹???´å?°æ?¥è§¦ç»????æ­¤æ?¥è§¦??½å??è¢«å¿½??¥ã??
		å¦??????ªæ?¯å???????¨å???????¶é?´æ­¥???å­?æ­¥ä¸­å¿½ç?¥æ­¤??¥è§¦ï¼?è¯·ä½¿??? disabledOnce ??? */
		disabled: boolean;		
		/** !#en
		Disabled contact for current time step or sub-step.
		!#zh
		??¨å???????¶é?´æ­¥???å­?æ­¥ä¸­å¿½ç?¥æ­¤??¥è§¦??? */
		disabledOnce: boolean;		
		/**
		!#en
		Is this contact touching?
		!#zh
		è¿????ç¢°æ??ä½???¯å?¦å·²ç»???¥è§¦??°ã?? 
		*/
		isTouching(): boolean;		
		/**
		!#en
		Set the desired tangent speed for a conveyor belt behavior.
		!#zh
		ä¸ºä?????å¸¦è®¾ç½®æ???????????çº¿é??åº?
		@param tangentSpeed tangentSpeed 
		*/
		setTangentSpeed(tangentSpeed: number): void;		
		/**
		!#en
		Get the desired tangent speed.
		!#zh
		??·å?????çº¿é??åº? 
		*/
		getTangentSpeed(): number;		
		/**
		!#en
		Override the default friction mixture. You can call this in onPreSolve callback.
		!#zh
		è¦????é»?è®¤ç????©æ?¦å??ç³»æ?°ã??ä½???¯ä»¥??? onPreSolve ???è°?ä¸­è????¨æ­¤??½æ?°ã??
		@param friction friction 
		*/
		setFriction(friction: number): void;		
		/**
		!#en
		Get the friction.
		!#zh
		??·å??å½??????©æ?¦å??ç³»æ?? 
		*/
		getFriction(): number;		
		/**
		!#en
		Reset the friction mixture to the default value.
		!#zh
		???ç½®æ?©æ?¦å??ç³»æ?°å?°é??è®¤å?? 
		*/
		resetFriction(): void;		
		/**
		!#en
		Override the default restitution mixture. You can call this in onPreSolve callback.
		!#zh
		è¦????é»?è®¤ç????¢å??ç³»æ?°ã??ä½???¯ä»¥??? onPreSolve ???è°?ä¸­è????¨æ­¤??½æ?°ã??
		@param restitution restitution 
		*/
		setRestitution(restitution: number): void;		
		/**
		!#en
		Get the restitution.
		!#zh
		??·å??å½??????¢å??ç³»æ?? 
		*/
		getRestitution(): number;		
		/**
		!#en
		Reset the restitution mixture to the default value.
		!#zh
		???ç½®æ?¢å??ç³»æ?°å?°é??è®¤å?? 
		*/
		resetRestitution(): void;	
	}	
	/** !#en
	Physics manager uses box2d as the inner physics system, and hide most box2d implement details(creating rigidbody, synchronize rigidbody info to node).
	You can visit some common box2d function through physics manager(hit testing, raycast, debug info).
	Physics manager distributes the collision information to each collision callback when collision is produced.
	Note: You need first enable the collision listener in the rigidbody.
	!#zh
	??©ç??ç³»ç??å°? box2d ä½?ä¸ºå????¨ç?©ç??ç³»ç??ï¼?å¹¶ä????????äº?å¤§é?¨å?? box2d å®???°ç?????ï¼?æ¯?å¦????å»ºå??ä½?ï¼????æ­¥å??ä½?ä¿¡æ?¯å?°è????¹ä¸­ç­?ï¼????
	ä½???¯ä»¥???è¿???©ç??ç³»ç??è®¿é?®ä??äº? box2d å¸¸ç?¨ç???????½ï??æ¯?å¦???¹å?»æ??è¯?ï¼?å°?çº¿æ??è¯?ï¼?è®¾ç½®æµ?è¯?ä¿¡æ?¯ç?????
	??©ç??ç³»ç??è¿?ç®¡ç??ç¢°æ??ä¿¡æ?¯ç????????ï¼?å¥¹ä????¨äº§???ç¢°æ????¶ï??å°?ç¢°æ??ä¿¡æ?¯å???????°å??ä¸ªç¢°??????è°?ä¸­ã??
	æ³¨æ??ï¼?ä½????è¦??????¨å??ä½?ä¸­å????¯ç¢°?????¥å?¬æ??ä¼?äº§ç????¸å?????ç¢°æ?????è°????<br>
	??¯æ???????©ç??ç³»ç?????å®?ç»???¶ä¿¡??¯ä??ä»¶ï??è¯·å????? {{#crossLink "PhysicsManager.DrawBits"}}{{/crossLink}} */
	export class PhysicsManager implements EventTarget {		
		/** !#en
		The ratio transform between physics unit and pixel unit, generally is 32.
		!#zh
		??©ç?????ä½?ä¸????ç´????ä½?äº???¸è½¬??¢ç??æ¯????ï¼?ä¸???¬æ?? 32??? */
		static PTM_RATIO: number;		
		/** !#en
		The velocity iterations for the velocity constraint solver.
		!#zh
		???åº¦æ?´æ?°è¿­ä»???? */
		static VELOCITY_ITERATIONS: number;		
		/** !#en
		The position Iterations for the position constraint solver.
		!#zh
		ä½?ç½®è¿­ä»???´æ?°æ?? */
		static POSITION_ITERATIONS: number;		
		/** !#en
		Specify the fixed time step.
		Need enabledAccumulator to make it work.
		!#zh
		???å®???ºå???????©ç????´æ?°é?´é????¶é?´ï?????è¦?å¼???? enabledAccumulator ???????????? */
		static FIXED_TIME_STEP: number;		
		/** !#en
		Specify the max accumulator time.
		Need enabledAccumulator to make it work.
		!#zh
		æ¯?æ¬¡å?¯ç?¨ä????´æ?°ç?©ç??ç³»ç????????å¤§æ?¶é?´ï?????è¦?å¼???? enabledAccumulator ???????????? */
		static MAX_ACCUMULATOR: number;		
		/** !#en
		If enabled accumulator, then will call step function with the fixed time step FIXED_TIME_STEP.
		And if the update dt is bigger than the time step, then will call step function several times.
		If disabled accumulator, then will call step function with a time step calculated with the frame rate.
		!#zh
		å¦????å¼???¯æ­¤???é¡¹ï?????ä¹?å°?ä¼?ä»¥å?ºå???????´é????¶é?? FIXED_TIME_STEP ??¥æ?´æ?°ç?©ç??å¼????ï¼?å¦????ä¸?ä¸? update ?????´é????¶é?´å¤§äº? FIXED_TIME_STEPï¼????ä¼?å¯¹ç?©ç??å¼????è¿?è¡?å¤?æ¬¡æ?´æ?°ã??
		å¦??????³é?­æ­¤???é¡¹ï?????ä¹?å°?ä¼???¹æ?®è®¾å®???? frame rate è®¡ç????ºä??ä¸ªé?´é????¶é?´æ?¥æ?´æ?°ç?©ç??å¼??????? */
		enabledAccumulator: boolean;		
		/**
		!#en
		Test which collider contains the given world point
		!#zh
		??·å???????«ç??å®?ä¸??????????ç³»ç?¹ç??ç¢°æ??ä½?
		@param point the world point 
		*/
		testPoint(point: Vec2): PhysicsCollider;		
		/**
		!#en
		Test which colliders intersect the given world rect
		!#zh
		??·å??ä¸?ç»?å®?ä¸??????????ç³»ç?©å½¢??¸äº¤???ç¢°æ??ä½?
		@param rect the world rect 
		*/
		testAABB(rect: Rect): PhysicsCollider[];		
		/**
		!#en
		Raycast the world for all colliders in the path of the ray.
		The raycast ignores colliders that contain the starting point.
		!#zh
		æ£?æµ???ªä??ç¢°æ??ä½???¨ç??å®?å°?çº¿ç??è·¯å??ä¸?ï¼?å°?çº¿æ??æµ?å°?å¿½ç?¥å????«èµ·å§???¹ç??ç¢°æ??ä½????
		@param p1 start point of the raycast
		@param p2 end point of the raycast
		@param type optional, default is RayCastType.Closest 
		*/
		rayCast(p1: Vec2, p2: Vec2, type: RayCastType): PhysicsRayCastResult[];		
		/** !#en
		Enabled the physics manager?
		!#zh
		???å®???¯å?¦å?¯ç?¨ç?©ç??ç³»ç??ï¼? */
		enabled: boolean;		
		/** !#en
		Debug draw flags.
		!#zh
		è®¾ç½®è°?è¯?ç»???¶æ??å¿? */
		debugDrawFlags: number;		
		/** !#en
		The physics world gravity.
		!#zh
		??©ç??ä¸????????????? */
		gravity: Vec2;		
		/**
		!#en Checks whether the EventTarget object has any callback registered for a specific type of event.
		!#zh æ£???¥ä??ä»¶ç?®æ??å¯¹è±¡??¯å?¦æ??ä¸ºç?¹å??ç±»å?????äº?ä»¶æ³¨?????????è°????
		@param type The type of event. 
		*/
		hasEventListener(type: string): boolean;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget.
		This type of event should be triggered via `emit`.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°????è¿?ç§?ç±»å?????äº?ä»¶å??è¯¥è¢« `emit` è§¦å?????
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, node);
		``` 
		*/
		on<T extends Function>(type: string, callback: T, target?: any, useCapture?: boolean): T;		
		/**
		!#en
		Removes the listeners previously registered with the same type, callback, target and or useCapture,
		if only type is passed as parameter, all listeners registered with that type will be removed.
		!#zh
		?????¤ä???????¨å??ç±»å??ï¼????è°?ï¼???®æ????? useCapture æ³¨å?????äº?ä»¶ç????¬å?¨ï??å¦??????ªä????? typeï¼?å°?ä¼??????? type ç±»å???????????äº?ä»¶ç????¬å?¨ã??
		@param type A string representing the event type being removed.
		@param callback The callback to remove.
		@param target The target (this object) to invoke the callback, if it's not given, only callback without target will be removed
		
		@example 
		```js
		// register fire eventListener
		var callback = eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, target);
		// remove fire event listener
		eventTarget.off('fire', callback, target);
		// remove all fire event listeners
		eventTarget.off('fire');
		``` 
		*/
		off(type: string, callback?: Function, target?: any): void;		
		/**
		!#en Removes all callbacks previously registered with the same target (passed as parameter).
		This is not for removing all listeners in the current event target,
		and this is not for removing all listeners the target parameter have registered.
		It's only for removing all listeners (callback and target couple) registered on the current event target by the target parameter.
		!#zh ??¨å????? EventTarget ä¸??????¤æ??å®???®æ??ï¼?target ?????°ï??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°æ??æ³??????¤å????? EventTarget ?????????äº?ä»¶ç????¬å?¨ï??ä¹????æ³??????? target ?????°æ??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°å?ªè?½å????? target ?????°å?¨å????? EventTarget ä¸?æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		@param target The target to be searched for all related listeners 
		*/
		targetOff(target: any): void;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget,
		the callback will remove itself after the first time it is triggered.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°?ï¼????è°?ä¼???¨ç¬¬ä¸???¶é?´è¢«è§¦å??????????¤è?ªèº«???
		@param type A string representing the event type to listen for.
		@param callback The callback that will be invoked when the event is dispatched.
		                             The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null
		
		@example 
		```js
		eventTarget.once('fire', function () {
		    cc.log("this is the callback and will be invoked only once");
		}, node);
		``` 
		*/
		once(type: string, callback: (arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any) => void, target?: any): void;		
		/**
		!#en
		Send an event with the event object.
		!#zh
		???è¿?äº?ä»¶å¯¹è±¡æ´¾???äº?ä»?
		@param event event 
		*/
		dispatchEvent(event: Event): void;		
		/**
		!#en
		Destroy all callbackInfos.
		!#zh
		???æ¯?è®°å?????äº?ä»? 
		*/
		clear(): void;	
	}	
	/** undefined */
	export class PhysicsRayCastResult {		
		/** !#en
		The PhysicsCollider which intersects with the raycast
		!#zh
		ä¸?å°?çº¿ç?¸äº¤???ç¢°æ??ä½? */
		collider: PhysicsCollider;		
		/** !#en
		The intersection point
		!#zh
		å°?çº¿ä??ç¢°æ??ä½???¸äº¤?????? */
		point: Vec2;		
		/** !#en
		The normal vector at the point of intersection
		!#zh
		å°?çº¿ä??ç¢°æ??ä½???¸äº¤?????¹ç??æ³??????? */
		normal: Vec2;		
		/** !#en
		The fraction of the raycast path at the point of intersection
		!#zh
		å°?çº¿ä??ç¢°æ??ä½???¸äº¤?????¹å??å°?çº¿é?¿åº¦????????? */
		fraction: number;	
	}	
	/** !#en Enum for RigidBodyType.
	!#zh ???ä½?ç±»å?? */
	export enum RigidBodyType {		
		Static = 0,
		Kinematic = 0,
		Dynamic = 0,
		Animated = 0,	
	}	
	/** !#en Enum for RayCastType.
	!#zh å°?çº¿æ??æµ?ç±»å?? */
	export enum RayCastType {		
		Closest = 0,
		Any = 0,
		AllClosest = 0,
		All = 0,	
	}	
	/** undefined */
	export class RigidBody extends Component {		
		/** !#en
		Should enabled contact listener?
		When a collision is trigger, the collision callback will only be called when enabled contact listener.
		!#zh
		??¯å?¦å?¯ç?¨æ?¥è§¦??¥å?¬å?¨ã??
		å½? collider äº§ç??ç¢°æ????¶ï????ªæ??å¼???¯ä????¥è§¦??¥å?¬å?¨æ??ä¼?è°???¨ç?¸å????????è°???½æ?? */
		enabledContactListener: boolean;		
		/**
		!#en
		Collision callback.
		Called when two collider begin to touch.
		!#zh
		ç¢°æ?????è°????
		å¦????ä½?????????¬ä¸­å®???°ä??è¿?ä¸ªå?½æ?°ï?????ä¹?å®?å°?ä¼???¨ä¸¤ä¸ªç¢°???ä½?å¼?å§???¥è§¦??¶è¢«è°???¨ã??
		@param contact contact information
		@param selfCollider the collider belong to this rigidbody
		@param otherCollider the collider belong to another rigidbody 
		*/
		onBeginContact(contact: PhysicsContact, selfCollider: PhysicsCollider, otherCollider: PhysicsCollider): void;		
		/**
		!#en
		Collision callback.
		Called when two collider cease to touch.
		!#zh
		ç¢°æ?????è°????
		å¦????ä½?????????¬ä¸­å®???°ä??è¿?ä¸ªå?½æ?°ï?????ä¹?å®?å°?ä¼???¨ä¸¤ä¸ªç¢°???ä½????æ­¢æ?¥è§¦??¶è¢«è°???¨ã??
		@param contact contact information
		@param selfCollider the collider belong to this rigidbody
		@param otherCollider the collider belong to another rigidbody 
		*/
		onEndContact(contact: PhysicsContact, selfCollider: PhysicsCollider, otherCollider: PhysicsCollider): void;		
		/**
		!#en
		Collision callback.
		This is called when a contact is updated.
		This allows you to inspect a contact before it goes to the solver(e.g. disable contact).
		Note: this is called only for awake bodies.
		Note: this is called even when the number of contact points is zero.
		Note: this is not called for sensors.
		!#zh
		ç¢°æ?????è°????
		å¦????ä½?????????¬ä¸­å®???°ä??è¿?ä¸ªå?½æ?°ï?????ä¹?å®?å°?ä¼???¨æ?¥è§¦??´æ?°æ?¶è¢«è°???¨ã??
		ä½???¯ä»¥??¨æ?¥è§¦è¢«å??????????¹æ?®ä???????«ç??ä¿¡æ?¯ä????ºç?¸å?????å¤????ï¼?æ¯?å¦?å°?è¿?ä¸ªæ?¥è§¦ç¦???¨æ?????
		æ³¨æ??ï¼????è°???ªä??ä¸ºé???????????ä½?è°???¨ã??
		æ³¨æ??ï¼???¥è§¦??¹ä¸º??¶ç????¶å??ä¹??????¯è?½è¢«è°???¨ã??
		æ³¨æ??ï¼??????¥ä??(sensor)??????è°?ä¸?ä¼?è¢«è????¨ã??
		@param contact contact information
		@param selfCollider the collider belong to this rigidbody
		@param otherCollider the collider belong to another rigidbody 
		*/
		onPreSolve(contact: PhysicsContact, selfCollider: PhysicsCollider, otherCollider: PhysicsCollider): void;		
		/**
		!#en
		Collision callback.
		This is called after a contact is updated.
		You can get the impulses from the contact in this callback.
		!#zh
		ç¢°æ?????è°????
		å¦????ä½?????????¬ä¸­å®???°ä??è¿?ä¸ªå?½æ?°ï?????ä¹?å®?å°?ä¼???¨æ?¥è§¦??´æ?°å?????è¢«è????¨ã??
		ä½???¯ä»¥??¨è??ä¸ªå??è°?ä¸­ä????¥è§¦ä¿¡æ?¯ä¸­??·å????°å?²é??ä¿¡æ?¯ã??
		@param contact contact information
		@param selfCollider the collider belong to this rigidbody
		@param otherCollider the collider belong to another rigidbody 
		*/
		onPostSolve(contact: PhysicsContact, selfCollider: PhysicsCollider, otherCollider: PhysicsCollider): void;		
		/** !#en
		Is this a fast moving body that should be prevented from tunneling through
		other moving bodies?
		Note :
		- All bodies are prevented from tunneling through kinematic and static bodies. This setting is only considered on dynamic bodies.
		- You should use this flag sparingly since it increases processing time.
		!#zh
		è¿?ä¸ªå??ä½???¯å?¦æ?¯ä??ä¸ªå¿«???ç§»å?¨ç?????ä½?ï¼?å¹¶ä?????è¦?ç¦?æ­¢ç©¿è¿???¶ä??å¿«é??ç§»å?¨ç?????ä½?ï¼?
		???è¦?æ³¨æ???????? :
		 - ?????????ä½???½è¢«ç¦?æ­¢ä?? è¿???¨å??ä½? ??? ?????????ä½? ä¸­ç©¿è¿????æ­¤é??é¡¹å?ªå?³æ³¨äº? ??¨æ?????ä½????
		 - åº?è¯¥å°½???å°????ä½¿ç?¨æ­¤???é¡¹ï?????ä¸ºå??ä¼?å¢????ç¨?åº?å¤??????¶é?´ã?? */
		bullet: boolean;		
		/** !#en
		Rigidbody type : Static, Kinematic, Dynamic or Animated.
		!#zh
		???ä½?ç±»å??ï¼? Static, Kinematic, Dynamic or Animated. */
		type: RigidBodyType;		
		/** !#en
		Set this flag to false if this body should never fall asleep.
		Note that this increases CPU usage.
		!#zh
		å¦????æ­¤å??ä½?æ°¸è????½ä??åº?è¯¥è????¥ç?¡ç??ï¼????ä¹?è®¾ç½®è¿?ä¸ªå????§ä¸º false???
		???è¦?æ³¨æ??è¿?å°?ä½? CPU ?????¨ç?????é«???? */
		allowSleep: boolean;		
		/** !#en
		Scale the gravity applied to this body.
		!#zh
		ç¼©æ?¾å????¨å?¨æ­¤???ä½?ä¸????????????? */
		gravityScale: number;		
		/** !#en
		Linear damping is use to reduce the linear velocity.
		The damping parameter can be larger than 1, but the damping effect becomes sensitive to the
		time step when the damping parameter is large.
		!#zh
		Linear damping ??¨ä??è¡°å?????ä½????çº¿æ?§é??åº¦ã??è¡°å??ç³»æ?°å?¯ä»¥å¤§ä?? 1ï¼?ä½???¯å??è¡°å??ç³»æ?°æ??è¾?å¤§ç????¶å??ï¼?è¡°å???????????ä¼????å¾?æ¯?è¾?????????? */
		linearDamping: number;		
		/** !#en
		Angular damping is use to reduce the angular velocity. The damping parameter
		can be larger than 1 but the damping effect becomes sensitive to the
		time step when the damping parameter is large.
		!#zh
		Angular damping ??¨ä??è¡°å?????ä½????è§????åº¦ã??è¡°å??ç³»æ?°å?¯ä»¥å¤§ä?? 1ï¼?ä½???¯å??è¡°å??ç³»æ?°æ??è¾?å¤§ç????¶å??ï¼?è¡°å???????????ä¼????å¾?æ¯?è¾?????????? */
		angularDamping: number;		
		/** !#en
		The linear velocity of the body's origin in world co-ordinates.
		!#zh
		???ä½???¨ä???????????ä¸????çº¿æ?§é??åº? */
		linearVelocity: Vec2;		
		/** !#en
		The angular velocity of the body.
		!#zh
		???ä½????è§????åº? */
		angularVelocity: number;		
		/** !#en
		Should this body be prevented from rotating?
		!#zh
		??¯å?¦ç??æ­¢æ­¤???ä½?è¿?è¡????è½? */
		fixedRotation: boolean;		
		/** !#en
		Set the sleep state of the body. A sleeping body has very low CPU cost.(When the rigid body is hit, if the rigid body is in sleep state, it will be immediately awakened.)
		!#zh
		è®¾ç½®???ä½??????¡ç????¶æ????? ??¡ç????????ä½???·æ?????å¸¸ä????? CPU ?????¬ã??ï¼?å½????ä½?è¢«ç¢°?????°æ?¶ï??å¦???????ä½?å¤?äº???¡ç????¶æ??ï¼?å®?ä¼?ç«???³è¢«??¤é??ï¼? */
		awake: boolean;		
		/** !#en
		Whether to wake up this rigid body during initialization
		!#zh
		??¯å?¦å?¨å??å§??????¶å?¤é??æ­¤å??ä½? */
		awakeOnLoad: boolean;		
		/** !#en
		Set the active state of the body. An inactive body is not
		simulated and cannot be collided with or woken up.
		If body is active, all fixtures will be added to the
		broad-phase.
		If body is inactive, all fixtures will be removed from
		the broad-phase and all contacts will be destroyed.
		Fixtures on an inactive body are implicitly inactive and will
		not participate in collisions, ray-casts, or queries.
		Joints connected to an inactive body are implicitly inactive.
		!#zh
		è®¾ç½®???ä½????æ¿?æ´»ç?¶æ?????ä¸?ä¸ªé??æ¿?æ´»ç?¶æ??ä¸???????ä½???¯ä??ä¼?è¢«æ¨¡??????ç¢°æ?????ï¼?ä¸?ç®¡å????¯å?¦å??äº???¡ç????¶æ??ä¸????
		å¦???????ä½?å¤?äº?æ¿?æ´»ç?¶æ??ä¸?ï¼???????å¤¹å?·ä??è¢«æ·»?????? ç²?æµ???¶æ®µï¼?broad-phaseï¼????
		å¦???????ä½?å¤?äº????æ¿?æ´»ç?¶æ??ä¸?ï¼???????å¤¹å?·ä??è¢«ä?? ç²?æµ???¶æ®µï¼?broad-phaseï¼?ä¸­ç§»??¤ã??
		??¨é??æ¿?æ´»ç?¶æ??ä¸????å¤¹å?·ä??ä¼????ä¸???°ç¢°???ï¼?å°?çº¿ï??????????¥æ?¾ä¸­
		??¾æ?¥å?°é??æ¿?æ´»ç?¶æ??ä¸????ä½??????³è??ä¹???¯é??æ¿?æ´»ç????? */
		active: boolean;		
		/**
		!#en
		Converts a given point in the world coordinate system to this rigid body's local coordinate system
		!#zh
		å°?ä¸?ä¸ªç??å®????ä¸??????????ç³»ä???????¹è½¬??¢ä¸º???ä½???¬å?°å?????ç³»ä????????
		@param worldPoint a point in world coordinates.
		@param out optional, the receiving point 
		*/
		getLocalPoint(worldPoint: Vec2, out: Vec2): Vec2;		
		/**
		!#en
		Converts a given point in this rigid body's local coordinate system to the world coordinate system
		!#zh
		å°?ä¸?ä¸ªç??å®???????ä½???¬å?°å?????ç³»ä???????¹è½¬??¢ä¸ºä¸??????????ç³»ä????????
		@param localPoint a point in local coordinates.
		@param out optional, the receiving point 
		*/
		getWorldPoint(localPoint: Vec2, out: Vec2): Vec2;		
		/**
		!#en
		Converts a given vector in this rigid body's local coordinate system to the world coordinate system
		!#zh
		å°?ä¸?ä¸ªç??å®???????ä½???¬å?°å?????ç³»ä???????????è½¬æ?¢ä¸ºä¸??????????ç³»ä???????????
		@param localVector a vector in world coordinates.
		@param out optional, the receiving vector 
		*/
		getWorldVector(localVector: Vec2, out: Vec2): Vec2;		
		/**
		!#en
		Converts a given vector in the world coordinate system to this rigid body's local coordinate system
		!#zh
		å°?ä¸?ä¸ªç??å®????ä¸??????????ç³»ä???????????è½¬æ?¢ä¸º???ä½???¬å?°å?????ç³»ä???????????
		@param worldVector a vector in world coordinates.
		@param out optional, the receiving vector 
		*/
		getLocalVector(worldVector: Vec2, out: Vec2): Vec2;		
		/**
		!#en
		Get the world body origin position.
		!#zh
		??·å?????ä½?ä¸??????????ç³»ä??????????¹å??
		@param out optional, the receiving point 
		*/
		getWorldPosition(out: Vec2): Vec2;		
		/**
		!#en
		Get the world body rotation angle.
		!#zh
		??·å?????ä½?ä¸??????????ç³»ä????????è½¬å?¼ã?? 
		*/
		getWorldRotation(): number;		
		/**
		!#en
		Get the local position of the center of mass.
		!#zh
		??·å?????ä½???¬å?°å?????ç³»ä?????è´¨å?? 
		*/
		getLocalCenter(): Vec2;		
		/**
		!#en
		Get the world position of the center of mass.
		!#zh
		??·å?????ä½?ä¸??????????ç³»ä?????è´¨å?? 
		*/
		getWorldCenter(): Vec2;		
		/**
		!#en
		Get the world linear velocity of a world point attached to this body.
		!#zh
		??·å?????ä½?ä¸????å®???¹ç??çº¿æ?§é??åº?
		@param worldPoint a point in world coordinates.
		@param out optional, the receiving point 
		*/
		getLinearVelocityFromWorldPoint(worldPoint: Vec2, out: Vec2): Vec2;		
		/**
		!#en
		Get total mass of the body.
		!#zh
		??·å?????ä½????è´¨é????? 
		*/
		getMass(): number;		
		/**
		!#en
		Get the rotational inertia of the body about the local origin.
		!#zh
		??·å?????ä½???¬å?°å?????ç³»ä???????¹ç?????è½¬æ?¯æ?? 
		*/
		getInertia(): number;		
		/**
		!#en
		Get all the joints connect to the rigidbody.
		!#zh
		??·å????¾æ?¥å?°æ­¤???ä½????????????³è?? 
		*/
		getJointList(): Joint[];		
		/**
		!#en
		Apply a force at a world point. If the force is not
		applied at the center of mass, it will generate a torque and
		affect the angular velocity.
		!#zh
		??½å??ä¸?ä¸ªå????°å??ä½?ä¸????ä¸?ä¸ªç?¹ã??å¦???????æ²¡æ????½å????°å??ä½????è´¨å??ä¸?ï¼?è¿?ä¼?äº§ç??ä¸?ä¸ªæ?­ç?©å¹¶ä¸?å½±å????°è?????åº¦ã??
		@param force the world force vector.
		@param point the world position.
		@param wake also wake up the body. 
		*/
		applyForce(force: Vec2, point: Vec2, wake: boolean): void;		
		/**
		!#en
		Apply a force to the center of mass.
		!#zh
		??½å??ä¸?ä¸ªå????°å??ä½?ä¸????è´¨å??ä¸????
		@param force the world force vector.
		@param wake also wake up the body. 
		*/
		applyForceToCenter(force: Vec2, wake: boolean): void;		
		/**
		!#en
		Apply a torque. This affects the angular velocity.
		!#zh
		??½å??ä¸?ä¸ªæ?­ç?©å??ï¼?å°?å½±å?????ä½????è§????åº?
		@param torque about the z-axis (out of the screen), usually in N-m.
		@param wake also wake up the body 
		*/
		applyTorque(torque: number, wake: boolean): void;		
		/**
		!#en
		Apply a impulse at a world point, This immediately modifies the velocity.
		If the impulse is not applied at the center of mass, it will generate a torque and
		affect the angular velocity.
		!#zh
		??½å????²é????°å??ä½?ä¸????ä¸?ä¸ªç?¹ï??å°?ç«???³æ?¹å?????ä½????çº¿æ?§é??åº¦ã??
		å¦??????²é????½å????°ç????¹ä????¯å??ä½????è´¨å??ï¼????ä¹?å°?äº§ç??ä¸?ä¸ªæ?­ç?©å¹¶å½±å?????ä½????è§????åº¦ã??
		@param impulse the world impulse vector, usually in N-seconds or kg-m/s.
		@param point the world position
		@param wake alse wake up the body 
		*/
		applyLinearImpulse(impulse: Vec2, point: Vec2, wake: boolean): void;		
		/**
		!#en
		Apply an angular impulse.
		!#zh
		??½å??ä¸?ä¸ªè?????åº¦å?²é?????
		@param impulse the angular impulse in units of kg*m*m/s
		@param wake also wake up the body 
		*/
		applyAngularImpulse(impulse: number, wake: boolean): void;		
		/**
		!#en
		Synchronize node's world position to box2d rigidbody's position.
		If enableAnimated is true and rigidbody's type is Animated type,
		will set linear velocity instead of directly set rigidbody's position.
		!#zh
		???æ­¥è????¹ç??ä¸????????????? box2d ???ä½??????????ä¸????
		å¦???? enableAnimated ??? trueï¼?å¹¶ä?????ä½????ç±»å????? Animated ï¼????ä¹?å°?è®¾ç½®???ä½????çº¿æ?§é??åº¦æ?¥ä»£??¿ç?´æ?¥è®¾ç½®å??ä½????ä½?ç½®ã??
		@param enableAnimated enableAnimated 
		*/
		syncPosition(enableAnimated: boolean): void;		
		/**
		!#en
		Synchronize node's world angle to box2d rigidbody's angle.
		If enableAnimated is true and rigidbody's type is Animated type,
		will set angular velocity instead of directly set rigidbody's angle.
		!#zh
		???æ­¥è????¹ç??ä¸???????è½¬è??åº¦å?¼å?? box2d ???ä½???????è½¬å?¼ä?????
		å¦???? enableAnimated ??? trueï¼?å¹¶ä?????ä½????ç±»å????? Animated ï¼????ä¹?å°?è®¾ç½®???ä½????è§????åº¦æ?¥ä»£??¿ç?´æ?¥è®¾ç½®å??ä½????è§?åº¦ã??
		@param enableAnimated enableAnimated 
		*/
		syncRotation(enableAnimated: boolean): void;	
	}	
	/** !#en
	Representation of RGBA colors.
	
	Each color component is a floating point value with a range from 0 to 255.
	
	You can also use the convenience method {{#crossLink "cc/color:method"}}cc.color{{/crossLink}} to create a new Color.
	
	!#zh
	cc.Color ??¨ä??è¡¨ç¤ºé¢???²ã??
	
	å®??????? RGBA ???ä¸ªä»¥æµ®ç?¹æ?°ä??å­????é¢???²å?????ï¼?æ¯?ä¸ªç????¼é?½å?? 0 ??? 255 ä¹???´ã??
	
	??¨ä????¯ä»¥???è¿?ä½¿ç?? {{#crossLink "cc/color:method"}}cc.color{{/crossLink}} ???ä¾¿æ?·æ?¹æ????¥å??å»ºä??ä¸ªæ?°ç?? Color??? */
	export class Color extends ValueType {		
		/** !#en Solid white, RGBA is [255, 255, 255, 255].
		!#zh çº¯ç?½è?²ï??RGBA ??? [255, 255, 255, 255]??? */
		static WHITE: Color;		
		/** !#en Solid black, RGBA is [0, 0, 0, 255].
		!#zh çº¯é????²ï??RGBA ??? [0, 0, 0, 255]??? */
		static BLACK: Color;		
		/** !#en Transparent, RGBA is [0, 0, 0, 0].
		!#zh ??????ï¼?RGBA ??? [0, 0, 0, 0]??? */
		static TRANSPARENT: Color;		
		/** !#en Grey, RGBA is [127.5, 127.5, 127.5].
		!#zh ??°è?²ï??RGBA ??? [127.5, 127.5, 127.5]??? */
		static GRAY: Color;		
		/** !#en Solid red, RGBA is [255, 0, 0].
		!#zh çº¯çº¢??²ï??RGBA ??? [255, 0, 0]??? */
		static RED: Color;		
		/** !#en Solid green, RGBA is [0, 255, 0].
		!#zh çº¯ç»¿??²ï??RGBA ??? [0, 255, 0]??? */
		static GREEN: Color;		
		/** !#en Solid blue, RGBA is [0, 0, 255].
		!#zh çº¯è????²ï??RGBA ??? [0, 0, 255]??? */
		static BLUE: Color;		
		/** !#en Yellow, RGBA is [255, 235, 4].
		!#zh é»???²ï??RGBA ??? [255, 235, 4]??? */
		static YELLOW: Color;		
		/** !#en Orange, RGBA is [255, 127, 0].
		!#zh æ©???²ï??RGBA ??? [255, 127, 0]??? */
		static ORANGE: Color;		
		/** !#en Cyan, RGBA is [0, 255, 255].
		!#zh ?????²ï??RGBA ??? [0, 255, 255]??? */
		static CYAN: Color;		
		/** !#en Magenta, RGBA is [255, 0, 255].
		!#zh æ´?çº¢è?²ï?????çº¢è?²ï??ï¼?RGBA ??? [255, 0, 255]??? */
		static MAGENTA: Color;		
		/**
		Copy content of a color into another. 
		*/
		static copy (out: Color, a: Color): Color;		
		/**
		Clone a new color. 
		*/
		static clone (a: Color): Color;		
		/**
		Set the components of a color to the given values. 
		*/
		static set (out: Color, r?: number, g?: number, b?: number, a?: number): Color;		
		/**
		Converts the hexadecimal formal color into rgb formal. 
		*/
		static fromHex (out: Color, hex: number): Color;		
		/**
		Converts the hexadecimal formal color into rgb formal. 
		*/
		static fromHEX (out: Color, hex: string): Color;		
		/**
		Add components of two colors, respectively. 
		*/
		static add (out: Color, a: Color, b: Color): Color;		
		/**
		Subtract components of color b from components of color a, respectively. 
		*/
		static subtract (out: Color, a: Color, b: Color): Color;		
		/**
		Multiply components of two colors, respectively. 
		*/
		static multiply (out: Color, a: Color, b: Color): Color;		
		/**
		Divide components of color a by components of color b, respectively. 
		*/
		static divide (out: Color, a: Color, b: Color): Color;		
		/**
		Scales a color by a number. 
		*/
		static scale (out: Color, a: Color, b: number): Color;		
		/**
		Performs a linear interpolation between two colors. 
		*/
		static lerp (out: Color, a: Color, b: Color, t: number): Color;		
		/**
		!#zh é¢???²è½¬??°ç??
		!#en Turn an array of colors
		@param ofs ??°ç??èµ·å?????ç§»é?? 
		*/
		static toArray <Out extends IWritableArrayLike<number>> (out: Out, a: IColorLike, ofs?: number): Out;		
		/**
		!#zh ??°ç??è½¬é?????
		!#en An array of colors turn
		@param ofs ??°ç??èµ·å?????ç§»é?? 
		*/
		static fromArray <Out extends IColorLike> (arr: IWritableArrayLike<number>, out: Out, ofs?: number): Out;		
		/**
		!#zh é¢???? RGB é¢?ä¹? Alpha ??????
		!#en RGB premultiply alpha channel
		@param out è¿????é¢????
		@param color é¢?ä¹?å¤?????????®æ??é¢???? 
		*/
		static premultiplyAlpha <Out extends IColorLike> (out: Out, a: IColorLike);		
		/**
		
		@param r red component of the color, default value is 0.
		@param g green component of the color, defualt value is 0.
		@param b blue component of the color, default value is 0.
		@param a alpha component of the color, default value is 255. 
		*/
		constructor(r?: number, g?: number, b?: number, a?: number);		
		/**
		!#en Clone a new color from the current color.
		!#zh ??????å½????é¢???²ã??
		
		@example 
		```js
		var color = new cc.Color();
		var newColor = color.clone();// Color {r: 0, g: 0, b: 0, a: 255}
		``` 
		*/
		clone(): Color;		
		/**
		!#en TODO
		!#zh ??¤æ?­ä¸¤ä¸ªé????²æ?¯å?¦ç?¸ç?????
		@param other other
		
		@example 
		```js
		var color1 = cc.Color.WHITE;
		var color2 = new cc.Color(255, 255, 255);
		cc.log(color1.equals(color2)); // true;
		color2 = cc.Color.RED;
		cc.log(color2.equals(color1)); // false;
		``` 
		*/
		equals(other: Color): boolean;		
		/**
		!#en TODO
		!#zh çº¿æ?§æ?????
		@param to to
		@param ratio the interpolation coefficient.
		@param out optional, the receiving vector.
		
		@example 
		```js
		// Converts a white color to a black one trough time.
		update: function (dt) {
		    var color = this.node.color;
		    if (color.equals(cc.Color.BLACK)) {
		        return;
		    }
		    this.ratio += dt * 0.1;
		    this.node.color = cc.Color.WHITE.lerp(cc.Color.BLACK, ratio);
		}
		
		``` 
		*/
		lerp(to: Color, ratio: number, out?: Color): Color;		
		/**
		!#en TODO
		!#zh è½¬æ?¢ä¸º??¹ä¾¿???è¯»ç??å­?ç¬¦ä¸²???
		
		@example 
		```js
		var color = cc.Color.WHITE;
		color.toString(); // "rgba(255, 255, 255, 255)"
		``` 
		*/
		toString(): string;		
		/** !#en Get or set red channel value
		!#zh ??·å????????è®¾ç½®çº¢è?²é????? */
		r: number;		
		/** !#en Get or set green channel value
		!#zh ??·å????????è®¾ç½®ç»¿è?²é????? */
		g: number;		
		/** !#en Get or set blue channel value
		!#zh ??·å????????è®¾ç½®?????²é????? */
		b: number;		
		/** !#en Get or set alpha channel value
		!#zh ??·å????????è®¾ç½®???????????? */
		a: number;		
		/**
		!#en Gets red channel value
		!#zh ??·å??å½????é¢???²ç??çº¢è?²å?¼ã?? 
		*/
		getR(): number;		
		/**
		!#en Sets red value and return the current color object
		!#zh è®¾ç½®å½???????çº¢è?²å?¼ï??å¹¶è?????å½????å¯¹è±¡???
		@param red the new Red component.
		
		@example 
		```js
		var color = new cc.Color();
		color.setR(255); // Color {r: 255, g: 0, b: 0, a: 255}
		``` 
		*/
		setR(red: number): Color;		
		/**
		!#en Gets green channel value
		!#zh ??·å??å½????é¢???²ç??ç»¿è?²å?¼ã?? 
		*/
		getG(): number;		
		/**
		!#en Sets green value and return the current color object
		!#zh è®¾ç½®å½???????ç»¿è?²å?¼ï??å¹¶è?????å½????å¯¹è±¡???
		@param green the new Green component.
		
		@example 
		```js
		var color = new cc.Color();
		color.setG(255); // Color {r: 0, g: 255, b: 0, a: 255}
		``` 
		*/
		setG(green: number): Color;		
		/**
		!#en Gets blue channel value
		!#zh ??·å??å½????é¢???²ç???????²å?¼ã?? 
		*/
		getB(): number;		
		/**
		!#en Sets blue value and return the current color object
		!#zh è®¾ç½®å½????????????²å?¼ï??å¹¶è?????å½????å¯¹è±¡???
		@param blue the new Blue component.
		
		@example 
		```js
		var color = new cc.Color();
		color.setB(255); // Color {r: 0, g: 0, b: 255, a: 255}
		``` 
		*/
		setB(blue: number): Color;		
		/**
		!#en Gets alpha channel value
		!#zh ??·å??å½????é¢???²ç????????åº¦å?¼ã?? 
		*/
		getA(): number;		
		/**
		!#en Sets alpha value and return the current color object
		!#zh è®¾ç½®å½?????????????åº¦ï??å¹¶è?????å½????å¯¹è±¡???
		@param alpha the new Alpha component.
		
		@example 
		```js
		var color = new cc.Color();
		color.setA(0); // Color {r: 0, g: 0, b: 0, a: 0}
		``` 
		*/
		setA(alpha: number): Color;		
		/**
		!#en Convert color to css format.
		!#zh è½¬æ?¢ä¸º CSS ??¼å?????
		@param opt "rgba", "rgb", "#rgb" or "#rrggbb".
		
		@example 
		```js
		var color = cc.Color.BLACK;
		color.toCSS();          // "rgba(0,0,0,1.00)";
		color.toCSS("rgba");    // "rgba(0,0,0,1.00)";
		color.toCSS("rgb");     // "rgba(0,0,0)";
		color.toCSS("#rgb");    // "#000";
		color.toCSS("#rrggbb"); // "#000000";
		``` 
		*/
		toCSS(opt?: string): string;		
		/**
		!#en Read hex string and store color data into the current color object, the hex string must be formated as rgba or rgb.
		!#zh è¯»å?? 16 è¿???¶é????²ã??
		@param hexString hexString
		
		@example 
		```js
		var color = cc.Color.BLACK;
		color.fromHEX("#FFFF33"); // Color {r: 255, g: 255, b: 51, a: 255};
		``` 
		*/
		fromHEX(hexString: string): Color;		
		/**
		!#en convert Color to HEX color string.
		!#zh è½¬æ?¢ä¸º 16 è¿???¶ã??
		@param fmt "#rgb", "#rrggbb" or "#rrggbbaa".
		
		@example 
		```js
		var color = cc.Color.BLACK;
		color.toHEX("#rgb");     // "000";
		color.toHEX("#rrggbb");  // "000000";
		``` 
		*/
		toHEX(fmt?: string): string;		
		/**
		!#en Convert to 24bit rgb value.
		!#zh è½¬æ?¢ä¸º 24bit ??? RGB ??¼ã??
		
		@example 
		```js
		var color = cc.Color.YELLOW;
		color.toRGBValue(); // 16771844;
		``` 
		*/
		toRGBValue(): number;		
		/**
		!#en Read HSV model color and convert to RGB color
		!#zh è¯»å?? HSVï¼???²å½©æ¨¡å??ï¼???¼å?????
		@param h h
		@param s s
		@param v v
		
		@example 
		```js
		var color = cc.Color.YELLOW;
		color.fromHSV(0, 0, 1); // Color {r: 255, g: 255, b: 255, a: 255};
		``` 
		*/
		fromHSV(h: number, s: number, v: number): Color;		
		/**
		!#en Transform to HSV model color
		!#zh è½¬æ?¢ä¸º HSVï¼???²å½©æ¨¡å??ï¼???¼å?????
		
		@example 
		```js
		var color = cc.Color.YELLOW;
		color.toHSV(); // Object {h: 0.1533864541832669, s: 0.9843137254901961, v: 1};
		``` 
		*/
		toHSV(): any;		
		/**
		!#en Set the color
		!#zh è®¾ç½®é¢????
		@param color color 
		*/
		set (color: Color): Color;		
		/**
		!#en Multiplies the current color by the specified color
		!#zh å°?å½????é¢???²ä??ä»¥ä?????å®?é¢????
		@param other other 
		*/
		multiply(other: Color): Color;	
	}	
	/** Mathematical 3x3 matrix.
	
	NOTE: we use column-major matrix for all matrix calculation.
	
	This may lead to some confusion when referencing OpenGL documentation,
	however, which represents out all matricies in column-major format.
	This means that while in code a matrix may be typed out as:
	
	[1, 0, 0, 0,
	 0, 1, 0, 0,
	 0, 0, 1, 0,
	 x, y, z, 0]
	
	The same matrix in the [OpenGL documentation](https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glTranslate.xml)
	is written as:
	
	 1 0 0 x
	 0 1 0 y
	 0 0 1 z
	 0 0 0 0
	
	Please rest assured, however, that they are the same thing!
	This is not unique to glMatrix, either, as OpenGL developers have long been confused by the
	apparent lack of consistency between the memory layout and the documentation. */
	export class Mat3 extends ValueType {		
		/** Identity  of Mat3 */
		static IDENTITY: Mat3;		
		/**
		!#zh ??©é?µè½¬??°ç??
		!#en Matrix transpose array
		@param ofs ??°ç????????èµ·å?????ç§»é?? 
		*/
		static toArray <Out extends IWritableArrayLike<number>> (out: Out, mat: IMat3Like, ofs?: number): Out;		
		/**
		!#zh ??°ç??è½¬ç?©é??
		!#en Transfer matrix array
		@param ofs ??°ç??èµ·å?????ç§»é?? 
		*/
		static fromArray <Out extends IMat3Like> (out: Out, arr: IWritableArrayLike<number>, ofs?: number): Out;		
		/** !#en Matrix Data
		!#zh ??©é?µæ?°æ?? */
		m: Float64Array|Float32Array;		
		constructor (m00?: number | Float32Array, m01?: number, m02?: number, m03?: number, m04?: number, m05?: number, m06?: number, m07?: number, m08?: number);	
	}	
	/** !#en Representation of 4*4 matrix.
	!#zh è¡¨ç¤º 4*4 ??©é?? */
	export class Mat4 extends ValueType {		
		/**
		!#en Multiply the current matrix with another one
		!#zh å°?å½??????©é?µä?????å®???©é?µç?¸ä??
		@param other the second operand
		@param out the receiving matrix, you can pass the same matrix to save result to itself, if not provided, a new matrix will be created 
		*/
		mul(other: Mat4, out?: Mat4): Mat4;		
		/**
		!#en Multiply each element of the matrix by a scalar.
		!#zh å°???©é?µç??æ¯?ä¸?ä¸ªå??ç´???½ä??ä»¥æ??å®????ç¼©æ?¾å?¼ã??
		@param number amount to scale the matrix's elements by
		@param out the receiving matrix, you can pass the same matrix to save result to itself, if not provided, a new matrix will be created 
		*/
		mulScalar(number: number, out?: Mat4): Mat4;		
		/**
		!#en Subtracts the current matrix with another one
		!#zh å°?å½??????©é?µä?????å®??????©é?µç?¸å??
		@param other the second operand
		@param out the receiving matrix, you can pass the same matrix to save result to itself, if not provided, a new matrix will be created 
		*/
		sub(other: Mat4, out?: Mat4): Mat4;		
		/** Identity  of Mat4 */
		static IDENTITY: Mat4;		
		/**
		!#zh ??·å?????å®???©é?µç????·è??
		!#en Copy of the specified matrix to obtain 
		*/
		static clone<Out extends IMat4Like> (a: Out): Mat4;		
		/**
		!#zh å¤???¶ç?®æ????©é??
		!#en Copy the target matrix 
		*/
		static copy<Out extends IMat4Like> (out: Out, a: Out): Out;		
		/**
		!#zh å°???®æ??èµ???¼ä¸º???ä½???©é??
		!#en The target of an assignment is the identity matrix 
		*/
		static identity<Out extends IMat4Like> (out: Out): Out;		
		/**
		!#zh è½¬ç½®??©é??
		!#en Transposed matrix 
		*/
		static transpose<Out extends IMat4Like> (out: Out, a: Out): Out;		
		/**
		!#zh ??©é?µæ?????
		!#en Matrix inversion 
		*/
		static invert<Out extends IMat4Like> (out: Out, a: Out): Out;		
		/**
		!#zh ??©é?µè?????å¼?
		!#en Matrix determinant 
		*/
		static determinant<Out extends IMat4Like> (a: Out): number;		
		/**
		!#zh ??©é?µä??æ³?
		!#en Matrix Multiplication 
		*/
		static multiply<Out extends IMat4Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??¨ç??å®???©é?µå????¢å?ºç??ä¸??????¥å?????
		!#en Was added in a given transformation matrix transformation on the basis of 
		*/
		static transform<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, a: Out, v: VecLike): Out;		
		/**
		!#zh ??¨ç??å®???©é?µå????¢å?ºç??ä¸??????¥æ?°ä??ç§»å?????
		!#en Add new displacement transducer in a matrix transformation on the basis of a given 
		*/
		static translate<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, a: Out, v: VecLike): Out;		
		/**
		!#zh ??¨ç??å®???©é?µå????¢å?ºç??ä¸??????¥æ?°ç¼©??¾å?????
		!#en Add new scaling transformation in a given matrix transformation on the basis of 
		*/
		static scale<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, a: Out, v: VecLike): Out;		
		/**
		!#zh ??¨ç??å®???©é?µå????¢å?ºç??ä¸??????¥æ?°æ??è½¬å?????
		!#en Add a new rotational transform matrix transformation on the basis of a given
		@param rad ???è½¬è??åº?
		@param axis ???è½¬è½´ 
		*/
		static rotate<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, a: Out, rad: number, axis: VecLike): Out;		
		/**
		!#zh ??¨ç??å®???©é?µå????¢å?ºç??ä¸??????¥ç?? X è½´ç?????è½¬å?????
		!#en Add rotational transformation around the X axis at a given matrix transformation on the basis of
		@param rad ???è½¬è??åº? 
		*/
		static rotateX<Out extends IMat4Like> (out: Out, a: Out, rad: number): Out;		
		/**
		!#zh ??¨ç??å®???©é?µå????¢å?ºç??ä¸??????¥ç?? Y è½´ç?????è½¬å?????
		!#en Add about the Y axis rotation transformation in a given matrix transformation on the basis of
		@param rad ???è½¬è??åº? 
		*/
		static rotateY<Out extends IMat4Like> (out: Out, a: Out, rad: number): Out;		
		/**
		!#zh ??¨ç??å®???©é?µå????¢å?ºç??ä¸??????¥ç?? Z è½´ç?????è½¬å?????
		!#en Added about the Z axis at a given rotational transformation matrix transformation on the basis of
		@param rad ???è½¬è??åº? 
		*/
		static rotateZ<Out extends IMat4Like> (out: Out, a: Out, rad: number): Out;		
		/**
		!#zh è®¡ç??ä½?ç§»ç?©é??
		!#en Displacement matrix calculation 
		*/
		static fromTranslation<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, v: VecLike): Out;		
		/**
		!#zh è®¡ç??ç¼©æ?¾ç?©é??
		!#en Scaling matrix calculation 
		*/
		static fromScaling<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, v: VecLike): Out;		
		/**
		!#zh è®¡ç?????è½¬ç?©é??
		!#en Calculates the rotation matrix 
		*/
		static fromRotation<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, rad: number, axis: VecLike): Out;		
		/**
		!#zh è®¡ç??ç»? X è½´ç?????è½¬ç?©é??
		!#en Calculating rotation matrix about the X axis 
		*/
		static fromXRotation<Out extends IMat4Like> (out: Out, rad: number): Out;		
		/**
		!#zh è®¡ç??ç»? Y è½´ç?????è½¬ç?©é??
		!#en Calculating rotation matrix about the Y axis 
		*/
		static fromYRotation<Out extends IMat4Like> (out: Out, rad: number): Out;		
		/**
		!#zh è®¡ç??ç»? Z è½´ç?????è½¬ç?©é??
		!#en Calculating rotation matrix about the Z axis 
		*/
		static fromZRotation<Out extends IMat4Like> (out: Out, rad: number): Out;		
		/**
		!#zh ??¹æ?®æ??è½¬å??ä½?ç§»ä¿¡??¯è®¡ç®???©é??
		!#en The rotation and displacement information calculating matrix 
		*/
		static fromRT<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, q: Quat, v: VecLike): Out;		
		/**
		!#zh ????????©é?µç??ä½?ç§»ä¿¡???, é»?è®¤ç?©é?µä¸­????????¢ä»¥ S->R->T ???é¡ºå??åº????
		!#en Extracting displacement information of the matrix, the matrix transform to the default sequential application S-> R-> T is 
		*/
		static getTranslation<Out extends IMat4Like, VecLike extends IVec3Like> (out: VecLike, mat: Out): VecLike;		
		/**
		!#zh ????????©é?µç??ç¼©æ?¾ä¿¡???, é»?è®¤ç?©é?µä¸­????????¢ä»¥ S->R->T ???é¡ºå??åº????
		!#en Scaling information extraction matrix, the matrix transform to the default sequential application S-> R-> T is 
		*/
		static getScaling<Out extends IMat4Like, VecLike extends IVec3Like> (out: VecLike, mat: Out): VecLike;		
		/**
		!#zh ????????©é?µç?????è½¬ä¿¡???, é»?è®¤è????¥ç?©é?µä????«æ??ç¼©æ?¾ä¿¡??¯ï??å¦???????ç¼©æ?¾å??ä½¿ç?? `toRTS` ??½æ?°ã??
		!#en Rotation information extraction matrix, the matrix containing no default input scaling information, such as the use of `toRTS` should consider the scaling function. 
		*/
		static getRotation<Out extends IMat4Like> (out: Quat, mat: Out): Quat;		
		/**
		!#zh ?????????è½¬ã??ä½?ç§»ã??ç¼©æ?¾ä¿¡??¯ï?? é»?è®¤ç?©é?µä¸­????????¢ä»¥ S->R->T ???é¡ºå??åº????
		!#en Extracting rotational displacement, zoom information, the default matrix transformation in order S-> R-> T applications 
		*/
		static toRTS<Out extends IMat4Like, VecLike extends IVec3Like> (mat: Out, q: Quat, v: VecLike, s: VecLike): void;		
		/**
		!#zh ??¹æ?®æ??è½¬ã??ä½?ç§»ã??ç¼©æ?¾ä¿¡??¯è®¡ç®???©é?µï??ä»? S->R->T ???é¡ºå??åº????
		!#en The rotary displacement, the scaling matrix calculation information, the order S-> R-> T applications 
		*/
		static fromRTS<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, q: Quat, v: VecLike, s: VecLike): Out;		
		/**
		!#zh ??¹æ?®æ??å®???????è½¬ã??ä½?ç§»ã??ç¼©æ?¾å???????¢ä¸­å¿?ä¿¡æ?¯è®¡ç®???©é?µï??ä»? S->R->T ???é¡ºå??åº????
		!#en According to the specified rotation, displacement, and scale conversion matrix calculation information center, order S-> R-> T applications
		@param q ???è½¬å??
		@param v ä½?ç§»å??
		@param s ç¼©æ?¾å??
		@param o ???å®??????¢ä¸­å¿? 
		*/
		static fromRTSOrigin<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, q: Quat, v: VecLike, s: VecLike, o: VecLike): Out;		
		/**
		!#zh ??¹æ?®æ??å®???????è½¬ä¿¡??¯è®¡ç®???©é??
		!#en The rotation matrix calculation information specified 
		*/
		static fromQuat<Out extends IMat4Like> (out: Out, q: Quat): Out;		
		/**
		!#zh ??¹æ?®æ??å®????è§???¥ä??ä¿¡æ?¯è®¡ç®???©é??
		!#en The matrix calculation information specified frustum
		@param left å·¦å¹³??¢è??ç¦?
		@param right ??³å¹³??¢è??ç¦?
		@param bottom ä¸?å¹³é?¢è??ç¦?
		@param top ä¸?å¹³é?¢è??ç¦?
		@param near è¿?å¹³é?¢è??ç¦?
		@param far è¿?å¹³é?¢è??ç¦? 
		*/
		static frustum<Out extends IMat4Like> (out: Out, left: number, right: number, bottom: number, top: number, near: number, far: number): Out;		
		/**
		!#zh è®¡ç?????è§????å½±ç?©é??
		!#en Perspective projection matrix calculation
		@param fovy çºµå??è§?è§?é«?åº?
		@param aspect ??¿å®½æ¯?
		@param near è¿?å¹³é?¢è??ç¦?
		@param far è¿?å¹³é?¢è??ç¦? 
		*/
		static perspective<Out extends IMat4Like> (out: Out, fovy: number, aspect: number, near: number, far: number): Out;		
		/**
		!#zh è®¡ç??æ­?äº¤æ??å½±ç?©é??
		!#en Computing orthogonal projection matrix
		@param left å·¦å¹³??¢è??ç¦?
		@param right ??³å¹³??¢è??ç¦?
		@param bottom ä¸?å¹³é?¢è??ç¦?
		@param top ä¸?å¹³é?¢è??ç¦?
		@param near è¿?å¹³é?¢è??ç¦?
		@param far è¿?å¹³é?¢è??ç¦? 
		*/
		static ortho<Out extends IMat4Like> (out: Out, left: number, right: number, bottom: number, top: number, near: number, far: number): Out;		
		/**
		!#zh ??¹æ?®è????¹è®¡ç®???©é?µï??æ³¨æ?? `eye - center` ä¸???½ä¸º??¶å????????ä¸? `up` ??????å¹³è??
		!#en `Up` parallel vector or vector center` not be zero - the matrix calculation according to the viewpoint, note` eye
		@param eye å½????ä½?ç½?
		@param center ??®æ??è§????
		@param up è§????ä¸???¹å?? 
		*/
		static lookAt<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, eye: VecLike, center: VecLike, up: VecLike): Out;		
		/**
		!#zh è®¡ç?????è½¬ç½®??©é??
		!#en Reversal matrix calculation 
		*/
		static inverseTranspose<Out extends IMat4Like> (out: Out, a: Out): Out;		
		/**
		!#zh ??????ç´???©é?µå??æ³?
		!#en Element by element matrix addition 
		*/
		static add<Out extends IMat4Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´???©é?µå??æ³?
		!#en Matrix element by element subtraction 
		*/
		static subtract<Out extends IMat4Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??©é?µæ?????ä¹?æ³?
		!#en Matrix scalar multiplication 
		*/
		static multiplyScalar<Out extends IMat4Like> (out: Out, a: Out, b: number): Out;		
		/**
		!#zh ??????ç´???©é?µæ?????ä¹????: A + B * scale
		!#en Elements of the matrix by the scalar multiplication and addition: A + B * scale 
		*/
		static multiplyScalarAndAdd<Out extends IMat4Like> (out: Out, a: Out, b: Out, scale: number): Out;		
		/**
		!#zh ??©é?µç??ä»·å?¤æ??
		!#en Analyzing the equivalent matrix 
		*/
		static strictEquals<Out extends IMat4Like> (a: Out, b: Out): boolean;		
		/**
		!#zh ?????¤æµ®??¹æ?°è¯¯å·®ç????©é?µè??ä¼¼ç??ä»·å?¤æ??
		!#en Negative floating point error is approximately equivalent to determining a matrix 
		*/
		static equals<Out extends IMat4Like> (a: Out, b: Out, epsilon?: number): boolean;		
		/**
		!#zh ??©é?µè½¬??°ç??
		!#en Matrix transpose array
		@param ofs ??°ç????????èµ·å?????ç§»é?? 
		*/
		static toArray <Out extends IWritableArrayLike<number>> (out: Out, mat: IMat4Like, ofs?: number): Out;		
		/**
		!#zh ??°ç??è½¬ç?©é??
		!#en Transfer matrix array
		@param ofs ??°ç??èµ·å?????ç§»é?? 
		*/
		static fromArray <Out extends IMat4Like> (out: Out, arr: IWritableArrayLike<number>, ofs?: number): Out;		
		/** !#en Matrix Data
		!#zh ??©é?µæ?°æ?? */
		m: Float64Array|Float32Array;		
		/**
		!#en
		Constructor
		see {{#crossLink "cc/mat4:method"}}cc.mat4{{/crossLink}}
		!#zh
		????????½æ?°ï????¯æ?¥ç?? {{#crossLink "cc/mat4:method"}}cc.mat4{{/crossLink}} 
		*/
		constructor ( m00?: number, m01?: number, m02?: number, m03?: number, m10?: number, m11?: number, m12?: number, m13?: number, m20?: number, m21?: number, m22?: number, m23?: number, m30?: number, m31?: number, m32?: number, m33?: number);		
		/**
		!#en clone a Mat4 object
		!#zh ??????ä¸?ä¸? Mat4 å¯¹è±¡ 
		*/
		clone(): Mat4;		
		/**
		!#en Sets the matrix with another one's value
		!#zh ??¨å?¦ä??ä¸ªç?©é?µè®¾ç½®è??ä¸ªç?©é?µç????¼ã??
		@param srcObj srcObj 
		*/
		set(srcObj: Mat4): Mat4;		
		/**
		!#en Check whether two matrix equal
		!#zh å½?????????©é?µæ?¯å?¦ä?????å®??????©é?µç?¸ç?????
		@param other other 
		*/
		equals(other: Mat4): boolean;		
		/**
		!#en Check whether two matrix equal with default degree of variance.
		!#zh
		è¿?ä¼¼å?¤æ?­ä¸¤ä¸ªç?©é?µæ?¯å?¦ç?¸ç?????<br/>
		??¤æ?? 2 ä¸ªç?©é?µæ?¯å?¦å?¨é??è®¤è¯¯å·®è????´ä?????ï¼?å¦??????¨å??è¿???? trueï¼????ä¹????è¿???? false???
		@param other other 
		*/
		fuzzyEquals(other: Mat4): boolean;		
		/**
		!#en Transform to string with matrix informations
		!#zh è½¬æ?¢ä¸º??¹ä¾¿???è¯»ç??å­?ç¬¦ä¸²??? 
		*/
		toString(): string;		
		/**
		Set the matrix to the identity matrix 
		*/
		identity(): Mat4;		
		/**
		Transpose the values of a mat4
		@param out the receiving matrix, you can pass the same matrix to save result to itself, if not provided, a new matrix will be created. 
		*/
		transpose(out?: Mat4): Mat4;		
		/**
		Inverts a mat4
		@param out the receiving matrix, you can pass the same matrix to save result to itself, if not provided, a new matrix will be created. 
		*/
		invert(out?: Mat4): Mat4;		
		/**
		Calculates the adjugate of a mat4
		@param out the receiving matrix, you can pass the same matrix to save result to itself, if not provided, a new matrix will be created. 
		*/
		adjoint(out?: Mat4): Mat4;		
		/**
		Calculates the determinant of a mat4 
		*/
		determinant(): number;		
		/**
		Adds two Mat4
		@param other the second operand
		@param out the receiving matrix, you can pass the same matrix to save result to itself, if not provided, a new matrix will be created. 
		*/
		add(other: Mat4, out?: Mat4): Mat4;		
		/**
		Subtracts the current matrix with another one
		@param other the second operand 
		*/
		subtract(other: Mat4): Mat4;		
		/**
		Subtracts the current matrix with another one
		@param other the second operand 
		*/
		multiply(other: Mat4): Mat4;		
		/**
		Multiply each element of the matrix by a scalar.
		@param number amount to scale the matrix's elements by 
		*/
		multiplyScalar(number: number): Mat4;		
		/**
		Translate a mat4 by the given vector
		@param v vector to translate by
		@param out the receiving matrix, you can pass the same matrix to save result to itself, if not provided, a new matrix will be created 
		*/
		translate(v: Vec3, out?: Mat4): Mat4;		
		/**
		Scales the mat4 by the dimensions in the given vec3
		@param v vector to scale by
		@param out the receiving matrix, you can pass the same matrix to save result to itself, if not provided, a new matrix will be created 
		*/
		scale(v: Vec3, out?: Mat4): Mat4;		
		/**
		Rotates a mat4 by the given angle around the given axis
		@param rad the angle to rotate the matrix by
		@param axis the axis to rotate around
		@param out the receiving matrix, you can pass the same matrix to save result to itself, if not provided, a new matrix will be created 
		*/
		rotate(rad: number, axis: Vec3, out?: Mat4): Mat4;		
		/**
		Returns the translation vector component of a transformation matrix.
		@param out Vector to receive translation component, if not provided, a new vec3 will be created 
		*/
		getTranslation(out: Vec3): Vec3;		
		/**
		Returns the scale factor component of a transformation matrix
		@param out Vector to receive scale component, if not provided, a new vec3 will be created 
		*/
		getScale(out: Vec3): Vec3;		
		/**
		Returns the rotation factor component of a transformation matrix
		@param out Vector to receive rotation component, if not provided, a new quaternion object will be created 
		*/
		getRotation(out: Quat): Quat;		
		/**
		Restore the matrix values from a quaternion rotation, vector translation and vector scale
		@param q Rotation quaternion
		@param v Translation vector
		@param s Scaling vector 
		*/
		fromRTS(q: Quat, v: Vec3, s: Vec3): Mat4;		
		/**
		Restore the matrix values from a quaternion rotation
		@param q Rotation quaternion 
		*/
		fromQuat(q: Quat): Mat4;	
	}	
	/** !#en Representation of 2D vectors and points.
	!#zh è¡¨ç¤º 2D ??????????????? */
	export class Quat extends ValueType {		
		/**
		!#en
		Constructor
		see {{#crossLink "cc/quat:method"}}cc.quat{{/crossLink}}
		!#zh
		????????½æ?°ï????¯æ?¥ç?? {{#crossLink "cc/quat:method"}}cc.quat{{/crossLink}}
		@param x x
		@param y y
		@param z z
		@param w w 
		*/
		constructor(x?: number, y?: number, z?: number, w?: number);		
		/**
		!#en Calculate the multiply result between this quaternion and another one
		!#zh è®¡ç??????????°ä??ç§¯ç??ç»????
		@param other other
		@param out out 
		*/
		mul(other: Quat, out?: Quat): Quat;		
		/**
		!#zh ??·å?????å®?????????°ç????·è??
		!#en Obtaining copy specified quaternion 
		*/
		static clone<Out extends IQuatLike> (a: Out): Quat;		
		/**
		!#zh å¤???¶ç?®æ???????????
		!#en Copy quaternion target 
		*/
		static copy<Out extends IQuatLike, QuatLike extends IQuatLike> (out: Out, a: QuatLike): Out;		
		/**
		!#zh è®¾ç½®????????°å??
		!#en Provided Quaternion Value 
		*/
		static set<Out extends IQuatLike> (out: Out, x: number, y: number, z: number, w: number): Out;		
		/**
		!#zh å°???®æ??èµ???¼ä¸º???ä½??????????
		!#en The target of an assignment as a unit quaternion 
		*/
		static identity<Out extends IQuatLike> (out: Out): Out;		
		/**
		!#zh è®¾ç½®????????°ä¸ºä¸¤å???????´ç???????­è·¯å¾????è½¬ï??é»?è®¤ä¸¤????????½å·²å½?ä¸????
		!#en Set quaternion rotation is the shortest path between two vectors, the default two vectors are normalized 
		*/
		static rotationTo<Out extends IQuatLike, VecLike extends IVec3Like> (out: Out, a: VecLike, b: VecLike): Out;		
		/**
		!#zh ??·å??????????°ç?????è½¬è½´??????è½¬å¼§åº?
		!#en Get the rotary shaft and the arc of rotation quaternion
		@param outAxis ???è½¬è½´è¾????
		@param q æº?????????? 
		*/
		static getAxisAngle<Out extends IQuatLike, VecLike extends IVec3Like> (outAxis: VecLike, q: Out): number;		
		/**
		!#zh ????????°ä??æ³?
		!#en Quaternion multiplication 
		*/
		static multiply<Out extends IQuatLike, QuatLike_1 extends IQuatLike, QuatLike_2 extends IQuatLike> (out: Out, a: QuatLike_1, b: QuatLike_2): Out;		
		/**
		!#zh ????????°æ?????ä¹?æ³?
		!#en Quaternion scalar multiplication 
		*/
		static multiplyScalar<Out extends IQuatLike> (out: Out, a: Out, b: number): Out;		
		/**
		!#zh ????????°ä?????ï¼?A + B * scale
		!#en Quaternion multiplication and addition: A + B * scale 
		*/
		static scaleAndAdd<Out extends IQuatLike> (out: Out, a: Out, b: Out, scale: number): Out;		
		/**
		!#zh ç»? X è½´æ??è½¬æ??å®??????????
		!#en About the X axis specified quaternion
		@param rad ???è½¬å¼§åº? 
		*/
		static rotateX<Out extends IQuatLike> (out: Out, a: Out, rad: number): Out;		
		/**
		!#zh ç»? Y è½´æ??è½¬æ??å®??????????
		!#en Rotation about the Y axis designated quaternion
		@param rad ???è½¬å¼§åº? 
		*/
		static rotateY<Out extends IQuatLike> (out: Out, a: Out, rad: number): Out;		
		/**
		!#zh ç»? Z è½´æ??è½¬æ??å®??????????
		!#en Around the Z axis specified quaternion
		@param rad ???è½¬å¼§åº? 
		*/
		static rotateZ<Out extends IQuatLike> (out: Out, a: Out, rad: number): Out;		
		/**
		!#zh ç»?ä¸????ç©ºé?´ä?????å®?è½´æ??è½¬å????????
		!#en Space around the world at a given axis of rotation quaternion
		@param axis ???è½¬è½´ï¼?é»?è®¤å·²å½?ä¸????
		@param rad ???è½¬å¼§åº? 
		*/
		static rotateAround<Out extends IQuatLike, VecLike extends IVec3Like> (out: Out, rot: Out, axis: VecLike, rad: number): Out;		
		/**
		!#zh ç»???¬å?°ç©º??´ä?????å®?è½´æ??è½¬å????????
		!#en Local space around the specified axis rotation quaternion
		@param axis ???è½¬è½´
		@param rad ???è½¬å¼§åº? 
		*/
		static rotateAroundLocal<Out extends IQuatLike, VecLike extends IVec3Like> (out: Out, rot: Out, axis: VecLike, rad: number): Out;		
		/**
		!#zh ??¹æ?? xyz ??????è®¡ç?? w ??????ï¼?é»?è®¤å·²å½?ä¸????
		!#en The component w xyz components calculated, normalized by default 
		*/
		static calculateW<Out extends IQuatLike> (out: Out, a: Out): Out;		
		/**
		!#zh ????????°ç?¹ç§¯ï¼???°é??ç§¯ï??
		!#en Quaternion dot product (scalar product) 
		*/
		static dot<Out extends IQuatLike> (a: Out, b: Out): number;		
		/**
		!#zh ??????ç´?çº¿æ?§æ????¼ï?? A + t * (B - A)
		!#en Element by element linear interpolation: A + t * (B - A) 
		*/
		static lerp<Out extends IQuatLike> (out: Out, a: Out, b: Out, t: number): Out;		
		/**
		!#zh ????????°ç????¢æ?????
		!#en Spherical quaternion interpolation 
		*/
		static slerp<Out extends IQuatLike, QuatLike_1 extends IQuatLike, QuatLike_2 extends IQuatLike>(out: Out, a: QuatLike_1, b: QuatLike_2, t: number): Out;		
		/**
		!#zh å¸¦ä¸¤ä¸ªæ?§å?¶ç?¹ç??????????°ç????¢æ?????
		!#en Quaternion with two spherical interpolation control points 
		*/
		static sqlerp<Out extends IQuatLike> (out: Out, a: Out, b: Out, c: Out, d: Out, t: number): Out;		
		/**
		!#zh ????????°æ?????
		!#en Quaternion inverse 
		*/
		static invert<Out extends IQuatLike, QuatLike extends IQuatLike> (out: Out, a: QuatLike): Out;		
		/**
		!#zh æ±???±è½­????????°ï??å¯¹å??ä½?????????°ä??æ±????ç­?ä»·ï??ä½???´é?????
		!#en Conjugating a quaternion, and the unit quaternion equivalent to inversion, but more efficient 
		*/
		static conjugate<Out extends IQuatLike> (out: Out, a: Out): Out;		
		/**
		!#zh æ±?????????°é?¿åº¦
		!#en Seek length quaternion 
		*/
		static len<Out extends IQuatLike> (a: Out): number;		
		/**
		!#zh æ±?????????°é?¿åº¦å¹³æ??
		!#en Seeking quaternion square of the length 
		*/
		static lengthSqr<Out extends IQuatLike> (a: Out): number;		
		/**
		!#zh å½?ä¸?????????????
		!#en Normalized quaternions 
		*/
		static normalize<Out extends IQuatLike> (out: Out, a: Out): Out;		
		/**
		!#zh ??¹æ?®æ?¬å?°å?????è½´æ?????è®¡ç??????????°ï??é»?è®¤ä??????????½å·²å½?ä¸????ä¸???¸ä????????
		!#en Calculated according to the local orientation quaternion coordinate axis, the default three vectors are normalized and mutually perpendicular 
		*/
		static fromAxes<Out extends IQuatLike, VecLike extends IVec3Like> (out: Out, xAxis: VecLike, yAxis: VecLike, zAxis: VecLike): Out;		
		/**
		!#zh ??¹æ?®è?????????????¹å?????ä¸???¹å??è®¡ç???????????
		!#en The forward direction and the direction of the viewport computing quaternion
		@param view è§??????¢å??????????¹å??ï¼?å¿?é¡»å??ä¸????
		@param up è§???????ä¸???¹å??ï¼?å¿?é¡»å??ä¸????ï¼?é»?è®¤ä¸º (0, 1, 0) 
		*/
		static fromViewUp<Out extends IQuatLike> (out: Out, view: Vec3, up?: Vec3): Out;		
		/**
		!#zh ??¹æ?®æ??è½¬è½´??????è½¬å¼§åº¦è®¡ç®??????????
		!#en The quaternion calculated and the arc of rotation of the rotary shaft 
		*/
		static fromAxisAngle<Out extends IQuatLike, VecLike extends IVec3Like> (out: Out, axis: VecLike, rad: number): Out;		
		/**
		!#zh ??¹æ?®ä??ç»´ç?©é?µä¿¡??¯è®¡ç®?????????°ï??é»?è®¤è????¥ç?©é?µä????«æ??ç¼©æ?¾ä¿¡???
		!#en Calculating the three-dimensional quaternion matrix information, default zoom information input matrix does not contain 
		*/
		static fromMat3<Out extends IQuatLike> (out: Out, mat: Mat3): Out;		
		/**
		!#zh ??¹æ?®æ¬§???è§?ä¿¡æ?¯è®¡ç®?????????°ï?????è½¬é¡ºåº?ä¸? YZX
		!#en The quaternion calculated Euler angle information, rotation order YZX 
		*/
		static fromEuler<Out extends IQuatLike> (out: Out, x: number, y: number, z: number): Out;		
		/**
		!#zh è¿????å®?ä¹?æ­¤å???????°ç????????ç³? X è½´å?????
		!#en This returns the result of the quaternion coordinate system X-axis vector 
		*/
		static toAxisX<Out extends IQuatLike, VecLike extends IVec3Like> (out: VecLike, q: Out): VecLike;		
		/**
		!#zh è¿????å®?ä¹?æ­¤å???????°ç????????ç³? Y è½´å?????
		!#en This returns the result of the quaternion coordinate system Y axis vector 
		*/
		static toAxisY<Out extends IQuatLike, VecLike extends IVec3Like> (out: VecLike, q: Out): VecLike;		
		/**
		!#zh è¿????å®?ä¹?æ­¤å???????°ç????????ç³? Z è½´å?????
		!#en This returns the result of the quaternion coordinate system the Z-axis vector 
		*/
		static toAxisZ<Out extends IQuatLike, VecLike extends IVec3Like> (out: VecLike, q: Out): VecLike;		
		/**
		!#zh ??¹æ?®å???????°è®¡ç®?æ¬§æ??è§?ï¼?è¿????è§?åº? x, y ??? [-180, 180] ??ºé?´å??, z é»?è®¤å?? [-90, 90] ??ºé?´å??ï¼????è½¬é¡ºåº?ä¸? YZX
		!#en The quaternion calculated Euler angles, return angle x, y in the [-180, 180] interval, z default the range [-90, 90] interval, the rotation order YZX
		@param outerZ z ?????¼è????´å?ºé?´æ?¹ä¸º [-180, -90] U [90, 180] 
		*/
		static toEuler<Out extends IVec3Like> (out: Out, q: IQuatLike, outerZ?: boolean): Out;		
		/**
		!#zh ????????°ç??ä»·å?¤æ??
		!#en Analyzing quaternion equivalent 
		*/
		static strictEquals<Out extends IQuatLike> (a: Out, b: Out): boolean;		
		/**
		!#zh ?????¤æµ®??¹æ?°è¯¯å·®ç??????????°è??ä¼¼ç??ä»·å?¤æ??
		!#en Negative floating point error quaternion approximately equivalent Analyzing 
		*/
		static equals<Out extends IQuatLike> (a: Out, b: Out, epsilon?: number): boolean;		
		/**
		!#zh ????????°è½¬??°ç??
		!#en Quaternion rotation array
		@param ofs ??°ç????????èµ·å?????ç§»é?? 
		*/
		static toArray <Out extends IWritableArrayLike<number>> (out: Out, q: IQuatLike, ofs?: number): Out;		
		/**
		!#zh ??°ç??è½¬å????????
		!#en Array to a quaternion
		@param ofs ??°ç??èµ·å?????ç§»é?? 
		*/
		static fromArray <Out extends IQuatLike> (out: Out, arr: IWritableArrayLike<number>, ofs?: number): Out;		
		x: number;		
		y: number;		
		z: number;		
		w: number;		
		/**
		!#en clone a Quat object and return the new object
		!#zh ??????ä¸?ä¸ªå???????°å¹¶è¿???? 
		*/
		clone(): Quat;		
		/**
		!#en Set values with another quaternion
		!#zh ??¨å?¦ä??ä¸ªå???????°ç????¼è®¾ç½®å?°å?????å¯¹è±¡ä¸????
		@param newValue !#en new value to set. !#zh è¦?è®¾ç½®?????°å?? 
		*/
		set(newValue: Quat): Quat;		
		/**
		!#en Check whether current quaternion equals another
		!#zh å½???????????????°æ?¯å?¦ä?????å®????????????°ç?¸ç?????
		@param other other 
		*/
		equals(other: Quat): boolean;		
		/**
		!#en Convert quaternion to euler
		!#zh è½¬æ?¢å???????°å?°æ¬§???è§?
		@param out out 
		*/
		toEuler(out: Vec3): Vec3;		
		/**
		!#en Convert euler to quaternion
		!#zh è½¬æ?¢æ¬§???è§???°å????????
		@param euler euler 
		*/
		fromEuler(euler: Vec3): Quat;		
		/**
		!#en Calculate the interpolation result between this quaternion and another one with given ratio
		!#zh è®¡ç??????????°ç???????¼ç?????
		@param to to
		@param ratio ratio
		@param out out 
		*/
		lerp(to: Quat, ratio: number, out?: Quat): Quat;		
		/**
		!#en Calculate the multiply result between this quaternion and another one
		!#zh è®¡ç??????????°ä??ç§¯ç??ç»????
		@param other other 
		*/
		multiply(other: Quat): Quat;		
		/**
		!#en Rotates a quaternion by the given angle (in radians) about a world space axis.
		!#zh ??´ç??ä¸????ç©ºé?´è½´???ç»?å®?å¼§åº¦???è½¬å????????
		@param rot Quaternion to rotate
		@param axis The axis around which to rotate in world space
		@param rad Angle (in radians) to rotate
		@param out Quaternion to store result 
		*/
		rotateAround(rot: Quat, axis: Vec3, rad: number, out?: Quat): Quat;	
	}	
	/** !#en A 2D rectangle defined by x, y position and width, height.
	!#zh ???è¿?ä½?ç½®å??å®½é??å®?ä¹???? 2D ??©å½¢??? */
	export class Rect extends ValueType {		
		/**
		!#en
		Constructor of Rect class.
		see {{#crossLink "cc/rect:method"}} cc.rect {{/crossLink}} for convenience method.
		!#zh
		Rectç±»ç??????????½æ?°ã????¯ä»¥???è¿? {{#crossLink "cc/rect:method"}} cc.rect {{/crossLink}} ç®?ä¾¿æ?¹æ??è¿?è¡????å»ºã??
		@param x x
		@param y y
		@param w w
		@param h h 
		*/
		constructor(x?: number, y?: number, w?: number, h?: number);		
		/**
		!#en Creates a rectangle from two coordinate values.
		!#zh ??¹æ?®æ??å®? 2 ä¸ªå????????å»ºå?ºä??ä¸ªç?©å½¢??ºå?????
		@param v1 v1
		@param v2 v2
		
		@example 
		```js
		cc.Rect.fromMinMax(cc.v2(10, 10), cc.v2(20, 20)); // Rect {x: 10, y: 10, width: 10, height: 10};
		``` 
		*/
		static fromMinMax(v1: Vec2, v2: Vec2): Rect;		
		x: number;		
		y: number;		
		width: number;		
		height: number;		
		/**
		!#en TODO
		!#zh ??????ä¸?ä¸ªæ?°ç?? Rect???
		
		@example 
		```js
		var a = new cc.Rect(0, 0, 10, 10);
		a.clone();// Rect {x: 0, y: 0, width: 10, height: 10}
		``` 
		*/
		clone(): Rect;		
		/**
		!#en TODO
		!#zh ??¯å?¦ç??äº????å®??????©å½¢???
		@param other other
		
		@example 
		```js
		var a = new cc.Rect(0, 0, 10, 10);
		var b = new cc.Rect(0, 0, 10, 10);
		a.equals(b);// true;
		``` 
		*/
		equals(other: Rect): boolean;		
		/**
		!#en TODO
		!#zh çº¿æ?§æ?????
		@param to to
		@param ratio the interpolation coefficient.
		@param out optional, the receiving vector.
		
		@example 
		```js
		var a = new cc.Rect(0, 0, 10, 10);
		var b = new cc.Rect(50, 50, 100, 100);
		update (dt) {
		   // method 1;
		   var c = a.lerp(b, dt * 0.1);
		   // method 2;
		   a.lerp(b, dt * 0.1, c);
		}
		``` 
		*/
		lerp(to: Rect, ratio: number, out?: Rect): Rect;		
		/**
		!#en Check whether the current rectangle intersects with the given one
		!#zh å½??????©å½¢ä¸????å®???©å½¢??¯å?¦ç?¸äº¤???
		@param rect rect
		
		@example 
		```js
		var a = new cc.Rect(0, 0, 10, 10);
		var b = new cc.Rect(0, 0, 20, 20);
		a.intersects(b);// true
		``` 
		*/
		intersects(rect: Rect): boolean;		
		/**
		!#en Returns the overlapping portion of 2 rectangles.
		!#zh è¿???? 2 ä¸ªç?©å½¢???????????¨å?????
		@param out Stores the result
		@param rectB rectB
		
		@example 
		```js
		var a = new cc.Rect(0, 10, 20, 20);
		var b = new cc.Rect(0, 10, 10, 10);
		var intersection = new cc.Rect();
		a.intersection(intersection, b); // intersection {x: 0, y: 10, width: 10, height: 10};
		``` 
		*/
		intersection(out: Rect, rectB: Rect): Rect;		
		/**
		!#en Check whether the current rect contains the given point
		!#zh å½??????©å½¢??¯å?¦å????«æ??å®?????????¹ã??
		Returns true if the point inside this rectangle.
		@param point point
		
		@example 
		```js
		var a = new cc.Rect(0, 0, 10, 10);
		var b = new cc.Vec2(0, 5);
		a.contains(b);// true
		``` 
		*/
		contains(point: Vec2): boolean;		
		/**
		!#en Returns true if the other rect totally inside this rectangle.
		!#zh å½??????©å½¢??¯å?¦å????«æ??å®???©å½¢???
		@param rect rect
		
		@example 
		```js
		var a = new cc.Rect(0, 0, 20, 20);
		var b = new cc.Rect(0, 0, 10, 10);
		a.containsRect(b);// true
		``` 
		*/
		containsRect(rect: Rect): boolean;		
		/**
		!#en Returns the smallest rectangle that contains the current rect and the given rect.
		!#zh è¿????ä¸?ä¸ªå????«å???????©å½¢??????å®???©å½¢??????å°???©å½¢???
		@param out Stores the result
		@param rectB rectB
		
		@example 
		```js
		var a = new cc.Rect(0, 10, 20, 20);
		var b = new cc.Rect(0, 10, 10, 10);
		var union = new cc.Rect();
		a.union(union, b); // union {x: 0, y: 10, width: 20, height: 20};
		``` 
		*/
		union(out: Rect, rectB: Rect): Rect;		
		/**
		!#en Apply matrix4 to the rect.
		!#zh ä½¿ç?? mat4 å¯¹ç?©å½¢è¿?è¡???©é?µè½¬??¢ã??
		@param out The output rect
		@param mat The matrix4 
		*/
		transformMat4(out: Rect, mat: Mat4): void;		
		/**
		!#en Output rect informations to string
		!#zh è½¬æ?¢ä¸º??¹ä¾¿???è¯»ç??å­?ç¬¦ä¸²
		
		@example 
		```js
		var a = new cc.Rect(0, 0, 10, 10);
		a.toString();// "(0.00, 0.00, 10.00, 10.00)";
		``` 
		*/
		toString(): string;		
		/** !#en The minimum x value, equals to rect.x
		!#zh ??©å½¢ x è½´ä????????å°???¼ï??ç­?ä»·ä?? rect.x??? */
		xMin: number;		
		/** !#en The minimum y value, equals to rect.y
		!#zh ??©å½¢ y è½´ä????????å°???¼ã?? */
		yMin: number;		
		/** !#en The maximum x value.
		!#zh ??©å½¢ x è½´ä????????å¤§å?¼ã?? */
		xMax: number;		
		/** !#en The maximum y value.
		!#zh ??©å½¢ y è½´ä????????å¤§å?¼ã?? */
		yMax: number;		
		/** !#en The position of the center of the rectangle.
		!#zh ??©å½¢???ä¸­å????¹ã?? */
		center: Vec2;		
		/** !#en The X and Y position of the rectangle.
		!#zh ??©å½¢??? x ??? y ????????? */
		origin: Vec2;		
		/** !#en Width and height of the rectangle.
		!#zh ??©å½¢???å¤§å????? */
		size: Size;	
	}	
	/** !#en
	cc.Size is the class for size object,<br/>
	please do not use its constructor to create sizes,<br/>
	use {{#crossLink "cc/size:method"}}{{/crossLink}} alias function instead.<br/>
	It will be deprecated soon, please use cc.Vec2 instead.
	
	!#zh
	cc.Size ??? size å¯¹è±¡???ç±»ã??<br/>
	è¯·ä??è¦?ä½¿ç?¨å?????????????½æ?°å??å»ºç?? sizeï¼?<br/>
	ä½¿ç?? {{#crossLink "cc/size:method"}}{{/crossLink}} ??«å????½æ?°ã??<br/>
	å®?ä¸?ä¹?å°?è¢«å??æ¶?ï¼?è¯·ä½¿??¨cc.Vec2ä»???¿ã?? */
	export class Size {		
		/**
		
		@param width width
		@param height height 
		*/
		constructor(width: number|Size, height?: number);		
		/** !#en return a Size object with width = 0 and height = 0.
		!#zh è¿????ä¸?ä¸ªå®½åº¦ä¸º 0 ???é«?åº¦ä¸º 0 ??? Size å¯¹è±¡??? */
		static ZERO: Size;		
		width: number;		
		height: number;		
		/**
		!#en TODO
		!#zh ?????? size å¯¹è±¡???
		
		@example 
		```js
		var a = new cc.size(10, 10);
		a.clone();// return Size {width: 0, height: 0};
		``` 
		*/
		clone(): Size;		
		/**
		!#en TODO
		!#zh å½???? Size å¯¹è±¡??¯å?¦ç??äº????å®? Size å¯¹è±¡???
		@param other other
		
		@example 
		```js
		var a = new cc.size(10, 10);
		a.equals(new cc.size(10, 10));// return true;
		``` 
		*/
		equals(other: Size): boolean;		
		/**
		!#en TODO
		!#zh çº¿æ?§æ????¼ã??
		@param to to
		@param ratio the interpolation coefficient.
		@param out optional, the receiving vector.
		
		@example 
		```js
		var a = new cc.size(10, 10);
		var b = new cc.rect(50, 50, 100, 100);
		update (dt) {
		   // method 1;
		   var c = a.lerp(b, dt * 0.1);
		   // method 2;
		   a.lerp(b, dt * 0.1, c);
		}
		``` 
		*/
		lerp(to: Rect, ratio: number, out?: Size): Size;		
		/**
		!#en TODO
		!#zh è½¬æ?¢ä¸º??¹ä¾¿???è¯»ç??å­?ç¬¦ä¸²???
		
		@example 
		```js
		var a = new cc.size(10, 10);
		a.toString();// return "(10.00, 10.00)";
		``` 
		*/
		toString(): string;	
	}	
	/** !#en The base class of all value types.
	!#zh ????????¼ç±»????????ºç±»??? */
	export class ValueType {		
		/**
		!#en This method returns an exact copy of current value.
		!#zh ??????å½??????¼ï??è¯¥æ?¹æ??è¿????ä¸?ä¸ªæ?°å¯¹è±¡ï????°å¯¹è±¡ç????¼å?????å¯¹è±¡??¸ç????? 
		*/
		clone(): ValueType;		
		/**
		!#en Compares this object with the other one.
		!#zh å½????å¯¹è±¡??¯å?¦ç??äº????å®?å¯¹è±¡???
		@param other other 
		*/
		equals(other: ValueType): boolean;		
		/**
		!#en
		Linearly interpolates between this value to to value by ratio which is in the range [0, 1].
		When ratio = 0 returns this. When ratio = 1 return to. When ratio = 0.5 returns the average of this and to.
		!#zh
		çº¿æ?§æ????¼ã??<br/>
		å½? ratio = 0 ??¶è???????ªèº«ï¼?ratio = 1 ??¶è???????®æ??ï¼?ratio = 0.5 è¿??????ªèº«?????®æ?????å¹³å????¼ã?????
		@param to the to value
		@param ratio the interpolation coefficient 
		*/
		lerp(to: ValueType, ratio: number): ValueType;		
		/**
		!#en
		Copys all the properties from another given object to this value.
		!#zh
		ä»???¶å??å¯¹è±¡?????????å±???§å????¶å?°å?????å¯¹è±¡???
		@param source the source to copy 
		*/
		set(source: ValueType): void;		
		/**
		!#en Convert to a readable string.
		!#zh è½¬æ?¢ä¸º??¹ä¾¿???è¯»ç??å­?ç¬¦ä¸²??? 
		*/
		toString(): string;	
	}	
	/** !#en Representation of 2D vectors and points.
	!#zh è¡¨ç¤º 2D ??????????????? */
	export class Vec2 extends ValueType {		
		/**
		!#en Returns the length of this vector.
		!#zh è¿????è¯¥å??????????¿åº¦???
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.mag(); // return 14.142135623730951;
		``` 
		*/
		mag(): number;		
		/**
		!#en Returns the squared length of this vector.
		!#zh è¿????è¯¥å??????????¿åº¦å¹³æ?¹ã??
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.magSqr(); // return 200;
		``` 
		*/
		magSqr(): number;		
		/**
		!#en Subtracts one vector from this. If you want to save result to another vector, use sub() instead.
		!#zh ?????????æ³????å¦????ä½???³ä??å­?ç»??????°å?¦ä??ä¸ªå?????ï¼???¯ä½¿??? sub() ä»???¿ã??
		@param vector vector
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.subSelf(cc.v2(5, 5));// return Vec2 {x: 5, y: 5};
		``` 
		*/
		subSelf(vector: Vec2): Vec2;		
		/**
		!#en Subtracts one vector from this, and returns the new result.
		!#zh ?????????æ³?ï¼?å¹¶è???????°ç????????
		@param vector vector
		@param out optional, the receiving vector, you can pass the same vec2 to save result to itself, if not provided, a new vec2 will be created
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.sub(cc.v2(5, 5));      // return Vec2 {x: 5, y: 5};
		var v1 = new Vec2;
		v.sub(cc.v2(5, 5), v1);  // return Vec2 {x: 5, y: 5};
		``` 
		*/
		sub(vector: Vec2, out?: Vec2): Vec2;		
		/**
		!#en Multiplies this by a number. If you want to save result to another vector, use mul() instead.
		!#zh ç¼©æ?¾å??????????????å¦????ä½???³ç?????ä¿?å­???°å?¦ä??ä¸ªå?????ï¼???¯ä½¿??? mul() ä»???¿ã??
		@param num num
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.mulSelf(5);// return Vec2 {x: 50, y: 50};
		``` 
		*/
		mulSelf(num: number): Vec2;		
		/**
		!#en Multiplies by a number, and returns the new result.
		!#zh ç¼©æ?¾å?????ï¼?å¹¶è???????°ç????????
		@param num num
		@param out optional, the receiving vector, you can pass the same vec2 to save result to itself, if not provided, a new vec2 will be created
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.mul(5);      // return Vec2 {x: 50, y: 50};
		var v1 = new Vec2;
		v.mul(5, v1);  // return Vec2 {x: 50, y: 50};
		``` 
		*/
		mul(num: number, out?: Vec2): Vec2;		
		/**
		!#en Divides by a number. If you want to save result to another vector, use div() instead.
		!#zh ????????¤æ?????å¦????ä½???³ç?????ä¿?å­???°å?¦ä??ä¸ªå?????ï¼???¯ä½¿??? div() ä»???¿ã??
		@param num num
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.divSelf(5); // return Vec2 {x: 2, y: 2};
		``` 
		*/
		divSelf(num: number): Vec2;		
		/**
		!#en Divides by a number, and returns the new result.
		!#zh ????????¤æ??ï¼?å¹¶è???????°ç??ç»???????
		@param num num
		@param out optional, the receiving vector, you can pass the same vec2 to save result to itself, if not provided, a new vec2 will be created
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.div(5);      // return Vec2 {x: 2, y: 2};
		var v1 = new Vec2;
		v.div(5, v1);  // return Vec2 {x: 2, y: 2};
		``` 
		*/
		div(num: number, out?: Vec2): Vec2;		
		/**
		!#en Multiplies two vectors.
		!#zh ????????¸ä?????
		@param vector vector
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.scaleSelf(cc.v2(5, 5));// return Vec2 {x: 50, y: 50};
		``` 
		*/
		scaleSelf(vector: Vec2): Vec2;		
		/**
		!#en Multiplies two vectors, and returns the new result.
		!#zh ????????¸ä??ï¼?å¹¶è???????°ç??ç»???????
		@param vector vector
		@param out optional, the receiving vector, you can pass the same vec2 to save result to itself, if not provided, a new vec2 will be created
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.scale(cc.v2(5, 5));      // return Vec2 {x: 50, y: 50};
		var v1 = new Vec2;
		v.scale(cc.v2(5, 5), v1);  // return Vec2 {x: 50, y: 50};
		``` 
		*/
		scale(vector: Vec2, out?: Vec2): Vec2;		
		/**
		!#en Negates the components. If you want to save result to another vector, use neg() instead.
		!#zh ???????????????å¦????ä½???³ç?????ä¿?å­???°å?¦ä??ä¸ªå?????ï¼???¯ä½¿??? neg() ä»???¿ã??
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.negSelf(); // return Vec2 {x: -10, y: -10};
		``` 
		*/
		negSelf(): Vec2;		
		/**
		!#en Negates the components, and returns the new result.
		!#zh è¿??????????????????°å????????
		@param out optional, the receiving vector, you can pass the same vec2 to save result to itself, if not provided, a new vec2 will be created
		
		@example 
		```js
		var v = cc.v2(10, 10);
		var v1 = new Vec2;
		v.neg(v1);  // return Vec2 {x: -10, y: -10};
		``` 
		*/
		neg(out?: Vec2): Vec2;		
		/** !#en return a Vec2 object with x = 1 and y = 1.
		!#zh ??? Vec2 å¯¹è±¡??? */
		static ONE: Vec2;		
		/** !#en return a Vec2 object with x = 0 and y = 0.
		!#zh è¿???? x = 0 ??? y = 0 ??? Vec2 å¯¹è±¡??? */
		static ZERO: Vec2;		
		/** !#en return a readonly Vec2 object with x = 0 and y = 0.
		!#zh è¿????ä¸?ä¸? x = 0 ??? y = 0 ??? Vec2 ??ªè¯»å¯¹è±¡??? */
		static ZERO_R: Vec2;		
		/** !#en return a Vec2 object with x = 0 and y = 1.
		!#zh è¿???? x = 0 ??? y = 1 ??? Vec2 å¯¹è±¡??? */
		static UP: Vec2;		
		/** !#en return a readonly Vec2 object with x = 0 and y = 1.
		!#zh è¿???? x = 0 ??? y = 1 ??? Vec2 ??ªè¯»å¯¹è±¡??? */
		static UP_R: Vec2;		
		/** !#en return a readonly Vec2 object with x = 1 and y = 0.
		!#zh è¿???? x = 1 ??? y = 0 ??? Vec2 ??ªè¯»å¯¹è±¡??? */
		static RIGHT: Vec2;		
		/** !#en return a Vec2 object with x = 1 and y = 0.
		!#zh è¿???? x = 1 ??? y = 0 ??? Vec2 å¯¹è±¡??? */
		static RIGHT_R: Vec2;		
		/**
		!#zh ??·å?????å®????????????·è?? 
		*/
		static clone <Out extends IVec2Like> (a: Out): Vec2;		
		/**
		!#zh å¤???¶æ??å®????????????? 
		*/
		static copy <Out extends IVec2Like> (out: Out, a: Out): Out;		
		/**
		!#zh  è®¾ç½®????????? 
		*/
		static set <Out extends IVec2Like> (out: Out, x: number, y: number): Out;		
		/**
		!#zh ??????ç´??????????æ³? 
		*/
		static add <Out extends IVec2Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´??????????æ³? 
		*/
		static subtract <Out extends IVec2Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´???????ä¹?æ³? 
		*/
		static multiply <Out extends IVec2Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´?????????¤æ?? 
		*/
		static divide <Out extends IVec2Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´??????????ä¸??????? 
		*/
		static ceil <Out extends IVec2Like> (out: Out, a: Out): Out;		
		/**
		!#zh ??????ç´??????????ä¸??????? 
		*/
		static floor <Out extends IVec2Like> (out: Out, a: Out): Out;		
		/**
		!#zh ??????ç´??????????å°???? 
		*/
		static min <Out extends IVec2Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´??????????å¤§å?? 
		*/
		static max <Out extends IVec2Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´?????????????äº???¥å????? 
		*/
		static round <Out extends IVec2Like> (out: Out, a: Out): Out;		
		/**
		!#zh ????????????ä¹?æ³? 
		*/
		static multiplyScalar <Out extends IVec2Like> (out: Out, a: Out, b: number): Out;		
		/**
		!#zh ??????ç´???????ä¹????: A + B * scale 
		*/
		static scaleAndAdd <Out extends IVec2Like> (out: Out, a: Out, b: Out, scale: number): Out;		
		/**
		!#zh æ±?ä¸¤å????????æ¬§æ??è·?ç¦? 
		*/
		static distance <Out extends IVec2Like> (a: Out, b: Out): number;		
		/**
		!#zh æ±?ä¸¤å????????æ¬§æ??è·?ç¦»å¹³??? 
		*/
		static squaredDistance <Out extends IVec2Like> (a: Out, b: Out): number;		
		/**
		!#zh æ±?????????¿åº¦ 
		*/
		static len <Out extends IVec2Like> (a: Out): number;		
		/**
		!#zh æ±?????????¿åº¦å¹³æ?? 
		*/
		static lengthSqr <Out extends IVec2Like> (a: Out): number;		
		/**
		!#zh ??????ç´??????????è´? 
		*/
		static negate <Out extends IVec2Like> (out: Out, a: Out): Out;		
		/**
		!#zh ??????ç´???????????????°ï????¥è?? 0 ??¶è????? Infinity 
		*/
		static inverse <Out extends IVec2Like> (out: Out, a: Out): Out;		
		/**
		!#zh ??????ç´???????????????°ï????¥è?? 0 ??¶è????? 0 
		*/
		static inverseSafe <Out extends IVec2Like> (out: Out, a: Out): Out;		
		/**
		!#zh å½?ä¸?????????? 
		*/
		static normalize <Out extends IVec2Like, Vec2Like extends IVec2Like> (out: Out, a: Vec2Like): Out;		
		/**
		!#zh ????????¹ç§¯ï¼???°é??ç§¯ï?? 
		*/
		static dot <Out extends IVec2Like> (a: Out, b: Out): number;		
		/**
		!#zh ?????????ç§¯ï????????ç§¯ï??ï¼?æ³¨æ??äº?ç»´å???????????ç§¯ä¸ºä¸? Z è½´å¹³è¡????ä¸?ç»´å????? 
		*/
		static cross <Out extends IVec2Like> (out: Vec2, a: Out, b: Out): Vec2;		
		/**
		!#zh ??????ç´???????çº¿æ?§æ????¼ï?? A + t * (B - A) 
		*/
		static lerp <Out extends IVec2Like> (out: Out, a: Out, b: Out, t: number): Out;		
		/**
		!#zh ??????ä¸?ä¸ªå?¨å??ä½????ä¸??????????å¸?????????ºå????? 
		*/
		static random <Out extends IVec2Like> (out: Out, scale?: number): Out;		
		/**
		!#zh ??????ä¸?ä¸?ç»´ç?©é?µä??æ³?ï¼?é»?è®¤å?????ç¬¬ä??ä½?ä¸? 1??? 
		*/
		static transformMat3 <Out extends IVec2Like, MatLike extends IMat3Like> (out: Out, a: Out, mat: IMat3Like): Out;		
		/**
		!#zh ??????ä¸????ç»´ç?©é?µä??æ³?ï¼?é»?è®¤å?????ç¬¬ä??ä½?ä¸? 0ï¼?ç¬¬å??ä½?ä¸? 1??? 
		*/
		static transformMat4 <Out extends IVec2Like, MatLike extends IMat4Like> (out: Out, a: Out, mat: MatLike): Out;		
		/**
		!#zh ??????ç­?ä»·å?¤æ?? 
		*/
		static strictEquals <Out extends IVec2Like> (a: Out, b: Out): boolean;		
		/**
		!#zh ?????¤æµ®??¹æ?°è¯¯å·®ç????????è¿?ä¼¼ç??ä»·å?¤æ?? 
		*/
		static equals <Out extends IVec2Like> (a: Out, b: Out,  epsilon?: number): boolean;		
		/**
		!#zh ?????¤æµ®??¹æ?°è¯¯å·®ç????????è¿?ä¼¼ç??ä»·å?¤æ?? 
		*/
		static angle <Out extends IVec2Like> (a: Out, b: Out): number;		
		/**
		!#zh ??????è½¬æ?°ç?? 
		*/
		static toArray <Out extends IWritableArrayLike<number>> (out: Out, v: IVec2Like, ofs?: number): Out;		
		/**
		!#zh ??°ç??è½¬å????? 
		*/
		static fromArray <Out extends IVec2Like> (out: Out, arr: IWritableArrayLike<number>, ofs?: number): Out;		
		x: number;		
		y: number;		
		/**
		!#en
		Constructor
		see {{#crossLink "cc/vec2:method"}}cc.v2{{/crossLink}} or {{#crossLink "cc/p:method"}}cc.p{{/crossLink}}
		!#zh
		????????½æ?°ï????¯æ?¥ç?? {{#crossLink "cc/vec2:method"}}cc.v2{{/crossLink}} ?????? {{#crossLink "cc/p:method"}}cc.p{{/crossLink}}
		@param x x
		@param y y 
		*/
		constructor(x?: number, y?: number);		
		/**
		!#en clone a Vec2 object
		!#zh ??????ä¸?ä¸? Vec2 å¯¹è±¡ 
		*/
		clone(): Vec2;		
		/**
		!#en Sets vector with another's value
		!#zh è®¾ç½®????????¼ã??
		@param newValue !#en new value to set. !#zh è¦?è®¾ç½®?????°å?? 
		*/
		set(newValue: Vec2): Vec2;		
		/**
		!#en Check whether two vector equal
		!#zh å½???????????????¯å?¦ä?????å®????????????¸ç?????
		@param other other 
		*/
		equals(other: Vec2): boolean;		
		/**
		!#en Check whether two vector equal with some degree of variance.
		!#zh
		è¿?ä¼¼å?¤æ?­ä¸¤ä¸ªç?¹æ?¯å?¦ç?¸ç?????<br/>
		??¤æ?? 2 ä¸ªå???????¯å?¦å?¨æ??å®???°å?¼ç???????´ä?????ï¼?å¦??????¨å??è¿???? trueï¼????ä¹????è¿???? false???
		@param other other
		@param variance variance 
		*/
		fuzzyEquals(other: Vec2, variance: number): boolean;		
		/**
		!#en Transform to string with vector informations
		!#zh è½¬æ?¢ä¸º??¹ä¾¿???è¯»ç??å­?ç¬¦ä¸²??? 
		*/
		toString(): string;		
		/**
		!#en Calculate linear interpolation result between this vector and another one with given ratio
		!#zh çº¿æ?§æ????¼ã??
		@param to to
		@param ratio the interpolation coefficient
		@param out optional, the receiving vector, you can pass the same vec2 to save result to itself, if not provided, a new vec2 will be created 
		*/
		lerp(to: Vec2, ratio: number, out?: Vec2): Vec2;		
		/**
		!#en Clamp the vector between from float and to float.
		!#zh
		è¿???????å®??????¶å?ºå?????????????????<br/>
		??????å¤§ä?? max_inclusive ???è¿???? max_inclusive???<br/>
		??????å°?äº? min_inclusive ???è¿???? min_inclusive???<br/>
		??¦å??è¿??????ªèº«???
		@param min_inclusive min_inclusive
		@param max_inclusive max_inclusive
		
		@example 
		```js
		var min_inclusive = cc.v2(0, 0);
		var max_inclusive = cc.v2(20, 20);
		var v1 = cc.v2(20, 20).clampf(min_inclusive, max_inclusive); // Vec2 {x: 20, y: 20};
		var v2 = cc.v2(0, 0).clampf(min_inclusive, max_inclusive);   // Vec2 {x: 0, y: 0};
		var v3 = cc.v2(10, 10).clampf(min_inclusive, max_inclusive); // Vec2 {x: 10, y: 10};
		``` 
		*/
		clampf(min_inclusive: Vec2, max_inclusive: Vec2): Vec2;		
		/**
		!#en Adds this vector.
		!#zh ?????????æ³????
		@param vector vector
		@param out out
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.add(cc.v2(5, 5));// return Vec2 {x: 15, y: 15};
		``` 
		*/
		add(vector: Vec2, out?: Vec2): Vec2;		
		/**
		!#en Adds this vector. If you want to save result to another vector, use add() instead.
		!#zh ?????????æ³????å¦????ä½???³ä??å­?ç»??????°å?¦ä??ä¸ªå?????ï¼?ä½¿ç?? add() ä»???¿ã??
		@param vector vector 
		*/
		addSelf(vector: Vec2): Vec2;		
		/**
		!#en Subtracts one vector from this.
		!#zh ?????????æ³????
		@param vector vector
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.subSelf(cc.v2(5, 5));// return Vec2 {x: 5, y: 5};
		``` 
		*/
		subtract(vector: Vec2): Vec2;		
		/**
		!#en Multiplies this by a number.
		!#zh ç¼©æ?¾å??????????????
		@param num num
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.multiply(5);// return Vec2 {x: 50, y: 50};
		``` 
		*/
		multiplyScalar(num: number): Vec2;		
		/**
		!#en Multiplies two vectors.
		!#zh ????????¸ä?????
		@param vector vector
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.multiply(cc.v2(5, 5));// return Vec2 {x: 50, y: 50};
		``` 
		*/
		multiply(vector: Vec2): Vec2;		
		/**
		!#en Divides by a number.
		!#zh ????????¤æ?????
		@param num num
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.divide(5); // return Vec2 {x: 2, y: 2};
		``` 
		*/
		divide(num: number): Vec2;		
		/**
		!#en Negates the components.
		!#zh ???????????????
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.negate(); // return Vec2 {x: -10, y: -10};
		``` 
		*/
		negate(): Vec2;		
		/**
		!#en Dot product
		!#zh å½??????????ä¸????å®???????è¿?è¡???¹ä?????
		@param vector vector
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.dot(cc.v2(5, 5)); // return 100;
		``` 
		*/
		dot(vector?: Vec2): number;		
		/**
		!#en Cross product
		!#zh å½??????????ä¸????å®???????è¿?è¡????ä¹????
		@param vector vector
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.cross(cc.v2(5, 5)); // return 0;
		``` 
		*/
		cross(vector?: Vec2): number;		
		/**
		!#en Returns the length of this vector.
		!#zh è¿????è¯¥å??????????¿åº¦???
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.len(); // return 14.142135623730951;
		``` 
		*/
		len(): number;		
		/**
		!#en Returns the squared length of this vector.
		!#zh è¿????è¯¥å??????????¿åº¦å¹³æ?¹ã??
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.lengthSqr(); // return 200;
		``` 
		*/
		lengthSqr(): number;		
		/**
		!#en Make the length of this vector to 1.
		!#zh ??????å½?ä¸????ï¼?è®©è??ä¸ªå??????????¿åº¦ä¸? 1???
		
		@example 
		```js
		var v = cc.v2(10, 10);
		v.normalizeSelf(); // return Vec2 {x: 0.7071067811865475, y: 0.7071067811865475};
		``` 
		*/
		normalizeSelf(): Vec2;		
		/**
		!#en
		Returns this vector with a magnitude of 1.<br/>
		<br/>
		Note that the current vector is unchanged and a new normalized vector is returned. If you want to normalize the current vector, use normalizeSelf function.
		!#zh
		è¿????å½?ä¸???????????????????<br/>
		<br/>
		æ³¨æ??ï¼?å½??????????ä¸????ï¼?å¹¶è?????ä¸?ä¸ªæ?°ç??å½?ä¸?????????????å¦????ä½???³æ?¥å??ä¸????å½??????????ï¼???¯ä½¿??? normalizeSelf ??½æ?°ã??
		@param out optional, the receiving vector, you can pass the same vec2 to save result to itself, if not provided, a new vec2 will be created 
		*/
		normalize(out?: Vec2): Vec2;		
		/**
		!#en Get angle in radian between this and vector.
		!#zh å¤¹è?????å¼§åº¦???
		@param vector vector 
		*/
		angle(vector: Vec2): number;		
		/**
		!#en Get angle in radian between this and vector with direction.
		!#zh å¸¦æ?¹å?????å¤¹è?????å¼§åº¦???
		@param vector vector 
		*/
		signAngle(vector: Vec2): number;		
		/**
		!#en rotate
		!#zh è¿???????è½¬ç??å®?å¼§åº¦????????°å????????
		@param radians radians
		@param out optional, the receiving vector, you can pass the same vec2 to save result to itself, if not provided, a new vec2 will be created 
		*/
		rotate(radians: number, out?: Vec2): Vec2;		
		/**
		!#en rotate self
		!#zh ??????å®?å¼§åº¦???è½¬å????????
		@param radians radians 
		*/
		rotateSelf(radians: number): Vec2;		
		/**
		!#en Calculates the projection of the current vector over the given vector.
		!#zh è¿????å½????????????¨æ??å®? vector ??????ä¸???????å½±å????????
		@param vector vector
		
		@example 
		```js
		var v1 = cc.v2(20, 20);
		var v2 = cc.v2(5, 5);
		v1.project(v2); // Vec2 {x: 20, y: 20};
		``` 
		*/
		project(vector: Vec2): Vec2;		
		/**
		Transforms the vec2 with a mat4. 3rd vector component is implicitly '0', 4th vector component is implicitly '1'
		@param m matrix to transform with
		@param out the receiving vector, you can pass the same vec2 to save result to itself, if not provided, a new vec2 will be created 
		*/
		transformMat4(m: Mat4, out?: Vec2): Vec2;		
		/**
		Returns the maximum value in x, y. 
		*/
		maxAxis(): number;	
	}	
	/** !#en Representation of 3D vectors and points.
	!#zh è¡¨ç¤º 3D ??????????????? */
	export class Vec3 extends ValueType {		
		/**
		!#en Returns the length of this vector.
		!#zh è¿????è¯¥å??????????¿åº¦???
		
		@example 
		```js
		var v = cc.v3(10, 10, 10);
		v.mag(); // return 17.320508075688775;
		``` 
		*/
		mag(): number;		
		/**
		!#en Returns the squared length of this vector.
		!#zh è¿????è¯¥å??????????¿åº¦å¹³æ?¹ã?? 
		*/
		magSqr(): number;		
		/**
		!#en Subtracts one vector from this. If you want to save result to another vector, use sub() instead.
		!#zh ?????????æ³????å¦????ä½???³ä??å­?ç»??????°å?¦ä??ä¸ªå?????ï¼???¯ä½¿??? sub() ä»???¿ã??
		@param vector vector 
		*/
		subSelf(vector: Vec3): Vec3;		
		/**
		!#en Subtracts one vector from this, and returns the new result.
		!#zh ?????????æ³?ï¼?å¹¶è???????°ç????????
		@param vector vector
		@param out optional, the receiving vector, you can pass the same vec3 to save result to itself, if not provided, a new vec3 will be created 
		*/
		sub(vector: Vec3, out?: Vec3): Vec3;		
		/**
		!#en Multiplies this by a number. If you want to save result to another vector, use mul() instead.
		!#zh ç¼©æ?¾å??????????????å¦????ä½???³ç?????ä¿?å­???°å?¦ä??ä¸ªå?????ï¼???¯ä½¿??? mul() ä»???¿ã??
		@param num num 
		*/
		mulSelf(num: number): Vec3;		
		/**
		!#en Multiplies by a number, and returns the new result.
		!#zh ç¼©æ?¾å?????ï¼?å¹¶è???????°ç????????
		@param num num
		@param out optional, the receiving vector, you can pass the same vec3 to save result to itself, if not provided, a new vec3 will be created 
		*/
		mul(num: number, out?: Vec3): Vec3;		
		/**
		!#en Divides by a number. If you want to save result to another vector, use div() instead.
		!#zh ????????¤æ?????å¦????ä½???³ç?????ä¿?å­???°å?¦ä??ä¸ªå?????ï¼???¯ä½¿??? div() ä»???¿ã??
		@param num num 
		*/
		divSelf(num: number): Vec3;		
		/**
		!#en Divides by a number, and returns the new result.
		!#zh ????????¤æ??ï¼?å¹¶è???????°ç??ç»???????
		@param num num
		@param out optional, the receiving vector, you can pass the same vec3 to save result to itself, if not provided, a new vec3 will be created 
		*/
		div(num: number, out?: Vec3): Vec3;		
		/**
		!#en Multiplies two vectors.
		!#zh ????????¸ä?????
		@param vector vector 
		*/
		scaleSelf(vector: Vec3): Vec3;		
		/**
		!#en Multiplies two vectors, and returns the new result.
		!#zh ????????¸ä??ï¼?å¹¶è???????°ç??ç»???????
		@param vector vector
		@param out optional, the receiving vector, you can pass the same vec3 to save result to itself, if not provided, a new vec3 will be created 
		*/
		scale(vector: Vec3, out?: Vec3): Vec3;		
		/**
		!#en Negates the components. If you want to save result to another vector, use neg() instead.
		!#zh ???????????????å¦????ä½???³ç?????ä¿?å­???°å?¦ä??ä¸ªå?????ï¼???¯ä½¿??? neg() ä»???¿ã?? 
		*/
		negSelf(): Vec3;		
		/**
		!#en Negates the components, and returns the new result.
		!#zh è¿??????????????????°å????????
		@param out optional, the receiving vector, you can pass the same vec3 to save result to itself, if not provided, a new vec3 will be created 
		*/
		neg(out?: Vec3): Vec3;		
		/** !#en return a Vec3 object with x = 1, y = 1, z = 1.
		!#zh ??? Vec3 å¯¹è±¡??? */
		static ONE: Vec3;		
		/** !#en return a Vec3 object with x = 0, y = 0, z = 0.
		!#zh è¿???? x = 0ï¼?y = 0ï¼?z = 0 ??? Vec3 å¯¹è±¡??? */
		static ZERO: Vec3;		
		/** !#en return a Vec3 object with x = 0, y = 1, z = 0.
		!#zh è¿???? x = 0, y = 1, z = 0 ??? Vec3 å¯¹è±¡??? */
		static UP: Vec3;		
		/** !#en return a Vec3 object with x = 1, y = 0, z = 0.
		!#zh è¿???? x = 1ï¼?y = 0ï¼?z = 0 ??? Vec3 å¯¹è±¡??? */
		static RIGHT: Vec3;		
		/** !#en return a Vec3 object with x = 0, y = 0, z = 1.
		!#zh è¿???? x = 0ï¼?y = 0ï¼?z = 1 ??? Vec3 å¯¹è±¡??? */
		static FORWARD: Vec3;		
		/**
		!#zh å°???®æ??èµ???¼ä¸º??¶å?????
		!#en The target of an assignment zero vector 
		*/
		static zero<Out extends IVec3Like> (out: Out): Out;		
		/**
		!#zh ??·å?????å®????????????·è??
		!#en Obtaining copy vectors designated 
		*/
		static clone<Out extends IVec3Like> (a: Out): Vec3;		
		/**
		!#zh å¤???¶ç?®æ????????
		!#en Copy the target vector 
		*/
		static copy<Out extends IVec3Like, Vec3Like extends IVec3Like> (out: Out, a: Vec3Like): Out;		
		/**
		!#zh è®¾ç½®?????????
		!#en Set to value 
		*/
		static set<Out extends IVec3Like> (out: Out, x: number, y: number, z: number): Out;		
		/**
		!#zh ??????ç´??????????æ³?
		!#en Element-wise vector addition 
		*/
		static add<Out extends IVec3Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´??????????æ³?
		!#en Element-wise vector subtraction 
		*/
		static subtract<Out extends IVec3Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´???????ä¹?æ³? (??????ç§?)
		!#en Element-wise vector multiplication (product component) 
		*/
		static multiply<Out extends IVec3Like, Vec3Like_1 extends IVec3Like, Vec3Like_2 extends IVec3Like> (out: Out, a: Vec3Like_1, b: Vec3Like_2): Out;		
		/**
		!#zh ??????ç´?????????¤æ??
		!#en Element-wise vector division 
		*/
		static divide<Out extends IVec3Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´??????????ä¸???????
		!#en Rounding up by elements of the vector 
		*/
		static ceil<Out extends IVec3Like> (out: Out, a: Out): Out;		
		/**
		!#zh ??????ç´??????????ä¸???????
		!#en Element vector by rounding down 
		*/
		static floor<Out extends IVec3Like> (out: Out, a: Out): Out;		
		/**
		!#zh ??????ç´??????????å°????
		!#en The minimum by-element vector 
		*/
		static min<Out extends IVec3Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´??????????å¤§å??
		!#en The maximum value of the element-wise vector 
		*/
		static max<Out extends IVec3Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´?????????????äº???¥å?????
		!#en Element-wise vector of rounding to whole 
		*/
		static round<Out extends IVec3Like> (out: Out, a: Out): Out;		
		/**
		!#zh ????????????ä¹?æ³?
		!#en Vector scalar multiplication 
		*/
		static multiplyScalar<Out extends IVec3Like, Vec3Like extends IVec3Like> (out: Out, a: Vec3Like, b: number): Out;		
		/**
		!#zh ??????ç´???????ä¹????: A + B * scale
		!#en Element-wise vector multiply add: A + B * scale 
		*/
		static scaleAndAdd<Out extends IVec3Like> (out: Out, a: Out, b: Out, scale: number): Out;		
		/**
		!#zh æ±?ä¸¤å????????æ¬§æ??è·?ç¦?
		!#en Seeking two vectors Euclidean distance 
		*/
		static distance<Out extends IVec3Like> (a: Out, b: Out): number;		
		/**
		!#zh æ±?ä¸¤å????????æ¬§æ??è·?ç¦»å¹³???
		!#en Euclidean distance squared seeking two vectors 
		*/
		static squaredDistance<Out extends IVec3Like> (a: Out, b: Out): number;		
		/**
		!#zh æ±?????????¿åº¦
		!#en Seeking vector length 
		*/
		static len<Out extends IVec3Like> (a: Out): number;		
		/**
		!#zh æ±?????????¿åº¦å¹³æ??
		!#en Seeking squared vector length 
		*/
		static lengthSqr<Out extends IVec3Like> (a: Out): number;		
		/**
		!#zh ??????ç´??????????è´?
		!#en By taking the negative elements of the vector 
		*/
		static negate<Out extends IVec3Like> (out: Out, a: Out): Out;		
		/**
		!#zh ??????ç´???????????????°ï????¥è?? 0 ??¶è????? Infinity
		!#en Element vector by taking the inverse, return near 0 Infinity 
		*/
		static inverse<Out extends IVec3Like> (out: Out, a: Out): Out;		
		/**
		!#zh ??????ç´???????????????°ï????¥è?? 0 ??¶è????? 0
		!#en Element vector by taking the inverse, return near 0 0 
		*/
		static inverseSafe<Out extends IVec3Like> (out: Out, a: Out): Out;		
		/**
		!#zh å½?ä¸??????????
		!#en Normalized vector 
		*/
		static normalize<Out extends IVec3Like, Vec3Like extends IVec3Like> (out: Out, a: Vec3Like): Out;		
		/**
		!#zh ????????¹ç§¯ï¼???°é??ç§¯ï??
		!#en Vector dot product (scalar product) 
		*/
		static dot<Out extends IVec3Like> (a: Out, b: Out): number;		
		/**
		!#zh ?????????ç§¯ï????????ç§¯ï??
		!#en Vector cross product (vector product) 
		*/
		static cross<Out extends IVec3Like, Vec3Like_1 extends IVec3Like, Vec3Like_2 extends IVec3Like> (out: Out, a: Vec3Like_1, b: Vec3Like_2): Out;		
		/**
		!#zh ??????ç´???????çº¿æ?§æ????¼ï?? A + t * (B - A)
		!#en Vector element by element linear interpolation: A + t * (B - A) 
		*/
		static lerp<Out extends IVec3Like> (out: Out, a: Out, b: Out, t: number): Out;		
		/**
		!#zh ??????ä¸?ä¸ªå?¨å??ä½????ä½?ä¸??????????å¸?????????ºå?????
		!#en Generates a uniformly distributed random vectors on the unit sphere
		@param scale ?????????????????¿åº¦ 
		*/
		static random<Out extends IVec3Like> (out: Out, scale?: number): Out;		
		/**
		!#zh ??????ä¸????ç»´ç?©é?µä??æ³?ï¼?é»?è®¤å?????ç¬¬å??ä½?ä¸? 1???
		!#en Four-dimensional vector and matrix multiplication, the default vectors fourth one. 
		*/
		static transformMat4<Out extends IVec3Like, Vec3Like extends IVec3Like, MatLike extends IMat4Like> (out: Out, a: Vec3Like, mat: MatLike): Out;		
		/**
		!#zh ??????ä¸????ç»´ç?©é?µä??æ³?ï¼?é»?è®¤å?????ç¬¬å??ä½?ä¸? 0???
		!#en Four-dimensional vector and matrix multiplication, vector fourth default is 0. 
		*/
		static transformMat4Normal<Out extends IVec3Like, MatLike extends IMat4Like> (out: Out, a: Out, mat: MatLike): Out;		
		/**
		!#zh ??????ä¸?ä¸?ç»´ç?©é?µä??æ³?
		!#en Dimensional vector matrix multiplication 
		*/
		static transformMat3<Out extends IVec3Like, MatLike extends IMat3Like> (out: Out, a: Out, mat: MatLike): Out;		
		/**
		!#zh ??????ä»¿å????????
		!#en Affine transformation vector 
		*/
		static transformAffine<Out extends IVec3Like, VecLike extends IVec3Like, MatLike extends IMat4Like>(out: Out, v: VecLike, mat: MatLike): Out;		
		/**
		!#zh ??????????????°ä??æ³?
		!#en Vector quaternion multiplication 
		*/
		static transformQuat<Out extends IVec3Like, VecLike extends IVec3Like, QuatLike extends IQuatLike> (out: Out, a: VecLike, q: QuatLike): Out;		
		/**
		!#zh ä»¥ç¼©??? -> ???è½? -> å¹³ç§»é¡ºå???????¢å?????
		!#en To scale -> rotation -> transformation vector sequence translation 
		*/
		static transformRTS<Out extends IVec3Like, VecLike extends IVec3Like, QuatLike extends IQuatLike>(out: Out, a: VecLike, r: QuatLike, t: VecLike, s: VecLike): Out;		
		/**
		!#zh ä»¥å¹³ç§? -> ???è½? -> ç¼©æ?¾é¡ºåº?????????¢å?????
		!#en Translational -> rotation -> Zoom inverse transformation vector sequence 
		*/
		static transformInverseRTS<Out extends IVec3Like, VecLike extends IVec3Like, QuatLike extends IQuatLike>(out: Out, a: VecLike, r: QuatLike, t: VecLike, s: VecLike): Out;		
		/**
		!#zh ç»? X è½´æ??è½¬å????????å®?å¼§åº¦
		!#en Rotation vector specified angle about the X axis
		@param v å¾????è½¬å?????
		@param o ???è½¬ä¸­å¿?
		@param a ???è½¬å¼§åº? 
		*/
		static rotateX<Out extends IVec3Like> (out: Out, v: Out, o: Out, a: number): Out;		
		/**
		!#zh ç»? Y è½´æ??è½¬å????????å®?å¼§åº¦
		!#en Rotation vector specified angle around the Y axis
		@param v å¾????è½¬å?????
		@param o ???è½¬ä¸­å¿?
		@param a ???è½¬å¼§åº? 
		*/
		static rotateY<Out extends IVec3Like> (out: Out, v: Out, o: Out, a: number): Out;		
		/**
		!#zh ç»? Z è½´æ??è½¬å????????å®?å¼§åº¦
		!#en Around the Z axis specified angle vector
		@param v å¾????è½¬å?????
		@param o ???è½¬ä¸­å¿?
		@param a ???è½¬å¼§åº? 
		*/
		static rotateZ<Out extends IVec3Like> (out: Out, v: Out, o: Out, a: number): Out;		
		/**
		!#zh ??????ç­?ä»·å?¤æ??
		!#en Equivalent vectors Analyzing 
		*/
		static strictEquals<Out extends IVec3Like> (a: Out, b: Out): boolean;		
		/**
		!#zh ?????¤æµ®??¹æ?°è¯¯å·®ç????????è¿?ä¼¼ç??ä»·å?¤æ??
		!#en Negative error vector floating point approximately equivalent Analyzing 
		*/
		static equals<Out extends IVec3Like> (a: Out, b: Out, epsilon?: number): boolean;		
		/**
		!#zh æ±?ä¸¤å?????å¤¹è??å¼§åº¦
		!#en Radian angle between two vectors seek 
		*/
		static angle<Out extends IVec3Like> (a: Out, b: Out): number;		
		/**
		!#zh è®¡ç??????????¨æ??å®?å¹³é?¢ä????????å½?
		!#en Calculating a projection vector in the specified plane
		@param a å¾????å½±å?????
		@param n ???å®?å¹³é?¢ç??æ³?çº? 
		*/
		static projectOnPlane<Out extends IVec3Like> (out: Out, a: Out, n: Out): Out;		
		/**
		!#zh è®¡ç??????????¨æ??å®???????ä¸???????å½?
		!#en Projection vector calculated in the vector designated
		@param a å¾????å½±å?????
		@param n ??®æ???????? 
		*/
		static project<Out extends IVec3Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????è½¬æ?°ç??
		!#en Vector transfer array
		@param ofs ??°ç??èµ·å?????ç§»é?? 
		*/
		static toArray <Out extends IWritableArrayLike<number>> (out: Out, v: IVec3Like, ofs?: number): Out;		
		/**
		!#zh ??°ç??è½¬å?????
		!#en Array steering amount
		@param ofs ??°ç??èµ·å?????ç§»é?? 
		*/
		static fromArray <Out extends IVec3Like> (out: Out, arr: IWritableArrayLike<number>, ofs?: number): Out;		
		x: number;		
		y: number;		
		z: number;		
		/**
		!#en
		Constructor
		see {{#crossLink "cc/vec3:method"}}cc.v3{{/crossLink}}
		!#zh
		????????½æ?°ï????¯æ?¥ç?? {{#crossLink "cc/vec3:method"}}cc.v3{{/crossLink}}
		@param x x
		@param y y
		@param z z 
		*/
		constructor(x?: Vec3|number, y?: number, z?: number);		
		/**
		!#en clone a Vec3 value
		!#zh ??????ä¸?ä¸? Vec3 ??? 
		*/
		clone(): Vec3;		
		/**
		!#en Set the current vector value with the given vector.
		!#zh ??¨å?¦ä??ä¸ªå?????è®¾ç½®å½?????????????å¯¹è±¡??¼ã??
		@param newValue !#en new value to set. !#zh è¦?è®¾ç½®?????°å?? 
		*/
		set(newValue: Vec3): Vec3;		
		/**
		!#en Check whether the vector equals another one
		!#zh å½???????????????¯å?¦ä?????å®????????????¸ç?????
		@param other other 
		*/
		equals(other: Vec3): boolean;		
		/**
		!#en Check whether two vector equal with some degree of variance.
		!#zh
		è¿?ä¼¼å?¤æ?­ä¸¤ä¸ªç?¹æ?¯å?¦ç?¸ç?????<br/>
		??¤æ?? 2 ä¸ªå???????¯å?¦å?¨æ??å®???°å?¼ç???????´ä?????ï¼?å¦??????¨å??è¿???? trueï¼????ä¹????è¿???? false???
		@param other other
		@param variance variance 
		*/
		fuzzyEquals(other: Vec3, variance: number): boolean;		
		/**
		!#en Transform to string with vector informations
		!#zh è½¬æ?¢ä¸º??¹ä¾¿???è¯»ç??å­?ç¬¦ä¸²??? 
		*/
		toString(): string;		
		/**
		!#en Calculate linear interpolation result between this vector and another one with given ratio
		!#zh çº¿æ?§æ????¼ã??
		@param to to
		@param ratio the interpolation coefficient
		@param out optional, the receiving vector, you can pass the same vec3 to save result to itself, if not provided, a new vec3 will be created 
		*/
		lerp(to: Vec3, ratio: number, out?: Vec3): Vec3;		
		/**
		!#en Clamp the vector between from float and to float.
		!#zh
		è¿???????å®??????¶å?ºå?????????????????<br/>
		??????å¤§ä?? max_inclusive ???è¿???? max_inclusive???<br/>
		??????å°?äº? min_inclusive ???è¿???? min_inclusive???<br/>
		??¦å??è¿??????ªèº«???
		@param min_inclusive min_inclusive
		@param max_inclusive max_inclusive 
		*/
		clampf(min_inclusive: Vec3, max_inclusive: Vec3): Vec3;		
		/**
		!#en Adds this vector. If you want to save result to another vector, use add() instead.
		!#zh ?????????æ³????å¦????ä½???³ä??å­?ç»??????°å?¦ä??ä¸ªå?????ï¼?ä½¿ç?? add() ä»???¿ã??
		@param vector vector 
		*/
		addSelf(vector: Vec3): Vec3;		
		/**
		!#en Adds two vectors, and returns the new result.
		!#zh ?????????æ³?ï¼?å¹¶è???????°ç????????
		@param vector vector
		@param out optional, the receiving vector, you can pass the same vec3 to save result to itself, if not provided, a new vec3 will be created 
		*/
		add(vector: Vec3, out?: Vec3): Vec3;		
		/**
		!#en Subtracts one vector from this.
		!#zh ?????????æ³????
		@param vector vector 
		*/
		subtract(vector: Vec3): Vec3;		
		/**
		!#en Multiplies this by a number.
		!#zh ç¼©æ?¾å??????????????
		@param num num 
		*/
		multiplyScalar(num: number): Vec3;		
		/**
		!#en Multiplies two vectors.
		!#zh ????????¸ä?????
		@param vector vector 
		*/
		multiply(vector: Vec3): Vec3;		
		/**
		!#en Divides by a number.
		!#zh ????????¤æ?????
		@param num num 
		*/
		divide(num: number): Vec3;		
		/**
		!#en Negates the components.
		!#zh ??????????????? 
		*/
		negate(): Vec3;		
		/**
		!#en Dot product
		!#zh å½??????????ä¸????å®???????è¿?è¡???¹ä?????
		@param vector vector 
		*/
		dot(vector?: Vec3): number;		
		/**
		!#en Cross product
		!#zh å½??????????ä¸????å®???????è¿?è¡????ä¹????
		@param vector vector
		@param out out 
		*/
		cross(vector: Vec3, out?: Vec3): Vec3;		
		/**
		!#en Returns the length of this vector.
		!#zh è¿????è¯¥å??????????¿åº¦???
		
		@example 
		```js
		var v = cc.v3(10, 10, 10);
		v.len(); // return 17.320508075688775;
		``` 
		*/
		len(): number;		
		/**
		!#en Returns the squared length of this vector.
		!#zh è¿????è¯¥å??????????¿åº¦å¹³æ?¹ã?? 
		*/
		lengthSqr(): number;		
		/**
		!#en Make the length of this vector to 1.
		!#zh ??????å½?ä¸????ï¼?è®©è??ä¸ªå??????????¿åº¦ä¸? 1??? 
		*/
		normalizeSelf(): Vec3;		
		/**
		!#en
		Returns this vector with a magnitude of 1.<br/>
		<br/>
		Note that the current vector is unchanged and a new normalized vector is returned. If you want to normalize the current vector, use normalizeSelf function.
		!#zh
		è¿????å½?ä¸???????????????????<br/>
		<br/>
		æ³¨æ??ï¼?å½??????????ä¸????ï¼?å¹¶è?????ä¸?ä¸ªæ?°ç??å½?ä¸?????????????å¦????ä½???³æ?¥å??ä¸????å½??????????ï¼???¯ä½¿??? normalizeSelf ??½æ?°ã??
		@param out optional, the receiving vector, you can pass the same vec3 to save result to itself, if not provided, a new vec3 will be created 
		*/
		normalize(out?: Vec3): Vec3;		
		/**
		Transforms the vec3 with a mat4. 4th vector component is implicitly '1'
		@param m matrix to transform with
		@param out the receiving vector, you can pass the same vec3 to save result to itself, if not provided, a new vec3 will be created 
		*/
		transformMat4(m: Mat4, out?: Vec3): Vec3;		
		/**
		Returns the maximum value in x, y, and z 
		*/
		maxAxis(): number;		
		/**
		!#en Get angle in radian between this and vector.
		!#zh å¤¹è?????å¼§åº¦???
		@param vector vector 
		*/
		angle(vector: Vec3): number;		
		/**
		!#en Calculates the projection of the current vector over the given vector.
		!#zh è¿????å½????????????¨æ??å®? vector ??????ä¸???????å½±å????????
		@param vector vector
		
		@example 
		```js
		var v1 = cc.v3(20, 20, 20);
		var v2 = cc.v3(5, 5, 5);
		v1.project(v2); // Vec3 {x: 20, y: 20, z: 20};
		``` 
		*/
		project(vector: Vec3): Vec3;		
		/**
		!#en Get angle in radian between this and vector with direction. <br/>
		In order to compatible with the vec2 API.
		!#zh å¸¦æ?¹å?????å¤¹è?????å¼§åº¦???è¯¥æ?¹æ??ä»???¨å????¼å®¹ 2D è®¡ç?????
		@param vector vector 
		*/
		signAngle(vector: Vec3|Vec2): number;		
		/**
		!#en rotate. In order to compatible with the vec2 API.
		!#zh è¿???????è½¬ç??å®?å¼§åº¦????????°å????????è¯¥æ?¹æ??ä»???¨å????¼å®¹ 2D è®¡ç?????
		@param radians radians
		@param out optional, the receiving vector, you can pass the same vec2 to save result to itself, if not provided, a new vec2 will be created 
		*/
		rotate(radians: number, out?: Vec3): Vec2;		
		/**
		!#en rotate self. In order to compatible with the vec2 API.
		!#zh ??????å®?å¼§åº¦???è½¬å????????è¯¥æ?¹æ??ä»???¨å????¼å®¹ 2D è®¡ç?????
		@param radians radians 
		*/
		rotateSelf(radians: number): Vec3;	
	}	
	/** !#en Representation of 3D vectors and points.
	!#zh è¡¨ç¤º 3D ??????????????? */
	export class Vec4 extends ValueType {		
		/**
		!#en Subtracts one vector from this. If you want to save result to another vector, use sub() instead.
		!#zh ?????????æ³????å¦????ä½???³ä??å­?ç»??????°å?¦ä??ä¸ªå?????ï¼???¯ä½¿??? sub() ä»???¿ã??
		@param vector vector 
		*/
		subSelf(vector: Vec4): Vec4;		
		/**
		!#en Subtracts one vector from this, and returns the new result.
		!#zh ?????????æ³?ï¼?å¹¶è???????°ç????????
		@param vector vector
		@param out optional, the receiving vector, you can pass the same vec4 to save result to itself, if not provided, a new vec4 will be created 
		*/
		sub(vector: Vec4, out?: Vec4): Vec4;		
		/**
		!#en Multiplies this by a number. If you want to save result to another vector, use mul() instead.
		!#zh ç¼©æ?¾å??????????????å¦????ä½???³ç?????ä¿?å­???°å?¦ä??ä¸ªå?????ï¼???¯ä½¿??? mul() ä»???¿ã??
		@param num num 
		*/
		mulSelf(num: number): Vec4;		
		/**
		!#en Multiplies by a number, and returns the new result.
		!#zh ç¼©æ?¾å?????ï¼?å¹¶è???????°ç????????
		@param num num
		@param out optional, the receiving vector, you can pass the same vec4 to save result to itself, if not provided, a new vec4 will be created 
		*/
		mul(num: number, out?: Vec4): Vec4;		
		/**
		!#en Divides by a number. If you want to save result to another vector, use div() instead.
		!#zh ????????¤æ?????å¦????ä½???³ç?????ä¿?å­???°å?¦ä??ä¸ªå?????ï¼???¯ä½¿??? div() ä»???¿ã??
		@param num num 
		*/
		divSelf(num: number): Vec4;		
		/**
		!#en Divides by a number, and returns the new result.
		!#zh ????????¤æ??ï¼?å¹¶è???????°ç??ç»???????
		@param num num
		@param out optional, the receiving vector, you can pass the same vec4 to save result to itself, if not provided, a new vec4 will be created 
		*/
		div(num: number, out?: Vec4): Vec4;		
		/**
		!#en Multiplies two vectors.
		!#zh ????????¸ä?????
		@param vector vector 
		*/
		scaleSelf(vector: Vec4): Vec4;		
		/**
		!#en Multiplies two vectors, and returns the new result.
		!#zh ????????¸ä??ï¼?å¹¶è???????°ç??ç»???????
		@param vector vector
		@param out optional, the receiving vector, you can pass the same vec4 to save result to itself, if not provided, a new vec4 will be created 
		*/
		scale(vector: Vec4, out?: Vec4): Vec4;		
		/**
		!#en Negates the components. If you want to save result to another vector, use neg() instead.
		!#zh ???????????????å¦????ä½???³ç?????ä¿?å­???°å?¦ä??ä¸ªå?????ï¼???¯ä½¿??? neg() ä»???¿ã?? 
		*/
		negSelf(): Vec4;		
		/**
		!#en Negates the components, and returns the new result.
		!#zh è¿??????????????????°å????????
		@param out optional, the receiving vector, you can pass the same vec4 to save result to itself, if not provided, a new vec4 will be created 
		*/
		neg(out?: Vec4): Vec4;		
		/**
		!#zh ??·å?????å®????????????·è??
		!#en Obtaining copy vectors designated 
		*/
		static clone <Out extends IVec4Like> (a: Out): Vec4;		
		/**
		!#zh å¤???¶ç?®æ????????
		!#en Copy the target vector 
		*/
		static copy <Out extends IVec4Like> (out: Out, a: Out): Out;		
		/**
		!#zh è®¾ç½®?????????
		!#en Set to value 
		*/
		static set <Out extends IVec4Like> (out: Out, x: number, y: number, z: number, w: number): Out;		
		/**
		!#zh ??????ç´??????????æ³?
		!#en Element-wise vector addition 
		*/
		static add <Out extends IVec4Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´??????????æ³?
		!#en Element-wise vector subtraction 
		*/
		static subtract <Out extends IVec4Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´???????ä¹?æ³?
		!#en Element-wise vector multiplication 
		*/
		static multiply <Out extends IVec4Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´?????????¤æ??
		!#en Element-wise vector division 
		*/
		static divide <Out extends IVec4Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´??????????ä¸???????
		!#en Rounding up by elements of the vector 
		*/
		static ceil <Out extends IVec4Like> (out: Out, a: Out): Out;		
		/**
		!#zh ??????ç´??????????ä¸???????
		!#en Element vector by rounding down 
		*/
		static floor <Out extends IVec4Like> (out: Out, a: Out): Out;		
		/**
		!#zh ??????ç´??????????å°????
		!#en The minimum by-element vector 
		*/
		static min <Out extends IVec4Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´??????????å¤§å??
		!#en The maximum value of the element-wise vector 
		*/
		static max <Out extends IVec4Like> (out: Out, a: Out, b: Out): Out;		
		/**
		!#zh ??????ç´?????????????äº???¥å?????
		!#en Element-wise vector of rounding to whole 
		*/
		static round <Out extends IVec4Like> (out: Out, a: Out): Out;		
		/**
		!#zh ????????????ä¹?æ³?
		!#en Vector scalar multiplication 
		*/
		static multiplyScalar <Out extends IVec4Like> (out: Out, a: Out, b: number): Out;		
		/**
		!#zh ??????ç´???????ä¹????: A + B * scale
		!#en Element-wise vector multiply add: A + B * scale 
		*/
		static scaleAndAdd <Out extends IVec4Like> (out: Out, a: Out, b: Out, scale: number): Out;		
		/**
		!#zh æ±?ä¸¤å????????æ¬§æ??è·?ç¦?
		!#en Seeking two vectors Euclidean distance 
		*/
		static distance <Out extends IVec4Like> (a: Out, b: Out): number;		
		/**
		!#zh æ±?ä¸¤å????????æ¬§æ??è·?ç¦»å¹³???
		!#en Euclidean distance squared seeking two vectors 
		*/
		static squaredDistance <Out extends IVec4Like> (a: Out, b: Out): number;		
		/**
		!#zh æ±?????????¿åº¦
		!#en Seeking vector length 
		*/
		static len <Out extends IVec4Like> (a: Out): number;		
		/**
		!#zh æ±?????????¿åº¦å¹³æ??
		!#en Seeking squared vector length 
		*/
		static lengthSqr <Out extends IVec4Like> (a: Out): number;		
		/**
		!#zh ??????ç´??????????è´?
		!#en By taking the negative elements of the vector 
		*/
		static negate <Out extends IVec4Like> (out: Out, a: Out): Out;		
		/**
		!#zh ??????ç´???????????????°ï????¥è?? 0 ??¶è????? Infinity
		!#en Element vector by taking the inverse, return near 0 Infinity 
		*/
		static inverse <Out extends IVec4Like> (out: Out, a: Out): Out;		
		/**
		!#zh ??????ç´???????????????°ï????¥è?? 0 ??¶è????? 0
		!#en Element vector by taking the inverse, return near 0 0 
		*/
		static inverseSafe <Out extends IVec4Like> (out: Out, a: Out): Out;		
		/**
		!#zh å½?ä¸??????????
		!#en Normalized vector 
		*/
		static normalize <Out extends IVec4Like> (out: Out, a: Out): Out;		
		/**
		!#zh ????????¹ç§¯ï¼???°é??ç§¯ï??
		!#en Vector dot product (scalar product) 
		*/
		static dot <Out extends IVec4Like> (a: Out, b: Out): number;		
		/**
		!#zh ??????ç´???????çº¿æ?§æ????¼ï?? A + t * (B - A)
		!#en Vector element by element linear interpolation: A + t * (B - A) 
		*/
		static lerp <Out extends IVec4Like> (out: Out, a: Out, b: Out, t: number): Out;		
		/**
		!#zh ??????ä¸?ä¸ªå?¨å??ä½????ä½?ä¸??????????å¸?????????ºå?????
		!#en Generates a uniformly distributed random vectors on the unit sphere
		@param scale ?????????????????¿åº¦ 
		*/
		static random <Out extends IVec4Like> (out: Out, scale?: number): Out;		
		/**
		!#zh ????????©é?µä??æ³?
		!#en Vector matrix multiplication 
		*/
		static transformMat4 <Out extends IVec4Like, MatLike extends IMat4Like> (out: Out, a: Out, mat: MatLike): Out;		
		/**
		!#zh ??????ä»¿å????????
		!#en Affine transformation vector 
		*/
		static transformAffine<Out extends IVec4Like, VecLike extends IVec4Like, MatLike extends IMat4Like>(out: Out, v: VecLike, mat: MatLike): Out;		
		/**
		!#zh ??????????????°ä??æ³?
		!#en Vector quaternion multiplication 
		*/
		static transformQuat <Out extends IVec4Like, QuatLike extends IQuatLike> (out: Out, a: Out, q: QuatLike): Out;		
		/**
		!#zh ??????ç­?ä»·å?¤æ??
		!#en Equivalent vectors Analyzing 
		*/
		static strictEquals <Out extends IVec4Like> (a: Out, b: Out): boolean;		
		/**
		!#zh ?????¤æµ®??¹æ?°è¯¯å·®ç????????è¿?ä¼¼ç??ä»·å?¤æ??
		!#en Negative error vector floating point approximately equivalent Analyzing 
		*/
		static equals <Out extends IVec4Like> (a: Out, b: Out, epsilon?: number): boolean;		
		/**
		!#zh ??????è½¬æ?°ç??
		!#en Vector transfer array
		@param ofs ??°ç??èµ·å?????ç§»é?? 
		*/
		static toArray <Out extends IWritableArrayLike<number>> (out: Out, v: IVec4Like, ofs?: number): Out;		
		/**
		!#zh ??°ç??è½¬å?????
		!#en Array steering amount
		@param ofs ??°ç??èµ·å?????ç§»é?? 
		*/
		static fromArray <Out extends IVec4Like> (out: Out, arr: IWritableArrayLike<number>, ofs?: number): Out;		
		x: number;		
		y: number;		
		z: number;		
		w: number;		
		/**
		!#en
		Constructor
		see {{#crossLink "cc/vec4:method"}}cc.v4{{/crossLink}}
		!#zh
		????????½æ?°ï????¯æ?¥ç?? {{#crossLink "cc/vec4:method"}}cc.v4{{/crossLink}}
		@param x x
		@param y y
		@param z z
		@param w w 
		*/
		constructor(x?: number, y?: number, z?: number, w?: number);		
		/**
		!#en clone a Vec4 value
		!#zh ??????ä¸?ä¸? Vec4 ??? 
		*/
		clone(): Vec4;		
		/**
		!#en Set the current vector value with the given vector.
		!#zh ??¨å?¦ä??ä¸ªå?????è®¾ç½®å½?????????????å¯¹è±¡??¼ã??
		@param newValue !#en new value to set. !#zh è¦?è®¾ç½®?????°å?? 
		*/
		set(newValue: Vec4): Vec4;		
		/**
		!#en Check whether the vector equals another one
		!#zh å½???????????????¯å?¦ä?????å®????????????¸ç?????
		@param other other
		@param epsilon epsilon 
		*/
		equals(other: Vec4, epsilon?: number): boolean;		
		/**
		!#en Check whether the vector equals another one
		!#zh ??¤æ?­å?????????????¯å?¦å?¨è¯¯å·®è????´å??ä¸????å®??????????????????¸ç?????
		@param x ??¸æ??è¾????????????? x ?????????
		@param y ??¸æ??è¾????????????? y ?????????
		@param z ??¸æ??è¾????????????? z ?????????
		@param w ??¸æ??è¾????????????? w ?????????
		@param epsilon ???è®¸ç??è¯¯å·®ï¼?åº?ä¸ºé??è´???°ã?? 
		*/
		equals4f(x: number, y: number, z: number, w: number, epsilon?: number): boolean;		
		/**
		!#en Check whether strict equals other Vec4
		!#zh ??¤æ?­å?????????????¯å?¦ä?????å®?????????¸ç?????ä¸¤å???????????????????½å????«ç?¸ç????¶è????? `true`ï¼???¦å??è¿???? `false`???
		@param other ??¸æ??è¾????????????? 
		*/
		strictEquals(other: Vec4): boolean;		
		/**
		!#en Check whether strict equals other Vec4
		!#zh ??¤æ?­å?????????????¯å?¦ä?????å®??????????????????¸ç?????ä¸¤å???????????????????½å????«ç?¸ç????¶è????? `true`ï¼???¦å??è¿???? `false`???
		@param x ???å®?????????? x ?????????
		@param y ???å®?????????? y ?????????
		@param z ???å®?????????? z ?????????
		@param w ???å®?????????? w ????????? 
		*/
		strictEquals4f(x: number, y: number, z: number, w: number): boolean;		
		/**
		!#en Calculate linear interpolation result between this vector and another one with given ratio
		!#zh ??¹æ?®æ??å®?????????¼æ?????ï¼?ä»?å½????????????°ç?®æ????????ä¹???´å???????¼ã??
		@param to ??®æ???????????
		@param ratio ?????¼æ?????ï¼??????´ä¸º [0,1]??? 
		*/
		lerp(to: Vec4, ratio: number): Vec4;		
		/**
		!#en Transform to string with vector informations
		!#zh è¿????å½?????????????å­?ç¬¦ä¸²è¡¨ç¤º??? 
		*/
		toString(): string;		
		/**
		!#en Clamp the vector between minInclusive and maxInclusive.
		!#zh è®¾ç½®å½???????????????¼ï??ä½¿å?¶å??ä¸ªå???????½å??äº????å®?????????´å?????
		@param minInclusive æ¯?ä¸ªå???????½ä»£è¡¨ä??å¯¹å???????????è®¸ç?????å°???¼ã??
		@param maxInclusive æ¯?ä¸ªå???????½ä»£è¡¨ä??å¯¹å???????????è®¸ç?????å¤§å?¼ã?? 
		*/
		clampf(minInclusive: Vec4, maxInclusive: Vec4): Vec4;		
		/**
		!#en Adds this vector. If you want to save result to another vector, use add() instead.
		!#zh ?????????æ³????å¦????ä½???³ä??å­?ç»??????°å?¦ä??ä¸ªå?????ï¼?ä½¿ç?? add() ä»???¿ã??
		@param vector vector 
		*/
		addSelf(vector: Vec4): Vec4;		
		/**
		!#en Adds two vectors, and returns the new result.
		!#zh ?????????æ³?ï¼?å¹¶è???????°ç????????
		@param vector vector
		@param out optional, the receiving vector, you can pass the same vec4 to save result to itself, if not provided, a new vec4 will be created 
		*/
		add(vector: Vec4, out?: Vec4): Vec4;		
		/**
		!#en Subtracts one vector from this, and returns the new result.
		!#zh ?????????æ³?ï¼?å¹¶è???????°ç????????
		@param vector vector
		@param out optional, the receiving vector, you can pass the same vec4 to save result to itself, if not provided, a new vec4 will be created 
		*/
		subtract(vector: Vec4, out?: Vec4): Vec4;		
		/**
		!#en Multiplies this by a number.
		!#zh ç¼©æ?¾å??????????????
		@param num num 
		*/
		multiplyScalar(num: number): Vec4;		
		/**
		!#en Multiplies two vectors.
		!#zh ????????¸ä?????
		@param vector vector 
		*/
		multiply(vector: Vec4): Vec4;		
		/**
		!#en Divides by a number.
		!#zh ????????¤æ?????
		@param num num 
		*/
		divide(num: number): Vec4;		
		/**
		!#en Negates the components.
		!#zh ???????????? 
		*/
		negate(): Vec4;		
		/**
		!#en Dot product
		!#zh å½??????????ä¸????å®???????è¿?è¡???¹ä?????
		@param vector vector 
		*/
		dot(vector?: Vec4): number;		
		/**
		!#en Cross product
		!#zh å½??????????ä¸????å®???????è¿?è¡????ä¹????
		@param vector vector
		@param out out 
		*/
		cross(vector: Vec4, out?: Vec4): Vec4;		
		/**
		!#en Returns the length of this vector.
		!#zh è¿????è¯¥å??????????¿åº¦???
		
		@example 
		```js
		var v = cc.v4(10, 10);
		v.len(); // return 14.142135623730951;
		``` 
		*/
		len(): number;		
		/**
		!#en Returns the squared length of this vector.
		!#zh è¿????è¯¥å??????????¿åº¦å¹³æ?¹ã?? 
		*/
		lengthSqr(): number;		
		/**
		!#en Make the length of this vector to 1.
		!#zh ??????å½?ä¸????ï¼?è®©è??ä¸ªå??????????¿åº¦ä¸? 1??? 
		*/
		normalizeSelf(): Vec4;		
		/**
		!#en
		Returns this vector with a magnitude of 1.<br/>
		<br/>
		Note that the current vector is unchanged and a new normalized vector is returned. If you want to normalize the current vector, use normalizeSelf function.
		!#zh
		è¿????å½?ä¸???????????????????<br/>
		<br/>
		æ³¨æ??ï¼?å½??????????ä¸????ï¼?å¹¶è?????ä¸?ä¸ªæ?°ç??å½?ä¸?????????????å¦????ä½???³æ?¥å??ä¸????å½??????????ï¼???¯ä½¿??? normalizeSelf ??½æ?°ã??
		@param out optional, the receiving vector, you can pass the same vec4 to save result to itself, if not provided, a new vec4 will be created 
		*/
		normalize(out?: Vec4): Vec4;		
		/**
		Transforms the vec4 with a mat4. 4th vector component is implicitly '1'
		@param m matrix to transform with
		@param out the receiving vector, you can pass the same vec4 to save result to itself, if not provided, a new vec4 will be created 
		*/
		transformMat4(m: Mat4, out?: Vec4): Vec4;		
		/**
		Returns the maximum value in x, y, z, w. 
		*/
		maxAxis(): number;	
	}	
	/** !#en .
	!#zh ??? */
	export class SkeletonAnimation extends Animation {	
	}	
	/** !#en SkeletonAnimationClip Asset.
	!#zh éª¨éª¼??¨ç?»å?ªè????? */
	export class SkeletonAnimationClip extends AnimationClip {	
	}	
	/** !#en
	Skinned Mesh Renderer
	!#zh
	?????®æ¸²???ç»?ä»? */
	export class SkinnedMeshRenderer extends MeshRenderer {		
		/** !#en
		Skeleton Asset
		!#zh
		éª¨éª¼èµ?æº? */
		skeleton: sp.Skeleton;		
		/** !#en
		Root Bone
		!#zh
		éª¨éª¼??¹è????? */
		rootBone: Node;	
	}	
	/** !#en The animation curve of 3d particle.
	!#zh 3D ç²?å­???¨ç?»æ?²çº¿ */
	export class AnimationCurve {		
		/** !#en Array of key value.
		!#zh ??³é?®å?¼å??è¡¨ã?? */
		keyFrames: Keyframe[];		
		/** !#en Pre-wrap mode.
		!#zh ???ç½®å¾ª??¯æ¨¡å¼???? */
		preWrapMode: WrapMode;		
		/** !#en Post-wrap mode.
		!#zh ???ç½®å¾ª??¯æ¨¡å¼???? */
		postWrapMode: WrapMode;	
	}	
	/** !#en The burst of 3d particle.
	!#zh 3D ç²?å­????å°???¶ç????????ä¸ªæ?? */
	export class Burst {		
		/** !#en Time between the start of the particle system and the trigger of this Brust
		!#zh ç²?å­?ç³»ç??å¼?å§?è¿?è¡???°è§¦???æ­¤æ¬¡ Brust ?????¶é?? */
		time: number;		
		/** !#en Minimum number of emitted particles
		!#zh ???å°?ç²?å­???????å°???°é?? */
		minCount: number;		
		/** !#en Maximum number of emitted particles
		!#zh ???å°?ç²?å­???????å¤§æ?°é?? */
		maxCount: number;		
		/** !#en The number of times Burst was triggered.
		!#zh Burst ???è§¦å??æ¬¡æ?? */
		repeatCount: number;		
		/** !#en Interval of each trigger
		!#zh æ¯?æ¬¡è§¦????????´é????¶é?? */
		repeatInterval: number;		
		/** !#en Number of particles emitted
		!#zh ???å°????ç²?å­??????°é?? */
		count: CurveRange;	
	}	
	/** !#en The ParticleSystem3D Component.
	!#zh 3D ç²?å­?ç»?ä»? */
	export class ParticleSystem3D extends RenderComponent {		
		/** !#en The run time of particle.
		!#zh ç²?å­?ç³»ç??è¿?è¡???¶é?? */
		duration: number;		
		/** !#en The maximum number of particles that a particle system can generate.
		!#zh ç²?å­?ç³»ç????½ç???????????å¤§ç??å­???°é?? */
		capacity: number;		
		/** !#en Whether the particle system loops.
		!#zh ç²?å­?ç³»ç????¯å?¦å¾ª??¯æ?­æ?? */
		loop: boolean;		
		/** !#en Whether the particles start playing automatically after loaded.
		!#zh ç²?å­?ç³»ç?????è½½å????¯å?¦è?ªå?¨å??å§???­æ?? */
		playOnAwake: boolean;		
		/** !#en When selected, the particle system will start playing after one round has been played (only effective when loop is enabled).
		!#zh ???ä¸­ä?????ï¼?ç²?å­?ç³»ç??ä¼?ä»¥å·²??­æ?¾å??ä¸?è½®ä??????????¶æ??å¼?å§???­æ?¾ï??ä»?å½?å¾ªç?¯æ?­æ?¾å?¯ç?¨æ?¶æ?????ï¼? */
		prewarm: boolean;		
		/** !#en The coordinate system in which the particle system is located.<br>
		World coordinates (does not change when the position of other objects changes)<br>
		Local coordinates (moving as the position of the parent node changes)<br>
		Custom coordinates (moving with the position of a custom node)
		!#zh ?????©ç??å­?ç³»ç???????¨ç????????ç³?<br>
		ä¸??????????ï¼?ä¸??????¶ä????©ä??ä½?ç½®æ?¹å??????????¢ï??<br>
		å±???¨å?????ï¼?è·??????¶è????¹ä??ç½®æ?¹å?????ç§»å?¨ï??<br>
		??ªå????????ï¼?è·??????ªå??ä¹??????¹ç??ä½?ç½®æ?¹å?????ç§»å?¨ï?? */
		simulationSpace: ParticleSystem3DAssembler.Space;		
		/** !#en Controlling the update speed of the entire particle system.
		!#zh ??§å?¶æ?´ä¸ªç²?å­?ç³»ç???????´æ?°é??åº¦ã?? */
		simulationSpeed: number;		
		/** !#en Delay particle emission time after particle system starts running.
		!#zh ç²?å­?ç³»ç??å¼?å§?è¿?è¡????ï¼?å»¶è??ç²?å­????å°??????¶é?´ã?? */
		startDelay: CurveRange;		
		/** !#en Particle life cycle???
		!#zh ç²?å­??????½å?¨æ????? */
		startLifetime: CurveRange;		
		/** !#en Particle initial color
		!#zh ç²?å­????å§?é¢???? */
		startColor: GradientRange;		
		/** !#en Particle scale space
		!#zh ç¼©æ?¾ç©º??? */
		scaleSpace: ParticleSystem3DAssembler.Space;		
		/** !#en Initial particle size
		!#zh ç²?å­????å§?å¤§å?? */
		startSize: CurveRange;		
		/** !#en Initial particle speed
		!#zh ç²?å­????å§????åº? */
		startSpeed: CurveRange;		
		/** !#en Particle initial rotation angle
		!#zh ç²?å­????å§????è½¬è??åº? */
		startRotation: CurveRange;		
		/** !#en Gravity coefficient of particles affected by gravity
		!#zh ç²?å­??????????å½±å???????????ç³»æ?? */
		gravityModifier: CurveRange;		
		/** !#en Particles emitted per second
		!#zh æ¯?ç§????å°????ç²?å­???? */
		rateOverTime: CurveRange;		
		/** !#en Number of particles emitted per unit distance moved
		!#zh æ¯?ç§»å?¨å??ä½?è·?ç¦»å??å°????ç²?å­???? */
		rateOverDistance: CurveRange;		
		/** !#en The number of Brusts that emit a specified number of particles at a specified time
		!#zh è®¾å????¨æ??å®???¶é?´å??å°????å®???°é?????ç²?å­???? Brust ?????°é?? */
		bursts: Burst[];		
		/** !#en Particle emitter module
		!#zh ç²?å­????å°???¨æ¨¡??? */
		shapeModule: ShapeModule;		
		/** !#en Color control module
		!#zh é¢???²æ?§å?¶æ¨¡??? */
		colorOverLifetimeModule: ColorOverLifetimeModule;		
		/** !#en Particle size module
		!#zh ç²?å­?å¤§å??æ¨¡å?? */
		sizeOvertimeModule: SizeOvertimeModule;		
		/** !#en Particle speed module
		!#zh ç²?å­????åº¦æ¨¡??? */
		velocityOvertimeModule: VelocityOvertimeModule;		
		/** !#en Particle acceleration module
		!#zh ç²?å­???????åº¦æ¨¡??? */
		forceOvertimeModule: ForceOvertimeModule;		
		/** !#en Particle limit speed module (only CPU particles are supported)
		!#zh ç²?å­??????¶é??åº¦æ¨¡???ï¼???ªæ?¯æ?? CPU ç²?å­?ï¼? */
		limitVelocityOvertimeModule: LimitVelocityOvertimeModule;		
		/** !#en Particle rotation module
		!#zh ç²?å­????è½¬æ¨¡??? */
		rotationOvertimeModule: RotationOvertimeModule;		
		/** !#en Texture Animation Module
		!#zh è´´å?¾å?¨ç?»æ¨¡??? */
		textureAnimationModule: TextureAnimationModule;		
		/** !#en Particle Trajectory Module
		!#zh ç²?å­?è½¨è¿¹æ¨¡å?? */
		trailModule: TrailModule;		
		/** !#en Particle generation mode
		!#zh è®¾å??ç²?å­???????æ¨¡å?? */
		renderMode: ParticleSystem3DAssembler.RenderMode;		
		/** !#en When the particle generation mode is StrecthedBillboard, in the direction of movement of the particles is stretched by velocity magnitude
		!#zh ??¨ç??å­?????????¹å??ä¸? StrecthedBillboard ???,å¯¹ç??å­???¨è????¨æ?¹å??ä¸???????åº¦å¤§å°?è¿?è¡????ä¼? */
		velocityScale: number;		
		/** !#en When the particle generation method is StrecthedBillboard, the particles are stretched according to the particle size in the direction of motion
		!#zh ??¨ç??å­?????????¹å??ä¸? StrecthedBillboard ???,å¯¹ç??å­???¨è????¨æ?¹å??ä¸????ç²?å­?å¤§å??è¿?è¡????ä¼? */
		lengthScale: number;		
		/** !#en Particle model
		!#zh ç²?å­?æ¨¡å?? */
		mesh: Mesh;		
		/** !#en Particle material
		!#zh ç²?å­????è´? */
		particleMaterial: Material;		
		/** !#en Particle trail material
		!#zh ç²?å­?è½¨è¿¹???è´? */
		trailMaterial: Material;		
		/**
		!#en Playing particle effects
		!#zh ??­æ?¾ç??å­??????? 
		*/
		play(): void;		
		/**
		!#en Pause particle effect
		!#zh ????????­æ?¾ç??å­??????? 
		*/
		pause(): void;		
		/**
		!#en Stop particle effect
		!#zh ???æ­¢æ?­æ?¾ç??å­??????? 
		*/
		stop(): void;		
		/**
		!#en Remove all particle effect
		!#zh å°???????ç²?å­?ä»?ç²?å­?ç³»ç??ä¸­æ????? 
		*/
		clear(): void;	
	}	
	/** !#en
	Helper class for ES5 Map.
	!#zh
	ES5 Map è¾???©ç±»??? */
	export class MapUtils {	
	}	
	/** !#en Effect Asset.
	!#zh Effect èµ?æº?ç±»å????? */
	export class EffectAsset extends Asset {	
	}	
	/** !#en Material Asset.
	!#zh ???è´¨è??æº?ç±»ã?? */
	export class Material extends Asset {		
		/**
		!#en Get built-in materials
		!#zh ??·å?????ç½®æ??è´?
		@param name name 
		*/
		static getBuiltinMaterial(name: string): Material;		
		/**
		!#en Creates a Material with builtin Effect.
		!#zh ä½¿ç?¨å??å»? Effect ???å»ºä??ä¸ªæ??è´¨ã??
		@param effectName effectName
		@param techniqueIndex techniqueIndex 
		*/
		static createWithBuiltin(effectName: string, techniqueIndex?: number): Material;		
		/**
		!#en Creates a Material.
		!#zh ???å»ºä??ä¸ªæ??è´¨ã??
		@param effectAsset effectAsset
		@param techniqueIndex techniqueIndex 
		*/
		static create(effectAsset: EffectAsset, techniqueIndex?: number): Material;		
		/**
		!#en Sets the Material property
		!#zh è®¾ç½®???è´¨ç??å±????
		@param name name
		@param val val
		@param passIdx passIdx
		@param directly directly 
		*/
		setProperty(name: string, val: any, passIdx?: number, directly?: boolean): void;		
		/**
		!#en Gets the Material property.
		!#zh ??·å?????è´¨ç??å±???§ã??
		@param name name
		@param passIdx passIdx 
		*/
		getProperty(name: string, passIdx: number): any;		
		/**
		!#en Sets the Material define.
		!#zh è®¾ç½®???è´¨ç??å®?å®?ä¹????
		@param name name
		@param val val
		@param passIdx passIdx
		@param force force 
		*/
		define(name: string, val: boolean|number, passIdx?: number, force?: boolean): void;		
		/**
		!#en Gets the Material define.
		!#zh ??·å?????è´¨ç??å®?å®?ä¹????
		@param name name
		@param passIdx passIdx 
		*/
		getDefine(name: string, passIdx?: number): boolean;		
		/**
		!#en Sets the Material cull mode.
		!#zh è®¾ç½®???è´¨ç??è£????æ¨¡å?????
		@param cullMode cullMode
		@param passIdx passIdx 
		*/
		setCullMode(cullMode: number, passIdx: number): void;		
		/**
		!#en Sets the Material depth states.
		!#zh è®¾ç½®???è´¨ç??æ·±åº¦æ¸²æ????¶æ?????
		@param depthTest depthTest
		@param depthWrite depthWrite
		@param depthFunc depthFunc
		@param passIdx passIdx 
		*/
		setDepth(depthTest: boolean, depthWrite: boolean, depthFunc: number, passIdx: number): void;		
		/**
		!#en Sets the Material blend states.
		!#zh è®¾ç½®???è´¨ç??æ··å??æ¸²æ????¶æ?????
		@param enabled enabled
		@param blendEq blendEq
		@param blendSrc blendSrc
		@param blendDst blendDst
		@param blendAlphaEq blendAlphaEq
		@param blendSrcAlpha blendSrcAlpha
		@param blendDstAlpha blendDstAlpha
		@param blendColor blendColor
		@param passIdx passIdx 
		*/
		setBlend(enabled: boolean, blendEq: number, blendSrc: number, blendDst: number, blendAlphaEq: number, blendSrcAlpha: number, blendDstAlpha: number, blendColor: number, passIdx: number): void;		
		/**
		!#en Sets whether enable the stencil test.
		!#zh è®¾ç½®??¯å?¦å????¯æ¨¡??¿æ??è¯????
		@param stencilTest stencilTest
		@param passIdx passIdx 
		*/
		setStencilEnabled(stencilTest: number, passIdx: number): void;		
		/**
		!#en Sets the Material stencil render states.
		!#zh è®¾ç½®???è´¨ç??æ¨¡æ?¿æ??è¯?æ¸²æ???????°ã??
		@param stencilTest stencilTest
		@param stencilFunc stencilFunc
		@param stencilRef stencilRef
		@param stencilMask stencilMask
		@param stencilFailOp stencilFailOp
		@param stencilZFailOp stencilZFailOp
		@param stencilZPassOp stencilZPassOp
		@param stencilWriteMask stencilWriteMask
		@param passIdx passIdx 
		*/
		setStencil(stencilTest: number, stencilFunc: number, stencilRef: number, stencilMask: number, stencilFailOp: number, stencilZFailOp: number, stencilZPassOp: number, stencilWriteMask: number, passIdx: number): void;	
	}	
	/** !#en
	Material Variant is an extension of the Material Asset.
	Changes to Material Variant do not affect other Material Variant or Material Asset,
	and changes to Material Asset are synchronized to the Material Variant.
	However, when a Material Variant had already modifies a state, the Material Asset state is not synchronized to the Material Variant.
	!#zh
	???è´¨å??ä½???¯æ??è´¨è??æº????ä¸?ä¸ªå»¶ä¼¸ã??
	???è´¨å??ä½????ä¿®æ?¹ä??ä¼?å½±å????°å?¶ä????????è´¨å??ä½??????????è´¨è??æº?ï¼???????è´¨è??æº????ä¿®æ?¹ä?????æ­¥ä????°å?°æ??è´¨å??ä½?ä¸?ï¼?
	ä½???¯å?????è´¨å??ä½?å¯¹ä??ä¸ªç?¶æ??ä¿®æ?¹å??ï¼????è´¨è??æº????å¯¹è??ä¸ªç?¶æ??ä¿®æ?¹æ?¯ä??ä¼????æ­¥å?°æ??è´¨å??ä½?ä¸??????? */
	export class MaterialVariant extends Material {		
		/**
		
		@param materialName materialName
		@param owner owner 
		*/
		static createWithBuiltin (materialName: string, owner: cc.RenderComponent): MaterialVariant | null;		
		/**
		
		@param material material
		@param owner owner 
		*/
		static create (material: Material, owner: cc.RenderComponent): MaterialVariant | null;	
	}	
	/** !#en cc.EditBox is a component for inputing text, you can use it to gather small amounts of text from users.
	!#zh EditBox ç»?ä»¶ï????¨ä????·å????¨æ?·ç??è¾???¥æ????¬ã?? */
	export class EditBox extends Component {		
		/** !#en Input string of EditBox.
		!#zh è¾???¥æ????????å§?è¾???¥å??å®¹ï??å¦????ä¸ºç©º???ä¼???¾ç¤º???ä½?ç¬¦ç???????¬ã?? */
		string: string;		
		/** !#en The Label component attached to the node for EditBox's input text label
		!#zh è¾???¥æ??è¾???¥æ????¬è????¹ä?????è½½ç?? Label ç»?ä»¶å¯¹è±? */
		textLabel: Label;		
		/** !#en The Label component attached to the node for EditBox's placeholder text label
		!#zh è¾???¥æ?????ä½?ç¬¦è????¹ä?????è½½ç?? Label ç»?ä»¶å¯¹è±? */
		placeholderLabel: Label;		
		/** !#en The Sprite component attached to the node for EditBox's background
		!#zh è¾???¥æ???????¯è????¹ä?????è½½ç?? Sprite ç»?ä»¶å¯¹è±? */
		background: Sprite;		
		/** !#en The background image of EditBox. This property will be removed in the future, use editBox.background instead please.
		!#zh è¾???¥æ??????????¯å?¾ç????? è¯¥å????§ä????¨å????¥ç???????¬ä¸­ç§»é?¤ï??è¯·ç?? editBox.background */
		backgroundImage: SpriteFrame;		
		/** !#en
		The return key type of EditBox.
		Note: it is meaningless for web platforms and desktop platforms.
		!#zh
		???å®?ç§»å?¨è®¾å¤?ä¸???¢å??è½¦æ????®ç????·å?????
		æ³¨æ??ï¼?è¿?ä¸ªé??é¡¹å¯¹ web å¹³å?°ä?? desktop å¹³å?°æ???????? */
		returnType: EditBox.KeyboardReturnType;		
		/** !#en Set the input flags that are to be applied to the EditBox.
		!#zh ???å®?è¾???¥æ??å¿?ä½?ï¼???¯ä»¥???å®?è¾???¥æ?¹å??ä¸ºå??????????????è¯?é¦?å­?æ¯?å¤§å????? */
		inputFlag: EditBox.InputFlag;		
		/** !#en
		Set the input mode of the edit box.
		If you pass ANY, it will create a multiline EditBox.
		!#zh
		???å®?è¾???¥æ¨¡å¼?: ANYè¡¨ç¤ºå¤?è¡?è¾???¥ï????¶å????½æ?¯å??è¡?è¾???¥ï??ç§»å?¨å¹³??°ä??è¿???¯ä»¥???å®???®ç????·å????? */
		inputMode: EditBox.InputMode;		
		/** !#en Font size of the input text. This property will be removed in the future, use editBox.textLabel.fontSize instead please.
		!#zh è¾???¥æ???????¬ç??å­?ä½?å¤§å????? è¯¥å????§ä????¨å????¥ç???????¬ä¸­ç§»é?¤ï??è¯·ä½¿??? editBox.textLabel.fontSize??? */
		fontSize: number;		
		/** !#en Change the lineHeight of displayed text. This property will be removed in the future, use editBox.textLabel.lineHeight instead.
		!#zh è¾???¥æ???????¬ç??è¡?é«????è¯¥å????§ä????¨å????¥ç???????¬ä¸­ç§»é?¤ï??è¯·ä½¿??? editBox.textLabel.lineHeight */
		lineHeight: number;		
		/** !#en Font color of the input text. This property will be removed in the future, use editBox.textLabel.node.color instead.
		!#zh è¾???¥æ???????¬ç??é¢???²ã??è¯¥å????§ä????¨å????¥ç???????¬ä¸­ç§»é?¤ï??è¯·ä½¿??? editBox.textLabel.node.color */
		fontColor: Color;		
		/** !#en The display text of placeholder.
		!#zh è¾???¥æ?????ä½?ç¬¦ç???????¬å??å®¹ã?? */
		placeholder: string;		
		/** !#en The font size of placeholder. This property will be removed in the future, use editBox.placeholderLabel.fontSize instead.
		!#zh è¾???¥æ?????ä½?ç¬¦ç??å­?ä½?å¤§å?????è¯¥å????§ä????¨å????¥ç???????¬ä¸­ç§»é?¤ï??è¯·ä½¿??? editBox.placeholderLabel.fontSize */
		placeholderFontSize: number;		
		/** !#en The font color of placeholder. This property will be removed in the future, use editBox.placeholderLabel.node.color instead.
		!#zh è¾???¥æ?????ä½?ç¬¦ç??å­?ä½?é¢???²ã??è¯¥å????§ä????¨å????¥ç???????¬ä¸­ç§»é?¤ï??è¯·ä½¿??? editBox.placeholderLabel.node.color */
		placeholderFontColor: Color;		
		/** !#en The maximize input length of EditBox.
		- If pass a value less than 0, it won't limit the input number of characters.
		- If pass 0, it doesn't allow input any characters.
		!#zh è¾???¥æ?????å¤§å??è®¸è????¥ç??å­?ç¬¦ä¸ª??°ã??
		- å¦??????¼ä¸ºå°?äº? 0 ?????¼ï?????ä¸?ä¼??????¶è????¥å??ç¬¦ä¸ª??°ã??
		- å¦??????¼ä¸º 0ï¼????ä¸????è®¸ç?¨æ?·è??è¡?ä»»ä??è¾???¥ã?? */
		maxLength: number;		
		/** !#en The input is always visible and be on top of the game view (only useful on Web), this property will be removed on v2.1
		!zh è¾???¥æ????»æ?¯å?¯è??ï¼?å¹¶ä??æ°¸è????¨æ¸¸???è§???¾ç??ä¸???¢ï??è¿?ä¸ªå????§å?ªæ????? Web ä¸???¢ä¿®??¹æ?????ä¹?ï¼?ï¼?è¯¥å????§ä????? v2.1 ä¸­ç§»???
		Note: only available on Web at the moment. */
		stayOnTop: boolean;		
		/** !#en Set the tabIndex of the DOM input element (only useful on Web).
		!#zh ä¿®æ?? DOM è¾???¥å??ç´???? tabIndexï¼?è¿?ä¸ªå????§å?ªæ????? Web ä¸???¢ä¿®??¹æ?????ä¹?ï¼???? */
		tabIndex: number;		
		/** !#en The event handler to be called when EditBox began to edit text.
		!#zh å¼?å§?ç¼?è¾??????¬è????¥æ??è§¦å?????äº?ä»¶å??è°???? */
		editingDidBegan: Component.EventHandler[];		
		/** !#en The event handler to be called when EditBox text changes.
		!#zh ç¼?è¾??????¬è????¥æ????¶è§¦??????äº?ä»¶å??è°???? */
		textChanged: Component.EventHandler[];		
		/** !#en The event handler to be called when EditBox edit ends.
		!#zh ç»????ç¼?è¾??????¬è????¥æ????¶è§¦??????äº?ä»¶å??è°???? */
		editingDidEnded: Component.EventHandler[];		
		/** !#en The event handler to be called when return key is pressed. Windows is not supported.
		!#zh å½???¨æ?·æ??ä¸????è½¦æ????®æ?¶ç??äº?ä»¶å??è°?ï¼???®å??ä¸???¯æ?? windows å¹³å?? */
		editingReturn: Component.EventHandler[];		
		/**
		!#en Let the EditBox get focus, this method will be removed on v2.1
		!#zh è®©å????? EditBox ??·å????¦ç??, è¿?ä¸ªæ?¹æ??ä¼???? v2.1 ä¸­ç§»??? 
		*/
		setFocus(): void;		
		/**
		!#en Let the EditBox get focus
		!#zh è®©å????? EditBox ??·å????¦ç?? 
		*/
		focus(): void;		
		/**
		!#en Let the EditBox lose focus
		!#zh è®©å????? EditBox å¤±å?»ç?¦ç?? 
		*/
		blur(): void;		
		/**
		!#en Determine whether EditBox is getting focus or not.
		!#zh ??¤æ?? EditBox ??¯å?¦è?·å??äº???¦ç?? 
		*/
		isFocused(): void;		
		/**
		!#en if you don't need the EditBox and it isn't in any running Scene, you should
		call the destroy method on this component or the associated node explicitly.
		Otherwise, the created DOM element won't be removed from web page.
		!#zh
		å¦????ä½?ä¸????ä½¿ç?? EditBoxï¼?å¹¶ä??ç»?ä»¶æ?ªæ·»?????°å?ºæ?¯ä¸­ï¼????ä¹?ä½?å¿?é¡»æ????¨å¯¹ç»?ä»¶æ???????¨è????¹è????? destroy???
		è¿???·æ????½ç§»??¤ç??é¡µä????? DOM ?????¹ï????¿å?? Web å¹³å?°å??å­?æ³???²ã??
		
		@example 
		```js
		editbox.node.parent = null;  // or  editbox.node.removeFromParent(false);
		// when you don't need editbox anymore
		editbox.node.destroy();
		``` 
		*/
		destroy(): boolean;	
	}	
	/** undefined */
	export class PhysicsBoxCollider extends PhysicsCollider implements Collider.Box {		
		/** !#en Position offset
		!#zh ä½?ç½®å??ç§»é?? */
		offset: Vec2;		
		/** !#en Box size
		!#zh ?????´ç??å¤§å?? */
		size: Size;	
	}	
	/** undefined */
	export class PhysicsChainCollider extends PolygonCollider {		
		/** !#en Whether the chain is loop
		!#zh ??¾æ?¡æ?¯å?¦é??å°¾ç?¸è?? */
		loop: boolean;		
		/** !#en Chain points
		!#zh ??¾æ?¡é¡¶??¹æ?°ç?? */
		points: Vec2[];	
	}	
	/** undefined */
	export class PhysicsCircleCollider extends PhysicsCollider implements Collider.Circle {		
		/** !#en Position offset
		!#zh ä½?ç½®å??ç§»é?? */
		offset: Vec2;		
		/** !#en Circle radius
		!#zh ???å½¢å??å¾? */
		radius: number;	
	}	
	/** undefined */
	export class PhysicsCollider extends Collider {		
		/** !#en
		The density.
		!#zh
		å¯?åº? */
		density: number;		
		/** !#en
		A sensor collider collects contact information but never generates a collision response
		!#zh
		ä¸?ä¸ªä???????¨ç±»??????ç¢°æ??ä½?ä¼?äº§ç??ç¢°æ?????è°?ï¼?ä½???¯ä??ä¼?????????©ç??ç¢°æ??????????? */
		sensor: boolean;		
		/** !#en
		The friction coefficient, usually in the range [0,1].
		!#zh
		??©æ?¦ç³»??°ï???????¼ä????¬å?? [0, 1] ä¹???? */
		friction: number;		
		/** !#en
		The restitution (elasticity) usually in the range [0,1].
		!#zh
		å¼¹æ?§ç³»??°ï???????¼ä????¬å?? [0, 1]ä¹???? */
		restitution: number;		
		/** !#en
		Physics collider will find the rigidbody component on the node and set to this property.
		!#zh
		ç¢°æ??ä½?ä¼???¨å??å§??????¶æ?¥æ?¾è????¹ä????¯å?¦å????¨å??ä½?ï¼?å¦??????¥æ?¾æ????????èµ???¼å?°è??ä¸ªå????§ä????? */
		body: RigidBody;		
		/**
		!#en
		Apply current changes to collider, this will regenerate inner box2d fixtures.
		!#zh
		åº???¨å????? collider ä¸­ç??ä¿®æ?¹ï??è°???¨æ­¤??½æ?°ä???????°ç??????????? box2d ???å¤¹å?·ã?? 
		*/
		apply(): void;		
		/**
		!#en
		Get the world aabb of the collider
		!#zh
		??·å??ç¢°æ??ä½????ä¸??????????ç³»ä??????????´ç?? 
		*/
		getAABB(): void;	
	}	
	/** undefined */
	export class PhysicsPolygonCollider extends PhysicsCollider implements Collider.Polygon {		
		/** !#en Position offset
		!#zh ä½?ç½®å??ç§»é?? */
		offset: Vec2;		
		/** !#en Polygon points
		!#zh å¤?è¾¹å½¢é¡¶ç?¹æ?°ç?? */
		points: Vec2[];	
	}	
	/** !#en
	A distance joint constrains two points on two bodies
	to remain at a fixed distance from each other. You can view
	this as a massless, rigid rod.
	!#zh
	è·?ç¦»å?³è?????è¿?ä¸?ä¸ªå?ºå???????¿åº¦??¥çº¦?????³è????¾æ?¥ç??ä¸¤ä¸ª???ä½????ä½???¯ä»¥å°?å®???³è±¡???ä¸?ä¸ªæ??è´¨é??ï¼??????ºç????¨æ????? */
	export class DistanceJoint extends Joint {		
		/** !#en
		The distance separating the two ends of the joint.
		!#zh
		??³è??ä¸¤ç«¯???è·?ç¦? */
		distance: number;		
		/** !#en
		The spring frequency.
		!#zh
		å¼¹æ?§ç³»??°ã?? */
		frequency: number;		
		/** !#en
		The damping ratio.
		!#zh
		??»å°¼ï¼?è¡¨ç¤º??³è?????å½¢å??ï¼???¢å????°å??å§???¶æ???????°ç????»å????? */
		dampingRatio: number;	
	}	
	/** !#en
	Base class for joints to connect rigidbody.
	!#zh
	??³è??ç±»ç????ºç±» */
	export class Joint extends Component {		
		/** !#en
		The anchor of the rigidbody.
		!#zh
		???ä½?????????¹ã?? */
		anchor: Vec2;		
		/** !#en
		The anchor of the connected rigidbody.
		!#zh
		??³è????¦ä??ç«¯å??ä½?????????¹ã?? */
		connectedAnchor: Vec2;		
		/** !#en
		The rigidbody to which the other end of the joint is attached.
		!#zh
		??³è????¦ä??ç«¯é?¾æ?¥ç?????ä½? */
		connectedBody: RigidBody;		
		/** !#en
		Should the two rigid bodies connected with this joint collide with each other?
		!#zh
		??¾æ?¥å?°å?³è??ä¸????ä¸¤ä¸ª???ä½???¯å?¦å??è¯¥ç?¸ä??ç¢°æ??ï¼? */
		collideConnected: boolean;		
		/**
		!#en
		Apply current changes to joint, this will regenerate inner box2d joint.
		!#zh
		åº???¨å???????³è??ä¸­ç??ä¿®æ?¹ï??è°???¨æ­¤??½æ?°ä???????°ç??????????? box2d ?????³è????? 
		*/
		apply(): void;		
		/**
		!#en
		Get the anchor point on rigidbody in world coordinates.
		!#zh
		??·å?????ä½?ä¸??????????ç³»ä??????????¹ã?? 
		*/
		getWorldAnchor(): Vec2;		
		/**
		!#en
		Get the anchor point on connected rigidbody in world coordinates.
		!#zh
		??·å????¾æ?¥å??ä½?ä¸??????????ç³»ä??????????¹ã?? 
		*/
		getWorldConnectedAnchor(): Vec2;		
		/**
		!#en
		Gets the reaction force of the joint.
		!#zh
		??·å????³è????????ä½???¨å?????
		@param timeStep The time to calculate the reaction force for. 
		*/
		getReactionForce(timeStep: number): Vec2;		
		/**
		!#en
		Gets the reaction torque of the joint.
		!#zh
		??·å????³è??????????­ç?©ã??
		@param timeStep The time to calculate the reaction torque for. 
		*/
		getReactionTorque(timeStep: number): number;	
	}	
	/** !#en
	A motor joint is used to control the relative motion
	between two bodies. A typical usage is to control the movement
	of a dynamic body with respect to the ground.
	!#zh
	é©¬è¾¾??³è??è¢«ç?¨æ?¥æ?§å?¶ä¸¤ä¸ªå??ä½???´ç????¸å¯¹è¿???¨ã??
	ä¸?ä¸ªå?¸å?????ä¾?å­???¯ç?¨æ?¥æ?§å?¶ä??ä¸ªå?¨æ?????ä½???¸å¯¹äº???°é?¢ç??è¿???¨ã?? */
	export class MotorJoint extends Joint {		
		/** !#en
		The anchor of the rigidbody.
		!#zh
		???ä½?????????¹ã?? */
		anchor: Vec2;		
		/** !#en
		The anchor of the connected rigidbody.
		!#zh
		??³è????¦ä??ç«¯å??ä½?????????¹ã?? */
		connectedAnchor: Vec2;		
		/** !#en
		The linear offset from connected rigidbody to rigidbody.
		!#zh
		??³è????¦ä??ç«¯ç?????ä½???¸å¯¹äº?èµ·å??ç«¯å??ä½????ä½?ç½®å??ç§»é?? */
		linearOffset: Vec2;		
		/** !#en
		The angular offset from connected rigidbody to rigidbody.
		!#zh
		??³è????¦ä??ç«¯ç?????ä½???¸å¯¹äº?èµ·å??ç«¯å??ä½????è§?åº¦å??ç§»é?? */
		angularOffset: number;		
		/** !#en
		The maximum force can be applied to rigidbody.
		!#zh
		??¯ä»¥åº???¨ä?????ä½???????å¤§ç???????? */
		maxForce: number;		
		/** !#en
		The maximum torque can be applied to rigidbody.
		!#zh
		??¯ä»¥åº???¨ä?????ä½???????å¤§æ?­ç?©å?? */
		maxTorque: number;		
		/** !#en
		The position correction factor in the range [0,1].
		!#zh
		ä½?ç½®ç?«æ­£ç³»æ?°ï???????´ä¸º [0, 1] */
		correctionFactor: number;	
	}	
	/** !#en
	A mouse joint is used to make a point on a body track a
	specified world point. This a soft constraint with a maximum
	force. This allows the constraint to stretch and without
	applying huge forces.
	Mouse Joint will auto register the touch event with the mouse region node,
	and move the choosed rigidbody in touch move event.
	Note : generally mouse joint only used in test bed.
	!#zh
	é¼??????³è????¨ä??ä½¿å??ä½?ä¸????ä¸?ä¸ªç?¹è¿½è¸ªä??ä¸ªæ??å®????ä¸??????????ç³»ä?????ä½?ç½®ã??
	é¼??????³è????¯ä»¥???å®?ä¸?ä¸ªæ??å¤§ç???????¥æ?½å??ä¸?ä¸ªæ????????çº¦æ?????
	é¼??????³è??ä¼???ªå?¨ä½¿??? mouse region ?????¹æ?¥æ³¨???é¼????äº?ä»¶ï??å¹¶ä????¨è§¦??¸ç§»??¨ä??ä»¶ä¸­ç§»å?¨é??ä¸­ç?????ä½????
	æ³¨æ??ï¼?ä¸???¬é???????³è????ªå?¨æ??è¯???¯å??ä¸­ä½¿??¨ã?? */
	export class MouseJoint extends Joint {		
		/** !#en
		The anchor of the rigidbody.
		!#zh
		???ä½?????????¹ã?? */
		anchor: Vec2;		
		/** !#en
		The anchor of the connected rigidbody.
		!#zh
		??³è????¦ä??ç«¯å??ä½?????????¹ã?? */
		connectedAnchor: Vec2;		
		/** !#en
		The node used to register touch evnet.
		If this is null, it will be the joint's node.
		!#zh
		??¨ä??æ³¨å??è§¦æ?¸ä??ä»¶ç???????¹ã??
		å¦????æ²¡æ??è®¾ç½®è¿?ä¸ªå?¼ï?????ä¹?å°?ä¼?ä½¿ç?¨å?³è??????????¹æ?¥æ³¨???äº?ä»¶ã?? */
		mouseRegion: Node;		
		/** !#en
		The target point.
		The mouse joint will move choosed rigidbody to target point.
		!#zh
		??®æ????¹ï??é¼??????³è??å°?ä¼?ç§»å?¨é??ä¸­ç?????ä½???°æ??å®??????®æ????? */
		target: Vec2;		
		/** !#en
		The spring frequency.
		!#zh
		å¼¹ç°§ç³»æ?°ã?? */
		frequency: number;		
		/** !#en
		The damping ratio.
		!#zh
		??»å°¼ï¼?è¡¨ç¤º??³è?????å½¢å??ï¼???¢å????°å??å§???¶æ???????°ç????»å????? */
		0: number;		
		/** !#en
		The maximum force
		!#zh
		???å¤§é?»å????? */
		maxForce: number;	
	}	
	/** !#en
	A prismatic joint. This joint provides one degree of freedom: translation
	along an axis fixed in rigidbody. Relative rotation is prevented. You can
	use a joint limit to restrict the range of motion and a joint motor to
	drive the motion or to model joint friction.
	!#zh
	ç§»å?¨å?³è?????å®?äº???ªè?½å?¨ä??ä¸ªæ?¹å??ä¸?ç§»å?¨å??ä½????
	ä½???¯ä»¥å¼???¯å?³è???????¶æ?¥è®¾ç½®å??ä½?è¿?è¡?ç§»å?¨ç????´è??ï¼?ä¹???¯ä»¥å¼???¯é©¬è¾¾æ?¥ä½¿??¨å?³è??é©¬è¾¾é©±å?¨å??ä½????è¿?è¡???? */
	export class PrismaticJoint extends Joint {		
		/** !#en
		The local joint axis relative to rigidbody.
		!#zh
		???å®????ä½???¯ä»¥ç§»å?¨ç????¹å????? */
		localAxisA: Vec2;		
		/** !#en
		The reference angle.
		!#zh
		??¸å¯¹è§?åº? */
		referenceAngle: number;		
		/** !#en
		Enable joint distance limit?
		!#zh
		??¯å?¦å????¯å?³è?????è·?ç¦»é????¶ï?? */
		enableLimit: boolean;		
		/** !#en
		Enable joint motor?
		!#zh
		??¯å?¦å????¯å?³è??é©¬è¾¾ï¼? */
		enableMotor: boolean;		
		/** !#en
		The lower joint limit.
		!#zh
		???ä½???½å??ç§»å?¨ç?????å°???? */
		lowerLimit: number;		
		/** !#en
		The upper joint limit.
		!#zh
		???ä½???½å??ç§»å?¨ç?????å¤§å?? */
		upperLimit: number;		
		/** !#en
		The maxium force can be applied to rigidbody to rearch the target motor speed.
		!#zh
		??¯ä»¥??½å????°å??ä½???????å¤§å????? */
		maxMotorForce: number;		
		/** !#en
		The expected motor speed.
		!#zh
		?????????é©¬è¾¾???åº¦ã?? */
		motorSpeed: number;	
	}	
	/** !#en
	A revolute joint constrains two bodies to share a common point while they
	are free to rotate about the point. The relative rotation about the shared
	point is the joint angle. You can limit the relative rotation with
	a joint limit that specifies a lower and upper angle. You can use a motor
	to drive the relative rotation about the shared point. A maximum motor torque
	is provided so that infinite forces are not generated.
	!#zh
	???è½¬å?³è????¯ä»¥çº¦æ??ä¸¤ä¸ª???ä½???´ç??ä¸?ä¸ªç?¹æ?¥è??è¡????è½¬ã??
	ä½???¯ä»¥???è¿?å¼???¯å?³è???????¶æ?¥é????¶æ??è½¬ç?????å¤§è??åº¦å?????å°?è§?åº¦ã??
	ä½???¯ä»¥???è¿?å¼???¯é©¬è¾¾æ?¥æ?½å??ä¸?ä¸ªæ?­ç?©å????¥é©±??¨è??ä¸¤ä¸ª???ä½???¨è??ä¸???¹ä???????¸å¯¹???åº¦ã?? */
	export class RevoluteJoint extends Joint {		
		/** !#en
		The reference angle.
		An angle between bodies considered to be zero for the joint angle.
		!#zh
		??¸å¯¹è§?åº¦ã??
		ä¸¤ä¸ª??©ä??ä¹???´è??åº¦ä¸º??¶æ?¶å?¯ä»¥???ä½???¸ç??äº???³è??è§?åº? */
		referenceAngle: number;		
		/** !#en
		The lower angle.
		!#zh
		è§?åº¦ç?????ä½??????¶ã?? */
		lowerAngle: number;		
		/** !#en
		The upper angle.
		!#zh
		è§?åº¦ç?????é«??????¶ã?? */
		upperAngle: number;		
		/** !#en
		The maxium torque can be applied to rigidbody to rearch the target motor speed.
		!#zh
		??¯ä»¥??½å????°å??ä½???????å¤§æ?­ç?©ã?? */
		maxMotorTorque: number;		
		/** !#en
		The expected motor speed.
		!#zh
		?????????é©¬è¾¾???åº¦ã?? */
		motorSpeed: number;		
		/** !#en
		Enable joint limit?
		!#zh
		??¯å?¦å????¯å?³è??????????¶ï?? */
		enableLimit: boolean;		
		/** !#en
		Enable joint motor?
		!#zh
		??¯å?¦å????¯å?³è??é©¬è¾¾ï¼? */
		enableMotor: boolean;		
		/**
		!#en
		Get the joint angle.
		!#zh
		??·å????³è??è§?åº¦ã?? 
		*/
		getJointAngle(): number;	
	}	
	/** !#en
	A rope joint enforces a maximum distance between two points
	on two bodies. It has no other effect.
	Warning: if you attempt to change the maximum length during
	the simulation you will get some non-physical behavior.
	!#zh
	ç»³å????³è????ªæ??å®?ä¸¤ä¸ª???ä½???´ç?????å¤§è??ç¦»ï??æ²¡æ????¶ä??????????????
	æ³¨æ??ï¼?å¦????ä½?è¯???¾å?¨æ??ä¿®æ?¹å?³è???????¿åº¦ï¼?è¿??????¯è?½ä??å¾???°ä??äº????å¤????????????? */
	export class RopeJoint extends Joint {		
		/** !#en
		The max length.
		!#zh
		???å¤§é?¿åº¦??? */
		maxLength: number;	
	}	
	/** !#en
	A weld joint essentially glues two bodies together. A weld joint may
	distort somewhat because the island constraint solver is approximate.
	!#zh
	?????¥å?³è????¸å??äº?å°?ä¸¤ä¸ª???ä½?ç²???¨ä??ä¸?èµ·ã??
	?????¥å?³è????¯è?½ä??ä½¿æ??äº?ä¸?è¥¿å¤±???ï¼????ä¸ºçº¦???æ±?è§???¨ç????ºç????½æ?¯è??ä¼¼å?¼ã?? */
	export class WeldJoint extends Joint {		
		/** !#en
		The reference angle.
		!#zh
		??¸å¯¹è§?åº¦ã?? */
		referenceAngle: number;		
		/** !#en
		The frequency.
		!#zh
		å¼¹æ?§ç³»??°ã?? */
		frequency: number;		
		/** !#en
		The damping ratio.
		!#zh
		??»å°¼ï¼?è¡¨ç¤º??³è?????å½¢å??ï¼???¢å????°å??å§???¶æ???????°ç????»å????? */
		0: number;	
	}	
	/** !#en
	A wheel joint. This joint provides two degrees of freedom: translation
	along an axis fixed in bodyA and rotation in the plane. You can use a joint motor to drive
	the rotation or to model rotational friction.
	This joint is designed for vehicle suspensions.
	!#zh
	è½®å????³è?????ä¾?ä¸¤ä¸ªç»´åº¦?????ªç?±åº¦ï¼????è½¬å??æ²¿ç?????å®???¹å??ä¸?ä½?ç½®ç??ç§»å?¨ã??
	ä½???¯ä»¥???è¿?å¼???¯å?³è??é©¬è¾¾??¥ä½¿??¨é©¬è¾¾é©±??¨å??ä½???????è½¬ã??
	è½®ç????³è????¯ä????¨ä¸º??ºå?¨è½¦ç±»å??è®¾è®¡?????? */
	export class WheelJoint extends Joint {		
		/** !#en
		The local joint axis relative to rigidbody.
		!#zh
		???å®????ä½???¯ä»¥ç§»å?¨ç????¹å????? */
		localAxisA: Vec2;		
		/** !#en
		The maxium torque can be applied to rigidbody to rearch the target motor speed.
		!#zh
		??¯ä»¥??½å????°å??ä½???????å¤§æ?­ç?©ã?? */
		maxMotorTorque: number;		
		/** !#en
		The expected motor speed.
		!#zh
		?????????é©¬è¾¾???åº¦ã?? */
		motorSpeed: number;		
		/** !#en
		Enable joint motor?
		!#zh
		??¯å?¦å????¯å?³è??é©¬è¾¾ï¼? */
		enableMotor: boolean;		
		/** !#en
		The spring frequency.
		!#zh
		å¼¹æ?§ç³»??°ã?? */
		frequency: number;		
		/** !#en
		The damping ratio.
		!#zh
		??»å°¼ï¼?è¡¨ç¤º??³è?????å½¢å??ï¼???¢å????°å??å§???¶æ???????°ç????»å????? */
		dampingRatio: number;	
	}	
	/** !#en The rigid body type
	!#zh ???ä½?ç±»å?? */
	export enum ERigidBodyType {		
		DYNAMIC = 0,
		STATIC = 0,
		KINEMATIC = 0,	
	}	
	/** !#en
	Trigger event
	!#zh
	è§¦å??äº?ä»¶ã?? */
	export class ITriggerEvent {		
		/** !#en
		The type of event fired
		!#zh
		è§¦å?????äº?ä»¶ç±»??? */
		type: string;		
		/** !#en
		Triggers its own collider in the event
		!#zh
		è§¦å??äº?ä»¶ä¸­?????ªå·±???ç¢°æ????? */
		selfCollider: Collider3D;		
		/** !#en
		Triggers another collider in the event
		!#zh
		è§¦å??äº?ä»¶ä¸­?????¦ä??ä¸ªç¢°?????? */
		otherCollider: Collider3D;	
	}	
	/** !#en
	Collision information for collision events.
	!#zh
	ç¢°æ??äº?ä»¶ç??ç¢°æ??ä¿¡æ?¯ã?? */
	export class IContactEquation {		
		/** !#en
		The collision point A in the collision information.
		!#zh
		ç¢°æ??ä¿¡æ?¯ä¸­???ç¢°æ????? A??? */
		contactA: Vec3;		
		/** !#en
		Collision point B in collision information.
		!#zh
		ç¢°æ??ä¿¡æ?¯ä¸­???ç¢°æ????? B??? */
		contactB: Vec3;		
		/** !#en
		Normals in collision information.
		!#zh
		ç¢°æ??ä¿¡æ?¯ä¸­???æ³?çº¿ã?? */
		normal: Vec3;	
	}	
	/** !#en
	Collision events.
	!#zh
	ç¢°æ??äº?ä»¶ã?? */
	export class ICollisionEvent {		
		/** !#en
		Event type of collision.
		!#zh
		ç¢°æ?????äº?ä»¶ç±»?????? */
		type: string;		
		/** !#en
		Collider of its own in collision.
		!#zh
		ç¢°æ??ä¸­ç????ªå·±???ç¢°æ????¨ã?? */
		selfCollider: Collider3D;		
		/** !#en
		Another collider in the collision.
		!#zh
		ç¢°æ??ä¸­ç????¦ä??ä¸ªç¢°?????¨ã?? */
		otherCollider: Collider3D;		
		/** !#en
		Information about all the points of impact in the collision.
		!#zh
		ç¢°æ??ä¸­ç????????ç¢°æ????¹ç??ä¿¡æ?¯ã?? */
		contacts: IContactEquation[];	
	}	
	/** !#en
	Physical systems manager.
	!#zh
	??©ç??ç³»ç??ç®¡ç????¨ã?? */
	export class Physics3DManager {		
		/** !#en
		Whether to enable the physics system, default is false.
		!#zh
		??¯å?¦å?¯ç?¨ç?©ç??ç³»ç??ï¼?é»?è®¤ä????¯ç?¨ã?? */
		enabled: boolean;		
		/** !#en
		Whether to allow the physics system to automatically hibernate, default is true.
		!#zh
		??©ç??ç³»ç????¯å?¦å??è®¸è?ªå?¨ä?????ï¼?é»?è®¤ä¸º true??? */
		allowSleep: boolean;		
		/** !#en
		The maximum number of sub-steps a full step is permitted to be broken into, default is 2.
		!#zh
		??©ç??æ¯?å¸§æ¨¡?????????å¤§å??æ­¥æ?°ï??é»?è®¤ä¸º 2??? */
		maxSubStep: number;		
		/** !#en
		Time spent in each simulation of physics, default is 1/60s.
		!#zh
		??©ç??æ¯?æ­¥æ¨¡???æ¶?????????ºå????¶é?´ï??é»?è®¤ä¸º 1/60 ç§???? */
		deltaTime: number;		
		/** !#en
		Whether to use a fixed time step.
		!#zh
		??¯å?¦ä½¿??¨å?ºå???????¶é?´æ­¥??¿ã?? */
		useFixedTime: boolean;		
		/** !#en
		Gravity value of the physics simulation, default is (0, -10, 0).
		!#zh
		??©ç??ä¸???????????????°å?¼ï??é»?è®¤ä¸º (0, -10, 0)??? */
		gravity: Vec3;		
		/** !#en
		Gets the global default physical material. Note that builtin is null.
		!#zh
		??·å????¨å?????é»?è®¤ç?©ç?????è´¨ï??æ³¨æ??ï¼?builtin ??¶ä¸º null??? */
		defaultMaterial: PhysicsMaterial|void;		
		/**
		!#en
		A physical system simulation is performed once and will now be performed automatically once per frame.
		!#zh
		??§è??ä¸?æ¬¡ç?©ç??ç³»ç?????æ¨¡æ??ï¼???®å??å°???¨æ??å¸§è?ªå?¨æ?§è??ä¸?æ¬¡ã??
		@param deltaTime The time difference from the last execution is currently elapsed per frame 
		*/
		update(deltaTime: number): void;		
		/**
		!#en Detect all collision boxes and return all detected results, or null if none is detected. Note that the return value is taken from the object pool, so do not save the result reference or modify the result.
		!#zh æ£?æµ??????????ç¢°æ?????ï¼?å¹¶è???????????è¢«æ??æµ???°ç??ç»????ï¼???¥æ²¡???æ£?æµ???°ï?????è¿????ç©ºå?¼ã??æ³¨æ??è¿??????¼æ?¯ä??å¯¹è±¡æ±?ä¸­å?????ï¼????ä»¥è¯·ä¸?è¦?ä¿?å­?ç»????å¼???¨æ?????ä¿®æ?¹ç????????
		@param worldRay A ray in world space
		@param groupIndexOrName Collision group index or group name
		@param maxDistance Maximum detection distance
		@param queryTrigger Detect trigger or not 
		*/
		raycast(worldRay: geomUtils.Ray, groupIndexOrName: number|string, maxDistance: number, queryTrigger: boolean): PhysicsRayResult[];		
		/**
		!#en Detect all collision boxes and return the detection result with the shortest ray distance. If not, return null value. Note that the return value is taken from the object pool, so do not save the result reference or modify the result.
		!#zh æ£?æµ??????????ç¢°æ?????ï¼?å¹¶è?????å°?çº¿è??ç¦»æ????­ç??æ£?æµ?ç»????ï¼???¥æ²¡???ï¼????è¿????ç©ºå?¼ã??æ³¨æ??è¿??????¼æ?¯ä??å¯¹è±¡æ±?ä¸­å?????ï¼????ä»¥è¯·ä¸?è¦?ä¿?å­?ç»????å¼???¨æ?????ä¿®æ?¹ç????????
		@param worldRay A ray in world space
		@param groupIndexOrName Collision group index or group name
		@param maxDistance Maximum detection distance
		@param queryTrigger Detect trigger or not 
		*/
		raycastClosest(worldRay: geomUtils.Ray, groupIndexOrName: number|string, maxDistance: number, queryTrigger: boolean): PhysicsRayResult;	
	}	
	/** !#en
	Used to store physical ray detection results
	!#zh
	??¨ä??ä¿?å­???©ç??å°?çº¿æ??æµ?ç»???? */
	export class PhysicsRayResult {		
		/** !#en
		Hit the point
		!#zh
		??»ä¸­??? */
		hitPoint: Vec3;		
		/** !#en
		Distance
		!#zh
		è·?ç¦? */
		distance: number;		
		/** !#en
		Hit the collision box
		!#zh
		??»ä¸­???ç¢°æ????? */
		collider: Collider3D;		
		/**
		!#en
		Set up ray. This method is used internally by the engine. Do not call it from an external script
		!#zh
		è®¾ç½®å°?çº¿ï??æ­¤æ?¹æ????±å??????????¨ä½¿??¨ï??è¯·å?¿å?¨å????¨è????¬è?????
		@param hitPoint hitPoint
		@param distance distance
		@param collider collider 
		*/
		_assign(hitPoint: Vec3, distance: number, collider: Collider3D): void;		
		/**
		!#en
		Clone
		!#zh
		?????? 
		*/
		clone(): void;	
	}	
	/** !#en The shape module of 3d particle.
	!#zh 3D ç²?å­???????å°?å½¢ç?¶æ¨¡??? */
	export class ShapeModule {		
		/** !#en The enable of shapeModule.
		!#zh ??¯å?¦å?¯ç?? */
		enable: boolean;		
		/** !#en Particle emitter type.
		!#zh ç²?å­????å°???¨ç±»?????? */
		shapeType: shapeModule.ShapeType;		
		/** !#en The emission site of the particle.
		!#zh ç²?å­?ä»????å°???¨å?ªä¸ª??¨ä?????å°???? */
		emitFrom: shapeModule.EmitLocation;		
		/** !#en Particle emitter radius.
		!#zh ç²?å­????å°???¨å??å¾???? */
		radius: number;		
		/** !#en Particle emitter emission position (not valid for Box type emitters)ï¼?<bg>
		- 0 means emitted from the surface;
		- 1 means launch from the center;
		- 0 ~ 1 indicates emission from the center to the surface.
		!#zh ç²?å­????å°???¨å??å°?ä½?ç½®ï??å¯? Box ç±»å????????å°???¨æ?????ï¼?ï¼?<bg>
		- 0 è¡¨ç¤ºä»?è¡¨é?¢å??å°?ï¼?
		- 1 è¡¨ç¤ºä»?ä¸­å?????å°?ï¼?
		- 0 ~ 1 ä¹???´è¡¨ç¤ºå?¨ä¸­å¿???°è¡¨??¢ä????´å??å°???? */
		radiusThickness: number;		
		/** !#en The angle between the axis of the cone and the generatrix<bg>
		Determines the opening and closing of the cone launcher
		!#zh ?????¥ç??è½´ä??æ¯?çº¿ç??å¤¹è??<bg>???
		??³å???????¥å??å°???¨ç??å¼????ç¨?åº¦ã?? */
		angle: number;		
		/** !#en Particle emitters emit in a fan-shaped range.
		!#zh ç²?å­????å°???¨å?¨ä??ä¸ªæ??å½¢è????´å?????å°???? */
		arc: number;		
		/** !#en How particles are emitted in the sector range.
		!#zh ç²?å­???¨æ??å½¢è????´å????????å°???¹å????? */
		arcMode: shapeModule.ArcMode;		
		/** !#en Controls the discrete intervals around the arcs where particles might be generated.
		!#zh ??§å?¶å?¯è?½äº§???ç²?å­????å¼§å?¨å?´ç??ç¦»æ????´é????? */
		arcSpread: number;		
		/** !#en The speed at which particles are emitted around the circumference.
		!#zh ç²?å­?æ²¿å????¨å??å°???????åº¦ã?? */
		arcSpeed: CurveRange;		
		/** !#en Axis length from top of cone to bottom of cone <bg>.
		Determines the height of the cone emitter.
		!#zh ?????¥é¡¶??¨æ?ªé?¢è??ç¦»å????¨ç??è½´é??<bg>???
		??³å???????¥å??å°???¨ç??é«?åº¦ã?? */
		length: number;		
		/** !#en Particle emitter emission location (for box-type particle emitters).
		!#zh ç²?å­????å°???¨å??å°?ä½?ç½®ï?????å¯? Box ç±»å?????ç²?å­????å°???¨ã?? */
		boxThickness: Vec3;		
		/** !#en Particle Emitter Position
		!#zh ç²?å­????å°???¨ä??ç½®ã?? */
		position: Vec3;		
		/** !#en Particle emitter rotation angle.
		!#zh ç²?å­????å°???¨æ??è½¬è??åº¦ã?? */
		rotation: Vec3;		
		/** !#en Particle emitter scaling
		!#zh ç²?å­????å°???¨ç¼©??¾æ??ä¾???? */
		scale: Vec3;		
		/** !#en The direction of particle movement is determined based on the initial direction of the particles.
		!#zh ??¹æ?®ç??å­???????å§???¹å????³å??ç²?å­????ç§»å?¨æ?¹å????? */
		alignToDirection: boolean;		
		/** !#en Set particle generation direction randomly.
		!#zh ç²?å­?????????¹å???????ºè®¾å®???? */
		randomDirectionAmount: number;		
		/** !#en Interpolation between the current emission direction and the direction from the current position to the center of the node.
		!#zh è¡¨ç¤ºå½???????å°???¹å??ä¸?å½????ä½?ç½®å?°ç????¹ä¸­å¿?è¿?çº¿æ?¹å??????????¼ã?? */
		sphericalDirectionAmount: number;	
	}	
	/** !#en The color over time module of 3d particle.
	!#zh 3D ç²?å­?é¢???²å?????æ¨¡å?? */
	export class ColorOvertimeModule {		
		/** !#en The enable of ColorOvertimeModule.
		!#zh ??¯å?¦å?¯ç?? */
		enable: boolean;	
	}	
	/** !#en The curve range of target value.
	!#zh ??®æ????¼ç????²çº¿?????? */
	export class CurveRange {		
		/** !#en Curve type.
		!#zh ??²çº¿ç±»å????? */
		mode: debug.DebugMode;		
		/** !#en The curve to use when mode is Curve.
		!#zh å½? mode ä¸? Curve ??¶ï??ä½¿ç?¨ç????²çº¿??? */
		curve: AnimationCurve;		
		/** !#en The lower limit of the curve to use when mode is TwoCurves
		!#zh å½? mode ä¸? TwoCurves ??¶ï??ä½¿ç?¨ç????²çº¿ä¸??????? */
		curveMin: AnimationCurve;		
		/** !#en The upper limit of the curve to use when mode is TwoCurves
		!#zh å½? mode ä¸? TwoCurves ??¶ï??ä½¿ç?¨ç????²çº¿ä¸??????? */
		curveMax: AnimationCurve;		
		/** !#en When mode is Constant, the value of the curve.
		!#zh å½? mode ä¸? Constant ??¶ï????²çº¿?????¼ã?? */
		constant: number;		
		/** !#en The lower limit of the curve to use when mode is TwoConstants
		!#zh å½? mode ä¸? TwoConstants ??¶ï????²çº¿???ä¸??????? */
		constantMin: number;		
		/** !#en The upper limit of the curve to use when mode is TwoConstants
		!#zh å½? mode ä¸? TwoConstants ??¶ï????²çº¿???ä¸??????? */
		constantMax: number;		
		/** !#en Coefficients applied to curve interpolation.
		!#zh åº???¨ä????²çº¿?????¼ç??ç³»æ?°ã?? */
		multiplier: number;	
	}	
	/** !#en The force over time module of 3d particle.
	!#zh 3D ç²?å­??????????åº¦æ¨¡??? */
	export class ForceOvertimeModule {		
		/** !#en The enable of ColorOvertimeModule.
		!#zh ??¯å?¦å?¯ç?? */
		enable: boolean;		
		/** !#en Coordinate system used in acceleration calculation.
		!#zh ??????åº¦è®¡ç®???¶é????¨ç????????ç³»ã?? */
		space: ParticleSystem3DAssembler.Space;		
		/** !#en X-axis acceleration component.
		!#zh X è½´æ?¹å??ä¸??????????åº¦å???????? */
		x: CurveRange;		
		/** !#en Y-axis acceleration component.
		!#zh Y è½´æ?¹å??ä¸??????????åº¦å???????? */
		y: CurveRange;		
		/** !#en Z-axis acceleration component.
		!#zh Z è½´æ?¹å??ä¸??????????åº¦å???????? */
		z: CurveRange;	
	}	
	/** !#en The gradient range of color.
	!#zh é¢???²å?¼ç??æ¸?????????? */
	export class GradientRange {		
		/** !#en Gradient type.
		!#zh æ¸??????²ç±»?????? */
		mode: debug.DebugMode;		
		/** !#en The color when mode is Color.
		!#zh å½? mode ä¸? Color ??¶ç??é¢???²ã?? */
		color: Color;		
		/** !#en Lower color limit when mode is TwoColors.
		!#zh å½? mode ä¸? TwoColors ??¶ç??é¢???²ä???????? */
		colorMin: Color;		
		/** !#en Upper color limit when mode is TwoColors.
		!#zh å½? mode ä¸? TwoColors ??¶ç??é¢???²ä???????? */
		colorMax: Color;		
		/** !#en Color gradient when mode is Gradient
		!#zh å½? mode ä¸? Gradient ??¶ç??é¢???²æ???????? */
		gradient: Gradient;		
		/** !#en Lower color gradient limit when mode is TwoGradients.
		!#zh å½? mode ä¸? TwoGradients ??¶ç??é¢???²æ?????ä¸??????? */
		gradientMin: Gradient;		
		/** !#en Upper color gradient limit when mode is TwoGradients.
		!#zh å½? mode ä¸? TwoGradients ??¶ç??é¢???²æ?????ä¸??????? */
		gradientMax: Gradient;	
	}	
	/** !#en The color key of gradient.
	!#zh color ??³é?®å¸§ */
	export class ColorKey {		
		/** !#en Color value.
		!#zh é¢???²å?¼ã?? */
		color: Color;		
		/** !#en Time value.
		!#zh ??¶é?´å?¼ã?? */
		time: number;	
	}	
	/** !#en The alpha key of gradient.
	!#zh alpha ??³é?®å¸§ */
	export class AlphaKey {		
		/** !#en Alpha value.
		!#zh ??????åº¦ã?? */
		alpha: number;		
		/** !#en Time.
		!#zh ??¶é?´å¸§??? */
		time: number;	
	}	
	/** !#en The gradient data of color.
	!#zh é¢???²æ???????°æ?? */
	export class Gradient {		
		/** !#en Array of color key.
		!#zh é¢???²å?³é?®å¸§???è¡¨ã?? */
		colorKeys: ColorKey[];		
		/** !#en Array of alpha key.
		!#zh ??????åº¦å?³é?®å¸§???è¡¨ã?? */
		alphaKeys: AlphaKey[];		
		/** !#en Blend mode.
		!#zh æ··å??æ¨¡å????? */
		mode: debug.DebugMode;	
	}	
	/** !#en The limit velocity module of 3d particle.
	!#zh 3D ç²?å­??????????æ¨¡å?? */
	export class LimitVelocityOvertimeModule {		
		/** !#en The enable of LimitVelocityOvertimeModule.
		!#zh ??¯å?¦å?¯ç?? */
		enable: boolean;		
		/** !#en The coordinate system used when calculating the lower speed limit.
		!#zh è®¡ç?????åº¦ä???????¶é????¨ç????????ç³»ã?? */
		space: ParticleSystem3DAssembler.Space;		
		/** !#en Whether to limit the three axes separately.
		!#zh ??¯å?¦ä??ä¸ªè½´???å¼??????¶ã?? */
		separateAxes: boolean;		
		/** !#en Lower speed limit
		!#zh ???åº¦ä???????? */
		limit: CurveRange;		
		/** !#en Lower speed limit in X direction.
		!#zh X è½´æ?¹å??ä¸???????åº¦ä???????? */
		limitX: CurveRange;		
		/** !#en Lower speed limit in Y direction.
		!#zh Y è½´æ?¹å??ä¸???????åº¦ä???????? */
		limitY: CurveRange;		
		/** !#en Lower speed limit in Z direction.
		!#zh Z è½´æ?¹å??ä¸???????åº¦ä???????? */
		limitZ: CurveRange;		
		/** !#en Interpolation of current speed and lower speed limit.
		!#zh å½???????åº¦ä?????åº¦ä?????????????¼ã?? */
		dampen: number;	
	}	
	/** !#en The optimized curve.
	!#zh ä¼??????²çº¿ */
	export class OptimizedCurve {	
	}	
	/** !#en The rotation module of 3d particle.
	!#zh 3D ç²?å­???????è½¬æ¨¡??? */
	export class RotationOvertimeModule {		
		/** !#en The enable of RotationOvertimeModule.
		!#zh ??¯å?¦å?¯ç?? */
		enable: boolean;		
		/** !#en Whether to set the rotation of three axes separately (not currently supported)
		!#zh ??¯å?¦ä??ä¸ªè½´???å¼?è®¾å?????è½¬ï?????ä¸???¯æ??ï¼???? */
		separateAxes: boolean;		
		/** !#en Set rotation around X axis.
		!#zh ç»? X è½´è®¾å®????è½¬ã?? */
		x: CurveRange;		
		/** !#en Set rotation around Y axis.
		!#zh ç»? Y è½´è®¾å®????è½¬ã?? */
		y: CurveRange;		
		/** !#en Set rotation around Z axis.
		!#zh ç»? Z è½´è®¾å®????è½¬ã?? */
		z: CurveRange;	
	}	
	/** !#en The size module of 3d particle.
	!#zh 3D ç²?å­????å¤§å??æ¨¡å?? */
	export class SizeOvertimeModule {		
		/** !#en The enable of SizeOvertimeModule.
		!#zh ??¯å?¦å?¯ç?? */
		enable: boolean;		
		/** !#en Decide whether to control particle size independently on each axis.
		!#zh ??³å????¯å?¦å?¨æ??ä¸ªè½´ä¸???¬ç????§å?¶ç??å­?å¤§å????? */
		separateAxes: boolean;		
		/** !#en Define a curve to determine the size change of particles during their life cycle.
		!#zh å®?ä¹?ä¸???¡æ?²çº¿??¥å?³å??ç²?å­???¨å?¶ç????½å?¨æ??ä¸­ç??å¤§å??????????? */
		size: CurveRange;		
		/** !#en Defines a curve to determine the size change of particles in the X-axis direction during their life cycle.
		!#zh å®?ä¹?ä¸???¡æ?²çº¿??¥å?³å??ç²?å­???¨å?¶ç????½å?¨æ??ä¸? X è½´æ?¹å??ä¸????å¤§å??????????? */
		x: CurveRange;		
		/** !#en Defines a curve to determine the size change of particles in the Y-axis direction during their life cycle.
		!#zh å®?ä¹?ä¸???¡æ?²çº¿??¥å?³å??ç²?å­???¨å?¶ç????½å?¨æ??ä¸? Y è½´æ?¹å??ä¸????å¤§å??????????? */
		y: CurveRange;		
		/** !#en Defines a curve to determine the size change of particles in the Z-axis direction during their life cycle.
		!#zh å®?ä¹?ä¸???¡æ?²çº¿??¥å?³å??ç²?å­???¨å?¶ç????½å?¨æ??ä¸? Z è½´æ?¹å??ä¸????å¤§å??????????? */
		z: CurveRange;	
	}	
	/** !#en The texture animation module of 3d particle.
	!#zh 3D ç²?å­????è´´å?¾å?¨ç?»æ¨¡??? */
	export class TextureAnimationModule {		
		/** !#en The enable of TextureAnimationModule.
		!#zh ??¯å?¦å?¯ç?? */
		enable: boolean;		
		/** !#en Set the type of particle map animation (only supports Grid mode for the time being)
		!#zh è®¾å??ç²?å­?è´´å?¾å?¨ç?»ç??ç±»å??ï¼??????ªæ?¯æ?? Grid æ¨¡å????? */
		mode: debug.DebugMode;		
		/** !#en Animation frames in X direction.
		!#zh X ??¹å????¨ç?»å¸§??°ã?? */
		numTilesX: number;		
		/** !#en Animation frames in Y direction.
		!#zh Y ??¹å????¨ç?»å¸§??°ã?? */
		numTilesY: number;		
		/** !#en The way of the animation plays.
		!#zh ??¨ç?»æ?­æ?¾æ?¹å????? */
		animation: Animation;		
		/** !#en Randomly select a line from the animated map to generate the animation. <br>
		This option only takes effect when the animation playback mode is SingleRow.
		!#zh ?????ºä????¨ç?»è´´??¾ä¸­?????©ä??è¡?ä»¥ç???????¨ç?»ã??<br>
		æ­¤é??é¡¹ä????¨å?¨ç?»æ?­æ?¾æ?¹å??ä¸? SingleRow ??¶ç???????? */
		randomRow: boolean;		
		/** !#en Select specific lines from the animation map to generate the animation. <br>
		This option is only available when the animation playback mode is SingleRow and randomRow is disabled.
		!#zh ä»???¨ç?»è´´??¾ä¸­?????©ç?¹å??è¡?ä»¥ç???????¨ç?»ã??<br>
		æ­¤é??é¡¹ä????¨å?¨ç?»æ?­æ?¾æ?¹å??ä¸? SingleRow ??¶ä??ç¦???? randomRow ??¶å?¯ç?¨ã?? */
		rowIndex: number;		
		/** !#en Frame and time curve of animation playback in one cycle.
		!#zh ä¸?ä¸ªå?¨æ???????¨ç?»æ?­æ?¾ç??å¸§ä????¶é?´å???????²çº¿??? */
		frameOverTime: CurveRange;		
		/** !#en Play from which frames, the time is the life cycle of the entire particle system.
		!#zh ä»?ç¬¬å??å¸§å??å§???­æ?¾ï????¶é?´ä¸º??´ä¸ªç²?å­?ç³»ç??????????½å?¨æ????? */
		startFrame: CurveRange;		
		/** !#en Number of playback loops in a life cycle.
		!#zh ä¸?ä¸ªç????½å?¨æ???????­æ?¾å¾ª??¯ç??æ¬¡æ?°ã?? */
		cycleCount: number;	
	}	
	/** !#en The velocity module of 3d particle.
	!#zh 3D ç²?å­???????åº¦æ¨¡??? */
	export class VelocityOvertimeModule {		
		/** !#en The enable of VelocityOvertimeModule.
		!#zh ??¯å?¦å?¯ç?? */
		enable: boolean;		
		/** !#en Coordinate system used in speed calculation.
		!#zh ???åº¦è®¡ç®???¶é????¨ç????????ç³»ã?? */
		space: ParticleSystem3DAssembler.Space;		
		/** !#en Velocity component in X axis direction
		!#zh X è½´æ?¹å??ä¸???????åº¦å???????? */
		x: CurveRange;		
		/** !#en Velocity component in Y axis direction
		!#zh Y è½´æ?¹å??ä¸???????åº¦å???????? */
		y: CurveRange;		
		/** !#en Velocity component in Z axis direction
		!#zh Z è½´æ?¹å??ä¸???????åº¦å???????? */
		z: CurveRange;		
		/** !#en Speed correction factor (only supports CPU particles).
		!#zh ???åº¦ä¿®æ­?ç³»æ?°ï????ªæ?¯æ?? CPU ç²?å­?ï¼???? */
		speedModifier: CurveRange;	
	}	
	/** Rigid body interface */
	export class IRigidBody {		
		rigidBody: RigidBody3D;		
		mass: number;		
		linearDamping: number;		
		angularDamping: number;		
		isKinematic: boolean;		
		useGravity: boolean;		
		fixedRotation: boolean;		
		linearFactor: IVec3Like;		
		angularFactor: IVec3Like;		
		allowSleep: boolean;		
		isAwake: boolean;		
		isSleepy: boolean;		
		isSleeping: boolean;		
		wakeUp(): void;		
		sleep(): void;		
		/**
		
		@param out out 
		*/
		getLinearVelocity(out: IVec3Like): void;		
		/**
		
		@param out out 
		*/
		setLinearVelocity(out: IVec3Like): void;		
		/**
		
		@param out out 
		*/
		getAngularVelocity(out: IVec3Like): void;		
		/**
		
		@param out out 
		*/
		setAngularVelocity(out: IVec3Like): void;		
		/**
		
		@param force force
		@param relativePoint relativePoint 
		*/
		applyForce(force: IVec3Like, relativePoint: IVec3Like): void;		
		/**
		
		@param force force
		@param relativePoint relativePoint 
		*/
		applyLocalForce(force: IVec3Like, relativePoint: IVec3Like): void;		
		/**
		
		@param force force
		@param relativePoint relativePoint 
		*/
		applyImpulse(force: IVec3Like, relativePoint: IVec3Like): void;		
		/**
		
		@param force force
		@param relativePoint relativePoint 
		*/
		applyLocalImpulse(force: IVec3Like, relativePoint: IVec3Like): void;		
		/**
		
		@param torque torque 
		*/
		applyTorque(torque: IVec3Like): void;		
		/**
		
		@param torque torque 
		*/
		applyLocalTorque(torque: IVec3Like): void;	
	}	
	/** Class has x y z properties */
	export class IVec3Like {		
		x: number;		
		y: number;		
		z: number;	
	}	
	/** Class has x y z w properties */
	export class IQuatLike {		
		x: number;		
		y: number;		
		z: number;		
		w: number;	
	}	
	/** !#en Base shape interface. */
	export class IBaseShape {		
		collider: Collider3D;		
		attachedRigidBody: RigidBody3D|void;		
		material: any;		
		isTrigger: boolean;		
		center: IVec3Like;	
	}	
	/** !#en box shape interface */
	export class IBoxShape {		
		size: IVec3Like;	
	}	
	/** !#en Sphere shape interface */
	export class ISphereShape {		
		radius: number;	
	}	
	/** Ray cast options */
	export class IRaycastOptions {		
		groupIndex: number;		
		queryTrigger: boolean;		
		maxDistance: number;	
	}	
	/** Collision detect */
	export class ICollisionDetect {		
		/**
		Ray cast, and return information of the closest hit.
		@param worldRay worldRay
		@param options options
		@param out out 
		*/
		raycastClosest(worldRay: geomUtils.Ray, options: IRaycastOptions, out: PhysicsRayResult): boolean;		
		/**
		Ray cast against all bodies. The provided callback will be executed for each hit with a RaycastResult as single argument.
		@param worldRay worldRay
		@param options options
		@param pool pool
		@param resultes resultes 
		*/
		raycast(worldRay: geomUtils.Ray, options: IRaycastOptions, pool: RecyclePool, resultes: PhysicsRayResult[]): boolean;	
	}	
	/** Physics world interface */
	export class IPhysicsWorld {	
	}	
	/** !#en The trail module of 3d particle.
	!#zh 3D ç²?å­????å°¾æ¨¡??? */
	export class TrailModule {		
		/** !#en The enable of trailModule.
		!#zh ??¯å?¦å?¯ç?? */
		enable: boolean;		
		/** !#en Sets how particles generate trajectories.
		!#zh è®¾å??ç²?å­???????è½¨è¿¹?????¹å????? */
		mode: trailModule.TrailMode;		
		/** !#en Life cycle of trajectory.
		!#zh è½¨è¿¹å­???¨ç???????½å?¨æ????? */
		lifeTime: CurveRange;		
		/** !#en Minimum spacing between each track particle
		!#zh æ¯?ä¸ªè½¨è¿¹ç??å­?ä¹???´ç?????å°???´è????? */
		minParticleDistance: number;		
		/** !#en The coordinate system of trajectories.
		!#zh è½¨è¿¹è®¾å????¶ç????????ç³»ã?? */
		space: ParticleSystem3DAssembler.Space;		
		/** !#en Whether the particle itself exists.
		!#zh ç²?å­???¬èº«??¯å?¦å????¨ã?? */
		existWithParticles: boolean;		
		/** !#en Set the texture fill method
		!#zh è®¾å??çº¹ç??å¡«å????¹å????? */
		textureMode: trailModule.TextureMode;		
		/** !#en Whether to use particle width
		!#zh ??¯å?¦ä½¿??¨ç??å­????å®½åº¦??? */
		widthFromParticle: boolean;		
		/** !#en Curves that control track length
		!#zh ??§å?¶è½¨è¿¹é?¿åº¦?????²çº¿??? */
		widthRatio: CurveRange;		
		/** !#en Whether to use particle color
		!#zh ??¯å?¦ä½¿??¨ç??å­????é¢???²ã?? */
		colorFromParticle: boolean;		
		/** !#en The color of trajectories.
		!#zh è½¨è¿¹???é¢???²ã?? */
		colorOverTrail: GradientRange;		
		/** !#en Trajectories color over time.
		!#zh è½¨è¿¹?????¶é?´å????????é¢???²ã?? */
		colorOvertime: GradientRange;	
	}	
	/** !#en Manage Dynamic Atlas Manager. Dynamic Atlas Manager is used for merging textures at runtime, see [Dynamic Atlas](https://docs.cocos.com/creator/manual/en/advanced-topics/dynamic-atlas.html) for details.
	!#zh ç®¡ç????¨æ????¾é???????¨æ????¾é????¨ä????¨è??è¡???¶å¯¹è´´å?¾è??è¡????å¹¶ï??è¯¦è?? [??¨æ???????¾](https://docs.cocos.com/creator/manual/zh/advanced-topics/dynamic-atlas.html)??? */
	export class DynamicAtlasManager {		
		/** !#en Enable or disable the dynamic atlas, see [Dynamic Atlas](https://docs.cocos.com/creator/manual/en/advanced-topics/dynamic-atlas.html) for details.
		!#zh å¼???¯æ???????³é?­å?¨æ????¾é??ï¼?è¯¦è?? [??¨æ???????¾](https://docs.cocos.com/creator/manual/zh/advanced-topics/dynamic-atlas.html)??? */
		enabled: boolean;		
		/** !#en The maximum number of atlas that can be created.
		!#zh ??¯ä»¥???å»ºç?????å¤§å?¾é????°é????? */
		maxAtlasCount: number;		
		/** !#en Get the current created atlas count.
		!#zh ??·å??å½????å·²ç?????å»ºç????¾é????°é????? */
		atlasCount: number;		
		/** !#en Is enable textureBleeding.
		!#zh ??¯å?¦å????? textureBleeding */
		textureBleeding: boolean;		
		/** !#en The size of the atlas that was created
		!#zh ???å»ºç????¾é?????å®½é?? */
		textureSize: number;		
		/** !#en The maximum size of the picture that can be added to the atlas.
		!#zh ??¯ä»¥æ·»å??è¿???¾é???????¾ç????????å¤§å°ºå¯¸ã?? */
		maxFrameSize: number;		
		/** !#en The minimum size of the picture that can be added to the atlas.
		!#zh ??¯ä»¥æ·»å??è¿???¾é???????¾ç????????å°?å°ºå¯¸??? */
		minFrameSize: number;		
		/**
		!#en Append a sprite frame into the dynamic atlas.
		!#zh æ·»å??ç¢???¾è????¥å?¨æ????¾é?????
		@param spriteFrame spriteFrame 
		*/
		insertSpriteFrame(spriteFrame: SpriteFrame): void;		
		/**
		!#en Resets all dynamic atlas, and the existing ones will be destroyed.
		!#zh ???ç½®æ???????¨æ????¾é??ï¼?å·²æ???????¨æ????¾é??ä¼?è¢«é??æ¯???? 
		*/
		reset(): void;		
		/**
		!#en Displays all the dynamic atlas in the current scene, which you can use to view the current atlas state.
		!#zh ??¨å???????ºæ?¯ä¸­??¾ç¤º????????¨æ????¾é??ï¼???¯ä»¥??¨æ?¥æ?¥ç??å½????????????¾ç?¶æ?????
		@param show show 
		*/
		showDebug(show: boolean): Node;	
	}	
	/** !#en
	Physics material.
	!#zh
	??©ç?????è´¨ã?? */
	export class PhysicsMaterial extends Asset {		
		/** !#en
		Friction for this material.
		!#zh
		??©ç?????è´¨ç????©æ?¦å????? */
		friction: number;		
		/** !#en
		Restitution for this material.
		!#zh
		??©ç?????è´¨ç??å¼¹å????? */
		restitution: number;	
	}	
	/** !#en
	Each frame applies a constant force to a rigid body, depending on the RigidBody3D
	!#zh
	??¨æ??å¸§å¯¹ä¸?ä¸ªå??ä½???½å?????ç»­ç?????ï¼?ä¾?èµ? RigidBody3D ç»?ä»? */
	export class ConstantForce extends Component {		
		/** !#en
		Set the force used in the world coordinate system, use `this.force = otherVec3`.
		!#zh
		è®¾ç½®ä¸??????????ç³»ä¸­ä½¿ç?¨ç?????ï¼?è®¾ç½®??¶è¯·??? `this.force = otherVec3` ?????¹å????? */
		force: Vec3;		
		/** !#en
		Set the force used in the local coordinate system, using `this.localforce = otherVec3`.
		!#zh
		??·å?????è®¾ç½®??¬å?°å?????ç³»ä¸­ä½¿ç?¨ç?????ï¼?è®¾ç½®??¶è¯·??? `this.localForce = otherVec3` ?????¹å????? */
		localForce: Vec3;		
		/** !#en
		Torque applied to the world orientation
		!#zh
		å¯¹ä?????????????½å???????­ç?? */
		torque: Vec3;		
		/** !#en
		Torque applied to local orientation, using `this.localtorque = otherVec3`.
		!#zh
		å¯¹æ?¬å?°æ???????½å???????­ç?©ï??è®¾ç½®??¶è¯·??? `this.localTorque = otherVec3` ?????¹å????? */
		localTorque: Vec3;	
	}	
	/** !#en
	RigidBody is the basic object that make up the physical world, and it can make a node physically affected and react.
	!#zh
	???ä½???¯ç???????©ç??ä¸?????????ºæ?¬å¯¹è±¡ï????¯ä»¥è®©ä??ä¸ªè????¹å????°ç?©ç??å½±å??å¹¶äº§??????åº????è¯¥ç??ä»¶å?¨ä½¿??? Builtin ??©ç??å¼??????¶æ???????? */
	export class RigidBody3D extends Component {		
		/** !#en
		Whether sleep is allowed.
		!#zh
		??¯å?¦å??è®¸ä???????? */
		allowSleep: boolean;		
		/** !#en
		The mass of the rigidbody.
		!#zh
		???ä½????è´¨é????? */
		mass: number;		
		/** !#en
		Used to reduce the linear rate of rigidbody. The larger the value, the slower the rigidbody moves.
		!#zh
		çº¿æ?§é?»å°¼ï¼???¨ä?????å°????ä½????çº¿æ?§é?????ï¼???¼è??å¤§ç?©ä??ç§»å?¨è????¢ã?? */
		linearDamping: number;		
		/** !#en
		Used to reduce the rotation rate of rigidbody. The larger the value, the slower the rigidbody rotates.
		!#zh
		è§???»å°¼ï¼???¨ä?????å°????ä½???????è½¬é?????ï¼???¼è??å¤§å??ä½????è½¬è????¢ã?? */
		angularDamping: number;		
		/** !#en
		If enabled, the developer controls the displacement and rotation of the rigidbody, not the physics engine.
		!#zh
		??¯å?¦ç?±å??????????¥æ?§å?¶å??ä½????ä½?ç§»å?????è½¬ï?????ä¸???¯å????©ç??å¼???????å½±å????? */
		isKinematic: boolean;		
		/** !#en
		If enabled, the rigidbody is affected by gravity.
		!#zh
		å¦????å¼???¯ï?????ä½?ä¼??????°é?????å½±å????? */
		useGravity: boolean;		
		/** !#en
		If enabled, the rigidbody will be fixed without rotation during a collision.
		!#zh
		å¦????å¼???¯ï????????ç¢°æ????¶ä????ºå?????ä½?ä¸?äº§ç?????è½¬ã?? */
		fixedRotation: boolean;		
		/** !#en
		It can affect the linear velocity change of the rigidbody in each axis. The larger the value, the faster the rigidbody moves.
		!#zh
		çº¿æ?§å??å­?ï¼???¯å½±??????ä½???¨æ??ä¸ªè½´??????çº¿æ?§é??åº¦å?????ï¼???¼è??å¤§å??ä½?ç§»å?¨è??å¿«ã?? */
		linearFactor: Vec3;		
		/** !#en
		It can affect the rotation speed change of the rigidbody in each axis. The larger the value, the faster the rigidbody rotates.
		!#zh
		???è½¬å??å­?ï¼???¯å½±??????ä½???¨æ??ä¸ªè½´?????????è½¬é??åº¦å?????ï¼???¼è??å¤§å??ä½????è½¬è??å¿«ã?? */
		angularFactor: Vec3;		
		/** !#en
		The rigidbody is awake.
		!#zh
		???ä½???¯å?¦ä¸º??¤é???????¶æ????? */
		isAwake: boolean;		
		/** !#en
		The rigidbody can enter hibernation.
		!#zh
		???ä½???¯å?¦ä¸º??¯è????¥ä??????????¶æ????? */
		isSleepy: boolean;		
		/** !#en
		The rigidbody is sleeping.
		!#zh
		???ä½???¯å?¦ä¸ºæ­???¨ä??????????¶æ????? */
		isSleeping: boolean;		
		/** !#en
		Get the rigidbody object inside the physics engine.
		!#zh
		??·å????©ç??å¼?????????¨å??ä½?å¯¹è±¡??? */
		rigidBody: IRigidBody;		
		/**
		!#en
		A force is applied to a rigid body at a point in world space.
		!#zh
		??¨ä?????ç©ºé?´ä¸­????????¹ä??å¯¹å??ä½???½å??ä¸?ä¸ªä????¨å?????
		@param force force
		@param relativePoint The point of action, relative to the center of the rigid body. 
		*/
		applyForce(force: Vec3, relativePoint: Vec3): void;		
		/**
		!#en
		Apply a force on the rigid body at a point in local space.
		!#zh
		??¨æ?¬å?°ç©º??´ä¸­????????¹ä??å¯¹å??ä½???½å??ä¸?ä¸ªä????¨å?????
		@param force force
		@param localPoint Point of application 
		*/
		applyLocalForce(force: Vec3, localPoint: Vec3): void;		
		/**
		!#en
		Apply an impulse to a rigid body at a point in world space.
		!#zh
		??¨ä?????ç©ºé?´ç???????¹ä??å¯¹å??ä½???½å??ä¸?ä¸ªå?²é?????
		@param impulse impulse
		@param relativePoint The point of action, relative to the center of the rigid body. 
		*/
		applyImpulse(impulse: Vec3, relativePoint: Vec3): void;		
		/**
		!#en
		Apply an impulse to the rigid body at a point in local space.
		!#zh
		??¨æ?¬å?°ç©º??´ç???????¹ä??å¯¹å??ä½???½å??ä¸?ä¸ªå?²é?????
		@param impulse impulse
		@param localPoint Point of application 
		*/
		applyLocalImpulse(impulse: Vec3, localPoint: Vec3): void;		
		/**
		!#en
		Apply a torque to the rigid body.
		!#zh
		å¯¹å??ä½???½å????­è½¬??????
		@param torque torque 
		*/
		applyTorque(torque: Vec3): void;		
		/**
		!#en
		Apply a local torque to the rigid body.
		!#zh
		å¯¹å??ä½???½å????¬å?°æ?­è½¬??????
		@param torque torque 
		*/
		applyLocalTorque(torque: Vec3): void;		
		/**
		!#en
		Awaken the rigid body.
		!#zh
		??¤é?????ä½???? 
		*/
		wakeUp(): void;		
		/**
		!#en
		Dormant rigid body.
		!#zh
		ä¼???????ä½???? 
		*/
		sleep(): void;		
		/**
		!#en
		Get linear velocity.
		!#zh
		??·å??çº¿æ?§é??åº¦ã??
		@param out out 
		*/
		getLinearVelocity(out: Vec3): void;		
		/**
		!#en
		Set linear speed.
		!#zh
		è®¾ç½®çº¿æ?§é??åº¦ã??
		@param value value 
		*/
		setLinearVelocity(value: Vec3): void;		
		/**
		!#en
		Gets the rotation speed.
		!#zh
		??·å?????è½¬é??åº¦ã??
		@param out out 
		*/
		getAngularVelocity(out: Vec3): void;		
		/**
		!#en
		Set rotation speed.
		!#zh
		è®¾ç½®???è½¬é??åº¦ã??
		@param value value 
		*/
		setAngularVelocity(value: Vec3): void;	
	}	
	/** !#en
	Physics box collider
	!#zh
	??©ç?????å­?ç¢°æ????? */
	export class BoxCollider3D extends Collider3D {		
		/** !#en
		Get or set the size of the box, in local space.
		!#zh
		??·å?????è®¾ç½®??????å¤§å????? */
		size: Vec3;		
		boxShape: IBoxShape;	
	}	
	/** !#en
	The base class of the collider.
	!#zh
	ç¢°æ????¨ç????ºç±»??? */
	export class Collider3D extends Component implements EventTarget {		
		sharedMaterial: PhysicsMaterial;		
		/** !#en
		get or set the collider is trigger, this will be always trigger if using builtin.
		!#zh
		??·å?????è®¾ç½®ç¢°æ????¨æ?¯å?¦ä¸ºè§¦å????¨ã?? */
		isTrigger: boolean;		
		/** !#en
		get or set the center of the collider, in local space.
		!#zh
		??·å?????è®¾ç½®ç¢°æ????¨ç??ä¸­å????¹ã?? */
		center: Vec3;		
		/** !#en
		get the collider attached rigidbody, this may be null.
		!#zh
		??·å??ç¢°æ????¨æ??ç»?å®???????ä½?ç»?ä»¶ï????¯è?½ä¸º null??? */
		attachedRigidbody: RigidBody3D|void;		
		/** !#en
		get collider shape.
		!#zh
		??·å??ç¢°æ????¨å½¢??¶ã?? */
		shape: IBaseShape;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget.
		This type of event should be triggered via `emit`.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°????è¿?ç§?ç±»å?????äº?ä»¶å??è¯¥è¢« `emit` è§¦å?????
		@param type The type of collider event can be `trigger-enter`, `trigger-stay`, `trigger-exit` or `collision-enter`, `collision-stay`, `collision-exit`.
		@param callback The callback that will be invoked when the event is dispatched.
		The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null.
		
		@example 
		```js
		eventTarget.on('fire', function (event) {
		    // event is ITriggerEvent or ICollisionEvent
		}, node);
		``` 
		*/
		on<T extends Function>(type: string, callback: T, target?: any, useCapture?: boolean): T;		
		/**
		!#en
		Removes the listeners previously registered with the same type, callback, target and or useCapture,
		if only type is passed as parameter, all listeners registered with that type will be removed.
		!#zh
		?????¤ä???????¨å??ç±»å??ï¼????è°?ï¼???®æ????? useCapture æ³¨å?????äº?ä»¶ç????¬å?¨ï??å¦??????ªä????? typeï¼?å°?ä¼??????? type ç±»å???????????äº?ä»¶ç????¬å?¨ã??
		@param type The type of collider event can be `trigger-enter`, `trigger-stay`, `trigger-exit` or `collision-enter`, `collision-stay`, `collision-exit`.
		@param callback The callback to remove.
		@param target The target (this object) to invoke the callback, if it's not given, only callback without target will be removed.
		
		@example 
		```js
		// register fire eventListener
		var callback = eventTarget.on('fire', function () {
		    cc.log("fire in the hole");
		}, target);
		// remove fire event listener
		eventTarget.off('fire', callback, target);
		// remove all fire event listeners
		eventTarget.off('fire');
		``` 
		*/
		off(type: string, callback?: Function, target?: any): void;		
		/**
		!#en
		Register an callback of a specific event type on the EventTarget,
		the callback will remove itself after the first time it is triggered.
		!#zh
		æ³¨å??äº?ä»¶ç?®æ???????¹å??äº?ä»¶ç±»??????è°?ï¼????è°?ä¼???¨ç¬¬ä¸???¶é?´è¢«è§¦å??????????¤è?ªèº«???
		@param type The type of collider event can be `trigger-enter`, `trigger-stay`, `trigger-exit` or `collision-enter`, `collision-stay`, `collision-exit`.
		@param callback The callback that will be invoked when the event is dispatched.
		The callback is ignored if it is a duplicate (the callbacks are unique).
		@param target The target (this object) to invoke the callback, can be null.
		
		@example 
		```js
		eventTarget.once('fire', function (event) {
		    // event is ITriggerEvent or ICollisionEvent
		}, node);
		``` 
		*/
		once(type: string, callback: (event: ITriggerEvent|ICollisionEvent) => void, target?: any): void;		
		/**
		!#en Checks whether the EventTarget object has any callback registered for a specific type of event.
		!#zh æ£???¥ä??ä»¶ç?®æ??å¯¹è±¡??¯å?¦æ??ä¸ºç?¹å??ç±»å?????äº?ä»¶æ³¨?????????è°????
		@param type The type of event. 
		*/
		hasEventListener(type: string): boolean;		
		/**
		!#en Removes all callbacks previously registered with the same target (passed as parameter).
		This is not for removing all listeners in the current event target,
		and this is not for removing all listeners the target parameter have registered.
		It's only for removing all listeners (callback and target couple) registered on the current event target by the target parameter.
		!#zh ??¨å????? EventTarget ä¸??????¤æ??å®???®æ??ï¼?target ?????°ï??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°æ??æ³??????¤å????? EventTarget ?????????äº?ä»¶ç????¬å?¨ï??ä¹????æ³??????? target ?????°æ??æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		è¿?ä¸ªå?½æ?°å?ªè?½å????? target ?????°å?¨å????? EventTarget ä¸?æ³¨å???????????äº?ä»¶ç????¬å?¨ã??
		@param target The target to be searched for all related listeners 
		*/
		targetOff(target: any): void;		
		/**
		!#en
		Send an event with the event object.
		!#zh
		???è¿?äº?ä»¶å¯¹è±¡æ´¾???äº?ä»?
		@param event event 
		*/
		dispatchEvent(event: Event): void;		
		/**
		!#en
		Destroy all callbackInfos.
		!#zh
		???æ¯?è®°å?????äº?ä»? 
		*/
		clear(): void;	
	}	
	/** !#en
	Physics sphere collider
	!#zh
	??©ç?????ç¢°æ????? */
	export class SphereCollider3D extends Collider3D {		
		/** !#en
		Get or set the radius of the sphere.
		!#zh
		??·å?????è®¾ç½®?????????å¾???? */
		radius: number;		
		sphereShape: ISphereShape;	
	}	
	/****************************************************
	* audioEngine
	*****************************************************/
	
	export namespace audioEngine {		
		/** !#en Audio state.
		!#zh å£°é?³æ?­æ?¾ç?¶æ?? */
		export enum AudioState {			
			ERROR = 0,
			INITIALZING = 0,
			PLAYING = 0,
			PAUSED = 0,
			STOPPED = 0,		
		}	
	}
		
	/****************************************************
	* debug
	*****************************************************/
	
	export namespace debug {		
		/** !#en Enum for debug modes.
		!#zh è°?è¯?æ¨¡å?? */
		export enum DebugMode {			
			NONE = 0,
			INFO = 0,
			WARN = 0,
			ERROR = 0,
			INFO_FOR_WEB_PAGE = 0,
			WARN_FOR_WEB_PAGE = 0,
			ERROR_FOR_WEB_PAGE = 0,		
		}	
	}
		
	/****************************************************
	* Node
	*****************************************************/
	
	export namespace Node {		
		/** !#en Node's local dirty properties flag
		!#zh Node ?????¬å?°å????? dirty ??¶æ??ä½? */
		export enum _LocalDirtyFlag {			
			POSITION = 0,
			SCALE = 0,
			ROTATION = 0,
			SKEW = 0,
			TRS = 0,
			RS = 0,
			TRS = 0,
			PHYSICS_POSITION = 0,
			PHYSICS_SCALE = 0,
			PHYSICS_ROTATION = 0,
			PHYSICS_TRS = 0,
			PHYSICS_RS = 0,
			ALL_POSITION = 0,
			ALL_SCALE = 0,
			ALL_ROTATION = 0,
			ALL_TRS = 0,
			ALL = 0,		
		}	
	}
		
	/****************************************************
	* Node
	*****************************************************/
	
	export namespace Node {		
		/** !#en The event type supported by Node
		!#zh Node ??¯æ?????äº?ä»¶ç±»??? */
		export class EventType {			
			/** !#en The event type for touch start event, you can use its value directly: 'touchstart'
			!#zh å½???????è§¦æ?¸å?°å??å¹???¶ã?? */
			static TOUCH_START: string;			
			/** !#en The event type for touch move event, you can use its value directly: 'touchmove'
			!#zh å½?????????¨å??å¹?ä¸?ç§»å?¨æ?¶ã?? */
			static TOUCH_MOVE: string;			
			/** !#en The event type for touch end event, you can use its value directly: 'touchend'
			!#zh å½?????????¨ç?®æ???????¹å?ºå?????ç¦»å??å±?å¹???¶ã?? */
			static TOUCH_END: string;			
			/** !#en The event type for touch end event, you can use its value directly: 'touchcancel'
			!#zh å½?????????¨ç?®æ???????¹å?ºå??å¤?ç¦»å??å±?å¹???¶ã?? */
			static TOUCH_CANCEL: string;			
			/** !#en The event type for mouse down events, you can use its value directly: 'mousedown'
			!#zh å½?é¼???????ä¸???¶è§¦???ä¸?æ¬¡ã?? */
			static MOUSE_DOWN: string;			
			/** !#en The event type for mouse move events, you can use its value directly: 'mousemove'
			!#zh å½?é¼??????¨ç?®æ???????¹å?¨ç?®æ???????¹å?ºå??ä¸­ç§»??¨æ?¶ï??ä¸?è®ºæ?¯å?¦æ??ä¸???? */
			static MOUSE_MOVE: string;			
			/** !#en The event type for mouse enter target events, you can use its value directly: 'mouseenter'
			!#zh å½?é¼????ç§»å?¥ç?®æ???????¹å?ºå????¶ï??ä¸?è®ºæ?¯å?¦æ??ä¸???? */
			static MOUSE_ENTER: string;			
			/** !#en The event type for mouse leave target events, you can use its value directly: 'mouseleave'
			!#zh å½?é¼????ç§»å?ºç?®æ???????¹å?ºå????¶ï??ä¸?è®ºæ?¯å?¦æ??ä¸???? */
			static MOUSE_LEAVE: string;			
			/** !#en The event type for mouse up events, you can use its value directly: 'mouseup'
			!#zh å½?é¼????ä»????ä¸???¶æ????¾å????¶è§¦???ä¸?æ¬¡ã?? */
			static MOUSE_UP: string;			
			/** !#en The event type for mouse wheel events, you can use its value directly: 'mousewheel'
			!#zh å½?é¼????æ»?è½®æ????¨æ?¶ã?? */
			static MOUSE_WHEEL: string;			
			/** !#en The event type for position change events.
			Performance note, this event will be triggered every time corresponding properties being changed,
			if the event callback have heavy logic it may have great performance impact, try to avoid such scenario.
			!#zh å½??????¹ä??ç½®æ?¹å????¶è§¦??????äº?ä»¶ã??
			??§è?½è­¦???ï¼?è¿?ä¸ªä??ä»¶ä????¨æ??æ¬¡å¯¹åº????å±???§è¢«ä¿®æ?¹æ?¶è§¦???ï¼?å¦????äº?ä»¶å??è°???????è¾?é«?ï¼??????¯è?½å¯¹??§è?½æ??å¾?å¤§ç??è´???¢å½±???ï¼?è¯·å°½?????¿å??è¿?ç§??????µã?? */
			static POSITION_CHANGED: string;			
			/** !#en The event type for rotation change events.
			Performance note, this event will be triggered every time corresponding properties being changed,
			if the event callback have heavy logic it may have great performance impact, try to avoid such scenario.
			!#zh å½??????¹æ??è½¬æ?¹å????¶è§¦??????äº?ä»¶ã??
			??§è?½è­¦???ï¼?è¿?ä¸ªä??ä»¶ä????¨æ??æ¬¡å¯¹åº????å±???§è¢«ä¿®æ?¹æ?¶è§¦???ï¼?å¦????äº?ä»¶å??è°???????è¾?é«?ï¼??????¯è?½å¯¹??§è?½æ??å¾?å¤§ç??è´???¢å½±???ï¼?è¯·å°½?????¿å??è¿?ç§??????µã?? */
			static ROTATION_CHANGED: string;			
			/** !#en The event type for scale change events.
			Performance note, this event will be triggered every time corresponding properties being changed,
			if the event callback have heavy logic it may have great performance impact, try to avoid such scenario.
			!#zh å½??????¹ç¼©??¾æ?¹å????¶è§¦??????äº?ä»¶ã??
			??§è?½è­¦???ï¼?è¿?ä¸ªä??ä»¶ä????¨æ??æ¬¡å¯¹åº????å±???§è¢«ä¿®æ?¹æ?¶è§¦???ï¼?å¦????äº?ä»¶å??è°???????è¾?é«?ï¼??????¯è?½å¯¹??§è?½æ??å¾?å¤§ç??è´???¢å½±???ï¼?è¯·å°½?????¿å??è¿?ç§??????µã?? */
			static SCALE_CHANGED: string;			
			/** !#en The event type for size change events.
			Performance note, this event will be triggered every time corresponding properties being changed,
			if the event callback have heavy logic it may have great performance impact, try to avoid such scenario.
			!#zh å½??????¹å°ºå¯¸æ?¹å????¶è§¦??????äº?ä»¶ã??
			??§è?½è­¦???ï¼?è¿?ä¸ªä??ä»¶ä????¨æ??æ¬¡å¯¹åº????å±???§è¢«ä¿®æ?¹æ?¶è§¦???ï¼?å¦????äº?ä»¶å??è°???????è¾?é«?ï¼??????¯è?½å¯¹??§è?½æ??å¾?å¤§ç??è´???¢å½±???ï¼?è¯·å°½?????¿å??è¿?ç§??????µã?? */
			static SIZE_CHANGED: string;			
			/** !#en The event type for anchor point change events.
			Performance note, this event will be triggered every time corresponding properties being changed,
			if the event callback have heavy logic it may have great performance impact, try to avoid such scenario.
			!#zh å½??????¹é????¹æ?¹å????¶è§¦??????äº?ä»¶ã??
			??§è?½è­¦???ï¼?è¿?ä¸ªä??ä»¶ä????¨æ??æ¬¡å¯¹åº????å±???§è¢«ä¿®æ?¹æ?¶è§¦???ï¼?å¦????äº?ä»¶å??è°???????è¾?é«?ï¼??????¯è?½å¯¹??§è?½æ??å¾?å¤§ç??è´???¢å½±???ï¼?è¯·å°½?????¿å??è¿?ç§??????µã?? */
			static ANCHOR_CHANGED: string;			
			/** !#en The event type for color change events.
			Performance note, this event will be triggered every time corresponding properties being changed,
			if the event callback have heavy logic it may have great performance impact, try to avoid such scenario.
			!#zh å½??????¹é????²æ?¹å????¶è§¦??????äº?ä»¶ã??
			??§è?½è­¦???ï¼?è¿?ä¸ªä??ä»¶ä????¨æ??æ¬¡å¯¹åº????å±???§è¢«ä¿®æ?¹æ?¶è§¦???ï¼?å¦????äº?ä»¶å??è°???????è¾?é«?ï¼??????¯è?½å¯¹??§è?½æ??å¾?å¤§ç??è´???¢å½±???ï¼?è¯·å°½?????¿å??è¿?ç§??????µã?? */
			static COLOR_CHANGED: string;			
			/** !#en The event type for new child added events.
			!#zh å½???°ç??å­??????¹è¢«æ·»å????¶è§¦??????äº?ä»¶ã?? */
			static CHILD_ADDED: string;			
			/** !#en The event type for child removed events.
			!#zh å½?å­??????¹è¢«ç§»é?¤æ?¶è§¦??????äº?ä»¶ã?? */
			static CHILD_REMOVED: string;			
			/** !#en The event type for children reorder events.
			!#zh å½?å­??????¹é¡ºåº???¹å????¶è§¦??????äº?ä»¶ã?? */
			static CHILD_REORDER: string;			
			/** !#en The event type for node group changed events.
			!#zh å½??????¹å??å±?ç¾¤ç????????????????¶è§¦??????äº?ä»¶ã?? */
			static GROUP_CHANGED: string;			
			/** !#en The event type for node's sibling order changed.
			!#zh å½??????¹å?¨å??å¼??????¹ä¸­???é¡ºå????????????????¶è§¦??????äº?ä»¶ã?? */
			static SIBLING_ORDER_CHANGED: string;		
		}	
	}
		
	/****************************************************
	* VideoPlayer
	*****************************************************/
	
	export namespace VideoPlayer {		
		/** !#en Video event type
		!#zh è§?é¢?äº?ä»¶ç±»??? */
		export enum EventType {			
			PLAYING = 0,
			PAUSED = 0,
			STOPPED = 0,
			COMPLETED = 0,
			META_LOADED = 0,
			CLICKED = 0,
			READY_TO_PLAY = 0,		
		}	
	}
		
	/****************************************************
	* VideoPlayer
	*****************************************************/
	
	export namespace VideoPlayer {		
		/** !#en Enum for video resouce type type.
		!#zh è§?é¢???¥æ?? */
		export enum ResourceType {			
			REMOTE = 0,
			LOCAL = 0,		
		}	
	}
		
	/****************************************************
	* ParticleSystem
	*****************************************************/
	
	export namespace ParticleSystem {		
		/** !#en Enum for emitter modes
		!#zh ???å°?æ¨¡å?? */
		export enum EmitterMode {			
			GRAVITY = 0,
			RADIUS = 0,		
		}	
	}
		
	/****************************************************
	* ParticleSystem
	*****************************************************/
	
	export namespace ParticleSystem {		
		/** !#en Enum for particles movement type.
		!#zh ç²?å­?ä½?ç½®ç±»??? */
		export enum PositionType {			
			FREE = 0,
			RELATIVE = 0,
			GROUPED = 0,		
		}	
	}
		
	/****************************************************
	* TiledMap
	*****************************************************/
	
	export namespace TiledMap {		
		/** !#en The orientation of tiled map.
		!#zh Tiled Map ??°å?¾æ?¹å????? */
		export enum Orientation {			
			ORTHO = 0,
			HEX = 0,
			ISO = 0,		
		}	
	}
		
	/****************************************************
	* TiledMap
	*****************************************************/
	
	export namespace TiledMap {		
		/** The property type of tiled map. */
		export enum Property {			
			NONE = 0,
			MAP = 0,
			LAYER = 0,
			OBJECTGROUP = 0,
			OBJECT = 0,
			TILE = 0,		
		}	
	}
		
	/****************************************************
	* TiledMap
	*****************************************************/
	
	export namespace TiledMap {		
		/** The tile flags of tiled map. */
		export enum TileFlag {			
			HORIZONTAL = 0,
			VERTICAL = 0,
			DIAGONAL = 0,
			FLIPPED_ALL = 0,
			FLIPPED_MASK = 0,		
		}	
	}
		
	/****************************************************
	* TiledMap
	*****************************************************/
	
	export namespace TiledMap {		
		/** !#en The stagger axis of Hex tiled map.
		!#zh ??­è¾¹å½¢å?°å?¾ç?? stagger axis ??? */
		export enum StaggerAxis {			
			STAGGERAXIS_X = 0,
			STAGGERAXIS_Y = 0,		
		}	
	}
		
	/****************************************************
	* TiledMap
	*****************************************************/
	
	export namespace TiledMap {		
		/** !#en The render order of tiled map.
		!#zh ??°å?¾ç??æ¸²æ??é¡ºå?? */
		export enum RenderOrder {			
			STAGGERINDEX_ODD = 0,
			STAGGERINDEX_EVEN = 0,
			RightDown = 0,
			RightUp = 0,
			LeftDown = 0,
			LeftUp = 0,		
		}	
	}
		
	/****************************************************
	* TiledMap
	*****************************************************/
	
	export namespace TiledMap {		
		/** !#en TiledMap Object Type
		!#zh ??°å?¾ç?©ä??ç±»å?? */
		export enum TMXObjectType {			
			RECT = 0,
			ELLIPSE = 0,
			POLYGON = 0,
			POLYLINE = 0,
			IMAGE = 0,
			TEXT = 0,		
		}	
	}
		
	/****************************************************
	* WebView
	*****************************************************/
	
	export namespace WebView {		
		/** !#en WebView event type
		!#zh ç½?é¡µè????¾ä??ä»¶ç±»??? */
		export enum EventType {			
			LOADED = 0,
			LOADING = 0,
			ERROR = 0,		
		}	
	}
		
	/****************************************************
	* Camera
	*****************************************************/
	
	export namespace Camera {		
		/** !#en Values for Camera.clearFlags, determining what to clear when rendering a Camera.
		!#zh ????????ºæ????¤æ??è®°ä??ï¼???³å??????????ºæ¸²?????¶ä??æ¸???¤å?ªä????¶æ?? */
		export enum ClearFlags {			
			COLOR = 0,
			DEPTH = 0,
			STENCIL = 0,		
		}	
	}
		
	/****************************************************
	* Light
	*****************************************************/
	
	export namespace Light {		
		/** !#en The light source type
		
		!#zh ???æº?ç±»å?? */
		export enum Type {			
			DIRECTIONAL = 0,
			POINT = 0,
			SPOT = 0,
			AMBIENT = 0,		
		}	
	}
		
	/****************************************************
	* Light
	*****************************************************/
	
	export namespace Light {		
		/** !#en The shadow type
		
		!#zh ??´å½±ç±»å?? */
		export enum ShadowType {			
			NONE = 0,
			HARD = 0,
			SOFT_PCF3X3 = 0,
			SOFT_PCF5X5 = 0,		
		}	
	}
		
	/****************************************************
	* Prefab
	*****************************************************/
	
	export namespace Prefab {		
		/** !#zh
		Prefab ???å»ºå??ä¾??????¨ç??ä¼????ç­???¥ï???????? {{#crossLink "Prefab.optimizationPolicy"}}cc.Prefab#optimizationPolicy{{/crossLink}} ä½¿ç?¨ã??
		!#en
		An enumeration used with the {{#crossLink "Prefab.optimizationPolicy"}}cc.Prefab#optimizationPolicy{{/crossLink}}
		to specify how to optimize the instantiate operation. */
		export enum OptimizationPolicy {			
			AUTO = 0,
			SINGLE_INSTANCE = 0,
			MULTI_INSTANCE = 0,		
		}	
	}
		
	/****************************************************
	* RenderTexture
	*****************************************************/
	
	export namespace RenderTexture {		
		/** !#en The depth buffer and stencil buffer format for RenderTexture.
		!#zh RenderTexture ???æ·±åº¦ç¼???²ä»¥???æ¨¡æ?¿ç????²æ?¼å????? */
		export enum DepthStencilFormat {			
			RB_FMT_D24S8 = 0,
			RB_FMT_S8 = 0,
			RB_FMT_D16 = 0,		
		}	
	}
		
	/****************************************************
	* Texture2D
	*****************************************************/
	
	export namespace Texture2D {		
		/** The texture pixel format, default value is RGBA8888,
		you should note that textures loaded by normal image files (png, jpg) can only support RGBA8888 format,
		other formats are supported by compressed file types or raw data. */
		export enum PixelFormat {			
			RGB565 = 0,
			RGB5A1 = 0,
			RGBA4444 = 0,
			RGB888 = 0,
			RGBA8888 = 0,
			RGBA32F = 0,
			A8 = 0,
			I8 = 0,
			AI88 = 0,
			RGB_PVRTC_2BPPV1 = 0,
			RGBA_PVRTC_2BPPV1 = 0,
			RGB_A_PVRTC_2BPPV1 = 0,
			RGB_PVRTC_4BPPV1 = 0,
			RGBA_PVRTC_4BPPV1 = 0,
			RGB_A_PVRTC_4BPPV1 = 0,
			RGB_ETC1 = 0,
			RGBA_ETC1 = 0,
			RGB_ETC2 = 0,
			RGBA_ETC2 = 0,		
		}	
	}
		
	/****************************************************
	* Texture2D
	*****************************************************/
	
	export namespace Texture2D {		
		/** The texture wrap mode */
		export enum WrapMode {			
			REPEAT = 0,
			CLAMP_TO_EDGE = 0,
			MIRRORED_REPEAT = 0,		
		}	
	}
		
	/****************************************************
	* Texture2D
	*****************************************************/
	
	export namespace Texture2D {		
		/** The texture filter mode */
		export enum Filter {			
			LINEAR = 0,
			NEAREST = 0,		
		}	
	}
		
	/****************************************************
	* Collider
	*****************************************************/
	
	export namespace Collider {		
		/** !#en Defines a Box Collider .
		!#zh ??¨æ?¥å??ä¹??????´ç??ç¢°æ??ä½? */
		export class Box {			
			/** !#en Position offset
			!#zh ä½?ç½®å??ç§»é?? */
			offset: Vec2;			
			/** !#en Box size
			!#zh ?????´ç??å¤§å?? */
			size: Size;		
		}	
	}
		
	/****************************************************
	* Collider
	*****************************************************/
	
	export namespace Collider {		
		/** !#en Defines a Circle Collider .
		!#zh ??¨æ?¥å??ä¹????å½¢ç¢°???ä½? */
		export class Circle {			
			/** !#en Position offset
			!#zh ä½?ç½®å??ç§»é?? */
			offset: Vec2;			
			/** !#en Circle radius
			!#zh ???å½¢å??å¾? */
			radius: number;		
		}	
	}
		
	/****************************************************
	* Collider
	*****************************************************/
	
	export namespace Collider {		
		/** !#en Defines a Polygon Collider .
		!#zh ??¨æ?¥å??ä¹?å¤?è¾¹å½¢ç¢°æ??ä½? */
		export class Polygon {			
			/** !#en Position offset
			!#zh ä½?ç½®å??ç§»é?? */
			offset: Vec2;			
			/** !#en Polygon points
			!#zh å¤?è¾¹å½¢é¡¶ç?¹æ?°ç?? */
			points: Vec2[];		
		}	
	}
		
	/****************************************************
	* Event
	*****************************************************/
	
	export namespace Event {		
		/** !#en The mouse event
		!#zh é¼????äº?ä»¶ç±»??? */
		export class EventMouse extends Event {			
			/**
			!#en Sets scroll data.
			!#zh è®¾ç½®é¼???????æ»???¨æ?°æ?®ã??
			@param scrollX scrollX
			@param scrollY scrollY 
			*/
			setScrollData(scrollX: number, scrollY: number): void;			
			/**
			!#en Returns the x axis scroll value.
			!#zh ??·å??é¼????æ»???¨ç??Xè½´è??ç¦»ï????ªæ??æ»???¨æ?¶æ??????????? 
			*/
			getScrollX(): number;			
			/**
			!#en Returns the y axis scroll value.
			!#zh ??·å??æ»?è½®æ????¨ç?? Y è½´è??ç¦»ï????ªæ??æ»???¨æ?¶æ??????????? 
			*/
			getScrollY(): number;			
			/**
			!#en Sets cursor location.
			!#zh è®¾ç½®å½????é¼????ä½?ç½®ã??
			@param x x
			@param y y 
			*/
			setLocation(x: number, y: number): void;			
			/**
			!#en Returns cursor location.
			!#zh ??·å??é¼????ä½?ç½®å¯¹è±¡ï??å¯¹è±¡?????? x ??? y å±???§ã?? 
			*/
			getLocation(): Vec2;			
			/**
			!#en Returns the current cursor location in screen coordinates.
			!#zh ??·å??å½????äº?ä»¶å?¨æ¸¸???çª????????????????ä½?ç½®å¯¹è±¡ï??å¯¹è±¡?????? x ??? y å±???§ã?? 
			*/
			getLocationInView(): Vec2;			
			/**
			!#en Returns the previous touch location.
			!#zh ??·å??é¼??????¹å?»å?¨ä??ä¸?æ¬¡ä??ä»¶æ?¶ç??ä½?ç½®å¯¹è±¡ï??å¯¹è±¡?????? x ??? y å±???§ã?? 
			*/
			getPreviousLocation(): Vec2;			
			/**
			!#en Returns the delta distance from the previous location to current location.
			!#zh ??·å??é¼????è·?ç¦»ä??ä¸?æ¬¡ä??ä»¶ç§»??¨ç??è·?ç¦»å¯¹è±¡ï??å¯¹è±¡?????? x ??? y å±???§ã?? 
			*/
			getDelta(): Vec2;			
			/**
			!#en Returns the X axis delta distance from the previous location to current location.
			!#zh ??·å??é¼????è·?ç¦»ä??ä¸?æ¬¡ä??ä»¶ç§»??¨ç?? X è½´è??ç¦»ã?? 
			*/
			getDeltaX(): number;			
			/**
			!#en Returns the Y axis delta distance from the previous location to current location.
			!#zh ??·å??é¼????è·?ç¦»ä??ä¸?æ¬¡ä??ä»¶ç§»??¨ç?? Y è½´è??ç¦»ã?? 
			*/
			getDeltaY(): number;			
			/**
			!#en Sets mouse button.
			!#zh è®¾ç½®é¼?????????®ã??
			@param button button 
			*/
			setButton(button: number): void;			
			/**
			!#en Returns mouse button.
			!#zh ??·å??é¼?????????®ã?? 
			*/
			getButton(): number;			
			/**
			!#en Returns location X axis data.
			!#zh ??·å??é¼????å½????ä½?ç½? X è½´ã?? 
			*/
			getLocationX(): number;			
			/**
			!#en Returns location Y axis data.
			!#zh ??·å??é¼????å½????ä½?ç½? Y è½´ã?? 
			*/
			getLocationY(): number;			
			/** !#en The none event code of mouse event.
			!#zh ?????? */
			static NONE: number;			
			/** !#en The event type code of mouse down event.
			!#zh é¼???????ä¸?äº?ä»¶ã?? */
			static DOWN: number;			
			/** !#en The event type code of mouse up event.
			!#zh é¼???????ä¸?????????¾ä??ä»¶ã?? */
			static UP: number;			
			/** !#en The event type code of mouse move event.
			!#zh é¼????ç§»å?¨ä??ä»¶ã?? */
			static MOVE: number;			
			/** !#en The event type code of mouse scroll event.
			!#zh é¼????æ»?è½®ä??ä»¶ã?? */
			static SCROLL: number;			
			/** !#en The tag of Mouse left button.
			!#zh é¼????å·¦é?®ç?????ç­¾ã?? */
			static BUTTON_LEFT: number;			
			/** !#en The tag of Mouse right button  (The right button number is 2 on browser).
			!#zh é¼??????³é?®ç?????ç­¾ã?? */
			static BUTTON_RIGHT: number;			
			/** !#en The tag of Mouse middle button  (The right button number is 1 on browser).
			!#zh é¼????ä¸­é?®ç?????ç­¾ã?? */
			static BUTTON_MIDDLE: number;			
			/** !#en The tag of Mouse button 4.
			!#zh é¼?????????? 4 ??????ç­¾ã?? */
			static BUTTON_4: number;			
			/** !#en The tag of Mouse button 5.
			!#zh é¼?????????? 5 ??????ç­¾ã?? */
			static BUTTON_5: number;			
			/** !#en The tag of Mouse button 6.
			!#zh é¼?????????? 6 ??????ç­¾ã?? */
			static BUTTON_6: number;			
			/** !#en The tag of Mouse button 7.
			!#zh é¼?????????? 7 ??????ç­¾ã?? */
			static BUTTON_7: number;			
			/** !#en The tag of Mouse button 8.
			!#zh é¼?????????? 8 ??????ç­¾ã?? */
			static BUTTON_8: number;		
		}	
	}
		
	/****************************************************
	* Event
	*****************************************************/
	
	export namespace Event {		
		/** !#en The touch event
		!#zh è§¦æ?¸ä??ä»? */
		export class EventTouch extends Event {			
			/**
			
			@param touchArr The array of the touches
			@param bubbles A boolean indicating whether the event bubbles up through the tree or not 
			*/
			constructor(touchArr: any[], bubbles: boolean);			
			/** !#en The current touch object
			!#zh å½????è§¦ç?¹å¯¹è±? */
			touch: Touch;			
			/**
			!#en Returns event code.
			!#zh ??·å??äº?ä»¶ç±»?????? 
			*/
			getEventCode(): number;			
			/**
			!#en Returns touches of event.
			!#zh ??·å??è§¦æ?¸ç?¹ç?????è¡¨ã?? 
			*/
			getTouches(): any[];			
			/**
			!#en Sets touch location.
			!#zh è®¾ç½®å½????è§¦ç?¹ä??ç½?
			@param x x
			@param y y 
			*/
			setLocation(x: number, y: number): void;			
			/**
			!#en Returns touch location.
			!#zh ??·å??è§¦ç?¹ä??ç½®ã?? 
			*/
			getLocation(): Vec2;			
			/**
			!#en Returns the current touch location in screen coordinates.
			!#zh ??·å??å½????è§¦ç?¹å?¨æ¸¸???çª????ä¸­ç??ä½?ç½®ã?? 
			*/
			getLocationInView(): Vec2;			
			/**
			!#en Returns the previous touch location.
			!#zh ??·å??è§¦ç?¹å?¨ä??ä¸?æ¬¡ä??ä»¶æ?¶ç??ä½?ç½®å¯¹è±¡ï??å¯¹è±¡?????? x ??? y å±???§ã?? 
			*/
			getPreviousLocation(): Vec2;			
			/**
			!#en Returns the start touch location.
			!#zh ??·å??è§¦ç?¹è?½ä????¶ç??ä½?ç½®å¯¹è±¡ï??å¯¹è±¡?????? x ??? y å±???§ã?? 
			*/
			getStartLocation(): Vec2;			
			/**
			!#en Returns the id of cc.Touch.
			!#zh è§¦ç?¹ç?????è¯? IDï¼???¯ä»¥??¨æ?¥å?¨å????¹è§¦??¸ä¸­è·?è¸ªè§¦??¹ã?? 
			*/
			getID(): number;			
			/**
			!#en Returns the delta distance from the previous location to current location.
			!#zh ??·å??è§¦ç?¹è??ç¦»ä??ä¸?æ¬¡ä??ä»¶ç§»??¨ç??è·?ç¦»å¯¹è±¡ï??å¯¹è±¡?????? x ??? y å±???§ã?? 
			*/
			getDelta(): Vec2;			
			/**
			!#en Returns the X axis delta distance from the previous location to current location.
			!#zh ??·å??è§¦ç?¹è??ç¦»ä??ä¸?æ¬¡ä??ä»¶ç§»??¨ç?? x è½´è??ç¦»ã?? 
			*/
			getDeltaX(): number;			
			/**
			!#en Returns the Y axis delta distance from the previous location to current location.
			!#zh ??·å??è§¦ç?¹è??ç¦»ä??ä¸?æ¬¡ä??ä»¶ç§»??¨ç?? y è½´è??ç¦»ã?? 
			*/
			getDeltaY(): number;			
			/**
			!#en Returns location X axis data.
			!#zh ??·å??å½????è§¦ç?? X è½´ä??ç½®ã?? 
			*/
			getLocationX(): number;			
			/**
			!#en Returns location Y axis data.
			!#zh ??·å??å½????è§¦ç?? Y è½´ä??ç½®ã?? 
			*/
			getLocationY(): number;		
		}	
	}
		
	/****************************************************
	* Event
	*****************************************************/
	
	export namespace Event {		
		/** !#en The acceleration event
		!#zh ??????åº¦ä??ä»? */
		export class EventAcceleration extends Event {		
		}	
	}
		
	/****************************************************
	* Event
	*****************************************************/
	
	export namespace Event {		
		/** !#en The keyboard event
		!#zh ??®ç??äº?ä»? */
		export class EventKeyboard extends Event {			
			/** !#en
			The keyCode read-only property represents a system and implementation dependent numerical code identifying the unmodified value of the pressed key.
			This is usually the decimal ASCII (RFC 20) or Windows 1252 code corresponding to the key.
			If the key can't be identified, this value is 0.
			
			!#zh
			keyCode ??¯å?ªè¯»å±???§å??è¡¨ç¤ºä¸?ä¸ªç³»ç»????ä¾?èµ?äº?å®???°ç????°å??ä»????ï¼???¯ä»¥è¯???«æ????®ç????ªä¿®??¹å?¼ã??
			è¿????å¸¸æ?¯å??è¿???? ASCII (RFC20) ?????? Windows 1252 ä»????ï¼????å¯¹å?????å¯???¥ã??
			å¦???????æ³?è¯???«è¯¥??®ï?????è¯¥å?¼ä¸º 0??? */
			keyCode: number;		
		}	
	}
		
	/****************************************************
	* Event
	*****************************************************/
	
	export namespace Event {		
		/** !#en The Custom event
		!#zh ??ªå??ä¹?äº?ä»? */
		export class EventCustom extends Event {			
			/**
			
			@param type The name of the event (case-sensitive), e.g. "click", "fire", or "submit"
			@param bubbles A boolean indicating whether the event bubbles up through the tree or not 
			*/
			constructor(type: string, bubbles: boolean);			
			/** !#en A reference to the detailed data of the event
			!#zh äº?ä»¶ç??è¯¦ç????°æ?? */
			detail: any;			
			/**
			!#en Sets user data
			!#zh è®¾ç½®??¨æ?·æ?°æ??
			@param data data 
			*/
			setUserData(data: any): void;			
			/**
			!#en Gets user data
			!#zh ??·å????¨æ?·æ?°æ?? 
			*/
			getUserData(): any;			
			/**
			!#en Gets event name
			!#zh ??·å??äº?ä»¶å??ç§? 
			*/
			getEventName(): string;		
		}	
	}
		
	/****************************************************
	* SystemEvent
	*****************************************************/
	
	export namespace SystemEvent {		
		/** !#en The event type supported by SystemEvent
		!#zh SystemEvent ??¯æ?????äº?ä»¶ç±»??? */
		export class EventType {			
			/** !#en The event type for press the key down event, you can use its value directly: 'keydown'
			!#zh å½????ä¸??????®æ?¶è§¦??????äº?ä»? */
			static KEY_DOWN: string;			
			/** !#en The event type for press the key up event, you can use its value directly: 'keyup'
			!#zh å½???¾å???????®æ?¶è§¦??????äº?ä»? */
			static KEY_UP: string;			
			/** !#en The event type for press the devicemotion event, you can use its value directly: 'devicemotion'
			!#zh ?????????åº? */
			static DEVICEMOTION: string;		
		}	
	}
		
	/****************************************************
	* Animation
	*****************************************************/
	
	export namespace Animation {		
		/** !#en The event type supported by Animation
		!#zh Animation ??¯æ?????äº?ä»¶ç±»??? */
		export class EventType {			
			/** !#en Emit when begin playing animation
			!#zh å¼?å§???­æ?¾æ?¶è§¦??? */
			static PLAY: string;			
			/** !#en Emit when stop playing animation
			!#zh ???æ­¢æ?­æ?¾æ?¶è§¦??? */
			static STOP: string;			
			/** !#en Emit when pause animation
			!#zh ????????­æ?¾æ?¶è§¦??? */
			static PAUSE: string;			
			/** !#en Emit when resume animation
			!#zh ??¢å????­æ?¾æ?¶è§¦??? */
			static RESUME: string;			
			/** !#en If animation repeat count is larger than 1, emit when animation play to the last frame
			!#zh ???å¦???¨ç?»å¾ª??¯æ¬¡??°å¤§äº? 1ï¼?å½???¨ç?»æ?­æ?¾å?°æ?????ä¸?å¸§æ?¶è§¦??? */
			static LASTFRAME: string;			
			/** !#en Emit when finish playing animation
			!#zh ??¨ç?»æ?­æ?¾å???????¶è§¦??? */
			static FINISHED: string;		
		}	
	}
		
	/****************************************************
	* Button
	*****************************************************/
	
	export namespace Button {		
		/** !#en Enum for transition type.
		!#zh è¿?æ¸¡ç±»??? */
		export enum Transition {			
			NONE = 0,
			COLOR = 0,
			SPRITE = 0,
			SCALE = 0,		
		}	
	}
		
	/****************************************************
	* Component
	*****************************************************/
	
	export namespace Component {		
		/** !#en
		Component will register a event to target component's handler.
		And it will trigger the handler when a certain event occurs.
		
		!@zh
		???EventHandler??? ç±»ç?¨æ?¥è®¾ç½®å?ºæ?¯ä¸­???äº?ä»¶å??è°?ï¼?
		è¯¥ç±»???è®¸ç?¨æ?·è®¾ç½®å??è°???®æ???????¹ï????®æ??ç»?ä»¶å??ï¼?ç»?ä»¶æ?¹æ?????ï¼?
		å¹¶å?¯é??è¿? emit ??¹æ??è°???¨ç?®æ????½æ?°ã?? */
		export class EventHandler {			
			/** !#en the node that contains target callback, such as the node example script belongs to
			!#zh äº?ä»¶å??åº???½æ?°æ????¨è????? ï¼?æ¯?å¦?ä¾?å­?ä¸­è????¬å??å±?????????¹æ?¬èº« */
			target: Node;			
			/** !#en name of the component(script) that contains target callback, such as the name 'MainMenu' of script in example
			!#zh äº?ä»¶å??åº???½æ?°æ????¨ç??ä»¶å??ï¼??????¬å??ï¼?, æ¯?å¦?ä¾?å­?ä¸­ç???????¬å?? 'MainMenu' */
			component: string;			
			/** !#en Event handler, such as function's name 'onClick' in example
			!#zh ???åº?äº?ä»¶å?½æ?°å??ï¼?æ¯?å¦?ä¾?å­?ä¸­ç?? 'onClick' */
			handler: string;			
			/** !#en Custom Event Data, such as 'eventType' in example
			!#zh ??ªå??ä¹?äº?ä»¶æ?°æ?®ï??æ¯?å¦?ä¾?å­?ä¸­ç?? eventType */
			customEventData: string;			
			/**
			
			@param events events
			@param params params 
			*/
			static emitEvents(events: EventHandler[], ...params: any[]): void;			
			/**
			!#en Emit event with params
			!#zh è§¦å????®æ??ç»?ä»¶ä????????å®? handler ??½æ?°ï??è¯¥å????°æ?¯å??è°???½æ?°ç???????°å?¼ï????¯ä??å¡«ï?????
			@param params params
			
			@example 
			```js
			// Call Function
			var eventHandler = new cc.Component.EventHandler();
			eventHandler.target = newTarget;
			eventHandler.component = "MainMenu";
			eventHandler.handler = "OnClick"
			eventHandler.emit(["param1", "param2", ....]);
			``` 
			*/
			emit(params: any[]): void;		
		}	
	}
		
	/****************************************************
	* Label
	*****************************************************/
	
	export namespace Label {		
		/** !#en Enum for text alignment.
		!#zh ?????¬æ¨ª???å¯¹é??ç±»å?? */
		export enum HorizontalAlign {			
			LEFT = 0,
			CENTER = 0,
			RIGHT = 0,		
		}	
	}
		
	/****************************************************
	* Label
	*****************************************************/
	
	export namespace Label {		
		/** !#en Enum for vertical text alignment.
		!#zh ?????¬å????´å¯¹é½?ç±»å?? */
		export enum VerticalAlign {			
			TOP = 0,
			CENTER = 0,
			BOTTOM = 0,		
		}	
	}
		
	/****************************************************
	* Label
	*****************************************************/
	
	export namespace Label {		
		/** !#en Enum for Overflow.
		!#zh Overflow ç±»å?? */
		export enum Overflow {			
			NONE = 0,
			CLAMP = 0,
			SHRINK = 0,
			RESIZE_HEIGHT = 0,		
		}	
	}
		
	/****************************************************
	* Label
	*****************************************************/
	
	export namespace Label {		
		/** !#en Enum for font type.
		!#zh Type ç±»å?? */
		export enum Type {			
			TTF = 0,
			BMFont = 0,
			SystemFont = 0,		
		}	
	}
		
	/****************************************************
	* Label
	*****************************************************/
	
	export namespace Label {		
		/** !#en Enum for cache mode.
		!#zh CacheMode ç±»å?? */
		export enum CacheMode {			
			NONE = 0,
			BITMAP = 0,
			CHAR = 0,		
		}	
	}
		
	/****************************************************
	* Layout
	*****************************************************/
	
	export namespace Layout {		
		/** !#en Enum for Layout type
		!#zh å¸?å±?ç±»å?? */
		export enum Type {			
			NONE = 0,
			HORIZONTAL = 0,
			VERTICAL = 0,
			GRID = 0,		
		}	
	}
		
	/****************************************************
	* Layout
	*****************************************************/
	
	export namespace Layout {		
		/** !#en Enum for Layout Resize Mode
		!#zh ç¼©æ?¾æ¨¡å¼? */
		export enum ResizeMode {			
			NONE = 0,
			CONTAINER = 0,
			CHILDREN = 0,		
		}	
	}
		
	/****************************************************
	* Layout
	*****************************************************/
	
	export namespace Layout {		
		/** !#en Enum for Grid Layout start axis direction.
		The items in grid layout will be arranged in each axis at first.;
		!#zh å¸?å±?è½´å??ï¼???ªç?¨ä?? GRID å¸?å±???? */
		export enum AxisDirection {			
			HORIZONTAL = 0,
			VERTICAL = 0,		
		}	
	}
		
	/****************************************************
	* Layout
	*****************************************************/
	
	export namespace Layout {		
		/** !#en Enum for vertical layout direction.
		 Used in Grid Layout together with AxisDirection is VERTICAL
		!#zh ?????´æ?¹å??å¸?å±???¹å?? */
		export enum VerticalDirection {			
			BOTTOM_TO_TOP = 0,
			TOP_TO_BOTTOM = 0,		
		}	
	}
		
	/****************************************************
	* Layout
	*****************************************************/
	
	export namespace Layout {		
		/** !#en Enum for horizontal layout direction.
		 Used in Grid Layout together with AxisDirection is HORIZONTAL
		!#zh æ°´å¹³??¹å??å¸?å±???¹å?? */
		export enum HorizontalDirection {			
			LEFT_TO_RIGHT = 0,
			RIGHT_TO_LEFT = 0,		
		}	
	}
		
	/****************************************************
	* Mask
	*****************************************************/
	
	export namespace Mask {		
		/** !#en the type for mask.
		!#zh ??®ç½©ç»?ä»¶ç±»??? */
		export enum Type {			
			RECT = 0,
			ELLIPSE = 0,
			IMAGE_STENCIL = 0,		
		}	
	}
		
	/****************************************************
	* PageView
	*****************************************************/
	
	export namespace PageView {		
		/** !#en The Page View Size Mode
		!#zh é¡µé?¢è????¾æ??ä¸ªé¡µ??¢ç??ä¸????å¤§å??ç±»å?? */
		export enum SizeMode {			
			Unified = 0,
			Free = 0,		
		}	
	}
		
	/****************************************************
	* PageView
	*****************************************************/
	
	export namespace PageView {		
		/** !#en The Page View Direction
		!#zh é¡µé?¢è????¾æ????¨ç±»??? */
		export enum Direction {			
			Horizontal = 0,
			Vertical = 0,		
		}	
	}
		
	/****************************************************
	* PageView
	*****************************************************/
	
	export namespace PageView {		
		/** !#en Enum for ScrollView event type.
		!#zh æ»???¨è????¾ä??ä»¶ç±»??? */
		export enum EventType {			
			PAGE_TURNING = 0,		
		}	
	}
		
	/****************************************************
	* PageViewIndicator
	*****************************************************/
	
	export namespace PageViewIndicator {		
		/** !#en Enum for PageView Indicator direction
		!#zh é¡µé?¢è????¾æ??ç¤ºå?¨ç???????¾æ?¹å?? */
		export enum Direction {			
			HORIZONTAL = 0,
			VERTICAL = 0,		
		}	
	}
		
	/****************************************************
	* ProgressBar
	*****************************************************/
	
	export namespace ProgressBar {		
		/** !#en Enum for ProgressBar mode
		!#zh è¿?åº¦æ?¡æ¨¡å¼? */
		export enum Mode {			
			HORIZONTAL = 0,
			VERTICAL = 0,
			FILLED = 0,		
		}	
	}
		
	/****************************************************
	* Scrollbar
	*****************************************************/
	
	export namespace Scrollbar {		
		/** Enum for Scrollbar direction */
		export enum Direction {			
			HORIZONTAL = 0,
			VERTICAL = 0,		
		}	
	}
		
	/****************************************************
	* ScrollView
	*****************************************************/
	
	export namespace ScrollView {		
		/** !#en Enum for ScrollView event type.
		!#zh æ»???¨è????¾ä??ä»¶ç±»??? */
		export enum EventType {			
			SCROLL_TO_TOP = 0,
			SCROLL_TO_BOTTOM = 0,
			SCROLL_TO_LEFT = 0,
			SCROLL_TO_RIGHT = 0,
			SCROLLING = 0,
			BOUNCE_TOP = 0,
			BOUNCE_BOTTOM = 0,
			BOUNCE_LEFT = 0,
			BOUNCE_RIGHT = 0,
			SCROLL_ENDED = 0,
			TOUCH_UP = 0,
			AUTOSCROLL_ENDED_WITH_THRESHOLD = 0,
			SCROLL_BEGAN = 0,		
		}	
	}
		
	/****************************************************
	* Slider
	*****************************************************/
	
	export namespace Slider {		
		/** !#en The Slider Direction
		!#zh æ»???¨å?¨æ?¹å?? */
		export enum Direction {			
			Horizontal = 0,
			Vertical = 0,		
		}	
	}
		
	/****************************************************
	* Sprite
	*****************************************************/
	
	export namespace Sprite {		
		/** !#en Enum for sprite type.
		!#zh Sprite ç±»å?? */
		export enum Type {			
			SIMPLE = 0,
			SLICED = 0,
			TILED = 0,
			FILLED = 0,
			MESH = 0,		
		}	
	}
		
	/****************************************************
	* Sprite
	*****************************************************/
	
	export namespace Sprite {		
		/** !#en Enum for fill type.
		!#zh å¡«å??ç±»å?? */
		export enum FillType {			
			HORIZONTAL = 0,
			VERTICAL = 0,
			RADIAL = 0,		
		}	
	}
		
	/****************************************************
	* Sprite
	*****************************************************/
	
	export namespace Sprite {		
		/** !#en Sprite Size can track trimmed size, raw size or none.
		!#zh ç²¾ç?µå°ºå¯¸è????´æ¨¡å¼? */
		export enum SizeMode {			
			CUSTOM = 0,
			TRIMMED = 0,
			RAW = 0,		
		}	
	}
		
	/****************************************************
	* Sprite
	*****************************************************/
	
	export namespace Sprite {		
		/** !#en Sprite state can choice the normal or grayscale.
		!#zh ç²¾ç?µé????²é?????æ¨¡å????? */
		export enum State {			
			NORMAL = 0,
			GRAY = 0,		
		}	
	}
		
	/****************************************************
	* Widget
	*****************************************************/
	
	export namespace Widget {		
		/** !#en Enum for Widget's alignment mode, indicating when the widget should refresh.
		!#zh Widget ???å¯¹é??æ¨¡å??ï¼?è¡¨ç¤º Widget åº?è¯¥ä????¶å?·æ?°ã?? */
		export enum AlignMode {			
			ONCE = 0,
			ON_WINDOW_RESIZE = 0,
			ALWAYS = 0,		
		}	
	}
		
	/****************************************************
	* geomUtils
	*****************************************************/
	
	export namespace geomUtils {		
		/** Aabb */
		export class Aabb {			
			/**
			create a new aabb
			@param px X coordinates for aabb's original point
			@param py Y coordinates for aabb's original point
			@param pz Z coordinates for aabb's original point
			@param w the half of aabb width
			@param h the half of aabb height
			@param l the half of aabb length 
			*/
			create(px: number, py: number, pz: number, w: number, h: number, l: number): Aabb;			
			/**
			clone a new aabb
			@param a the source aabb 
			*/
			clone(a: Aabb): Aabb;			
			/**
			copy the values from one aabb to another
			@param out the receiving aabb
			@param a the source aabb 
			*/
			copy(out: Aabb, a: Aabb): Aabb;			
			/**
			create a new aabb from two corner points
			@param out the receiving aabb
			@param minPos lower corner position of the aabb
			@param maxPos upper corner position of the aabb 
			*/
			fromPoints(out: Aabb, minPos: Vec3, maxPos: Vec3): Aabb;			
			/**
			Set the components of a aabb to the given values
			@param out the receiving aabb
			@param px X coordinates for aabb's original point
			@param py Y coordinates for aabb's original point
			@param pz Z coordinates for aabb's original point
			@param w the half of aabb width
			@param h the half of aabb height
			@param l the half of aabb length 
			*/
			set(out: Aabb, px: number, py: number, pz: number, w: number, h: number, l: number): Aabb;			
			center: Vec3;			
			halfExtents: Vec3;			
			_type: number;			
			/**
			Get the bounding points of this shape
			@param minPos minPos
			@param maxPos maxPos 
			*/
			getBoundary(minPos: Vec3, maxPos: Vec3): void;			
			/**
			Transform this shape
			@param m the transform matrix
			@param pos the position part of the transform
			@param rot the rotation part of the transform
			@param scale the scale part of the transform
			@param out the target shape 
			*/
			transform(m: Mat4, pos: Vec3, rot: Quat, scale: Vec3, out?: Aabb): void;		
		}	
	}
		
	/****************************************************
	* geomUtils
	*****************************************************/
	
	export namespace geomUtils {		
		/** !#en Shape type. */
		export enum enums {			
			SHAPE_RAY = 0,
			SHAPE_LINE = 0,
			SHAPE_SPHERE = 0,
			SHAPE_AABB = 0,
			SHAPE_OBB = 0,
			SHAPE_PLANE = 0,
			SHAPE_TRIANGLE = 0,
			SHAPE_FRUSTUM = 0,
			SHAPE_FRUSTUM_ACCURATE = 0,		
		}	
	}
		
	/****************************************************
	* geomUtils
	*****************************************************/
	
	export namespace geomUtils {		
		/** !#en frustum
		!#zh å¹³æ?ªå¤´ä½? */
		export class Frustum {			
			/** Set whether to use accurate intersection testing function on this frustum */
			accurate: boolean;			
			/**
			create a new frustum 
			*/
			static create(): Frustum;			
			/**
			Clone a frustum
			@param f f 
			*/
			static clone(f: Frustum): Frustum;			
			/**
			Copy the values from one frustum to another
			@param out out
			@param f f 
			*/
			copy(out: Frustum, f: Frustum): Frustum;			
			planes: geomUtils.Plane[];			
			planes: Vec3[];			
			/**
			!#en Update the frustum information according to the given transform matrix.
			Note that the resulting planes are not normalized under normal mode.
			@param m the view-projection matrix
			@param inv the inverse view-projection matrix 
			*/
			update(m: Mat4, inv: Mat4): void;			
			/**
			!#en transform by matrix
			@param mat mat 
			*/
			transform(mat: Mat4): void;		
		}	
	}
		
	/****************************************************
	* geomUtils
	*****************************************************/
	
	export namespace geomUtils {		
		/** undefined */
		export class intersect {			
			/**
			!#en
			Check whether ray intersect with nodes
			!#zh
			æ£?æµ?å°?çº¿æ?¯å?¦ä????©ä?????äº¤é??
			@param root If root is null, then traversal nodes from scene node
			@param worldRay worldRay
			@param handler handler
			@param filter filter 
			*/
			static ray_cast(root: Node, worldRay: geomUtils.Ray, handler: Function, filter: Function): any[];			
			/**
			!#en ray-plane intersect<br/>
			!#zh å°?çº¿ä??å¹³é?¢ç????¸äº¤??§æ??æµ????
			@param ray ray
			@param plane plane 
			*/
			static ray_plane(ray: geomUtils.Ray, plane: geomUtils.Plane): number;			
			/**
			!#en line-plane intersect<br/>
			!#zh çº¿æ®µä¸?å¹³é?¢ç????¸äº¤??§æ??æµ????
			@param line line
			@param plane plane 
			*/
			static line_plane(line: geomUtils.Line, plane: geomUtils.Plane): number;			
			/**
			!#en ray-triangle intersect<br/>
			!#zh å°?çº¿ä??ä¸?è§?å½¢ç????¸äº¤??§æ??æµ????
			@param ray ray
			@param triangle triangle
			@param doubleSided doubleSided 
			*/
			static ray_triangle(ray: geomUtils.Ray, triangle: geomUtils.Triangle, doubleSided: boolean): number;			
			/**
			!#en line-triangle intersect<br/>
			!#zh çº¿æ®µä¸?ä¸?è§?å½¢ç????¸äº¤??§æ??æµ????
			@param line line
			@param triangle triangle
			@param outPt optional, The intersection point 
			*/
			static line_triangle(line: geomUtils.Line, triangle: geomUtils.Triangle, outPt: Vec3): number;			
			/**
			!#en line-quad intersect<br/>
			!#zh çº¿æ®µä¸????è¾¹å½¢?????¸äº¤??§æ??æµ????
			@param p A point on a line segment
			@param q Another point on the line segment
			@param a Quadrilateral point a
			@param b Quadrilateral point b
			@param c Quadrilateral point c
			@param d Quadrilateral point d
			@param outPt optional, The intersection point 
			*/
			static line_quad(p: Vec3, q: Vec3, a: Vec3, b: Vec3, c: Vec3, d: Vec3, outPt: Vec3): number;			
			/**
			!#en ray-sphere intersect<br/>
			!#zh å°?çº¿å??????????¸äº¤??§æ??æµ????
			@param ray ray
			@param sphere sphere 
			*/
			static ray_sphere(ray: geomUtils.Ray, sphere: geomUtils.Sphere): number;			
			/**
			!#en ray-aabb intersect<br/>
			!#zh å°?çº¿å??è½´å¯¹é½??????´ç???????¸äº¤??§æ??æµ????
			@param ray ray
			@param aabb Align the axis around the box 
			*/
			static ray_aabb(ray: geomUtils.Ray, aabb: Aabb): number;			
			/**
			!#en ray-obb intersect<br/>
			!#zh å°?çº¿å????¹å???????´ç???????¸äº¤??§æ??æµ????
			@param ray ray
			@param obb Direction box 
			*/
			static ray_obb(ray: geomUtils.Ray, obb: geomUtils.Obb): number;			
			/**
			!#en aabb-aabb intersect<br/>
			!#zh è½´å¯¹é½??????´ç?????è½´å¯¹é½??????´ç???????¸äº¤??§æ??æµ????
			@param aabb1 Axis alignment surrounds box 1
			@param aabb2 Axis alignment surrounds box 2 
			*/
			static aabb_aabb(aabb1: Aabb, aabb2: Aabb): number;			
			/**
			!#en aabb-obb intersect<br/>
			!#zh è½´å¯¹é½??????´ç???????¹å???????´ç???????¸äº¤??§æ??æµ????
			@param aabb Align the axis around the box
			@param obb Direction box 
			*/
			static aabb_obb(aabb: Aabb, obb: geomUtils.Obb): number;			
			/**
			!#en aabb-plane intersect<br/>
			!#zh è½´å¯¹é½??????´ç?????å¹³é?¢ç????¸äº¤??§æ??æµ????
			@param aabb Align the axis around the box
			@param plane plane 
			*/
			static aabb_plane(aabb: Aabb, plane: geomUtils.Plane): number;			
			/**
			!#en aabb-frustum intersect, faster but has false positive corner cases<br/>
			!#zh è½´å¯¹é½??????´ç???????¥å?°ç?¸äº¤??§æ??æµ?ï¼????åº¦å¿«ï¼?ä½???????è¯¯æ????µã??
			@param aabb Align the axis around the box
			@param frustum frustum 
			*/
			static aabb_frustum(aabb: Aabb, frustum: Frustum): number;			
			/**
			!#en aabb-frustum intersect, handles most of the false positives correctly<br/>
			!#zh è½´å¯¹é½??????´ç???????¥å?°ç?¸äº¤??§æ??æµ?ï¼?æ­?ç¡®å?????å¤§å????°é??è¯¯æ????µã??
			@param aabb Align the axis around the box
			@param frustum frustum 
			*/
			static aabb_frustum_accurate(aabb: Aabb, frustum: Frustum): number;			
			/**
			!#en obb-point intersect<br/>
			!#zh ??¹å???????´ç???????¹ç????¸äº¤??§æ??æµ????
			@param obb Direction box
			@param point point 
			*/
			static obb_point(obb: geomUtils.Obb, point: geomUtils.Vec3): boolean;			
			/**
			!#en obb-plane intersect<br/>
			!#zh ??¹å???????´ç?????å¹³é?¢ç????¸äº¤??§æ??æµ????
			@param obb Direction box
			@param plane plane 
			*/
			static obb_plane(obb: geomUtils.Obb, plane: geomUtils.Plane): number;			
			/**
			!#en obb-frustum intersect, faster but has false positive corner cases<br/>
			!#zh ??¹å???????´ç???????¥å?°ç?¸äº¤??§æ??æµ?ï¼????åº¦å¿«ï¼?ä½???????è¯¯æ????µã??
			@param obb Direction box
			@param frustum frustum 
			*/
			static obb_frustum(obb: geomUtils.Obb, frustum: Frustum): number;			
			/**
			!#en obb-frustum intersect, handles most of the false positives correctly<br/>
			!#zh ??¹å???????´ç???????¥å?°ç?¸äº¤??§æ??æµ?ï¼?æ­?ç¡®å?????å¤§å????°é??è¯¯æ????µã??
			@param obb Direction box
			@param frustum frustum 
			*/
			static obb_frustum_accurate(obb: geomUtils.Obb, frustum: Frustum): number;			
			/**
			!#en obb-obb intersect<br/>
			!#zh ??¹å???????´ç???????¹å???????´ç???????¸äº¤??§æ??æµ????
			@param obb1 Direction box1
			@param obb2 Direction box2 
			*/
			static obb_obb(obb1: geomUtils.Obb, obb2: geomUtils.Obb): number;			
			/**
			!#en phere-plane intersect, not necessarily faster than obb-plane<br/>
			due to the length calculation of the plane normal to factor out<br/>
			the unnomalized plane distance<br/>
			!#zh ???ä¸?å¹³é?¢ç????¸äº¤??§æ??æµ????
			@param sphere sphere
			@param plane plane 
			*/
			static sphere_plane(sphere: geomUtils.Sphere, plane: geomUtils.Plane): number;			
			/**
			!#en sphere-frustum intersect, faster but has false positive corner cases<br/>
			!#zh ????????¥å?°ç????¸äº¤??§æ??æµ?ï¼????åº¦å¿«ï¼?ä½???????è¯¯æ????µã??
			@param sphere sphere
			@param frustum frustum 
			*/
			static sphere_frustum(sphere: geomUtils.Sphere, frustum: Frustum): number;			
			/**
			!#en sphere-frustum intersect, handles the false positives correctly<br/>
			!#zh ????????¥å?°ç????¸äº¤??§æ??æµ?ï¼?æ­?ç¡®å?????å¤§å????°é??è¯¯æ????µã??
			@param sphere sphere
			@param frustum frustum 
			*/
			static sphere_frustum_accurate(sphere: geomUtils.Sphere, frustum: Frustum): number;			
			/**
			!#en sphere-sphere intersect<br/>
			!#zh ??????????????¸äº¤??§æ??æµ????
			@param sphere0 sphere0
			@param sphere1 sphere1 
			*/
			static sphere_sphere(sphere0: geomUtils.Sphere, sphere1: geomUtils.Sphere): boolean;			
			/**
			!#en sphere-aabb intersect<br/>
			!#zh ??????è½´å¯¹é½??????´ç???????¸äº¤??§æ??æµ????
			@param sphere sphere
			@param aabb aabb 
			*/
			static sphere_aabb(sphere: geomUtils.Sphere, aabb: Aabb): boolean;			
			/**
			!#en sphere-obb intersect<br/>
			!#zh ????????¹å???????´ç???????¸äº¤??§æ??æµ????
			@param sphere sphere
			@param obb obb 
			*/
			static sphere_obb(sphere: geomUtils.Sphere, obb: geomUtils.Obb): boolean;			
			/**
			!#en
			The intersection detection of g1 and g2 can fill in the shape in the basic geometry.
			!#zh
			g1 ??? g2 ?????¸äº¤??§æ??æµ?ï¼???¯å¡«??¥å?ºç?????ä½?ä¸­ç??å½¢ç?¶ã??
			@param g1 Geometry 1
			@param g2 Geometry 2
			@param outPt optional, Intersection point. (note: only partial shape detection with this return value) 
			*/
			static resolve(g1: any, g2: any, outPt: any): void;		
		}	
	}
		
	/****************************************************
	* geomUtils
	*****************************************************/
	
	export namespace geomUtils {		
		/** !#en
		line
		!#zh
		??´çº¿ */
		export class Line {			
			/**
			!#en
			create a new line
			!#zh
			???å»ºä??ä¸ªæ?°ç?? line???
			@param sx The x part of the starting point.
			@param sy The y part of the starting point.
			@param sz The z part of the starting point.
			@param ex The x part of the end point.
			@param ey The y part of the end point.
			@param ez The z part of the end point. 
			*/
			create(sx: number, sy: number, sz: number, ex: number, ey: number, ez: number): Line;			
			/**
			!#en
			Creates a new line initialized with values from an existing line
			!#zh
			??????ä¸?ä¸ªæ?°ç?? line???
			@param a The source of cloning. 
			*/
			clone(a: Line): Line;			
			/**
			!#en
			Copy the values from one line to another
			!#zh
			å¤???¶ä??ä¸ªçº¿?????¼å?°å?¦ä??ä¸ªã??
			@param out The object that accepts the action.
			@param a The source of the copy. 
			*/
			copy(out: Line, a: Line): Line;			
			/**
			!#en
			create a line from two points
			!#zh
			??¨ä¸¤ä¸ªç?¹å??å»ºä??ä¸ªçº¿???
			@param out The object that accepts the action.
			@param start The starting point.
			@param end At the end. 
			*/
			fromPoints(out: Line, start: Vec3, end: Vec3): Line;			
			/**
			!#en
			Set the components of a Vec3 to the given values
			!#zh
			å°?ç»?å®?çº¿ç??å±???§è®¾ç½®ä¸ºç»?å®???¼ã??
			@param out The object that accepts the action.
			@param sx The x part of the starting point.
			@param sy The y part of the starting point.
			@param sz The z part of the starting point.
			@param ex The x part of the end point.
			@param ey The y part of the end point.
			@param ez The z part of the end point. 
			*/
			set(out: Line, sx: number, sy: number, sz: number, ex: number, ey: number, ez: number): Line;			
			/**
			!#en
			Calculate the length of the line.
			!#zh
			è®¡ç??çº¿ç????¿åº¦???
			@param a The line to calculate. 
			*/
			len(a: Line): number;			
			/** !#en
			Start points.
			!#zh
			èµ·ç?¹ã?? */
			s: Vec3;			
			/** !#en
			End points.
			!#zh
			ç»???¹ã?? */
			e: Vec3;			
			/**
			!#en
			Calculate the length of the line.
			!#zh
			è®¡ç??çº¿ç????¿åº¦??? 
			*/
			length(): number;		
		}	
	}
		
	/****************************************************
	* geomUtils
	*****************************************************/
	
	export namespace geomUtils {		
		/** !#en obb
		!#zh
		??ºç?????ä½?  ??¹å???????´ç????? */
		export class Obb {			
			/** !#zh
			??·å??å½¢ç?¶ç??ç±»å????? */
			type: number;			
			/**
			!#en
			create a new obb
			!#zh
			???å»ºä??ä¸ªæ?°ç?? obb å®?ä¾????
			@param cx X coordinates of the shape relative to the origin.
			@param cy Y coordinates of the shape relative to the origin.
			@param cz Z coordinates of the shape relative to the origin.
			@param hw Obb is half the width.
			@param hh Obb is half the height.
			@param hl Obb is half the Length.
			@param ox_1 Direction matrix parameter.
			@param ox_2 Direction matrix parameter.
			@param ox_3 Direction matrix parameter.
			@param oy_1 Direction matrix parameter.
			@param oy_2 Direction matrix parameter.
			@param oy_3 Direction matrix parameter.
			@param oz_1 Direction matrix parameter.
			@param oz_2 Direction matrix parameter.
			@param oz_3 Direction matrix parameter. 
			*/
			create(cx: number, cy: number, cz: number, hw: number, hh: number, hl: number, ox_1: number, ox_2: number, ox_3: number, oy_1: number, oy_2: number, oy_3: number, oz_1: number, oz_2: number, oz_3: number): Obb;			
			/**
			!#en
			clone a new obb
			!#zh
			??????ä¸?ä¸? obb???
			@param a The target of cloning. 
			*/
			clone(a: Obb): Obb;			
			/**
			!#en
			copy the values from one obb to another
			!#zh
			å°?ä»?ä¸?ä¸? obb ?????¼å????¶å?°å?¦ä??ä¸? obb???
			@param out Obb that accepts the operation.
			@param a Obb being copied. 
			*/
			copy(out: Obb, a: Obb): Obb;			
			/**
			!#en
			create a new obb from two corner points
			!#zh
			??¨ä¸¤ä¸ªç?¹å??å»ºä??ä¸ªæ?°ç?? obb???
			@param out Obb that accepts the operation.
			@param minPos The smallest point of obb.
			@param maxPos Obb's maximum point. 
			*/
			fromPoints(out: Obb, minPos: Vec3, maxPos: Vec3): Obb;			
			/**
			!#en
			Set the components of a obb to the given values
			!#zh
			å°?ç»?å®? obb ???å±???§è®¾ç½®ä¸ºç»?å®??????¼ã??
			@param cx X coordinates of the shape relative to the origin.
			@param cy Y coordinates of the shape relative to the origin.
			@param cz Z coordinates of the shape relative to the origin.
			@param hw Obb is half the width.
			@param hh Obb is half the height.
			@param hl Obb is half the Length.
			@param ox_1 Direction matrix parameter.
			@param ox_2 Direction matrix parameter.
			@param ox_3 Direction matrix parameter.
			@param oy_1 Direction matrix parameter.
			@param oy_2 Direction matrix parameter.
			@param oy_3 Direction matrix parameter.
			@param oz_1 Direction matrix parameter.
			@param oz_2 Direction matrix parameter.
			@param oz_3 Direction matrix parameter. 
			*/
			set(cx: number, cy: number, cz: number, hw: number, hh: number, hl: number, ox_1: number, ox_2: number, ox_3: number, oy_1: number, oy_2: number, oy_3: number, oz_1: number, oz_2: number, oz_3: number): Obb;			
			/** !#en
			The center of the local coordinate.
			!#zh
			??¬å?°å????????ä¸­å????¹ã?? */
			center: Vec3;			
			/** !#en
			Half the length, width, and height.
			!#zh
			??¿å®½é«????ä¸??????? */
			halfExtents: Vec3;			
			/** !#en
			Direction matrix.
			!#zh
			??¹å????©é?µã?? */
			orientation: Mat3;			
			/**
			!#en
			Get the bounding points of this shape
			!#zh
			??·å?? obb ??????å°???¹å?????å¤§ç?¹ã??
			@param minPos minPos
			@param maxPos maxPos 
			*/
			getBoundary(minPos: Vec3, maxPos: Vec3): void;			
			/**
			!#en Transform this shape
			!#zh
			å°? out ??¹æ?®è??ä¸? obb ?????°æ?®è??è¡??????¢ã??
			@param m The transformation matrix.
			@param pos The position part of the transformation.
			@param rot The rotating part of the transformation.
			@param scale The scaling part of the transformation.
			@param out Target of transformation. 
			*/
			transform(m: Mat4, pos: Vec3, rot: Quat, scale: Vec3, out: Obb): void;			
			/**
			!#en
			Transform out based on this obb data.
			!#zh
			å°? out ??¹æ?®è??ä¸? obb ?????°æ?®è??è¡??????¢ã??
			@param m The transformation matrix.
			@param rot The rotating part of the transformation.
			@param out Target of transformation. 
			*/
			translateAndRotate(m: Mat4, rot: Quat, out: Obb): void;			
			/**
			!#en
			Scale out based on this obb data.
			!#zh
			å°? out ??¹æ?®è??ä¸? obb ?????°æ?®è??è¡?ç¼©æ?¾ã??
			@param scale Scale value.
			@param out Scaled target. 
			*/
			setScale(scale: Vec3, out: Obb): void;		
		}	
	}
		
	/****************************************************
	* geomUtils
	*****************************************************/
	
	export namespace geomUtils {		
		/** !#en
		plane???
		!#zh
		å¹³é?¢ã?? */
		export class Plane {			
			/**
			!#en
			create a new plane
			!#zh
			???å»ºä??ä¸ªæ?°ç?? plane???
			@param nx The x part of the normal component.
			@param ny The y part of the normal component.
			@param nz The z part of the normal component.
			@param d Distance from the origin. 
			*/
			create(nx: number, ny: number, nz: number, d: number): Plane;			
			/**
			!#en
			clone a new plane
			!#zh
			??????ä¸?ä¸ªæ?°ç?? plane???
			@param p The source of cloning. 
			*/
			clone(p: Plane): Plane;			
			/**
			!#en
			copy the values from one plane to another
			!#zh
			å¤???¶ä??ä¸ªå¹³??¢ç????¼å?°å?¦ä??ä¸ªã??
			@param out The object that accepts the action.
			@param p The source of the copy. 
			*/
			copy(out: Plane, p: Plane): Plane;			
			/**
			!#en
			create a plane from three points
			!#zh
			??¨ä??ä¸ªç?¹å??å»ºä??ä¸ªå¹³??¢ã??
			@param out The object that accepts the action.
			@param a Point a???
			@param b Point b???
			@param c Point c??? 
			*/
			fromPoints(out: Plane, a: Vec3, b: Vec3, c: Vec3): Plane;			
			/**
			!#en
			Set the components of a plane to the given values
			!#zh
			å°?ç»?å®?å¹³é?¢ç??å±???§è®¾ç½®ä¸ºç»?å®???¼ã??
			@param out The object that accepts the action.
			@param nx The x part of the normal component.
			@param ny The y part of the normal component.
			@param nz The z part of the normal component.
			@param d Distance from the origin. 
			*/
			set(out: Plane, nx: number, ny: number, nz: number, d: number): Plane;			
			/**
			!#en
			create plane from normal and point
			!#zh
			??¨ä????¡æ??çº¿å??ä¸?ä¸ªç?¹å??å»ºå¹³??¢ã??
			@param out The object that accepts the action.
			@param normal The normal of a plane.
			@param point A point on the plane. 
			*/
			fromNormalAndPoint(out: Plane, normal: Vec3, point: Vec3): Plane;			
			/**
			!#en
			normalize a plane
			!#zh
			å½?ä¸????ä¸?ä¸ªå¹³??¢ã??
			@param out The object that accepts the action.
			@param a Source data for operations. 
			*/
			normalize(out: Plane, a: Plane): Plane;			
			/** !#en
			A normal vector.
			!#zh
			æ³?çº¿å???????? */
			n: Vec3;			
			/** !#en
			The distance from the origin to the plane.
			!#zh
			?????¹å?°å¹³??¢ç??è·?ç¦»ã?? */
			d: number;			
			/**
			!#en
			Transform a plane.
			!#zh
			?????¢ä??ä¸ªå¹³??¢ã??
			@param mat mat 
			*/
			transform(mat: Mat4): void;		
		}	
	}
		
	/****************************************************
	* geomUtils
	*****************************************************/
	
	export namespace geomUtils {		
		/** !#en
		ray
		!#zh
		å°?çº¿ã?? */
		export class Ray {			
			/**
			!#en
			create a new ray
			!#zh
			???å»ºä????¡å??çº¿ã??
			@param ox The x part of the starting point.
			@param oy The y part of the starting point.
			@param oz The z part of the starting point.
			@param dx X in the direction.
			@param dy Y in the direction.
			@param dz Z in the direction. 
			*/
			create(ox: number, oy: number, oz: number, dx: number, dy: number, dz: number): Ray;			
			/**
			!#en
			Creates a new ray initialized with values from an existing ray
			!#zh
			ä»?ä¸???¡å??çº¿å???????ºä????¡æ?°ç??å°?çº¿ã??
			@param a Clone target 
			*/
			clone(a: Ray): Ray;			
			/**
			!#en
			Copy the values from one ray to another
			!#zh
			å°?ä»?ä¸?ä¸? ray ?????¼å????¶å?°å?¦ä??ä¸? ray???
			@param out Accept the ray of the operation.
			@param a Copied ray. 
			*/
			copy(out: Ray, a: Ray): Ray;			
			/**
			!#en
			create a ray from two points
			!#zh
			??¨ä¸¤ä¸ªç?¹å??å»ºä????¡å??çº¿ã??
			@param out Receive the operating ray.
			@param origin Origin of ray
			@param target A point on a ray. 
			*/
			fromPoints(out: Ray, origin: Vec3, target: Vec3): Ray;			
			/**
			!#en
			Set the components of a ray to the given values
			!#zh
			å°?ç»?å®?å°?çº¿ç??å±???§è®¾ç½®ä¸ºç»?å®??????¼ã??
			@param out Receive the operating ray.
			@param ox The x part of the starting point.
			@param oy The y part of the starting point.
			@param oz The z part of the starting point.
			@param dx X in the direction.
			@param dy Y in the direction.
			@param dz Z in the direction. 
			*/
			set(out: Ray, ox: number, oy: number, oz: number, dx: number, dy: number, dz: number): Ray;			
			/** !#en
			Start point.
			!#zh
			èµ·ç?¹ã?? */
			o: Vec3;			
			/** !#e
			Direction
			!#zh
			??¹å????? */
			d: Vec3;			
			/**
			!#en Compute hit.
			@param out out
			@param distance distance 
			*/
			computeHit(out: IVec3Like, distance: number): void;		
		}	
	}
		
	/****************************************************
	* geomUtils
	*****************************************************/
	
	export namespace geomUtils {		
		/** !#en
		Sphere.
		!#zh
		è½´å¯¹é½??????? */
		export class Sphere {			
			/**
			!#en
			create a new sphere
			!#zh
			???å»ºä??ä¸ªæ?°ç?? sphere å®?ä¾????
			@param cx X coordinates of the shape relative to the origin.
			@param cy Y coordinates of the shape relative to the origin.
			@param cz Z coordinates of the shape relative to the origin.
			@param r Radius of sphere 
			*/
			create(cx: any, cy: any, cz: any, r: any): Sphere;			
			/**
			!#en
			clone a new sphere
			!#zh
			??????ä¸?ä¸ªæ?°ç?? sphere å®?ä¾????
			@param p The target of cloning. 
			*/
			clone(p: Sphere): Sphere;			
			/**
			!#en
			copy the values from one sphere to another
			!#zh
			å°?ä»?ä¸?ä¸? sphere ?????¼å????¶å?°å?¦ä??ä¸? sphere???
			@param out Accept the sphere of operations.
			@param a Sphere being copied. 
			*/
			copy(out: Sphere, a: Sphere): Sphere;			
			/**
			!#en
			create a new bounding sphere from two corner points
			!#zh
			ä»?ä¸¤ä¸ª??¹å??å»ºä??ä¸ªæ?°ç?? sphere???
			@param out Accept the sphere of operations.
			@param minPos The smallest point of sphere.
			@param maxPos The maximum point of sphere. 
			*/
			fromPoints(out: any, minPos: any, maxPos: any): Sphere;			
			/**
			!#en Set the components of a sphere to the given values
			!#zh å°????ä½????å±???§è®¾ç½®ä¸ºç»?å®??????¼ã??
			@param out Accept the sphere of operations.
			@param cx X coordinates of the shape relative to the origin.
			@param cy Y coordinates of the shape relative to the origin.
			@param cz Z coordinates of the shape relative to the origin.
			@param r Radius. 
			*/
			set(out: Sphere, cx: any, cy: any, cz: any, r: number): Sphere;			
			/** !#en
			The center of the local coordinate.
			!#zh
			??¬å?°å????????ä¸­å????¹ã?? */
			center: Vec3;			
			/** !#zh
			???å¾???? */
			radius: number;			
			/**
			!#en
			Clone.
			!#zh
			??·å??????????? 
			*/
			clone(): void;			
			/**
			!#en
			Copy sphere
			!#zh
			??·è??å¯¹è±¡???
			@param a Copy target. 
			*/
			copy(a: any): void;			
			/**
			!#en
			Get the bounding points of this shape
			!#zh
			??·å??æ­¤å½¢??¶ç??è¾¹ç????¹ã??
			@param minPos minPos
			@param maxPos maxPos 
			*/
			getBoundary(minPos: Vec3, maxPos: Vec3): void;			
			/**
			!#en
			Transform this shape
			!#zh
			å°? out ??¹æ?®è??ä¸? sphere ?????°æ?®è??è¡??????¢ã??
			@param m The transformation matrix.
			@param pos The position part of the transformation.
			@param rot The rotating part of the transformation.
			@param scale The scaling part of the transformation.
			@param out The target of the transformation. 
			*/
			transform(m: any, pos: any, rot: any, scale: any, out: any): void;			
			/**
			!#en
			Scale out based on the sphere data.
			!#zh
			å°? out ??¹æ?®è??ä¸? sphere ?????°æ?®è??è¡?ç¼©æ?¾ã??
			@param scale Scale value
			@param out Scale target 
			*/
			setScale(scale: any, out: any): void;		
		}	
	}
		
	/****************************************************
	* geomUtils
	*****************************************************/
	
	export namespace geomUtils {		
		/** Triangle */
		export class Triangle {			
			/**
			create a new triangle
			@param ax ax
			@param ay ay
			@param az az
			@param bx bx
			@param by by
			@param bz bz
			@param cx cx
			@param cy cy
			@param cz cz 
			*/
			create(ax: number, ay: number, az: number, bx: number, by: number, bz: number, cx: number, cy: number, cz: number): Triangle;			
			/**
			clone a new triangle
			@param t the source plane 
			*/
			clone(t: Triangle): Triangle;			
			/**
			copy the values from one triangle to another
			@param out the receiving triangle
			@param t the source triangle 
			*/
			copy(out: Triangle, t: Triangle): Triangle;			
			/**
			Create a triangle from three points
			@param out the receiving triangle
			@param a a
			@param b b
			@param c c 
			*/
			fromPoints(out: Triangle, a: Vec3, b: Vec3, c: Vec3): Triangle;			
			/**
			Set the components of a triangle to the given values
			@param out the receiving plane
			@param ax X component of a
			@param ay Y component of a
			@param az Z component of a
			@param bx X component of b
			@param by Y component of b
			@param bz Z component of b
			@param cx X component of c
			@param cy Y component of c
			@param cz Z component of c 
			*/
			set(out: Triangle, ax: number, ay: number, az: number, bx: number, by: number, bz: number, cx: number, cy: number, cz: number): Plane;			
			a: Vec3;			
			b: Vec3;			
			c: Vec3;		
		}	
	}
		
	/****************************************************
	* MeshRenderer
	*****************************************************/
	
	export namespace MeshRenderer {		
		/** !#en Shadow projection mode
		
		!#ch ??´å½±???å°???¹å?? */
		export enum ShadowCastingMode {			
			OFF = 0,
			ON = 0,		
		}	
	}
		
	/****************************************************
	* Graphics
	*****************************************************/
	
	export namespace Graphics {		
		/** !#en Enum for LineCap.
		!#zh çº¿æ®µ??«ç«¯å±???? */
		export enum LineCap {			
			BUTT = 0,
			ROUND = 0,
			SQUARE = 0,		
		}	
	}
		
	/****************************************************
	* Graphics
	*****************************************************/
	
	export namespace Graphics {		
		/** !#en Enum for LineJoin.
		!#zh çº¿æ®µ???è§?å±???? */
		export enum LineJoin {			
			BEVEL = 0,
			ROUND = 0,
			MITER = 0,		
		}	
	}
		
	/****************************************************
	* macro
	*****************************************************/
	
	export namespace macro {		
		/** !#en Key map for keyboard event
		!#zh ??®ç??äº?ä»¶ç???????®å?? */
		export enum KEY {			
			none = 0,
			back = 0,
			menu = 0,
			backspace = 0,
			tab = 0,
			enter = 0,
			shift = 0,
			ctrl = 0,
			alt = 0,
			pause = 0,
			capslock = 0,
			escape = 0,
			space = 0,
			pageup = 0,
			pagedown = 0,
			end = 0,
			home = 0,
			left = 0,
			up = 0,
			right = 0,
			down = 0,
			select = 0,
			insert = 0,
			Delete = 0,
			a = 0,
			b = 0,
			c = 0,
			d = 0,
			e = 0,
			f = 0,
			g = 0,
			h = 0,
			i = 0,
			j = 0,
			k = 0,
			l = 0,
			m = 0,
			n = 0,
			o = 0,
			p = 0,
			q = 0,
			r = 0,
			s = 0,
			t = 0,
			u = 0,
			v = 0,
			w = 0,
			x = 0,
			y = 0,
			z = 0,
			num0 = 0,
			num1 = 0,
			num2 = 0,
			num3 = 0,
			num4 = 0,
			num5 = 0,
			num6 = 0,
			num7 = 0,
			num8 = 0,
			num9 = 0,
			'*' = 0,
			'+' = 0,
			'-' = 0,
			numdel = 0,
			'/' = 0,
			f1 = 0,
			f2 = 0,
			f3 = 0,
			f4 = 0,
			f5 = 0,
			f6 = 0,
			f7 = 0,
			f8 = 0,
			f9 = 0,
			f10 = 0,
			f11 = 0,
			f12 = 0,
			numlock = 0,
			scrolllock = 0,
			';' = 0,
			semicolon = 0,
			equal = 0,
			'=' = 0,
			',' = 0,
			comma = 0,
			dash = 0,
			'.' = 0,
			period = 0,
			forwardslash = 0,
			grave = 0,
			'[' = 0,
			openbracket = 0,
			backslash = 0,
			']' = 0,
			closebracket = 0,
			quote = 0,
			dpadLeft = 0,
			dpadRight = 0,
			dpadUp = 0,
			dpadDown = 0,
			dpadCenter = 0,		
		}	
	}
		
	/****************************************************
	* macro
	*****************************************************/
	
	export namespace macro {		
		/** Image formats */
		export enum ImageFormat {			
			JPG = 0,
			PNG = 0,
			TIFF = 0,
			WEBP = 0,
			PVR = 0,
			ETC = 0,
			S3TC = 0,
			ATITC = 0,
			TGA = 0,
			RAWDATA = 0,
			UNKNOWN = 0,		
		}	
	}
		
	/****************************************************
	* macro
	*****************************************************/
	
	export namespace macro {		
		/** !#en
		Enum for blend factor
		Refer to: http://www.andersriggelsen.dk/glblendfunc.php
		!#zh
		æ··å?????å­?
		??¯å?????: http://www.andersriggelsen.dk/glblendfunc.php */
		export enum BlendFactor {			
			ONE = 0,
			ZERO = 0,
			SRC_ALPHA = 0,
			SRC_COLOR = 0,
			DST_ALPHA = 0,
			DST_COLOR = 0,
			ONE_MINUS_SRC_ALPHA = 0,
			ONE_MINUS_SRC_COLOR = 0,
			ONE_MINUS_DST_ALPHA = 0,
			ONE_MINUS_DST_COLOR = 0,		
		}	
	}
		
	/****************************************************
	* macro
	*****************************************************/
	
	export namespace macro {		
		/** undefined */
		export enum TextAlignment {			
			LEFT = 0,
			CENTER = 0,
			RIGHT = 0,		
		}	
	}
		
	/****************************************************
	* sys
	*****************************************************/
	
	export namespace sys {		
		/** !#en
		Network type enumeration
		!#zh
		ç½?ç»?ç±»å?????ä¸? */
		export enum NetworkType {			
			NONE = 0,
			LAN = 0,
			WWAN = 0,		
		}	
	}
		
	/****************************************************
	* PhysicsManager
	*****************************************************/
	
	export namespace PhysicsManager {		
		/** !#en
		The draw bits for drawing physics debug information.<br>
		example:<br>
		```js
		cc.director.getPhysicsManager().debugDrawFlags =
		 // cc.PhysicsManager.DrawBits.e_aabbBit |
		 // cc.PhysicsManager.DrawBits.e_pairBit |
		 // cc.PhysicsManager.DrawBits.e_centerOfMassBit |
		 cc.PhysicsManager.DrawBits.e_jointBit |
		 cc.PhysicsManager.DrawBits.e_shapeBit;
		```
		!#zh
		???å®???©ç??ç³»ç?????è¦?ç»???¶å?ªä??è°?è¯?ä¿¡æ?¯ã??<br>
		example:<br>
		```js
		cc.director.getPhysicsManager().debugDrawFlags =
		 // cc.PhysicsManager.DrawBits.e_aabbBit |
		 // cc.PhysicsManager.DrawBits.e_pairBit |
		 // cc.PhysicsManager.DrawBits.e_centerOfMassBit |
		 cc.PhysicsManager.DrawBits.e_jointBit |
		 cc.PhysicsManager.DrawBits.e_shapeBit;
		``` */
		export enum DrawBits {			
			e_aabbBit = 0,
			e_jointBit = 0,
			e_shapeBit = 0,		
		}	
	}
		
	/****************************************************
	* AnimationCurve
	*****************************************************/
	
	export namespace AnimationCurve {		
		/** !#en The wrap mode
		!#zh å¾ªç?¯æ¨¡å¼? */
		export enum WrapMode {			
			Default = 0,
			Once = 0,
			Loop = 0,
			PingPong = 0,
			ClampForever = 0,
			time = 0,
			value = 0,
			inTangent = 0,
			outTangent = 0,		
		}	
	}
		
	/****************************************************
	* ParticleSystem3DAssembler
	*****************************************************/
	
	export namespace ParticleSystem3DAssembler {		
		/** undefined */
		export enum Space {					
		}	
	}
		
	/****************************************************
	* ParticleSystem3DAssembler
	*****************************************************/
	
	export namespace ParticleSystem3DAssembler {		
		/** ç²?å­??????????æ¨¡å?? */
		export enum RenderMode {					
		}	
	}
		
	/****************************************************
	* shapeModule
	*****************************************************/
	
	export namespace shapeModule {		
		/** ç²?å­????å°???¨ç±»??? */
		export enum ShapeType {			
			Box = 0,
			Circle = 0,
			Cone = 0,
			Sphere = 0,
			Hemisphere = 0,		
		}	
	}
		
	/****************************************************
	* shapeModule
	*****************************************************/
	
	export namespace shapeModule {		
		/** ç²?å­?ä»????å°???¨ç????ªä¸ª??¨ä?????å°? */
		export enum EmitLocation {			
			Base = 0,
			Edge = 0,
			Shell = 0,
			Volume = 0,		
		}	
	}
		
	/****************************************************
	* shapeModule
	*****************************************************/
	
	export namespace shapeModule {		
		/** ç²?å­???¨æ??å½¢å?ºå????????å°???¹å?? */
		export enum ArcMode {			
			Random = 0,
			Loop = 0,
			PingPong = 0,		
		}	
	}
		
	/****************************************************
	* trailModule
	*****************************************************/
	
	export namespace trailModule {		
		/** ?????©å??ä½?ä¸ºç??å­?ç³»ç????????è½¨è¿¹ */
		export enum TrailMode {					
		}	
	}
		
	/****************************************************
	* trailModule
	*****************************************************/
	
	export namespace trailModule {		
		/** çº¹ç??å¡«å??æ¨¡å?? */
		export enum TextureMode {					
		}	
	}
		
	/****************************************************
	* primitive
	*****************************************************/
	
	export namespace primitive {		
		/** undefined */
		export enum PolyhedronType {			
			Tetrahedron = 0,
			Octahedron = 0,
			Dodecahedron = 0,
			Icosahedron = 0,
			Rhombicuboctahedron = 0,
			TriangularPrism = 0,
			PentagonalPrism = 0,
			HexagonalPrism = 0,
			SquarePyramid = 0,
			PentagonalPyramid = 0,
			TriangularDipyramid = 0,
			PentagonalDipyramid = 0,
			ElongatedSquareDipyramid = 0,
			ElongatedPentagonalDipyramid = 0,
			ElongatedPentagonalCupola = 0,		
		}	
	}
		
	/****************************************************
	* primitive
	*****************************************************/
	
	export namespace primitive {		
		/** undefined */
		export class VertexData {			
			positions: number[];			
			normals: number[];			
			uvs: number[];			
			indices: number[];			
			minPos: Vec3;			
			maxPos: Vec3;			
			boundingRadius: number;		
		}	
	}
		
	/****************************************************
	* Material
	*****************************************************/
	
	export namespace Material {		
		/** !#en Material builtin name
		!#zh ???ç½®æ??è´¨å??å­? */
		export enum BUILTIN_NAME {			
			SPRITE = 0,
			GRAY_SPRITE = 0,
			UNLIT = 0,		
		}	
	}
		
	/****************************************************
	* EditBox
	*****************************************************/
	
	export namespace EditBox {		
		/** !#en Enum for keyboard return types
		!#zh ??®ç?????è¿??????®ç±»??? */
		export enum KeyboardReturnType {			
			DEFAULT = 0,
			DONE = 0,
			SEND = 0,
			SEARCH = 0,
			GO = 0,
			NEXT = 0,		
		}	
	}
		
	/****************************************************
	* EditBox
	*****************************************************/
	
	export namespace EditBox {		
		/** !#en The EditBox's InputMode defines the type of text that the user is allowed to enter.
		!#zh è¾???¥æ¨¡å¼? */
		export enum InputMode {			
			ANY = 0,
			EMAIL_ADDR = 0,
			NUMERIC = 0,
			PHONE_NUMBER = 0,
			URL = 0,
			DECIMAL = 0,
			SINGLE_LINE = 0,		
		}	
	}
		
	/****************************************************
	* EditBox
	*****************************************************/
	
	export namespace EditBox {		
		/** !#en Enum for the EditBox's input flags
		!#zh å®?ä¹?äº?ä¸?äº???¨ä??è®¾ç½®?????¬æ?¾ç¤º????????¬æ?¼å???????????å¿?ä½???? */
		export enum InputFlag {			
			PASSWORD = 0,
			SENSITIVE = 0,
			INITIAL_CAPS_WORD = 0,
			INITIAL_CAPS_SENTENCE = 0,
			INITIAL_CAPS_ALL_CHARACTERS = 0,
			DEFAULT = 0,		
		}	
	}
		
	/****************************************************
	* textureAnimationModule
	*****************************************************/
	
	export namespace textureAnimationModule {		
		/** ç²?å­?è´´å?¾å?¨ç?»ç±»??? */
		export enum Mode {					
		}	
	}
		
	/****************************************************
	* textureAnimationModule
	*****************************************************/
	
	export namespace textureAnimationModule {		
		/** è´´å?¾å?¨ç?»ç????­æ?¾æ?¹å?? */
		export enum Animation {					
		}	
	}
	
}

/** !#en
The global main namespace of Spine, all classes, functions,
properties and constants of Spine are defined in this namespace
!#zh
Spine ?????¨å???????½å??ç©ºé?´ï??
ä¸? Spine ??¸å?³ç???????????ç±»ï????½æ?°ï??å±???§ï??å¸¸é????½å?¨è??ä¸ªå?½å??ç©ºé?´ä¸­å®?ä¹???? */
declare namespace sp {	
	/** !#en
	The skeleton of Spine <br/>
	<br/>
	(Skeleton has a reference to a SkeletonData and stores the state for skeleton instance,
	which consists of the current pose's bone SRT, slot colors, and which slot attachments are visible. <br/>
	Multiple skeletons can use the same SkeletonData which includes all animations, skins, and attachments.) <br/>
	!#zh
	Spine éª¨éª¼??¨ç?? <br/>
	<br/>
	(Skeleton ??·æ??å¯¹éª¨éª¼æ?°æ?®ç??å¼???¨å¹¶ä¸?å­???¨ä??éª¨éª¼å®?ä¾??????¶æ??ï¼?
	å®???±å????????éª¨éª¼??¨ä??ï¼?slot é¢???²ï???????¯è????? slot attachments ç»???????<br/>
	å¤?ä¸? Skeleton ??¯ä»¥ä½¿ç?¨ç?¸å?????éª¨éª¼??°æ?®ï????¶ä¸­?????¬æ??????????¨ç?»ï????®è?¤å?? attachments??? */
	export class Skeleton extends cc.RenderComponent {		
		/** !#en The skeletal animation is paused?
		!#zh è¯¥éª¨éª¼å?¨ç?»æ?¯å?¦æ???????? */
		paused: boolean;		
		/** !#en
		The skeleton data contains the skeleton information (bind pose bones, slots, draw order,
		attachments, skins, etc) and animations but does not hold any state.<br/>
		Multiple skeletons can share the same skeleton data.
		!#zh
		éª¨éª¼??°æ?®å????«ä??éª¨éª¼ä¿¡æ?¯ï??ç»?å®?éª¨éª¼??¨ä??ï¼?slotsï¼?æ¸²æ??é¡ºå??ï¼?
		attachmentsï¼???®è?¤ç??ç­?ï¼??????¨ç?»ä??ä¸???????ä»»ä????¶æ?????<br/>
		å¤?ä¸? Skeleton ??¯ä»¥??±ç?¨ç?¸å?????éª¨éª¼??°æ?®ã?? */
		skeletonData: SkeletonData;		
		/** !#en The name of default skin.
		!#zh é»?è®¤ç????®è?¤å??ç§°ã?? */
		defaultSkin: string;		
		/** !#en The name of default animation.
		!#zh é»?è®¤ç????¨ç?»å??ç§°ã?? */
		defaultAnimation: string;		
		/** !#en The name of current playing animation.
		!#zh å½??????­æ?¾ç????¨ç?»å??ç§°ã?? */
		animation: string;		
		_defaultSkinIndex: number;		
		/** !#en TODO
		!#zh ??¯å?¦å¾ª??¯æ?­æ?¾å?????éª¨éª¼??¨ç?»ã?? */
		loop: boolean;		
		/** !#en Indicates whether to enable premultiplied alpha.
		You should disable this option when image's transparent area appears to have opaque pixels,
		or enable this option when image's half transparent area appears to be darken.
		!#zh ??¯å?¦å?¯ç?¨è´´??¾é??ä¹????
		å½???¾ç?????????????ºå????ºç?°è?²å????¶é??è¦???³é?­è¯¥???é¡¹ï??å½???¾ç????????????????ºå??é¢???²å??é»???¶é??è¦???¯ç?¨è¯¥???é¡¹ã?? */
		premultipliedAlpha: boolean;		
		/** !#en The time scale of this skeleton.
		!#zh å½????éª¨éª¼ä¸­æ???????¨ç?»ç????¶é?´ç¼©??¾ç????? */
		timeScale: number;		
		/** !#en Indicates whether open debug slots.
		!#zh ??¯å?¦æ?¾ç¤º slot ??? debug ä¿¡æ?¯ã?? */
		debugSlots: boolean;		
		/** !#en Indicates whether open debug bones.
		!#zh ??¯å?¦æ?¾ç¤º bone ??? debug ä¿¡æ?¯ã?? */
		debugBones: boolean;		
		/** !#en Indicates whether open debug mesh.
		!#zh ??¯å?¦æ?¾ç¤º mesh ??? debug ä¿¡æ?¯ã?? */
		debugMesh: boolean;		
		/** !#en Enabled two color tint.
		!#zh ??¯å?¦å?¯ç?¨æ????²æ???????? */
		useTint: boolean;		
		/** !#en Enabled batch model, if skeleton is complex, do not enable batch, or will lower performance.
		!#zh å¼???¯å????¹ï??å¦????æ¸²æ??å¤§é????¸å??çº¹ç??ï¼?ä¸?ç»????ç®???????éª¨éª¼??¨ç?»ï??å¼???¯å????¹å?¯ä»¥???ä½?drawcallï¼???¦å??è¯·ä??è¦?å¼???¯ï??cpuæ¶????ä¼?ä¸??????? */
		enableBatch: boolean;		
		/**
		!#en
		Sets runtime skeleton data to sp.Skeleton.<br>
		This method is different from the `skeletonData` property. This method is passed in the raw data provided by the Spine runtime, and the skeletonData type is the asset type provided by Creator.
		!#zh
		è®¾ç½®åº?å±?è¿?è¡???¶ç?¨å?°ç?? SkeletonData???<br>
		è¿?ä¸ªæ?¥å???????«ä?? `skeletonData` å±???§ï??è¿?ä¸ªæ?¥å??ä¼???¥ç????? Spine runtime ???ä¾???????å§???°æ?®ï????? skeletonData ???ç±»å????? Creator ???ä¾????èµ?æº?ç±»å?????
		@param skeletonData skeletonData 
		*/
		setSkeletonData(skeletonData: sp.spine.SkeletonData): void;		
		/**
		!#en Sets slots visible range.
		!#zh è®¾ç½®éª¨éª¼???æ§½å?¯è???????´ã??
		@param startSlotIndex startSlotIndex
		@param endSlotIndex endSlotIndex 
		*/
		setSlotsRange(startSlotIndex: number, endSlotIndex: number): void;		
		/**
		!#en Sets animation state data.<br>
		The parameter type is {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.AnimationStateData.
		!#zh è®¾ç½®??¨ç?»ç?¶æ????°æ?®ã??<br>
		?????°æ?? {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.AnimationStateData???
		@param stateData stateData 
		*/
		setAnimationStateData(stateData: sp.spine.AnimationStateData): void;		
		/**
		!#en
		It's best to set cache mode before set property 'dragonAsset', or will waste some cpu time.
		If set the mode in editor, then no need to worry about order problem.
		!#zh
		??¥æ?³å????¢æ¸²???æ¨¡å??ï¼????å¥½å?¨è®¾ç½?'dragonAsset'ä¹????ï¼????è®¾ç½®å¥½æ¸²???æ¨¡å??ï¼???¦å?????è¿?è¡???¶å????????
		??¥å?¨ç??è¾?ä¸­è®¾ç½®æ¸²???æ¨¡å??ï¼?????????????å¿?è®¾ç½®æ¬¡å???????®é?????
		@param cacheMode cacheMode
		
		@example 
		```js
		skeleton.setAnimationCacheMode(sp.Skeleton.AnimationCacheMode.SHARED_CACHE);
		``` 
		*/
		setAnimationCacheMode(cacheMode: Skeleton.AnimationCacheMode): void;		
		/**
		!#en Whether in cached mode.
		!#zh å½??????¯å?¦å??äº?ç¼?å­?æ¨¡å????? 
		*/
		isAnimationCached(): boolean;		
		/**
		!#en Sets vertex effect delegate.
		!#zh è®¾ç½®é¡¶ç?¹å?¨ç?»ä»£???
		@param effectDelegate effectDelegate 
		*/
		setVertexEffectDelegate(effectDelegate: VertexEffectDelegate): void;		
		/**
		!#en Computes the world SRT from the local SRT for each bone.
		!#zh ?????°æ?´æ?°æ?????éª¨éª¼???ä¸???? Transformï¼?
		å½???·å?? bone ?????°å?¼æ?ªæ?´æ?°æ?¶ï????³å?¯ä½¿??¨è¯¥??½æ?°è??è¡???´æ?°æ?°å?¼ã??
		
		@example 
		```js
		var bone = spine.findBone('head');
		cc.log(bone.worldX); // return 0;
		spine.updateWorldTransform();
		bone = spine.findBone('head');
		cc.log(bone.worldX); // return -23.12;
		``` 
		*/
		updateWorldTransform(): void;		
		/**
		!#en Sets the bones and slots to the setup pose.
		!#zh è¿??????°èµ·å§???¨ä?? 
		*/
		setToSetupPose(): void;		
		/**
		!#en
		Sets the bones to the setup pose,
		using the values from the `BoneData` list in the `SkeletonData`.
		!#zh
		è®¾ç½® bone ??°èµ·å§???¨ä??
		ä½¿ç?? SkeletonData ä¸­ç?? BoneData ???è¡¨ä¸­?????¼ã?? 
		*/
		setBonesToSetupPose(): void;		
		/**
		!#en
		Sets the slots to the setup pose,
		using the values from the `SlotData` list in the `SkeletonData`.
		!#zh
		è®¾ç½® slot ??°èµ·å§???¨ä?????
		ä½¿ç?? SkeletonData ä¸­ç?? SlotData ???è¡¨ä¸­?????¼ã?? 
		*/
		setSlotsToSetupPose(): void;		
		/**
		!#en
		Updating an animation cache to calculate all frame data in the animation is a cost in
		performance due to calculating all data in a single frame.
		To update the cache, use the invalidAnimationCache method with high performance.
		!#zh
		??´æ?°æ??ä¸ªå?¨ç?»ç??å­?, é¢?è®¡ç????¨ç?»ä¸­??????å¸§æ?°æ?®ï????±ä????¨å??å¸§è®¡ç®?????????°æ?®ï?????ä»¥è??æ¶??????§è?½ã??
		??¥æ?³æ?´æ?°ç??å­?ï¼???¯ä½¿??? invalidAnimationCache ??¹æ??ï¼???·æ??è¾?é«???§è?½ã??
		@param animName animName 
		*/
		updateAnimationCache(animName: string): void;		
		/**
		!#en
		Invalidates the animation cache, which is then recomputed on each frame..
		!#zh
		ä½¿å?¨ç?»ç??å­?å¤±æ??ï¼?ä¹????ä¼???¨æ??å¸§é????°è®¡ç®???? 
		*/
		invalidAnimationCache(): void;		
		/**
		!#en
		Finds a bone by name.
		This does a string comparison for every bone.<br>
		Returns a {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.Bone object.
		!#zh
		???è¿????ç§°æ?¥æ?? bone???
		è¿????å¯¹æ??ä¸? bone ??????ç§°è??è¡?äº?å¯¹æ?????<br>
		è¿????ä¸?ä¸? {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.Bone å¯¹è±¡???
		@param boneName boneName 
		*/
		findBone(boneName: string): sp.spine.Bone;		
		/**
		!#en
		Finds a slot by name. This does a string comparison for every slot.<br>
		Returns a {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.Slot object.
		!#zh
		???è¿????ç§°æ?¥æ?? slot???è¿????å¯¹æ??ä¸? slot ??????ç§°è??è¡?äº?æ¯?è¾????<br>
		è¿????ä¸?ä¸? {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.Slot å¯¹è±¡???
		@param slotName slotName 
		*/
		findSlot(slotName: string): sp.spine.Slot;		
		/**
		!#en
		Finds a skin by name and makes it the active skin.
		This does a string comparison for every skin.<br>
		Note that setting the skin does not change which attachments are visible.<br>
		Returns a {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.Skin object.
		!#zh
		??????ç§°æ?¥æ?¾ç?®è?¤ï??æ¿?æ´»è¯¥??®è?¤ã??è¿????å¯¹æ??ä¸ªç?®è?¤ç?????ç§°è??è¡?äº?æ¯?è¾????<br>
		æ³¨æ??ï¼?è®¾ç½®??®è?¤ä??ä¼???¹å?? attachment ?????¯è????§ã??<br>
		è¿????ä¸?ä¸? {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.Skin å¯¹è±¡???
		@param skinName skinName 
		*/
		setSkin(skinName: string): void;		
		/**
		!#en
		Returns the attachment for the slot and attachment name.
		The skeleton looks first in its skin, then in the skeleton data???s default skin.<br>
		Returns a {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.Attachment object.
		!#zh
		???è¿? slot ??? attachment ??????ç§°è?·å?? attachment???Skeleton ä¼??????¥æ?¾å???????®è?¤ï????¶å???????? Skeleton Data ä¸­é??è®¤ç????®è?¤ã??<br>
		è¿????ä¸?ä¸? {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.Attachment å¯¹è±¡???
		@param slotName slotName
		@param attachmentName attachmentName 
		*/
		getAttachment(slotName: string, attachmentName: string): sp.spine.Attachment;		
		/**
		!#en
		Sets the attachment for the slot and attachment name.
		The skeleton looks first in its skin, then in the skeleton data???s default skin.
		!#zh
		???è¿? slot ??? attachment ??????å­???¥è®¾ç½? attachment???
		Skeleton ä¼??????¥æ?¾å???????®è?¤ï????¶å???????? Skeleton Data ä¸­é??è®¤ç????®è?¤ã??
		@param slotName slotName
		@param attachmentName attachmentName 
		*/
		setAttachment(slotName: string, attachmentName: string): void;		
		/**
		Return the renderer of attachment.
		@param regionAttachment regionAttachment 
		*/
		getTextureAtlas(regionAttachment: sp.spine.RegionAttachment|spine.BoundingBoxAttachment): sp.spine.TextureAtlasRegion;		
		/**
		!#en
		Mix applies all keyframe values,
		interpolated for the specified time and mixed with the current values.
		!#zh ä¸ºæ???????³é?®å¸§è®¾å??æ··å?????æ··å????¶é?´ï??ä»?å½??????¼å??å§?å·®å?¼ï?????
		@param fromAnimation fromAnimation
		@param toAnimation toAnimation
		@param duration duration 
		*/
		setMix(fromAnimation: string, toAnimation: string, duration: number): void;		
		/**
		!#en Set the current animation. Any queued animations are cleared.<br>
		Returns a {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.TrackEntry object.
		!#zh è®¾ç½®å½??????¨ç?»ã????????ä¸­ç??ä»»ä???????¨ç?»å??è¢«æ????¤ã??<br>
		è¿????ä¸?ä¸? {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.TrackEntry å¯¹è±¡???
		@param trackIndex trackIndex
		@param name name
		@param loop loop 
		*/
		setAnimation(trackIndex: number, name: string, loop: boolean): sp.spine.TrackEntry;		
		/**
		!#en Adds an animation to be played delay seconds after the current or last queued animation.<br>
		Returns a {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.TrackEntry object.
		!#zh æ·»å??ä¸?ä¸ªå?¨ç?»å?°å?¨ç?»é?????å°¾é?¨ï??è¿???¯ä»¥å»¶è?????å®????ç§???°ã??<br>
		è¿????ä¸?ä¸? {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.TrackEntry å¯¹è±¡???
		@param trackIndex trackIndex
		@param name name
		@param loop loop
		@param delay delay 
		*/
		addAnimation(trackIndex: number, name: string, loop: boolean, delay?: number): sp.spine.TrackEntry;		
		/**
		!#en Find animation with specified name.
		!#zh ??¥æ?¾æ??å®????ç§°ç????¨ç??
		@param name name 
		*/
		findAnimation(name: string): sp.spine.Animation;		
		/**
		!#en Returns track entry by trackIndex.<br>
		Returns a {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.TrackEntry object.
		!#zh ???è¿? track ç´¢å????·å?? TrackEntry???<br>
		è¿????ä¸?ä¸? {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.TrackEntry å¯¹è±¡???
		@param trackIndex trackIndex 
		*/
		getCurrent(trackIndex: any): sp.spine.TrackEntry;		
		/**
		!#en Clears all tracks of animation state.
		!#zh æ¸???¤æ????? track ?????¨ç?»ç?¶æ????? 
		*/
		clearTracks(): void;		
		/**
		!#en Clears track of animation state by trackIndex.
		!#zh æ¸???¤å?ºæ??å®? track ?????¨ç?»ç?¶æ?????
		@param trackIndex trackIndex 
		*/
		clearTrack(trackIndex: number): void;		
		/**
		!#en Set the start event listener.
		!#zh ??¨æ?¥è®¾ç½®å??å§???­æ?¾å?¨ç?»ç??äº?ä»¶ç????¬ã??
		@param listener listener 
		*/
		setStartListener(listener: Function): void;		
		/**
		!#en Set the interrupt event listener.
		!#zh ??¨æ?¥è®¾ç½®å?¨ç?»è¢«?????­ç??äº?ä»¶ç????¬ã??
		@param listener listener 
		*/
		setInterruptListener(listener: Function): void;		
		/**
		!#en Set the end event listener.
		!#zh ??¨æ?¥è®¾ç½®å?¨ç?»æ?­æ?¾å????????äº?ä»¶ç????¬ã??
		@param listener listener 
		*/
		setEndListener(listener: Function): void;		
		/**
		!#en Set the dispose event listener.
		!#zh ??¨æ?¥è®¾ç½®å?¨ç?»å??è¢«é??æ¯????äº?ä»¶ç????¬ã??
		@param listener listener 
		*/
		setDisposeListener(listener: Function): void;		
		/**
		!#en Set the complete event listener.
		!#zh ??¨æ?¥è®¾ç½®å?¨ç?»æ?­æ?¾ä??æ¬¡å¾ª??¯ç???????????äº?ä»¶ç????¬ã??
		@param listener listener 
		*/
		setCompleteListener(listener: Function): void;		
		/**
		!#en Set the animation event listener.
		!#zh ??¨æ?¥è®¾ç½®å?¨ç?»æ?­æ?¾è??ç¨?ä¸­å¸§äº?ä»¶ç???????¬ã??
		@param listener listener 
		*/
		setEventListener(listener: Function): void;		
		/**
		!#en Set the start event listener for specified TrackEntry.
		!#zh ??¨æ?¥ä¸º???å®???? TrackEntry è®¾ç½®??¨ç?»å??å§???­æ?¾ç??äº?ä»¶ç????¬ã??
		@param entry entry
		@param listener listener 
		*/
		setTrackStartListener(entry: sp.spine.TrackEntry, listener: Function): void;		
		/**
		!#en Set the interrupt event listener for specified TrackEntry.
		!#zh ??¨æ?¥ä¸º???å®???? TrackEntry è®¾ç½®??¨ç?»è¢«?????­ç??äº?ä»¶ç????¬ã??
		@param entry entry
		@param listener listener 
		*/
		setTrackInterruptListener(entry: sp.spine.TrackEntry, listener: Function): void;		
		/**
		!#en Set the end event listener for specified TrackEntry.
		!#zh ??¨æ?¥ä¸º???å®???? TrackEntry è®¾ç½®??¨ç?»æ?­æ?¾ç????????äº?ä»¶ç????¬ã??
		@param entry entry
		@param listener listener 
		*/
		setTrackEndListener(entry: sp.spine.TrackEntry, listener: Function): void;		
		/**
		!#en Set the dispose event listener for specified TrackEntry.
		!#zh ??¨æ?¥ä¸º???å®???? TrackEntry è®¾ç½®??¨ç?»å?³å??è¢«é??æ¯????äº?ä»¶ç????¬ã??
		@param entry entry
		@param listener listener 
		*/
		setTrackDisposeListener(entry: sp.spine.TrackEntry, listener: Function): void;		
		/**
		!#en Set the complete event listener for specified TrackEntry.
		!#zh ??¨æ?¥ä¸º???å®???? TrackEntry è®¾ç½®??¨ç?»ä??æ¬¡å¾ª??¯æ?­æ?¾ç????????äº?ä»¶ç????¬ã??
		@param entry entry
		@param listener listener 
		*/
		setTrackCompleteListener(entry: sp.spine.TrackEntry, listener: (entry: sp.spine.TrackEntry, loopCount: number) => void): void;		
		/**
		!#en Set the event listener for specified TrackEntry.
		!#zh ??¨æ?¥ä¸º???å®???? TrackEntry è®¾ç½®??¨ç?»å¸§äº?ä»¶ç???????¬ã??
		@param entry entry
		@param listener listener 
		*/
		setTrackEventListener(entry: sp.spine.TrackEntry, listener: Function): void;		
		/**
		!#en Get the animation state object
		!#zh ??·å????¨ç?»ç?¶æ?? 
		*/
		getState(): sp.spine.AnimationState;	
	}	
	/** !#en The skeleton data of spine.
	!#zh Spine ??? éª¨éª¼??°æ?®ã?? */
	export class SkeletonData extends cc.Asset {		
		/** !#en See http://en.esotericsoftware.com/spine-json-format
		!#zh ??¯æ?¥ç?? Spine å®???¹æ??æ¡? http://zh.esotericsoftware.com/spine-json-format */
		skeletonJson: any;		
		atlasText: string;		
		textures: cc.Texture2D[];		
		/** !#en
		A scale can be specified on the JSON or binary loader which will scale the bone positions,
		image sizes, and animation translations.
		This can be useful when using different sized images than were used when designing the skeleton
		in Spine. For example, if using images that are half the size than were used in Spine,
		a scale of 0.5 can be used. This is commonly used for games that can run with either low or high
		resolution texture atlases.
		see http://en.esotericsoftware.com/spine-using-runtimes#Scaling
		!#zh ??¯æ?¥ç?? Spine å®???¹æ??æ¡?ï¼? http://zh.esotericsoftware.com/spine-using-runtimes#Scaling */
		scale: number;		
		/**
		!#en Get the included SkeletonData used in spine runtime.<br>
		Returns a {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.SkeletonData object.
		!#zh ??·å?? Spine Runtime ä½¿ç?¨ç?? SkeletonData???<br>
		è¿????ä¸?ä¸? {{#crossLinkModule "sp.spine"}}sp.spine{{/crossLinkModule}}.SkeletonData å¯¹è±¡???
		@param quiet quiet 
		*/
		getRuntimeData(quiet?: boolean): sp.spine.SkeletonData;	
	}	
	/** !#en The event type of spine skeleton animation.
	!#zh éª¨éª¼??¨ç?»ä??ä»¶ç±»?????? */
	export enum AnimationEventType {		
		START = 0,
		END = 0,
		COMPLETE = 0,
		EVENT = 0,	
	}	
	/** !#en
	The delegate of spine vertex effect
	!#zh
	Spine é¡¶ç?¹å?¨ç?»ä»£??? */
	export class VertexEffectDelegate {		
		/**
		!#en Clears vertex effect.
		!#zh æ¸?ç©ºé¡¶??¹æ????? 
		*/
		clear(): void;		
		/**
		!#en Inits delegate with jitter effect
		!#zh è®¾ç½®é¡¶ç?¹æ????¨æ?????
		@param jitterX jitterX
		@param jitterY jitterY 
		*/
		initJitter(jitterX: number, jitterY: number): void;		
		/**
		!#en Inits delegate with swirl effect
		!#zh è®¾ç½®é¡¶ç?¹æ¼©æ¶¡æ?????
		@param radius radius
		@param power power 
		*/
		initSwirlWithPow(radius: number, power: number): sp.spine.JitterEffect;		
		/**
		!#en Inits delegate with swirl effect
		!#zh è®¾ç½®é¡¶ç?¹æ¼©æ¶¡æ?????
		@param radius radius
		@param power power 
		*/
		initSwirlWithPowOut(radius: number, power: number): sp.spine.SwirlEffect;		
		/**
		!#en Gets jitter vertex effect
		!#zh ??·å??é¡¶ç?¹æ????¨æ????? 
		*/
		getJitterVertexEffect(): sp.spine.JitterEffect;		
		/**
		!#en Gets swirl vertex effect
		!#zh ??·å??é¡¶ç?¹æ¼©æ¶¡æ????? 
		*/
		getSwirlVertexEffect(): sp.spine.SwirlEffect;		
		/**
		!#en Gets vertex effect
		!#zh ??·å??é¡¶ç?¹æ????? 
		*/
		getVertexEffect(): sp.spine.JitterEffect;		
		/**
		!#en Gets effect type
		!#zh ??·å????????ç±»å?? 
		*/
		getEffectType(): string;	
	}	
	/****************************************************
	* sp
	*****************************************************/
	
	export namespace sp {		
		/** !#en Attach node tool
		!#zh ?????¹å·¥??·ç±» */
		export class AttachUtil {			
			/**
			!#en Gets attached root node.
			!#zh ??·å???????¥è????¹æ???????¹è????? 
			*/
			getAttachedRootNode(): cc.Node;			
			/**
			!#en Gets attached node which you want.
			!#zh ??·å??å¯¹å???????????
			@param boneName boneName 
			*/
			getAttachedNodes(boneName: string): cc.Node[];			
			/**
			!#en Destroy attached node which you want.
			!#zh ???æ¯?å¯¹å???????????
			@param boneName boneName 
			*/
			destroyAttachedNodes(boneName: string): void;			
			/**
			!#en Traverse all bones to generate the minimum node tree containing the given bone names, NOTE that make sure the skeleton has initialized before calling this interface.
			!#zh ???????????????æ§½ï?????????????«æ?????ç»?å®????æ§½å??ç§°ç?????å°??????¹æ??ï¼?æ³¨æ??ï¼?è°???¨è¯¥??¥å?????è¯·ç¡®ä¿?éª¨éª¼??¨ç?»å·²ç»????å§????å¥½ã??
			@param boneName boneName 
			*/
			generateAttachedNodes(boneName: string): cc.Node[];			
			/**
			!#en Destroy all attached node.
			!#zh ???æ¯????????????? 
			*/
			destroyAllAttachedNodes(): void;			
			/**
			!#en Traverse all bones to generate a tree containing all bones nodes, NOTE that make sure the skeleton has initialized before calling this interface.
			!#zh ???????????????æ§½ï?????????????«æ????????æ§½ç???????¹æ??ï¼?æ³¨æ??ï¼?è°???¨è¯¥??¥å?????è¯·ç¡®ä¿?éª¨éª¼??¨ç?»å·²ç»????å§????å¥½ã?? 
			*/
			generateAllAttachedNodes(): cc.Node;		
		}	
	}
		
	/****************************************************
	* Skeleton
	*****************************************************/
	
	export namespace Skeleton {		
		/** !#en Enum for animation cache mode type.
		!#zh Spine??¨ç?»ç??å­?ç±»å?? */
		export enum AnimationCacheMode {			
			REALTIME = 0,
			SHARED_CACHE = 0,
			PRIVATE_CACHE = 0,		
		}	
	}
	
}

/** !#en
`sp.spine` is the namespace for official Spine Runtime, which officially implemented and maintained by Spine.<br>
Please refer to the official documentation for its detailed usage: [http://en.esotericsoftware.com/spine-using-runtimes](http://en.esotericsoftware.com/spine-using-runtimes)
!#zh
sp.spine æ¨¡å????? Spine å®???¹è??è¡?åº???? API ??¥å??ï¼???? Spine å®???¹ç??ä¸?å®???°å??ç»´æ?¤ï????·ä????¨æ??è¯·å?????ï¼?[http://zh.esotericsoftware.com/spine-using-runtimes](http://zh.esotericsoftware.com/spine-using-runtimes) */
declare namespace sp.spine {
}

/** !#en
The global main namespace of DragonBones, all classes, functions,
properties and constants of DragonBones are defined in this namespace
!#zh
DragonBones ?????¨å???????½å??ç©ºé?´ï??
ä¸? DragonBones ??¸å?³ç???????????ç±»ï????½æ?°ï??å±???§ï??å¸¸é????½å?¨è??ä¸ªå?½å??ç©ºé?´ä¸­å®?ä¹???? */
declare namespace dragonBones {	
	/** !#en
	The Armature Display of DragonBones <br/>
	<br/>
	Armature Display has a reference to a DragonBonesAsset and stores the state for ArmatureDisplay instance,
	which consists of the current pose's bone SRT, slot colors, and which slot attachments are visible. <br/>
	Multiple Armature Display can use the same DragonBonesAsset which includes all animations, skins, and attachments. <br/>
	!#zh
	DragonBones éª¨éª¼??¨ç?? <br/>
	<br/>
	Armature Display ??·æ??å¯¹éª¨éª¼æ?°æ?®ç??å¼???¨å¹¶ä¸?å­???¨ä??éª¨éª¼å®?ä¾??????¶æ??ï¼?
	å®???±å????????éª¨éª¼??¨ä??ï¼?slot é¢???²ï???????¯è????? slot attachments ç»???????<br/>
	å¤?ä¸? Armature Display ??¯ä»¥ä½¿ç?¨ç?¸å?????éª¨éª¼??°æ?®ï????¶ä¸­?????¬æ??????????¨ç?»ï????®è?¤å?? attachments???<br/> */
	export class ArmatureDisplay extends cc.RenderComponent {		
		/** !#en
		The DragonBones data contains the armatures information (bind pose bones, slots, draw order,
		attachments, skins, etc) and animations but does not hold any state.<br/>
		Multiple ArmatureDisplay can share the same DragonBones data.
		!#zh
		éª¨éª¼??°æ?®å????«ä??éª¨éª¼ä¿¡æ?¯ï??ç»?å®?éª¨éª¼??¨ä??ï¼?slotsï¼?æ¸²æ??é¡ºå??ï¼?
		attachmentsï¼???®è?¤ç??ç­?ï¼??????¨ç?»ä??ä¸???????ä»»ä????¶æ?????<br/>
		å¤?ä¸? ArmatureDisplay ??¯ä»¥??±ç?¨ç?¸å?????éª¨éª¼??°æ?®ã?? */
		dragonAsset: DragonBonesAsset;		
		/** !#en
		The atlas asset for the DragonBones.
		!#zh
		éª¨éª¼??°æ?®æ???????? Atlas Texture ??°æ?®ã?? */
		dragonAtlasAsset: DragonBonesAtlasAsset;		
		/** !#en The name of current armature.
		!#zh å½??????? Armature ???ç§°ã?? */
		armatureName: string;		
		/** !#en The name of current playing animation.
		!#zh å½??????­æ?¾ç????¨ç?»å??ç§°ã?? */
		animationName: string;		
		_defaultArmatureIndex: number;		
		/** !#en The time scale of this armature.
		!#zh å½????éª¨éª¼ä¸­æ???????¨ç?»ç????¶é?´ç¼©??¾ç????? */
		timeScale: number;		
		/** !#en The play times of the default animation.
		     -1 means using the value of config file;
		     0 means repeat for ever
		     >0 means repeat times
		!#zh ??­æ?¾é??è®¤å?¨ç?»ç??å¾ªç?¯æ¬¡???
		     -1 è¡¨ç¤ºä½¿ç?¨é??ç½®æ??ä»¶ä¸­???é»?è®¤å??;
		     0 è¡¨ç¤º??????å¾ªç??
		     >0 è¡¨ç¤ºå¾ªç?¯æ¬¡??? */
		playTimes: number;		
		/** !#en Indicates whether to enable premultiplied alpha.
		You should disable this option when image's transparent area appears to have opaque pixels,
		or enable this option when image's half transparent area appears to be darken.
		!#zh ??¯å?¦å?¯ç?¨è´´??¾é??ä¹????
		å½???¾ç?????????????ºå????ºç?°è?²å????¶é??è¦???³é?­è¯¥???é¡¹ï??å½???¾ç????????????????ºå??é¢???²å??é»???¶é??è¦???¯ç?¨è¯¥???é¡¹ã?? */
		premultipliedAlpha: boolean;		
		/** !#en Indicates whether open debug bones.
		!#zh ??¯å?¦æ?¾ç¤º bone ??? debug ä¿¡æ?¯ã?? */
		debugBones: boolean;		
		/** !#en Enabled batch model, if skeleton is complex, do not enable batch, or will lower performance.
		!#zh å¼???¯å????¹ï??å¦????æ¸²æ??å¤§é????¸å??çº¹ç??ï¼?ä¸?ç»????ç®???????éª¨éª¼??¨ç?»ï??å¼???¯å????¹å?¯ä»¥???ä½?drawcallï¼???¦å??è¯·ä??è¦?å¼???¯ï??cpuæ¶????ä¼?ä¸??????? */
		enableBatch: boolean;		
		/**
		!#en
		The key of dragonbones cache data, which is regard as 'dragonbonesName', when you want to change dragonbones cloth.
		!#zh
		ç¼?å­?é¾?éª¨æ?°æ?®ç??key??¼ï????¢è???????¶ä??ä½¿ç?¨å?°è¯¥??¼ï??ä½?ä¸ºdragonbonesNameä½¿ç??
		
		@example 
		```js
		let factory = dragonBones.CCFactory.getInstance();
		let needChangeSlot = needChangeArmature.armature().getSlot("changeSlotName");
		factory.replaceSlotDisplay(toChangeArmature.getArmatureKey(), "armatureName", "slotName", "displayName", needChangeSlot);
		``` 
		*/
		getArmatureKey(): string;		
		/**
		!#en
		It's best to set cache mode before set property 'dragonAsset', or will waste some cpu time.
		If set the mode in editor, then no need to worry about order problem.
		!#zh
		??¥æ?³å????¢æ¸²???æ¨¡å??ï¼????å¥½å?¨è®¾ç½?'dragonAsset'ä¹????ï¼????è®¾ç½®å¥½æ¸²???æ¨¡å??ï¼???¦å?????è¿?è¡???¶å????????
		??¥å?¨ç??è¾?ä¸­è®¾ç½®æ¸²???æ¨¡å??ï¼?????????????å¿?è®¾ç½®æ¬¡å???????®é?????
		@param cacheMode cacheMode
		
		@example 
		```js
		armatureDisplay.setAnimationCacheMode(dragonBones.ArmatureDisplay.AnimationCacheMode.SHARED_CACHE);
		``` 
		*/
		setAnimationCacheMode(cacheMode: ArmatureDisplay.AnimationCacheMode): void;		
		/**
		!#en Whether in cached mode.
		!#zh å½??????¯å?¦å??äº?ç¼?å­?æ¨¡å????? 
		*/
		isAnimationCached(): boolean;		
		/**
		!#en
		Play the specified animation.
		Parameter animName specify the animation name.
		Parameter playTimes specify the repeat times of the animation.
		-1 means use the value of the config file.
		0 means play the animation for ever.
		>0 means repeat times.
		!#zh
		??­æ?¾æ??å®??????¨ç??.
		animName ???å®???­æ?¾å?¨ç?»ç?????ç§°ã??
		playTimes ???å®???­æ?¾å?¨ç?»ç??æ¬¡æ?°ã??
		-1 ä¸ºä½¿??¨é??ç½®æ??ä»¶ä¸­???æ¬¡æ?°ã??
		0 ä¸ºæ?????å¾ªç?¯æ?­æ?¾ã??
		>0 ä¸ºå?¨ç?»ç?????å¤?æ¬¡æ?°ã??
		@param animName animName
		@param playTimes playTimes 
		*/
		playAnimation(animName: string, playTimes: number): dragonBones.AnimationState;		
		/**
		!#en
		Updating an animation cache to calculate all frame data in the animation is a cost in
		performance due to calculating all data in a single frame.
		To update the cache, use the invalidAnimationCache method with high performance.
		!#zh
		??´æ?°æ??ä¸ªå?¨ç?»ç??å­?, é¢?è®¡ç????¨ç?»ä¸­??????å¸§æ?°æ?®ï????±ä????¨å??å¸§è®¡ç®?????????°æ?®ï?????ä»¥è??æ¶??????§è?½ã??
		??¥æ?³æ?´æ?°ç??å­?ï¼???¯ä½¿??? invalidAnimationCache ??¹æ??ï¼???·æ??è¾?é«???§è?½ã??
		@param animName animName 
		*/
		updateAnimationCache(animName: string): void;		
		/**
		!#en
		Invalidates the animation cache, which is then recomputed on each frame..
		!#zh
		ä½¿å?¨ç?»ç??å­?å¤±æ??ï¼?ä¹????ä¼???¨æ??å¸§é????°è®¡ç®???? 
		*/
		invalidAnimationCache(): void;		
		/**
		!#en
		Get the all armature names in the DragonBones Data.
		!#zh
		??·å?? DragonBones ??°æ?®ä¸­????????? armature ???ç§? 
		*/
		getArmatureNames(): any[];		
		/**
		!#en
		Get the all animation names of specified armature.
		!#zh
		??·å?????å®???? armature ???????????¨ç?»å??ç§°ã??
		@param armatureName armatureName 
		*/
		getAnimationNames(armatureName: string): any[];		
		/**
		!#en
		Add event listener for the DragonBones Event, the same to addEventListener.
		!#zh
		æ·»å?? DragonBones äº?ä»¶ç????¬å?¨ï??ä¸? addEventListener ä½???¨ç?¸å?????
		@param type A string representing the event type to listen for.
		@param listener The callback that will be invoked when the event is dispatched.
		@param target The target (this object) to invoke the callback, can be null 
		*/
		on(type: string, listener: (event: cc.Event) => void, target?: any): void;		
		/**
		!#en
		Remove the event listener for the DragonBones Event, the same to removeEventListener.
		!#zh
		ç§»é?? DragonBones äº?ä»¶ç????¬å?¨ï??ä¸? removeEventListener ä½???¨ç?¸å?????
		@param type A string representing the event type to listen for.
		@param listener listener
		@param target target 
		*/
		off(type: string, listener?: Function, target?: any): void;		
		/**
		!#en
		Add DragonBones one-time event listener, the callback will remove itself after the first time it is triggered.
		!#zh
		æ·»å?? DragonBones ä¸?æ¬¡æ?§ä??ä»¶ç????¬å?¨ï?????è°?ä¼???¨ç¬¬ä¸???¶é?´è¢«è§¦å??????????¤è?ªèº«???
		@param type A string representing the event type to listen for.
		@param listener The callback that will be invoked when the event is dispatched.
		@param target The target (this object) to invoke the callback, can be null 
		*/
		once(type: string, listener: (event: cc.Event) => void, target?: any): void;		
		/**
		!#en
		Add event listener for the DragonBones Event.
		!#zh
		æ·»å?? DragonBones äº?ä»¶ç????¬å?¨ã??
		@param type A string representing the event type to listen for.
		@param listener The callback that will be invoked when the event is dispatched.
		@param target The target (this object) to invoke the callback, can be null 
		*/
		addEventListener(type: string, listener: (event: cc.Event) => void, target?: any): void;		
		/**
		!#en
		Remove the event listener for the DragonBones Event.
		!#zh
		ç§»é?? DragonBones äº?ä»¶ç????¬å?¨ã??
		@param type A string representing the event type to listen for.
		@param listener listener
		@param target target 
		*/
		removeEventListener(type: string, listener?: Function, target?: any): void;		
		/**
		!#en
		Build the armature for specified name.
		!#zh
		???å»ºæ??å®????ç§°ç?? armature å¯¹è±¡
		@param armatureName armatureName
		@param node node 
		*/
		buildArmature(armatureName: string, node: cc.Node): ArmatureDisplay;		
		/**
		!#en
		Get the current armature object of the ArmatureDisplay.
		!#zh
		??·å?? ArmatureDisplay å½????ä½¿ç?¨ç?? Armature å¯¹è±¡ 
		*/
		armature(): any;	
	}	
	/** DragonBones factory */
	export class CCFactory extends BaseFactory {		
		/**
		
		
		@example 
		```js
		let factory = dragonBones.CCFactory.getInstance();
		``` 
		*/
		static getInstance(): CCFactory;	
	}	
	/** !#en The skeleton data of dragonBones.
	!#zh dragonBones ??? éª¨éª¼??°æ?®ã?? */
	export class DragonBonesAsset extends cc.Asset {		
		/** !#en See http://developer.egret.com/cn/github/egret-docs/DB/dbLibs/dataFormat/index.html
		!#zh ??¯æ?¥ç?? DragonBones å®???¹æ??æ¡? http://developer.egret.com/cn/github/egret-docs/DB/dbLibs/dataFormat/index.html */
		dragonBonesJson: string;	
	}	
	/** !#en The skeleton atlas data of dragonBones.
	!#zh dragonBones ???éª¨éª¼çº¹ç????°æ?®ã?? */
	export class DragonBonesAtlasAsset extends cc.Asset {		
		atlasJson: string;		
		texture: cc.Texture2D;	
	}	
	/****************************************************
	* ArmatureDisplay
	*****************************************************/
	
	export namespace ArmatureDisplay {		
		/** !#en Enum for cache mode type.
		!#zh Dragonbonesæ¸²æ??ç±»å?? */
		export enum AnimationCacheMode {			
			REALTIME = 0,
			SHARED_CACHE = 0,
			PRIVATE_CACHE = 0,		
		}	
	}
		
	/****************************************************
	* dragonBones
	*****************************************************/
	
	export namespace dragonBones {		
		/** !#en Attach node tool
		!#zh ?????¹å·¥??·ç±» */
		export class AttachUtil {			
			/**
			!#en Gets attached root node.
			!#zh ??·å???????¥è????¹æ???????¹è????? 
			*/
			getAttachedRootNode(): cc.Node;			
			/**
			!#en Gets attached node which you want.
			!#zh ??·å??å¯¹å???????????
			@param boneName boneName 
			*/
			getAttachedNodes(boneName: string): cc.Node[];			
			/**
			!#en Destroy attached node which you want.
			!#zh ???æ¯?å¯¹å???????????
			@param boneName boneName 
			*/
			destroyAttachedNodes(boneName: string): void;			
			/**
			!#en Traverse all bones to generate the minimum node tree containing the given bone names, NOTE that make sure the skeleton has initialized before calling this interface.
			!#zh ???????????????æ§½ï?????????????«æ?????ç»?å®????æ§½å??ç§°ç?????å°??????¹æ??ï¼?æ³¨æ??ï¼?è°???¨è¯¥??¥å?????è¯·ç¡®ä¿?éª¨éª¼??¨ç?»å·²ç»????å§????å¥½ã??
			@param boneName boneName 
			*/
			generateAttachedNodes(boneName: string): cc.Node[];			
			/**
			!#en Destroy all attached node.
			!#zh ???æ¯????????????? 
			*/
			destroyAllAttachedNodes(): void;			
			/**
			!#en Traverse all bones to generate a tree containing all bones nodes, NOTE that make sure the skeleton has initialized before calling this interface.
			!#zh ???????????????æ§½ï?????????????«æ????????æ§½ç???????¹æ??ï¼?æ³¨æ??ï¼?è°???¨è¯¥??¥å?????è¯·ç¡®ä¿?éª¨éª¼??¨ç?»å·²ç»????å§????å¥½ã?? 
			*/
			generateAllAttachedNodes(): cc.Node;		
		}	
	}
	
}

/** !#en
This module controls asset's behaviors and information, include loading, releasing etc.
All member can be accessed with `cc.assetManager`. All class or enum can be accessed with `cc.AssetManager`

!#zh
æ­¤æ¨¡???ç®¡ç??èµ?æº????è¡?ä¸ºå??ä¿¡æ?¯ï???????¬å??è½½ï???????¾ç??ï¼???????????????½å?????è¿? `cc.assetManager` è°????. ??????ç±»å????????ä¸¾è?½é??è¿? `cc.AssetManager` è®¿é?? */
declare namespace cc.AssetManager {	
	/** !#en
	This module contains the builtin asset, it's a singleton, all member can be accessed with `cc.assetManager.builtins`
	
	!#zh
	æ­¤æ¨¡????????«å??å»ºè??æº?ï¼?è¿???¯ä??ä¸ªå??ä¾?ï¼???????????????½é??è¿? `cc.assetManager.builtins` è®¿é?? */
	export class Builtins {		
		/**
		!#en
		Initialize
		
		!#zh
		???å§????
		@param cb Callback when finish loading built-in assets 
		*/
		init (cb: () => void): void;		
		/**
		!#en
		Get the built-in asset using specific type and name.
		
		!#zh
		???è¿???¹å?????ç±»å????????ç§°è?·å?????å»ºè??æº?
		@param type The type of asset, such as `effect`
		@param name The name of asset, such as `phong`
		
		@example 
		```js
		cc.assetManaer.builtins.getBuiltin('effect', 'phone');
		``` 
		*/
		getBuiltin(type?: string, name?: string): cc.Asset | Cache<cc.Asset>;		
		/**
		!#en
		Clear all builtin assets
		
		!#zh
		æ¸?ç©ºæ????????ç½®è??æº? 
		*/
		clear(): void;	
	}	
	/** !#en
	A bundle contains an amount of assets(includes scene), you can load, preload, release asset which is in this bundle
	
	!#zh
	ä¸?ä¸ªå????«ä??å®???°é??èµ?æº?ï¼??????¬å?ºæ?¯ï????????ï¼?ä½???¯ä»¥???è½½ï??é¢????è½½ï???????¾æ­¤?????????èµ?æº? */
	export class Bundle {		
		/**
		!#en
		Create a bundle
		
		!#zh
		???å»ºä??ä¸? bundle 
		*/
		constructor();		
		/** !#en
		The name of this bundle
		
		!#zh
		æ­? bundle ??????ç§? */
		name: string;		
		/** !#en
		The dependency of this bundle
		
		!#zh
		æ­? bundle ???ä¾?èµ? */
		deps: string[];		
		/** !#en
		The root path of this bundle, such like 'http://example.com/bundle1'
		
		!#zh
		æ­? bundle ?????¹è·¯å¾?, ä¾?å¦? 'http://example.com/bundle1' */
		base: string;		
		/**
		!#en
		Get asset's info using path, only valid when asset is in bundle folder.
		
		!#zh
		ä½¿ç?? path ??·å??èµ?æº???????ç½®ä¿¡???
		@param path The relative path of asset, such as 'images/a'
		@param type The constructor of asset, such as  `cc.Texture2D`
		
		@example 
		```js
		var info = bundle.getInfoWithPath('image/a', cc.Texture2D);
		``` 
		*/
		getInfoWithPath (path: string, type?: typeof cc.Asset): Record<string, any>;		
		/**
		!#en
		Get all asset's info within specific folder
		
		!#zh
		??·å????¨æ??ä¸ªæ??å®????ä»¶å¤¹ä¸??????????èµ?æº?ä¿¡æ??
		@param path The relative path of folder, such as 'images'
		@param type The constructor should be used to filter paths
		@param out The output array
		
		@example 
		```js
		var infos = [];
		bundle.getDirWithPath('images', cc.Texture2D, infos);
		``` 
		*/
		getDirWithPath (path: string, type: typeof cc.Asset, out: Array<Record<string, any>>): Array<Record<string, any>>;
		getDirWithPath (path: string, type: typeof cc.Asset): Array<Record<string, any>>;
		getDirWithPath (path: string): Array<Record<string, any>>;		
		/**
		!#en
		Get asset's info with uuid
		
		!#zh
		???è¿? uuid ??·å??èµ?æº?ä¿¡æ??
		@param uuid The asset's uuid
		
		@example 
		```js
		var info = bundle.getAssetInfo('fcmR3XADNLgJ1ByKhqcC5Z');
		``` 
		*/
		getAssetInfo (uuid: string): Record<string, any>;		
		/**
		!#en
		Get scene'info with name
		
		!#zh
		???è¿???ºæ?¯å????·å????ºæ?¯ä¿¡???
		@param name The name of scene
		
		@example 
		```js
		var info = bundle.getSceneInfo('first.fire');
		``` 
		*/
		getSceneInfo(name: string): Record<string, any>;		
		/**
		!#en
		Initialize this bundle with options
		
		!#zh
		???å§????æ­? bundle
		@param options options 
		*/
		init(options: Record<string, any>): void;		
		/**
		!#en
		Load the asset within this bundle by the path which is relative to bundle's path
		
		!#zh
		???è¿???¸å¯¹è·¯å?????è½½å?????ä¸­ç??èµ?æº????è·¯å????¯ç?¸å¯¹?????????ä»¶å¤¹è·¯å???????¸å¯¹è·¯å??
		@param paths Paths of the target assets.The path is relative to the bundle's folder, extensions must be omitted.
		@param type Only asset of type will be loaded if this argument is supplied.
		@param onProgress Callback invoked when progression change.
		@param onComplete Callback invoked when all assets loaded.
		
		@example 
		```js
		// load the texture (${project}/assets/resources/textures/background.jpg) from resources
		cc.resources.load('textures/background', cc.Texture2D, (err, texture) => console.log(err));
		
		// load the audio (${project}/assets/resources/music/hit.mp3) from resources
		cc.resources.load('music/hit', cc.AudioClip, (err, audio) => console.log(err));
		
		// load the prefab (${project}/assets/bundle1/misc/character/cocos) from bundle1 folder
		bundle1.load('misc/character/cocos', cc.Prefab, (err, prefab) => console.log(err));
		
		// load the sprite frame (${project}/assets/some/xxx/bundle2/imgs/cocos.png) from bundle2 folder
		bundle2.load('imgs/cocos', cc.SpriteFrame, null, (err, spriteFrame) => console.log(err));
		``` 
		*/
		load<T extends cc.Asset>(paths: string, type: typeof cc.Asset, onProgress: (finish: number, total: number, item: RequestItem) => void, onComplete: (error: Error, assets: T) => void): void;
		load<T extends cc.Asset>(paths: string[], type: typeof cc.Asset, onProgress: (finish: number, total: number, item: RequestItem) => void, onComplete: (error: Error, assets: Array<T>) => void): void;
		load<T extends cc.Asset>(paths: string, onProgress: (finish: number, total: number, item: RequestItem) => void, onComplete: (error: Error, assets: T) => void): void;
		load<T extends cc.Asset>(paths: string[], onProgress: (finish: number, total: number, item: RequestItem) => void, onComplete: (error: Error, assets: Array<T>) => void): void;
		load<T extends cc.Asset>(paths: string, type: typeof cc.Asset, onComplete?: (error: Error, assets: T) => void): void;
		load<T extends cc.Asset>(paths: string[], type: typeof cc.Asset, onComplete?: (error: Error, assets: Array<T>) => void): void;
		load<T extends cc.Asset>(paths: string, onComplete?: (error: Error, assets: T) => void): void;
		load<T extends cc.Asset>(paths: string[], onComplete?: (error: Error, assets: Array<T>) => void): void;		
		/**
		!#en
		Preload the asset within this bundle by the path which is relative to bundle's path.
		After calling this method, you still need to finish loading by calling `Bundle.load`.
		It will be totally fine to call `Bundle.load` at any time even if the preloading is not
		yet finished
		
		!#zh
		???è¿???¸å¯¹è·¯å??é¢????è½½å?????ä¸­ç??èµ?æº????è·¯å????¯ç?¸å¯¹?????????ä»¶å¤¹è·¯å???????¸å¯¹è·¯å?????è°???¨å?????ï¼?ä½?ä»???¶é??è¦????è¿? `Bundle.load` ??¥å????????è½½ã??
		å°±ç??é¢????è½½è??æ²¡å?????ï¼?ä½?ä¹???¯ä»¥??´æ?¥è????? `Bundle.load`???
		@param paths Paths of the target asset.The path is relative to bundle folder, extensions must be omitted.
		@param type Only asset of type will be loaded if this argument is supplied.
		@param onProgress Callback invoked when progression change.
		@param onComplete Callback invoked when the resource loaded.
		
		@example 
		```js
		// preload the texture (${project}/assets/resources/textures/background.jpg) from resources
		cc.resources.preload('textures/background', cc.Texture2D);
		
		// preload the audio (${project}/assets/resources/music/hit.mp3) from resources
		cc.resources.preload('music/hit', cc.AudioClip);
		// wait for while
		cc.resources.load('music/hit', cc.AudioClip, (err, audioClip) => {});
		
		* // preload the prefab (${project}/assets/bundle1/misc/character/cocos) from bundle1 folder
		bundle1.preload('misc/character/cocos', cc.Prefab);
		
		// load the sprite frame of (${project}/assets/bundle2/imgs/cocos.png) from bundle2 folder
		bundle2.preload('imgs/cocos', cc.SpriteFrame);
		// wait for while
		bundle2.load('imgs/cocos', cc.SpriteFrame, (err, spriteFrame) => {});
		``` 
		*/
		preload(paths: string|string[], type: typeof cc.Asset, onProgress: (finish: number, total: number, item: RequestItem) => void, onComplete: (error: Error, items: RequestItem[]) => void): void;
		preload(paths: string|string[], onProgress: (finish: number, total: number, item: RequestItem) => void, onComplete: (error: Error, items: RequestItem[]) => void): void;
		preload(paths: string|string[], type: typeof cc.Asset, onComplete: (error: Error, items: RequestItem[]) => void): void;
		preload(paths: string|string[], type: typeof cc.Asset): void;
		preload(paths: string|string[], onComplete: (error: Error, items: RequestItem[]) => void): void;
		preload(paths: string|string[]): void;		
		/**
		!#en
		Load all assets under a folder inside the bundle folder.<br>
		<br>
		Note: All asset paths in Creator use forward slashes, paths using backslashes will not work.
		
		!#zh
		???è½½ç?®æ?????ä»¶å¤¹ä¸­ç????????èµ?æº?, æ³¨æ??ï¼?è·¯å??ä¸­å?ªè?½ä½¿??¨æ?????ï¼??????????å°????æ­¢å·¥ä½?
		@param dir path of the target folder.The path is relative to the bundle folder, extensions must be omitted.
		@param type Only asset of type will be loaded if this argument is supplied.
		@param onProgress Callback invoked when progression change.
		@param onComplete A callback which is called when all assets have been loaded, or an error occurs.
		
		@example 
		```js
		// load all audios (resources/audios/)
		cc.resources.loadDir('audios', cc.AudioClip, (err, audios) => {});
		
		// load all textures in "resources/imgs/"
		cc.resources.loadDir('imgs', cc.Texture2D, null, function (err, textures) {
		    var texture1 = textures[0];
		    var texture2 = textures[1];
		});
		
		// load all prefabs (${project}/assets/bundle1/misc/characters/) from bundle1 folder
		bundle1.loadDir('misc/characters', cc.Prefab, (err, prefabs) => console.log(err));
		
		// load all sprite frame (${project}/assets/some/xxx/bundle2/skills/) from bundle2 folder
		bundle2.loadDir('skills', cc.SpriteFrame, null, (err, spriteFrames) => console.log(err));
		``` 
		*/
		loadDir<T extends cc.Asset>(dir: string, type: typeof cc.Asset, onProgress: (finish: number, total: number, item: RequestItem) => void, onComplete: (error: Error, assets: Array<T>) => void): void;
		loadDir<T extends cc.Asset>(dir: string, onProgress: (finish: number, total: number, item: RequestItem) => void, onComplete: (error: Error, assets: Array<T>) => void): void;
		loadDir<T extends cc.Asset>(dir: string, type: typeof cc.Asset, onComplete: (error: Error, assets: Array<T>) => void): void;
		loadDir<T extends cc.Asset>(dir: string, type: typeof cc.Asset): void;
		loadDir<T extends cc.Asset>(dir: string, onComplete: (error: Error, assets: Array<T>) => void): void;
		loadDir<T extends cc.Asset>(dir: string): void;		
		/**
		!#en
		Preload all assets under a folder inside the bundle folder.<br> After calling this method, you still need to finish loading by calling `Bundle.loadDir`.
		It will be totally fine to call `Bundle.loadDir` at any time even if the preloading is not yet finished
		
		!#zh
		é¢????è½½ç?®æ?????ä»¶å¤¹ä¸­ç????????èµ?æº????è°???¨å?????ï¼?ä½?ä»???¶é??è¦????è¿? `Bundle.loadDir` ??¥å????????è½½ã??
		å°±ç??é¢????è½½è??æ²¡å?????ï¼?ä½?ä¹???¯ä»¥??´æ?¥è????? `Bundle.loadDir`???
		@param dir path of the target folder.The path is relative to the bundle folder, extensions must be omitted.
		@param type Only asset of type will be preloaded if this argument is supplied.
		@param onProgress Callback invoked when progression change.
		@param onComplete A callback which is called when all assets have been loaded, or an error occurs.
		
		@example 
		```js
		// preload all audios (resources/audios/)
		cc.resources.preloadDir('audios', cc.AudioClip);
		
		// preload all textures in "resources/imgs/"
		cc.resources.preloadDir('imgs', cc.Texture2D);
		// wait for while
		cc.resources.loadDir('imgs', cc.Texture2D, (err, textures) => {});
		
		// preload all prefabs (${project}/assets/bundle1/misc/characters/) from bundle1 folder
		bundle1.preloadDir('misc/characters', cc.Prefab);
		
		// preload all sprite frame (${project}/assets/some/xxx/bundle2/skills/) from bundle2 folder
		bundle2.preloadDir('skills', cc.SpriteFrame);
		// wait for while
		bundle2.loadDir('skills', cc.SpriteFrame, (err, spriteFrames) => {});
		``` 
		*/
		preloadDir(dir: string, type: typeof cc.Asset, onProgress: (finish: number, total: number, item: RequestItem) => void, onComplete: (error: Error, items: RequestItem[]) => void): void;
		preloadDir(dir: string, onProgress: (finish: number, total: number, item: RequestItem) => void, onComplete: (error: Error, items: RequestItem[]) => void): void;
		preloadDir(dir: string, type: typeof cc.Asset, onComplete: (error: Error, items: RequestItem[]) => void): void;
		preloadDir(dir: string, type: typeof cc.Asset): void;
		preloadDir(dir: string, onComplete: (error: Error, items: RequestItem[]) => void): void;
		preloadDir(dir: string): void;		
		/**
		!#en
		Loads the scene within this bundle by its name.
		
		!#zh
		???è¿???ºæ?¯å??ç§°å??è½½å?????ä¸­ç????ºæ?¯ã??
		@param sceneName The name of the scene to load.
		@param options Some optional parameters
		@param onProgress Callback invoked when progression change.
		@param onComplete callback, will be called after scene launched.
		
		@example 
		```js
		bundle1.loadScene('first', (err, sceneAsset) => cc.director.runScene(sceneAsset));
		``` 
		*/
		loadScene(sceneName: string, options: Record<string, any>, onProgress: (finish: number, total: number, item: RequestItem) => void, onComplete: (error: Error, sceneAsset: cc.SceneAsset) => void): void;
		loadScene(sceneName: string, onProgress: (finish: number, total: number, item: RequestItem) => void, onComplete: (error: Error, sceneAsset: cc.SceneAsset) => void): void;
		loadScene(sceneName: string, options: Record<string, any>, onComplete: (error: Error, sceneAsset: cc.SceneAsset) => void): void;
		loadScene(sceneName: string, onComplete: (error: Error, sceneAsset: cc.SceneAsset) => void): void;
		loadScene(sceneName: string, options: Record<string, any>): void;
		loadScene(sceneName: string): void;		
		/**
		!#en
		Preloads the scene within this bundle by its name. After calling this method, you still need to finish loading by calling `Bundle.loadScene` or `cc.director.loadScene`.
		It will be totally fine to call `Bundle.loadDir` at any time even if the preloading is not yet finished
		
		!#zh
		???è¿???ºæ?¯å??ç§°é?????è½½å?????ä¸­ç????ºæ??.è°???¨å?????ï¼?ä½?ä»???¶é??è¦????è¿? `Bundle.loadScene` ??? `cc.director.loadScene` ??¥å????????è½½ã??
		å°±ç??é¢????è½½è??æ²¡å?????ï¼?ä½?ä¹???¯ä»¥??´æ?¥è????? `Bundle.loadScene` ??? `cc.director.loadScene`???
		@param sceneName The name of the scene to preload.
		@param options Some optional parameters
		@param onProgress callback, will be called when the load progression change.
		@param onComplete callback, will be called after scene loaded.
		
		@example 
		```js
		bundle1.preloadScene('first');
		// wait for a while
		bundle1.loadScene('first', (err, scene) => cc.director.runScene(scene));
		``` 
		*/
		preloadScene(sceneName: string, options: Record<string, any>, onProgress: (finish: number, total: number, item: RequestItem) => void, onComplete: (error: Error) => void): void;
		preloadScene(sceneName: string, onProgress: (finish: number, total: number, item: RequestItem) => void, onComplete: (error: Error) => void): void;
		preloadScene(sceneName: string, options: Record<string, any>, onComplete: (error: Error) => void): void;
		preloadScene(sceneName: string, onComplete: (error: Error) => void): void;
		preloadScene(sceneName: string, options: Record<string, any>): void;
		preloadScene(sceneName: string): void;		
		/**
		!#en
		Get asset within this bundle by path and type. <br>
		After you load asset with {{#crossLink "Bundle/load:method"}}{{/crossLink}} or {{#crossLink "Bundle/loadDir:method"}}{{/crossLink}},
		you can acquire them by passing the path to this API.
		
		!#zh
		???è¿?è·¯å??ä¸?ç±»å????·å??èµ?æº??????¨ä??ä½¿ç?? {{#crossLink "Bundle/load:method"}}{{/crossLink}} ?????? {{#crossLink "Bundle/loadDir:method"}}{{/crossLink}} ä¹????ï¼?
		ä½???½é??è¿?ä¼?è·¯å?????è¿?è¿?ä¸? API ??·å????°è??äº?èµ?æº????
		@param path The path of asset
		@param type Only asset of type will be returned if this argument is supplied.
		
		@example 
		```js
		bundle1.get('music/hit', cc.AudioClip);
		``` 
		*/
		get<T extends cc.Asset> (path: string, type?: typeof cc.Asset): T;		
		/**
		!#en
		Release the asset loaded by {{#crossLink "Bundle/load:method"}}{{/crossLink}} or {{#crossLink "Bundle/loadDir:method"}}{{/crossLink}} and it's dependencies.
		Refer to {{#crossLink "AssetManager/releaseAsset:method"}}{{/crossLink}} for detailed informations.
		
		!#zh
		?????¾é??è¿? {{#crossLink "Bundle/load:method"}}{{/crossLink}} ?????? {{#crossLink "Bundle/loadDir:method"}}{{/crossLink}} ???è½½ç??èµ?æº????è¯¦ç??ä¿¡æ?¯è¯·?????? {{#crossLink "AssetManager/releaseAsset:method"}}{{/crossLink}}
		@param path The path of asset
		@param type Only asset of type will be released if this argument is supplied.
		
		@example 
		```js
		// release a texture which is no longer need
		bundle1.release('misc/character/cocos');
		``` 
		*/
		release(path: string, type: typeof cc.Asset): void;
		release(path: string): void;		
		/**
		!#en
		Release all assets within this bundle. Refer to {{#crossLink "AssetManager/releaseAll:method"}}{{/crossLink}} for detailed informations.
		
		!#zh
		?????¾æ­¤???ä¸­ç????????èµ?æº????è¯¦ç??ä¿¡æ?¯è¯·?????? {{#crossLink "AssetManager/releaseAll:method"}}{{/crossLink}}
		
		@example 
		```js
		// release all asset within bundle1
		bundle1.releaseAll();
		``` 
		*/
		releaseAll(): void;	
	}	
	/** !#en
	Cache manager is a module which controls all caches downloaded from server in non-web platform, it is a singleton
	All member can be accessed with `cc.assetManager.cacheManager`.
	
	!#zh
	ç¼?å­?ç®¡ç????¨æ?¯ä??ä¸ªæ¨¡???ï¼???¨é?? WEB å¹³å?°ä??ï¼???¨ä??ç®¡ç????????ä»??????¡å?¨ä??ä¸?è½½ä????¥ç??ç¼?å­?ï¼?è¿???¯ä??ä¸ªå??ä¾?ï¼???????????????½é??è¿? `cc.assetManager.cacheManager` è®¿é?®ã?? */
	export class CacheManager {		
		/** !#en
		The name of cacheDir
		
		!#zh
		ç¼?å­???®å????????ç§? */
		cacheDir: string;		
		/** !#en
		Whether or not cache asset into user's storage space, this property only works on mini-game platforms
		
		!#zh
		??¯å?¦ç??å­?èµ?æº???°ç?¨æ?·å????¨ç©º??´ï??æ­¤å????§å?ªå?¨å??æ¸¸æ??å¹³å?°æ????? */
		cacheEnabled: boolean;		
		/** !#en
		Whether or not auto clear cache when storage ran out, this property only works on mini-game platforms
		
		!#zh
		??¯å?¦å?¨å????¨ç©º??´æ»¡äº??????ªå?¨æ?????ç¼?å­?ï¼?æ­¤å????§å?ªå?¨å??æ¸¸æ??å¹³å?°æ????? */
		autoClear: boolean;		
		/** !#en
		The interval between caching resources, this property only works on mini-game platforms, unit: ms
		
		!#zh
		ç¼?å­?èµ?æº??????´é????¶é?´ï??æ­¤å????§å?ªå?¨å??æ¸¸æ??å¹³å?°æ?????ï¼????ä½?ï¼?ms */
		cacheInterval: number;		
		/** !#en
		The interval between deleting resources, when you use `cleanLRU`, the resources will be deleted as this interval, unit: ms
		
		!#zh
		æ¸????èµ?æº??????´é????¶é?´ï??å½?ä½?ä½¿ç?? `cleanLRU` ??¶ï??èµ?æº?å°?ä»¥æ­¤??´é??è¢«å????¤ï?????ä½?ï¼?ms */
		deleteInterval: number;		
		/** !#en
		List of all cached files
		
		!#zh
		??????ç¼?å­????ä»¶å??è¡? */
		cachedFiles: Cache<{ bundle: string, url: string, lastTime: number }>;		
		/**
		!#en
		Get cached path with origin url
		
		!#zh
		???è¿????å§? url ??·å??ç¼?å­???????è·¯å??
		@param originUrl originUrl 
		*/
		getCache(originUrl: string): string;		
		/**
		!#en
		Get temporary path with origin url, this method only works on mini-game platforms
		
		!#zh
		???è¿????å§? url ??·å??ä¸´æ?¶æ??ä»¶ç??è·¯å??ï¼?æ­¤æ?¹æ????ªå?¨å??æ¸¸æ??å¹³å?°æ?????
		@param originUrl originUrl 
		*/
		getTemp(originUrl: string): string;		
		/**
		!#en
		Clear all caches, please use with caution, If necessary, we recommend using it before the game is launched
		
		!#zh
		æ¸?ç©ºæ?????ç¼?å­?ï¼?è¯·è°¨???ä½¿ç?¨ï??å¦????å¿?è¦????è¯?ï¼????ä»¬å»ºè®®å?¨æ¸¸?????¯å?¨ä?????ä½¿ç?? 
		*/
		clearCache(): void;		
		/**
		!#en
		Clear part of caches with LRU strategy
		
		!#zh
		ä½¿ç?? LRU ç­???¥æ??ç©ºé?¨å??ç¼?å­? 
		*/
		clearLRU(): void;		
		/**
		!#en
		Remove cache with origin url
		
		!#zh
		???è¿????å§? url ç§»é?¤ç??å­? 
		*/
		removeCache(): void;	
	}	
	/** !#en
	use to cache something
	
	!#zh
	??¨ä??ç¼?å­????äº????å®? */
	export class Cache<T = any> {		
		/**
		!#en
		Create a cache
		
		!#zh
		???å»ºä??ä¸? cache
		@param map An object used to initialize 
		*/
		constructor(map?: Record<string, T>);		
		/**
		!#en
		Add Key-Value to cache
		
		!#zh
		å¢??????®å?¼å¯¹??°ç??å­?ä¸?
		@param key The key
		@param val The value
		
		@example 
		```js
		var cache = new Cache();
		cache.add('test', null);
		``` 
		*/
		add(key: string, val: T): T;		
		/**
		!#en
		Get the cached content by key
		
		!#zh
		???è¿? key ??·å??å¯¹å????? value
		@param key The key
		
		@example 
		```js
		var cache = new Cache();
		var test = cache.get('test');
		``` 
		*/
		get(key: string): T;		
		/**
		!#en
		Check whether or not content exists by key
		
		!#zh
		???è¿? Key ??¤æ?­æ?¯å?¦å????¨å¯¹åº???????å®?
		@param key The key
		
		@example 
		```js
		var cache = new Cache();
		var exist = cache.has('test');
		``` 
		*/
		has(key: string): boolean;		
		/**
		!#en
		Remove the cached content by key
		
		!#zh
		???è¿? Key ç§»é?¤å¯¹åº???????å®?
		@param key The key
		
		@example 
		```js
		var cache = new Cache();
		var content = cache.remove('test');
		``` 
		*/
		remove(key: string): T;		
		/**
		!#en
		Clear all content
		
		!#zh
		æ¸???¤æ????????å®?
		
		@example 
		```js
		var cache = new Cache();
		cache.clear();
		``` 
		*/
		clear():void;		
		/**
		!#en
		Enumerate all content and invoke function
		
		!#zh
		???ä¸¾æ????????å®¹å¹¶??§è????¹æ??
		@param func Function to be invoked
		
		@example 
		```js
		var cache = new Cache();
		cache.forEach((val, key) => console.log(key));
		``` 
		*/
		forEach(func: (val: T, key: string) => void): void;		
		/**
		!#en
		Enumerate all content to find one element which can fulfill condition
		
		!#zh
		???ä¸¾æ????????å®¹ï????¾å?°ä??ä¸ªå?¯ä»¥æ»¡è¶³??¡ä»¶??????ç´?
		@param predicate The condition
		
		@example 
		```js
		var cache = new Cache();
		var val = cache.find((val, key) => key === 'test');
		``` 
		*/
		find(predicate: (val: T, key: string) => boolean): T;		
		/** !#en
		The count of cached content
		
		!#zh
		ç¼?å­???°é?? */
		count: number;		
		/**
		!#en
		Destroy this cache
		
		!#zh
		???æ¯?è¿?ä¸? cache 
		*/
		destroy(): void;	
	}	
	/** !#en
	Control asset's dependency list, it is a singleton. All member can be accessed with `cc.assetManager.dependUtil`
	
	!#zh
	??§å?¶è??æº????ä¾?èµ????è¡¨ï??è¿???¯ä??ä¸ªå??ä¾?, ??????????????½é??è¿? `cc.assetManager.dependUtil` è®¿é?? */
	export class DependUtil {		
		/**
		!#en
		Get asset's native dependency. For example, Texture's native dependency is image.
		
		!#zh
		??·å??èµ?æº??????????ä¾?èµ?ï¼?ä¾?å¦? Texture ?????????ä¾?èµ???¯å?¾ç??
		@param uuid asset's uuid
		
		@example 
		```js
		var dep = dependUtil.getNativeDep('fcmR3XADNLgJ1ByKhqcC5Z');
		``` 
		*/
		getNativeDep(uuid: string): Record<string, any>;		
		/**
		!#en
		Get asset's direct referencing non-native dependency list. For example, Material's non-native dependencies are Texture.
		
		!#zh
		??·å??èµ?æº???´æ?¥å????¨ç???????????ä¾?èµ????è¡¨ï??ä¾?å¦?ï¼????è´¨ç???????????ä¾?èµ???? Texture
		@param uuid asset's uuid
		
		@example 
		```js
		var deps = dependUtil.getDeps('fcmR3XADNLgJ1ByKhqcC5Z');
		``` 
		*/
		getDeps(uuid: string): string[];		
		/**
		!#en
		Get non-native dependency list of the loaded asset, include indirect reference.
		The returned array stores the dependencies with their uuid, after retrieve dependencies,
		
		!#zh
		??·å?????ä¸ªå·²ç»????è½½å¥½???èµ?æº???????????????????ä¾?èµ?èµ?æº????è¡¨ï???????¬é?´æ?¥å????¨ç??èµ?æº?ï¼?å¹¶ä??å­???¨æ?°ç??ä¸­è????????
		è¿?????????°ç??å°?ä»?ä¿?å­?ä¾?èµ?èµ?æº???? uuid???
		@param uuid The asset's uuid
		
		@example 
		```js
		var deps = dependUtil.getDepsRecursively('fcmR3XADNLgJ1ByKhqcC5Z');
		``` 
		*/
		getDepsRecursively(uuid: string): string[];	
	}	
	/** !#en
	Control all download process, it is a singleton. All member can be accessed with `cc.assetManager.downloader` , it can download several types of files:
	1. Text
	2. Image
	3. Audio
	4. Assets
	5. Scripts
	
	!#zh
	ç®¡ç????????ä¸?è½½è??ç¨?ï¼?downloader ??¯ä¸ª???ä¾?ï¼???????????????½é??è¿? `cc.assetManager.downloader` è®¿é?®ï??å®???½ä??è½½ä»¥ä¸????ç§?ç±»å????????ä»¶ï??
	1. ??????
	2. ??¾ç??
	3. ??³é??
	4. èµ?æº?
	5. ?????? */
	export class Downloader {		
		/** !#en
		The address of remote server
		
		!#zh
		è¿?ç¨??????¡å?¨å?°å?? */
		remoteServerAddress: string;		
		/** !#en
		The maximum number of concurrent when downloading
		
		!#zh
		ä¸?è½½æ?¶ç?????å¤§å¹¶?????? */
		maxConcurrency: number;		
		/** !#en
		The maximum number of request can be launched per frame when downloading
		
		!#zh
		ä¸?è½½æ?¶æ??å¸§å?¯ä»¥??¯å?¨ç?????å¤§è¯·æ±???? */
		maxRequestsPerFrame: number;		
		/** !#en
		The max number of retries when fail
		
		!#zh
		å¤±è´¥???è¯?æ¬¡æ?? */
		maxRetryCount: number;		
		/** !#en
		Wait for while before another retry, unit: ms
		
		!#zh
		???è¯??????´é????¶é?? */
		retryInterval: number;		
		/**
		!#en
		Register custom handler if you want to change default behavior or extend downloader to download other format file
		
		!#zh
		å½?ä½???³ä¿®??¹é??è®¤è??ä¸ºæ????????å±? downloader ??¥ä??è½½å?¶ä????¼å?????ä»¶æ?¶å?¯ä»¥æ³¨å????ªå??ä¹???? handler
		@param type Extension likes '.jpg' or map likes {'.jpg': jpgHandler, '.png': pngHandler}
		@param handler handler
		
		@example 
		```js
		downloader.register('.tga', (url, options, onComplete) => onComplete(null, null));
		downloader.register({'.tga': (url, options, onComplete) => onComplete(null, null), '.ext': (url, options, onComplete) => onComplete(null, null)});
		``` 
		*/
		register(type: string, handler: (url: string, options: Record<string, any>, onComplete: (err: Error, content: any) => void) => void): void;
		register(map: Record<string, (url: string, options: Record<string, any>, onComplete: (err: Error, content: any) => void) => void>): void;		
		/**
		!#en
		Use corresponding handler to download file under limitation
		
		!#zh
		??¨é????¶ä??ä½¿ç?¨å¯¹åº???? handler ??¥ä??è½½æ??ä»?
		@param url The url should be downloaded
		@param type The type indicates that which handler should be used to download, such as '.jpg'
		@param options some optional paramters will be transferred to the corresponding handler.
		@param onComplete callback when finishing downloading
		
		@example 
		```js
		download('http://example.com/test.tga', '.tga', {onFileProgress: (loaded, total) => console.lgo(loaded/total)}, onComplete: (err) => console.log(err));
		``` 
		*/
		download(id: string, url: string, type: string, options: Record<string, any>, onComplete: (err: Error, content: any) => void): void;	
	}	
	/** !#en
	Provide some helpful function, it is a singleton. All member can be accessed with `cc.assetManager.utils`
	
	!#zh
	???ä¾?ä¸?äº?è¾???©æ?¹æ??ï¼?helper ??¯ä??ä¸ªå??ä¾?, ??????????????½é??è¿? `cc.assetManager.utils` è®¿é?? */
	export class Helper {		
		/**
		!#en
		Decode uuid, returns the original uuid
		
		!#zh
		è§???? uuidï¼?è¿???????å§? uuid
		@param base64 the encoded uuid
		
		@example 
		```js
		var uuid = 'fcmR3XADNLgJ1ByKhqcC5Z';
		var originalUuid = decodeUuid(uuid); // fc991dd7-0033-4b80-9d41-c8a86a702e59
		``` 
		*/
		decodeUuid(base64: string): string;		
		/**
		!#en
		Extract uuid from url
		
		!#zh
		ä»? url ä¸­æ????? uuid
		@param url url
		
		@example 
		```js
		var url = 'assets/main/import/fc/fc991dd7-0033-4b80-9d41-c8a86a702e59.json';
		var uuid = getUuidFromURL(url); // fc991dd7-0033-4b80-9d41-c8a86a702e59
		``` 
		*/
		getUuidFromURL(url: string): string;		
		/**
		!#en
		Transform uuid to url
		
		!#zh
		è½¬æ?? uuid ä¸? url
		@param uuid The uuid of asset
		@param options Some optional parameters
		
		@example 
		```js
		// json path, 'assets/main/import/fc/fc991dd7-0033-4b80-9d41-c8a86a702e59.json';
		var url = getUrlWithUuid('fcmR3XADNLgJ1ByKhqcC5Z', {isNative: false});
		
		// png path, 'assets/main/native/fc/fc991dd7-0033-4b80-9d41-c8a86a702e59.png';
		var url = getUrlWithUuid('fcmR3XADNLgJ1ByKhqcC5Z', {isNative: true, nativeExt: '.png'});
		``` 
		*/
		getUrlWithUuid(uuid: string, options?: Record<string, any>): string;		
		/**
		!#en
		Check if the type of asset is scene
		
		!#zh
		æ£???¥è??æº?ç±»å????¯å?¦æ?¯å?ºæ??
		@param asset asset 
		*/
		isScene(asset: any): boolean;		
		/**
		!#en
		Normalize url, strip './' and '/'
		
		!#zh
		????????? url ï¼???»é?? './' ??? '/'
		@param url url 
		*/
		normalize(url: string): string;	
	}	
	/** !#en
	Handle the packed asset, include unpacking, loading, cache and so on. It is a singleton. All member can be accessed with `cc.assetManager.packManager`
	
	!#zh
	å¤??????????èµ?æº?ï¼??????¬æ?????ï¼????è½½ï??ç¼?å­?ç­?ç­?ï¼?è¿???¯ä??ä¸ªå??ä¾?, ??????????????½é??è¿? `cc.assetManager.packManager` è®¿é?? */
	export class PackManager {		
		/**
		!#en
		Unpack the json, revert to what it was before packing
		
		!#zh
		???è§? json ???ï¼???¢å??ä¸ºæ?????ä¹??????????å®?
		@param pack The pack
		@param json The content of pack
		@param options Some optional parameters
		@param onComplete Callback when finish unpacking
		
		@example 
		```js
		downloader.downloadFile('pack.json', {responseType: 'json'}, null, (err, file) => {
		     packManager.unpackJson(['a', 'b'], file, null, (err, data) => console.log(err));
		});
		``` 
		*/
		unpackJson(pack: string[], json: any, options: Record<string, any>, onComplete?: (err: Error, content: any) => void): void;		
		/**
		!#en
		Register custom handler if you want to change default behavior or extend packManager to unpack other format pack
		
		!#zh
		å½?ä½???³ä¿®??¹é??è®¤è??ä¸ºæ????????å±? packManager ??¥æ???????¶ä????¼å??????????¶å?¯ä»¥æ³¨å????ªå??ä¹???? handler
		@param type Extension likes '.bin' or map likes {'.bin': binHandler, '.ab': abHandler}
		@param handler handler
		
		@example 
		```js
		packManager.register('.bin', (packUuid, file, options, onComplete) => onComplete(null, null));
		packManager.register({'.bin': (packUuid, file, options, onComplete) => onComplete(null, null), '.ab': (packUuid, file, options, onComplete) => onComplete(null, null)});
		``` 
		*/
		register(type: string, handler: (packUuid: string, data: any, options: Record<string, any>, onComplete: (err: Error, content: any) => void) => void): void;
		register(map: Record<string, (packUuid: string, data: any, options: Record<string, any>, onComplete: (err: Error, content: any) => void) => void>): void;		
		/**
		!#en
		Use corresponding handler to unpack package
		
		!#zh
		??¨å¯¹åº???? handler ??¥è??è¡?è§????
		@param pack The uuid of packed assets
		@param data The packed data
		@param type The type indicates that which handler should be used to download, such as '.jpg'
		@param options Some optional parameter
		@param onComplete callback when finishing unpacking
		
		@example 
		```js
		downloader.downloadFile('pack.json', {responseType: 'json'}, null, (err, file) => {
		     packManager.unpack(['2fawq123d', '1zsweq23f'], file, '.json', null, (err, data) => console.log(err));
		});
		``` 
		*/
		unpack(pack: string[], data: any, type: string, options: Record<string, any>, onComplete?: (err: Error, data: any) => void): void;		
		/**
		!#en
		Download request item, If item is not in any package, download as usual. Otherwise, download the corresponding package and unpack it.
		And then retrieve the corresponding content form it.
		
		!#zh
		ä¸?è½½è¯·æ±?å¯¹è±¡ï¼?å¦????è¯·æ??å¯¹è±¡ä¸???¨ä»»ä½???????ï¼????æ­?å¸¸ä??è½½ï????¦å??ä¸?è½½å¯¹åº???? package å¹¶è??è¡????è§?ï¼?å¹¶å???????????å¯¹å????????å®?
		@param item Some item you want to download
		@param options Some optional parameters
		@param onComplete Callback when finished
		
		@example 
		```js
		var requestItem = cc.AssetManager.RequestItem.create();
		requestItem.uuid = 'fcmR3XADNLgJ1ByKhqcC5Z';
		requestItem.info = config.getAssetInfo('fcmR3XADNLgJ1ByKhqcC5Z');
		packManager.load(requestItem, null, (err, data) => console.log(err));
		``` 
		*/
		load(item: RequestItem, options: Record<string, any>, onComplete: (err: Error, data: any) => void): void;	
	}	
	/** !#en
	Parse the downloaded file, it's a singleton, all member can be accessed with `cc.assetManager.parser`
	
	!#zh
	è§????å·²ä??è½½ç?????ä»¶ï??parser ??¯ä??ä¸ªå??ä¾?, ??????????????½é??è¿? `cc.assetManaager.parser` è®¿é?? */
	export class Parser {		
		/**
		!#en
		Register custom handler if you want to change default behavior or extend parser to parse other format file
		
		!#zh
		å½?ä½???³ä¿®??¹é??è®¤è??ä¸ºæ????????å±? parser ??¥è§£?????¶ä????¼å?????ä»¶æ?¶å?¯ä»¥æ³¨å????ªå??ä¹????handler
		@param type Extension likes '.jpg' or map likes {'.jpg': jpgHandler, '.png': pngHandler}
		@param handler The corresponding handler
		
		@example 
		```js
		parser.register('.tga', (file, options, onComplete) => onComplete(null, null));
		parser.register({'.tga': (file, options, onComplete) => onComplete(null, null), '.ext': (file, options, onComplete) => onComplete(null, null)});
		``` 
		*/
		register(type: string, handler: (file: any, options: Record<string, any>, onComplete: (err: Error, data: any) => void) => void): void;
		register(map: Record<string, (file: any, options: Record<string, any>, onComplete: (err: Error, data: any) => void) => void>): void;		
		/**
		!#en
		Use corresponding handler to parse file
		
		!#zh
		ä½¿ç?¨å¯¹åº????handler??¥è§£??????ä»?
		@param id The id of file
		@param file File
		@param type The corresponding type of file, likes '.jpg'.
		@param options Some optional paramters will be transferred to the corresponding handler.
		@param onComplete callback when finishing downloading
		
		@example 
		```js
		downloader.downloadFile('test.jpg', {responseType: 'blob'}, null, (err, file) => {
		     parser.parse('test.jpg', file, '.jpg', null, (err, img) => console.log(err));
		});
		``` 
		*/
		parse(id: string, file: any, type: string, options: Record<string, any>, onComplete: (err: Error, content: any) => void): void;	
	}	
	/** !#en
	Pipeline can execute the task for some effect.
	
	!#zh
	ç®¡çº¿??½æ?§è??ä»»å?¡è¾¾??°æ??ä¸ªæ????? */
	export class Pipeline {		
		/** !#en
		The id of pipeline
		
		!#zh
		ç®¡çº¿??? id */
		id: number;		
		/** !#en
		The name of pipeline
		
		!#zh
		ç®¡çº¿??????å­? */
		name: string;		
		/** !#en
		All pipes of pipeline
		
		!#zh
		?????????ç®¡é?? */
		pipes: Function[];		
		/**
		!#en
		Create a new pipeline
		
		!#zh
		???å»ºä??ä¸ªç®¡çº?
		@param name The name of pipeline
		@param funcs The array of pipe, every pipe must be function which take two parameters, the first is a `Task` flowed in pipeline, the second is complete callback
		
		@example 
		```js
		var pipeline = new Pipeline('download', [
		(task, done) => {
		     var url = task.input;
		     cc.assetManager.downloader.downloadFile(url, null, null, (err, result) => {
		         task.output = result;
		         done(err);
		     });
		},
		(task, done) => {
		     var text = task.input;
		     var json = JSON.stringify(text);
		     task.output = json;
		     done();
		}
		]);
		``` 
		*/
		constructor(name: string, funcs: Array<(task: Task, done?: (err: Error) => void) => void>);		
		/**
		!#en
		At specific point insert a new pipe to pipeline
		
		!#zh
		??¨æ??ä¸ªç?¹å???????¹ä¸ºç®¡çº¿?????¥ä??ä¸ªæ?°ç?? pipe
		@param func The new pipe
		@param index The specific point you want to insert at.
		
		@example 
		```js
		var pipeline = new Pipeline('test', []);
		pipeline.insert((task, done) => {
		     // do something
		     done();
		}, 0);
		``` 
		*/
		insert(func: (task: Task, callback?: (err: Error) => void) => void, index: number): Pipeline;		
		/**
		!#en
		Append a new pipe to the pipeline
		
		!#zh
		æ·»å??ä¸?ä¸ªç®¡?????°ç®¡çº¿ä¸­
		@param func The new pipe
		
		@example 
		```js
		var pipeline = new Pipeline('test', []);
		pipeline.append((task, done) => {
		     // do something
		     done();
		});
		``` 
		*/
		append(func: (task: Task, callback?: (err: Error) => void) => void): Pipeline;		
		/**
		!#en
		Remove pipe which at specific point
		
		!#zh
		ç§»é?¤ç?¹å??ä½?ç½®ç??ç®¡é??
		@param index The specific point
		
		@example 
		```js
		var pipeline = new Pipeline('test', (task, done) => {
		     // do something
		     done();
		});
		pipeline.remove(0);
		``` 
		*/
		remove(index: number): Pipeline;		
		/**
		!#en
		Execute task synchronously
		
		!#zh
		???æ­¥æ?§è??ä»»å??
		@param task The task will be executed
		
		@example 
		```js
		var pipeline = new Pipeline('sync', [(task) => {
		     let input = task.input;
		     task.output = doSomething(task.input);
		}]);
		
		var task = new Task({input: 'test'});
		console.log(pipeline.sync(task));
		``` 
		*/
		sync(task: Task): any;		
		/**
		!#en
		Execute task asynchronously
		
		!#zh
		å¼?æ­¥æ?§è??ä»»å??
		@param task The task will be executed
		
		@example 
		```js
		var pipeline = new Pipeline('sync', [(task, done) => {
		     let input = task.input;
		     task.output = doSomething(task.input);
		     done();
		}]);
		var task = new Task({input: 'test', onComplete: (err, result) => console.log(result)});
		pipeline.async(task);
		``` 
		*/
		async(task: Task): void;	
	}	
	/** !#en
	A collection of information about a request
	
	!#zh
	è¯·æ???????¸å?³ä¿¡??¯é????? */
	export class RequestItem {		
		/** !#en
		The uuid of request
		
		!#zh
		è¯·æ??èµ?æº????uuid */
		uuid: string;		
		/** !#en
		The final url of request
		
		!#zh
		è¯·æ????????ç»?url */
		url: string;		
		/** !#en
		The extension name of asset
		
		!#zh
		èµ?æº??????©å????? */
		ext: string;		
		/** !#en
		The content of asset
		
		!#zh
		èµ?æº???????å®? */
		content: any;		
		/** !#en
		The file of asset
		
		!#zh
		èµ?æº???????ä»? */
		file: any;		
		/** !#en
		The information of asset
		
		!#zh
		èµ?æº??????¸å?³ä¿¡??? */
		info: any;		
		/** !#en
		Whether or not it is native asset
		
		!#zh
		èµ?æº???¯å?¦æ?¯å?????èµ?æº? */
		isNative: boolean;		
		/** !#en
		Custom options
		
		!#zh
		??ªå??ä¹??????? */
		options: any;		
		/**
		!#en
		Create a request item
		
		!#zh
		???å»ºä??ä¸? request item 
		*/
		constructor();		
		/** !#en
		The id of request, combined from uuid and isNative
		
		!#zh
		è¯·æ????? id, ??? uuid ??? isNative ç»?????????? */
		id: string;		
		/**
		!#en
		Recycle this for reuse
		
		!#zh
		?????? requestItem ??¨ä??å¤???? 
		*/
		recycle(): void;		
		/**
		!#en
		Create a new request item from pool
		
		!#zh
		ä»?å¯¹è±¡æ±?ä¸­å??å»? requestItem 
		*/
		static create(): RequestItem;	
	}	
	/** !#en
	The builtin bundles
	
	!#zh
	???ç½? bundle */
	export enum BuiltinBundleName {		
		RESOURCES = 0,
		INTERNAL = 0,
		MAIN = 0,
		START_SCENE = 0,	
	}	
	/** !#en
	Task is used to run in the pipeline for some effect
	
	!#zh
	ä»»å?¡ç?¨ä????¨ç®¡çº¿ä¸­è¿?è¡?ä»¥è¾¾??????ç§??????? */
	export class Task {		
		/** !#en
		The id of task
		
		!#zh
		ä»»å?¡id */
		id: number;		
		/** !#en
		The callback when task is completed
		
		!#zh
		å®???????è°? */
		onComplete: Function;		
		/** !#en
		The callback of progression
		
		!#zh
		è¿?åº¦å??è°? */
		onProgress: Function;		
		/** !#en
		The callback when something goes wrong
		
		!#zh
		???è¯¯å??è°? */
		onError: Function;		
		/** !#en
		The source of task
		
		!#zh
		ä»»å?¡ç??æº? */
		source: any;		
		/** !#en
		The output of task
		
		!#zh
		ä»»å?¡ç??è¾???? */
		output: any;		
		/** !#en
		The input of task
		
		!#zh
		ä»»å?¡ç??è¾???? */
		input: any;		
		/** !#en
		The progression of task
		
		!#zh
		ä»»å?¡ç??è¿?åº? */
		progress: any;		
		/** !#en
		Custom options
		
		!#zh
		??ªå??ä¹??????? */
		options: any;		
		/**
		!#en
		Create a new Task
		
		!#zh
		???å»ºä??ä¸ªä»»???
		@param options Some optional paramters 
		*/
		constructor(options?: {onComplete?: (err: Error, result: any) => void, onError?: () => void, onProgress?: Function, input: any, progress?: any, options?: Record<string, any>});		
		/**
		!#en
		Set paramters of this task
		
		!#zh
		è®¾ç½®ä»»å?¡ç????????
		@param options Some optional paramters
		
		@example 
		```js
		var task = new Task();
		task.set({input: ['test'], onComplete: (err, result) => console.log(err), onProgress: (finish, total) => console.log(finish / total)});
		``` 
		*/
		set(options?: {onComplete?: (err: Error, result: any) => void, onError?: () => void, onProgress?: Function, input: any, progress?: any, options?: Record<string, any>}): void;		
		/**
		!#en
		Dispatch event
		
		!#zh
		???å¸?äº?ä»?
		@param event The event name
		@param param1 Parameter 1
		@param param2 Parameter 2
		@param param3 Parameter 3
		@param param4 Parameter 4
		
		@example 
		```js
		var task = Task.create();
		Task.onComplete = (msg) => console.log(msg);
		Task.dispatch('complete', 'hello world');
		``` 
		*/
		dispatch(event: string, param1?: any, param2?: any, param3?: any, param4?: any): void;		
		/**
		!#en
		Recycle this for reuse
		
		!#zh
		?????? task ??¨ä??å¤???? 
		*/
		recycle(): void;		
		/** !#en
		Whether or not this task is completed
		
		!#zh
		æ­¤ä»»??¡æ?¯å?¦å·²ç»?å®???? */
		isFinish: boolean;		
		/**
		!#en
		Create a new task from pool
		
		!#zh
		ä»?å¯¹è±¡æ±?ä¸­å??å»? task
		@param options Some optional paramters 
		*/
		static create(options?: {onComplete?: (err: Error, result: any) => void, onError?: () => void, onProgress?: Function, input: any, progress?: any, options?: Record<string, any>}): Task;	
	}
}

/** Some helpful utilities */
declare namespace cc.geomUtils {	
	/**
	!#en
	the distance between a point and a plane
	!#zh
	è®¡ç????¹å??å¹³é?¢ä????´ç??è·?ç¦»ã??
	@param point point
	@param plane plane 
	*/
	export function point_plane(point: cc.Vec3, plane: cc.Plane): number;	
	/**
	!#en
	the closest point on plane to a given point
	!#zh
	è®¡ç??å¹³é?¢ä???????¥è??ç»?å®???¹ç????¹ã??
	@param out Closest point
	@param point Given point
	@param plane plane 
	*/
	export function pt_point_plane(out: cc.Vec3, point: cc.Vec3, plane: cc.Plane): cc.Vec3;	
	/**
	!#en
	the closest point on aabb to a given point
	!#zh
	è®¡ç?? aabb ä¸??????¥è??ç»?å®???¹ç????¹ã??
	@param out Closest point.
	@param point Given point.
	@param aabb Align the axis around the box. 
	*/
	export function pt_point_aabb(out: cc.Vec3, point: cc.Vec3, aabb: cc.Aabb): cc.Vec3;	
	/**
	!#en
	the closest point on obb to a given point
	!#zh
	è®¡ç?? obb ä¸??????¥è??ç»?å®???¹ç????¹ã??
	@param out Closest point
	@param point Given point
	@param obb Direction box 
	*/
	export function pt_point_obb(out: cc.Vec3, point: cc.Vec3, obb: cc.Obb): cc.Vec3;
}

/** !#en Some JavaScript decorators which can be accessed with "cc._decorator".
!#zh ä¸?äº? JavaScript è£?é¥°å?¨ï????®å????¯ä»¥???è¿? "cc._decorator" ??¥è®¿??®ã??
ï¼?è¿?äº? API ä»?ä¸?å®???¨ç¨³å®?ï¼??????¯è?½é????? JavaScript è£?é¥°å?¨ç????????å®???°è??è°???´ï?? */
declare namespace cc._decorator {	
	/**
	!#en
	Declare the standard [ES6 Class](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes)
	as CCClass, please see [Class](../../../manual/en/scripting/class.html) for details.
	!#zh
	å°??????????æ³???? [ES6 Class](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes) å£°æ??ä¸? CCClassï¼???·ä????¨æ??è¯·å?????[ç±»å??å®?ä¹?](../../../manual/zh/scripting/class.html)???
	@param name The class name used for serialization.
	
	@example 
	```js
	const {ccclass} = cc._decorator;
	
	// define a CCClass, omit the name
	&#64;ccclass
	class NewScript extends cc.Component {
	    // ...
	}
	
	// define a CCClass with a name
	&#64;ccclass('LoginData')
	class LoginData {
	    // ...
	}
	``` 
	*/
	export function ccclass(name?: string): Function;
	export function ccclass(_class?: Function): void;	
	/**
	!#en
	Declare property for [CCClass](../../../manual/en/scripting/reference/attributes.html).
	!#zh
	å®?ä¹? [CCClass](../../../manual/zh/scripting/reference/attributes.html) ?????¨ç??å±???§ã??
	@param options an object with some property attributes
	
	@example 
	```js
	const {ccclass, property} = cc._decorator;
	
	&#64;ccclass
	class NewScript extends cc.Component {
	    &#64;property({
	        type: cc.Node
	    })
	    targetNode1 = null;
	
	    &#64;property(cc.Node)
	    targetNode2 = null;
	
	    &#64;property(cc.Button)
	    targetButton = null;
	
	    &#64;property
	    _width = 100;
	
	    &#64;property
	    get width () {
	        return this._width;
	    }
	
	    &#64;property
	    set width (value) {
	        this._width = value;
	    }
	
	    &#64;property
	    offset = new cc.Vec2(100, 100);
	
	    &#64;property(cc.Vec2)
	    offsets = [];
	
	    &#64;property(cc.SpriteFrame)
	    frame = null;
	}
	
	// above is equivalent to (ä¸???¢ç??ä»??????¸å??äº?):
	
	var NewScript = cc.Class({
	    properties: {
	        targetNode1: {
	            default: null,
	            type: cc.Node
	        },
	
	        targetNode2: {
	            default: null,
	            type: cc.Node
	        },
	
	        targetButton: {
	            default: null,
	            type: cc.Button
	        },
	
	        _width: 100,
	
	        width: {
	            get () {
	                return this._width;
	            },
	            set (value) {
	                this._width = value;
	            }
	        },
	
	        offset: new cc.Vec2(100, 100)
	
	        offsets: {
	            default: [],
	            type: cc.Vec2
	        }
	
	        frame: {
	            default: null,
	            type: cc.SpriteFrame
	        },
	    }
	});
	``` 
	*/
	export function property(options?: {type?: any; visible?: boolean|(() => boolean); displayName?: string; tooltip?: string; multiline?: boolean; readonly?: boolean; min?: number; max?: number; step?: number; range?: number[]; slide?: boolean; serializable?: boolean; formerlySerializedAs?: string; editorOnly?: boolean; override?: boolean; animatable?: boolean} | any[]|Function|cc.ValueType|number|string|boolean): Function;
	export function property(_target: Object, _key: any, _desc?: any): void;	
	/**
	!#en
	Makes a CCClass that inherit from component execute in edit mode.<br>
	By default, all components are only executed in play mode,
	which means they will not have their callback functions executed while the Editor is in edit mode.
	!#zh
	???è®¸ç»§??¿è?? Component ??? CCClass ??¨ç??è¾???¨é????§è?????<br>
	é»?è®¤æ????µä??ï¼??????? Component ??½å?ªä????¨è??è¡???¶æ??ä¼???§è??ï¼?ä¹?å°±æ?¯è¯´å®?ä»¬ç???????½å?¨æ?????è°?ä¸?ä¼???¨ç??è¾???¨é??è§¦å?????
	
	@example 
	```js
	const {ccclass, executeInEditMode} = cc._decorator;
	
	&#64;ccclass
	&#64;executeInEditMode
	class NewScript extends cc.Component {
	    // ...
	}
	``` 
	*/
	export function executeInEditMode(): Function;
	export function executeInEditMode(_class: Function): void;	
	/**
	!#en
	Automatically add required component as a dependency for the CCClass that inherit from component.
	!#zh
	ä¸ºå£°???ä¸? CCClass ???ç»?ä»¶æ·»???ä¾?èµ??????¶å??ç»?ä»¶ã??å½?ç»?ä»¶æ·»?????°è????¹ä????¶ï??å¦????ä¾?èµ????ç»?ä»¶ä??å­???¨ï??å¼????å°?ä¼???ªå?¨å??ä¾?èµ?ç»?ä»¶æ·»?????°å??ä¸?ä¸ªè????¹ï????²æ­¢?????¬å?ºé?????è¯¥è®¾ç½®å?¨è??è¡???¶å????·æ????????
	@param requiredComponent requiredComponent
	
	@example 
	```js
	const {ccclass, requireComponent} = cc._decorator;
	
	&#64;ccclass
	&#64;requireComponent(cc.Sprite)
	class SpriteCtrl extends cc.Component {
	    // ...
	}
	``` 
	*/
	export function requireComponent(requiredComponent: typeof cc.Component): Function;	
	/**
	!#en
	The menu path to register a component to the editors "Component" menu. Eg. "Rendering/CameraCtrl".
	!#zh
	å°?å½????ç»?ä»¶æ·»?????°ç??ä»¶è?????ä¸­ï????¹ä¾¿??¨æ?·æ?¥æ?¾ã??ä¾?å¦? "Rendering/CameraCtrl"???
	@param path The path is the menu represented like a pathname.
	                       For example the menu could be "Rendering/CameraCtrl".
	
	@example 
	```js
	const {ccclass, menu} = cc._decorator;
	
	&#64;ccclass
	&#64;menu("Rendering/CameraCtrl")
	class NewScript extends cc.Component {
	    // ...
	}
	``` 
	*/
	export function menu(path: string): Function;	
	/**
	!#en
	The execution order of lifecycle methods for Component.
	Those less than 0 will execute before while those greater than 0 will execute after.
	The order will only affect onLoad, onEnable, start, update and lateUpdate while onDisable and onDestroy will not be affected.
	!#zh
	è®¾ç½®?????¬ç????½å?¨æ????¹æ??è°???¨ç??ä¼????çº§ã??ä¼????çº§å??äº? 0 ???ç»?ä»¶å??ä¼?ä¼??????§è??ï¼?ä¼????çº§å¤§äº? 0 ???ç»?ä»¶å??ä¼?å»¶å????§è?????ä¼????çº§ä??ä¼?å½±å?? onLoad, onEnable, start, update ??? lateUpdateï¼???? onDisable ??? onDestroy ä¸????å½±å?????
	@param order The execution order of lifecycle methods for Component. Those less than 0 will execute before while those greater than 0 will execute after.
	
	@example 
	```js
	const {ccclass, executionOrder} = cc._decorator;
	
	&#64;ccclass
	&#64;executionOrder(1)
	class CameraCtrl extends cc.Component {
	    // ...
	}
	``` 
	*/
	export function executionOrder(order: number): Function;	
	/**
	!#en
	Prevents Component of the same type (or subtype) to be added more than once to a Node.
	!#zh
	??²æ­¢å¤?ä¸ªç?¸å??ç±»å??ï¼????å­?ç±»å??ï¼????ç»?ä»¶è¢«æ·»å????°å??ä¸?ä¸ªè????¹ã??
	
	@example 
	```js
	const {ccclass, disallowMultiple} = cc._decorator;
	
	&#64;ccclass
	&#64;disallowMultiple
	class CameraCtrl extends cc.Component {
	    // ...
	}
	``` 
	*/
	export function disallowMultiple(): Function;
	export function disallowMultiple(_class: Function): void;	
	/**
	!#en
	If specified, the editor's scene view will keep updating this node in 60 fps when it is selected, otherwise, it will update only if necessary.<br>
	This property is only available if executeInEditMode is true.
	!#zh
	å½????å®?äº? "executeInEditMode" ä»¥å??ï¼?playOnFocus ??¯ä»¥??¨é??ä¸­å?????ç»?ä»¶æ????¨ç???????¹æ?¶ï?????é«?ç¼?è¾???¨ç????ºæ?¯å?·æ?°é???????? 60 FPSï¼???¦å????ºæ?¯å°±??ªä????¨å??è¦??????¶å??è¿?è¡????ç»????
	
	@example 
	```js
	const {ccclass, playOnFocus, executeInEditMode} = cc._decorator;
	
	&#64;ccclass
	&#64;executeInEditMode
	&#64;playOnFocus
	class CameraCtrl extends cc.Component {
	    // ...
	}
	``` 
	*/
	export function playOnFocus(): Function;
	export function playOnFocus(_class: Function): void;	
	/**
	!#en
	Specifying the url of the custom html to draw the component in **Properties**.
	!#zh
	??ªå??ä¹?å½????ç»?ä»¶å?? **å±???§æ????¥å??** ä¸­æ¸²?????¶æ????¨ç??ç½?é¡? url???
	@param url url
	
	@example 
	```js
	const {ccclass, inspector} = cc._decorator;
	
	&#64;ccclass
	&#64;inspector("packages://inspector/inspectors/comps/camera-ctrl.js")
	class NewScript extends cc.Component {
	    // ...
	}
	``` 
	*/
	export function inspector(path: string): Function;	
	/**
	!#en
	The custom documentation URL.
	!#zh
	???å®?å½????ç»?ä»¶ç??å¸®å?©æ??æ¡???? urlï¼?è®¾ç½®è¿????ï¼???? **å±???§æ????¥å??** ä¸­å°±ä¼???ºç?°ä??ä¸ªå¸®??©å?¾æ??ï¼???¨æ?·ç?¹å?»å?????å¼????å®????ç½?é¡µã??
	@param url url
	
	@example 
	```js
	const {ccclass, help} = cc._decorator;
	
	&#64;ccclass
	&#64;help("app://docs/html/components/spine.html")
	class NewScript extends cc.Component {
	    // ...
	}
	``` 
	*/
	export function help(path: string): Function;	
	/**
	NOTE:<br>
	The old mixins implemented in cc.Class(ES5) behaves exact the same as multiple inheritance.
	But since ES6, class constructor can't be function-called and class methods become non-enumerable,
	so we can not mix in ES6 Classes.<br>
	See:<br>
	[https://esdiscuss.org/topic/traits-are-now-impossible-in-es6-until-es7-since-rev32](https://esdiscuss.org/topic/traits-are-now-impossible-in-es6-until-es7-since-rev32)<br>
	One possible solution (but IDE unfriendly):<br>
	[http://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes](http://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/)<br>
	<br>
	NOTE:<br>
	You must manually call mixins constructor, this is different from cc.Class(ES5).
	@param ctor constructors to mix, only support ES5 constructors or classes defined by using `cc.Class`,
	                            not support ES6 Classes.
	
	@example 
	```js
	const {ccclass, mixins} = cc._decorator;
	
	class Animal { ... }
	
	const Fly = cc.Class({
	    constructor () { ... }
	});
	
	&#64;ccclass
	&#64;mixins(cc.EventTarget, Fly)
	class Bird extends Animal {
	    constructor () {
	        super();
	
	        // You must manually call mixins constructor, this is different from cc.Class(ES5)
	        cc.EventTarget.call(this);
	        Fly.call(this);
	    }
	    // ...
	}
	``` 
	*/
	export function mixins(ctor: Function, ...rest: Function[]): Function;
}

/** !#en This module provides some JavaScript utilities. All members can be accessed with `cc.js`.
!#zh è¿?ä¸ªæ¨¡???å°?è£?äº? JavaScript ??¸å?³ç??ä¸?äº?å®???¨å?½æ?°ï??ä½???¯ä»¥???è¿? `cc.js` ??¥è®¿??®è??ä¸ªæ¨¡?????? */
declare namespace cc.js {	
	/**
	Check the obj whether is number or not
	If a number is created by using 'new Number(10086)', the typeof it will be "object"...
	Then you can use this function if you care about this case.
	@param obj obj 
	*/
	export function isNumber(obj: any): boolean;	
	/**
	Check the obj whether is string or not.
	If a string is created by using 'new String("blabla")', the typeof it will be "object"...
	Then you can use this function if you care about this case.
	@param obj obj 
	*/
	export function isString(obj: any): boolean;	
	/**
	Copy all properties not defined in obj from arguments[1...n]
	@param obj object to extend its properties
	@param sourceObj source object to copy properties from 
	*/
	export function addon(obj: any, ...sourceObj: any[]): any;	
	/**
	copy all properties from arguments[1...n] to obj
	@param obj obj
	@param sourceObj sourceObj 
	*/
	export function mixin(obj: any, ...sourceObj: any[]): any;	
	/**
	Derive the class from the supplied base class.
	Both classes are just native javascript constructors, not created by cc.Class, so
	usually you will want to inherit using {{#crossLink "cc/Class:method"}}cc.Class {{/crossLink}} instead.
	@param cls cls
	@param base the baseclass to inherit 
	*/
	export function extend(cls: Function, base: Function): Function;	
	/**
	Get super class
	@param ctor the constructor of subclass 
	*/
	export function getSuper(ctor: Function): Function;	
	/**
	Checks whether subclass is child of superclass or equals to superclass
	@param subclass subclass
	@param superclass superclass 
	*/
	export function isChildClassOf(subclass: Function, superclass: Function): boolean;	
	/**
	Removes all enumerable properties from object
	@param obj obj 
	*/
	export function clear(obj: any): void;	
	/**
	Checks whether obj is an empty object
	@param obj obj 
	*/
	export function isEmptyObject(obj: any): boolean;	
	/**
	Get property descriptor in object and all its ancestors
	@param obj obj
	@param name name 
	*/
	export function getPropertyDescriptor(obj: any, name: string): any;	
	/**
	Define value, just help to call Object.defineProperty.<br>
	The configurable will be true.
	@param obj obj
	@param prop prop
	@param value value
	@param writable writable
	@param enumerable enumerable 
	*/
	export function value(obj: any, prop: string, value: any, writable?: boolean, enumerable?: boolean): void;	
	/**
	Define get set accessor, just help to call Object.defineProperty(...)
	@param obj obj
	@param prop prop
	@param getter getter
	@param setter setter
	@param enumerable enumerable
	@param configurable configurable 
	*/
	export function getset(obj: any, prop: string, getter: Function, setter?: Function, enumerable?: boolean, configurable?: boolean): void;	
	/**
	Define get accessor, just help to call Object.defineProperty(...)
	@param obj obj
	@param prop prop
	@param getter getter
	@param enumerable enumerable
	@param configurable configurable 
	*/
	export function get(obj: any, prop: string, getter: Function, enumerable?: boolean, configurable?: boolean): void;	
	/**
	Define set accessor, just help to call Object.defineProperty(...)
	@param obj obj
	@param prop prop
	@param setter setter
	@param enumerable enumerable
	@param configurable configurable 
	*/
	export function set(obj: any, prop: string, setter: Function, enumerable?: boolean, configurable?: boolean): void;	
	/**
	Get class name of the object, if object is just a {} (and which class named 'Object'), it will return "".
	(modified from <a href="http://stackoverflow.com/questions/1249531/how-to-get-a-javascript-objects-class">the code from this stackoverflow post</a>)
	@param objOrCtor instance or constructor 
	*/
	export function getClassName(objOrCtor: any|Function): string;	
	/** !#en All classes registered in the engine, indexed by ID.
	!#zh å¼????ä¸­å·²æ³¨å???????????ç±»å??ï¼????è¿? ID è¿?è¡?ç´¢å????? */
	export var _registeredClassIds: any;	
	/** !#en All classes registered in the engine, indexed by name.
	!#zh å¼????ä¸­å·²æ³¨å???????????ç±»å??ï¼????è¿????ç§°è??è¡?ç´¢å????? */
	export var _registeredClassNames: any;	
	/**
	Register the class by specified name manually
	@param className className
	@param constructor constructor 
	*/
	export function setClassName(className: string, constructor: Function): void;	
	/**
	Unregister a class from fireball.
	
	If you dont need a registered class anymore, you should unregister the class so that Fireball will not keep its reference anymore.
	Please note that its still your responsibility to free other references to the class.
	@param constructor the class you will want to unregister, any number of classes can be added 
	*/
	export function unregisterClass(...constructor: Function[]): void;	
	/**
	Get the registered class by name
	@param classname classname 
	*/
	export function getClassByName(classname: string): Function;	
	/**
	Defines a polyfill field for deprecated codes.
	@param obj YourObject or YourClass.prototype
	@param obsoleted "OldParam" or "YourClass.OldParam"
	@param newExpr "NewParam" or "YourClass.NewParam"
	@param writable writable 
	*/
	export function obsolete(obj: any, obsoleted: string, newExpr: string, writable?: boolean): void;	
	/**
	Defines all polyfill fields for obsoleted codes corresponding to the enumerable properties of props.
	@param obj YourObject or YourClass.prototype
	@param objName "YourObject" or "YourClass"
	@param props props
	@param writable writable 
	*/
	export function obsoletes(obj: any, objName: any, props: any, writable?: boolean): void;	
	/**
	A string tool to construct a string with format string.
	@param msg A JavaScript string containing zero or more substitution strings (%s).
	@param subst JavaScript objects with which to replace substitution strings within msg. This gives you additional control over the format of the output.
	
	@example 
	```js
	cc.js.formatStr("a: %s, b: %s", a, b);
	cc.js.formatStr(a, b, c);
	``` 
	*/
	export function formatStr(msg: string|any, ...subst: any[]): string;	
	/**
	!#en
	A simple wrapper of `Object.create(null)` which ensures the return object have no prototype (and thus no inherited members). So we can skip `hasOwnProperty` calls on property lookups. It is a worthwhile optimization than the `{}` literal when `hasOwnProperty` calls are necessary.
	!#zh
	è¯¥æ?¹æ????¯å¯¹ `Object.create(null)` ???ç®????å°?è£????`Object.create(null)` ??¨ä?????å»ºæ?? prototype ï¼?ä¹?å°±æ??ç»§æ?¿ï?????ç©ºå¯¹è±¡ã??è¿???·æ??ä»¬å?¨è¯¥å¯¹è±¡ä¸???¥æ?¾å????§æ?¶ï??å°±ä????¨è??è¡? `hasOwnProperty` ??¤æ?­ã????¨é??è¦?é¢?ç¹???¤æ?? `hasOwnProperty` ??¶ï??ä½¿ç?¨è??ä¸ªæ?¹æ????§è?½ä??æ¯? `{}` ??´é?????
	@param forceDictMode Apply the delete operator to newly created map object. This causes V8 to put the object in "dictionary mode" and disables creation of hidden classes which are very expensive for objects that are constantly changing shape. 
	*/
	export function createMap(forceDictMode?: boolean): any;	
	/** undefined */
	export class array {		
		/**
		Removes the array item at the specified index.
		@param array array
		@param index index 
		*/
		static removeAt(array: any[], index: number): void;		
		/**
		Removes the array item at the specified index.
		It's faster but the order of the array will be changed.
		@param array array
		@param index index 
		*/
		static fastRemoveAt(array: any[], index: number): void;		
		/**
		Removes the first occurrence of a specific object from the array.
		@param array array
		@param value value 
		*/
		static remove(array: any[], value: any): boolean;		
		/**
		Removes the first occurrence of a specific object from the array.
		It's faster but the order of the array will be changed.
		@param array array
		@param value value 
		*/
		static fastRemove(array: any[], value: number): void;		
		/**
		Verify array's Type
		@param array array
		@param type type 
		*/
		static verifyType(array: any[], type: Function): boolean;		
		/**
		Removes from array all values in minusArr. For each Value in minusArr, the first matching instance in array will be removed.
		@param array Source Array
		@param minusArr minus Array 
		*/
		static removeArray(array: any[], minusArr: any[]): void;		
		/**
		Inserts some objects at index
		@param array array
		@param addObjs addObjs
		@param index index 
		*/
		static appendObjectsAt(array: any[], addObjs: any[], index: number): any[];		
		/**
		Determines whether the array contains a specific value.
		@param array array
		@param value value 
		*/
		static contains(array: any[], value: any): boolean;		
		/**
		Copy an array's item to a new array (its performance is better than Array.slice)
		@param array array 
		*/
		static copy(array: any[]): any[];	
	}	
	/** !#en
	A fixed-length object pool designed for general type.<br>
	The implementation of this object pool is very simple,
	it can helps you to improve your game performance for objects which need frequent release and recreate operations<br/>
	!#zh
	??¿åº¦??ºå?????å¯¹è±¡ç¼?å­?æ±?ï¼???¯ä»¥??¨æ?¥ç??å­????ç§?å¯¹è±¡ç±»å?????<br/>
	è¿?ä¸ªå¯¹è±¡æ?????å®???°é??å¸¸ç²¾ç®?ï¼?å®???¯ä»¥å¸®å?©æ?¨æ??é«?æ¸¸æ????§è?½ï???????¨ä??ä¼????å¯¹è±¡??????å¤????å»ºå?????æ¯???? */
	export class Pool {		
		/**
		!#en
		Constructor for creating an object pool for the specific object type.
		You can pass a callback argument for process the cleanup logic when the object is recycled.
		!#zh
		ä½¿ç?¨æ???????½æ?°æ?¥å??å»ºä??ä¸ªæ??å®?å¯¹è±¡ç±»å?????å¯¹è±¡æ±?ï¼???¨å?¯ä»¥ä¼????ä¸?ä¸ªå??è°???½æ?°ï????¨ä??å¤????å¯¹è±¡?????¶æ?¶ç??æ¸??????»è?????
		@param cleanupFunc the callback method used to process the cleanup logic when the object is recycled.
		@param size initializes the length of the array 
		*/
		constructor(cleanupFunc: (obj: any) => void, size: number);
		constructor(size: number);		
		/**
		!#en
		Get and initialize an object from pool. This method defaults to null and requires the user to implement it.
		!#zh
		??·å??å¹¶å??å§????å¯¹è±¡æ±?ä¸­ç??å¯¹è±¡???è¿?ä¸ªæ?¹æ??é»?è®¤ä¸ºç©ºï?????è¦???¨æ?·è?ªå·±å®???°ã??
		@param params parameters to used to initialize the object 
		*/
		get(...params: any[]): any;		
		/** !#en
		The current number of available objects, the default is 0, it will gradually increase with the recycle of the object,
		the maximum will not exceed the size specified when the constructor is called.
		!#zh
		å½??????¯ç?¨å¯¹è±¡æ?°é??ï¼?ä¸?å¼?å§?é»?è®¤æ?? 0ï¼???????å¯¹è±¡????????¶ä?????æ¸?å¢?å¤§ï?????å¤§ä??ä¼?è¶?è¿?è°???¨æ???????½æ?°æ?¶æ??å®???? size??? */
		count: number;		
		/**
		!#en
		Get an object from pool, if no available object in the pool, null will be returned.
		!#zh
		??·å??å¯¹è±¡æ±?ä¸­ç??å¯¹è±¡ï¼?å¦????å¯¹è±¡æ±?æ²¡æ????¯ç?¨å¯¹è±¡ï?????è¿????ç©ºã?? 
		*/
		_get(): any;		
		/**
		!#en Put an object into the pool.
		!#zh ???å¯¹è±¡æ±?è¿?è¿?ä¸?ä¸ªä????????è¦????å¯¹è±¡??? 
		*/
		put(): void;		
		/**
		!#en Resize the pool.
		!#zh è®¾ç½®å¯¹è±¡æ±?å®¹é????? 
		*/
		resize(): void;	
	}
}

/** !#en A basic module for creating vertex data for 3D objects. You can access this module by `cc.primitive`.
!#zh ä¸?ä¸ªå??å»? 3D ??©ä??é¡¶ç?¹æ?°æ?®ç????ºç??æ¨¡å??ï¼?ä½???¯ä»¥???è¿? `cc.primitive` ??¥è®¿??®è??ä¸ªæ¨¡?????? */
declare namespace cc.primitive {	
	/**
	!#en Create box vertex data
	!#zh ???å»ºé?¿æ?¹ä??é¡¶ç?¹æ?°æ??
	@param width width
	@param height height
	@param length length
	@param opts opts 
	*/
	export function box(width: number, height: number, length: number, opts: {widthSegments: number; heightSegments: number; lengthSegments: number; }): cc.VertexData;	
	/**
	!#en Create cone vertex data
	!#zh ???å»ºå????¥ä??é¡¶ç?¹æ?°æ??
	@param radius radius
	@param height height
	@param opts opts 
	*/
	export function cone(radius: number, height: number, opts: {radialSegments: number; heightSegments: number; capped: boolean; arc: number; }): cc.VertexData;	
	/**
	!#en Create cylinder vertex data
	!#zh ???å»ºå????±ä??é¡¶ç?¹æ?°æ??
	@param radiusTop radiusTop
	@param radiusBottom radiusBottom
	@param height height
	@param opts opts 
	*/
	export function cylinder(radiusTop: number, radiusBottom: number, height: number, opts: {radialSegments: number; heightSegments: number; capped: boolean; arc: number; }): cc.VertexData;	
	/**
	!#en Create plane vertex data
	!#zh ???å»ºå¹³??°é¡¶??¹æ?°æ??
	@param width width
	@param length length
	@param opts opts 
	*/
	export function plane(width: number, length: number, opts: {widthSegments: number; lengthSegments: number; }): cc.VertexData;	
	/**
	!#en Create quad vertex data
	!#zh ???å»ºé?¢ç??é¡¶ç?¹æ?°æ?? 
	*/
	export function quad(): cc.VertexData;	
	/**
	!#en Create sphere vertex data
	!#zh ???å»ºç??ä½?é¡¶ç?¹æ?°æ??
	@param radius radius
	@param opts opts 
	*/
	export function sphere(radius: number, opts: {segments: number; }): cc.VertexData;	
	/**
	!#en Create torus vertex data
	!#zh ???å»ºå????¯é¡¶??¹æ?°æ??
	@param radius radius
	@param tube tube
	@param opts opts 
	*/
	export function torus(radius: number, tube: number, opts: {radialSegments: number; tubularSegments: number; arc: number; }): cc.VertexData;	
	/**
	!#en Create capsule vertex data
	!#zh ???å»ºè?¶å??ä½?é¡¶ç?¹æ?°æ??
	@param radiusTop radiusTop
	@param radiusBottom radiusBottom
	@param height height
	@param opts opts 
	*/
	export function capsule(radiusTop: number, radiusBottom: number, height: number, opts: {sides: number; heightSegments: number; capped: boolean; arc: number; }): cc.VertexData;	
	/**
	!#en Create polyhedron vertex data
	!#zh ???å»ºå????¢ä??é¡¶ç?¹æ?°æ??
	@param type type
	@param Size Size
	@param opts opts 
	*/
	export function polyhedron(type: cc.primitive.PolyhedronType, Size: number, opts: {sizeX: number; sizeY: number; sizeZ: number; }): cc.VertexData;
}

declare let CC_JSB: boolean
declare let CC_NATIVERENDERER: boolean
declare let CC_EDITOR: boolean
declare let CC_PREVIEW: boolean
declare let CC_TEST: boolean
declare let CC_DEBUG: boolean

declare let cc: {
    // polyfills: {
    //     destroyObject? (object: any): void;
    // };
    [x: string]: any;
}

declare let Editor: any;

// https://medium.com/dailyjs/typescript-create-a-condition-based-subset-types-9d902cea5b8c
type FlagExcludedType<Base, Type> = { [Key in keyof Base]: Base[Key] extends Type ? never : Key };
type AllowedNames<Base, Type> = FlagExcludedType<Base, Type>[keyof Base];
type KeyPartial<T, K extends keyof T> = { [P in K]?: T[P] };
type OmitType<Base, Type> = KeyPartial<Base, AllowedNames<Base, Type>>;
type ConstructorType<T> = OmitType<T, Function>;

declare interface IWritableArrayLike<T> {
    readonly length: number;
    [index: number]: T;
}

declare let module: {
    exports: object
}


declare interface Math { 
    sign(v: number); 
}

declare interface Object {
    assign(target: {}, source: {});
}


type FloatArray = Float64Array | Float32Array;

interface IColorLike {
    r: number;
    g: number;
    b: number;
    a: number;
    _val: number;

}

interface IMat3Like {
    m: FloatArray
}

interface IMat4Like {
    m: FloatArray
}

interface IQuatLike {
    x: number;
    y: number;
    z: number;
    w: number;
}

interface IRectLike {
    x: number;
    y: number;
    width: number;
    height: number;
}

interface ISizeLike {
    width: number;
    height: number;
}

interface IVec2Like {
    x: number;
    y: number;
}

interface IVec3Like {
    x: number;
    y: number;
    z: number;
}

interface IVec4Like {
    x: number;
    y: number;
    z: number;
    w: number;
}
declare namespace dragonBones {
    /**
     * @internal
     * @private
     */
    const webAssemblyModule: {
        HEAP16: Int16Array;
        _malloc(byteSize: number): number;
        _free(pointer: number): void;
        setDataBinary(data: DragonBonesData, binaryPointer: number, intBytesLength: number, floatBytesLength: number, frameIntBytesLength: number, frameFloatBytesLength: number, frameBytesLength: number, timelineBytesLength: number): void;
    };
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * @internal
     * @private
     */
    const enum BinaryOffset {
        WeigthBoneCount = 0,
        WeigthFloatOffset = 1,
        WeigthBoneIndices = 2,
        MeshVertexCount = 0,
        MeshTriangleCount = 1,
        MeshFloatOffset = 2,
        MeshWeightOffset = 3,
        MeshVertexIndices = 4,
        TimelineScale = 0,
        TimelineOffset = 1,
        TimelineKeyFrameCount = 2,
        TimelineFrameValueCount = 3,
        TimelineFrameValueOffset = 4,
        TimelineFrameOffset = 5,
        FramePosition = 0,
        FrameTweenType = 1,
        FrameTweenEasingOrCurveSampleCount = 2,
        FrameCurveSamples = 3,
        DeformMeshOffset = 0,
        DeformCount = 1,
        DeformValueCount = 2,
        DeformValueOffset = 3,
        DeformFloatOffset = 4,
    }
    /**
     * @internal
     * @private
     */
    const enum ArmatureType {
        Armature = 0,
        MovieClip = 1,
        Stage = 2,
    }
    /**
     * @internal
     * @private
     */
    const enum BoneType {
        Bone = 0,
        Surface = 1,
    }
    /**
     * @private
     */
    const enum DisplayType {
        Image = 0,
        Armature = 1,
        Mesh = 2,
        BoundingBox = 3,
    }
    /**
     * - Bounding box type.
     * @version DragonBones 5.0
     * @language en_US
     */
    /**
     * - è¾¹ç??æ¡?ç±»å?????
     * @version DragonBones 5.0
     * @language zh_CN
     */
    const enum BoundingBoxType {
        Rectangle = 0,
        Ellipse = 1,
        Polygon = 2,
    }
    /**
     * @internal
     * @private
     */
    const enum ActionType {
        Play = 0,
        Frame = 10,
        Sound = 11,
    }
    /**
     * @internal
     * @private
     */
    const enum BlendMode {
        Normal = 0,
        Add = 1,
        Alpha = 2,
        Darken = 3,
        Difference = 4,
        Erase = 5,
        HardLight = 6,
        Invert = 7,
        Layer = 8,
        Lighten = 9,
        Multiply = 10,
        Overlay = 11,
        Screen = 12,
        Subtract = 13,
    }
    /**
     * @internal
     * @private
     */
    const enum TweenType {
        None = 0,
        Line = 1,
        Curve = 2,
        QuadIn = 3,
        QuadOut = 4,
        QuadInOut = 5,
    }
    /**
     * @internal
     * @private
     */
    const enum TimelineType {
        Action = 0,
        ZOrder = 1,
        BoneAll = 10,
        BoneTranslate = 11,
        BoneRotate = 12,
        BoneScale = 13,
        Surface = 50,
        SlotDisplay = 20,
        SlotColor = 21,
        SlotFFD = 22,
        IKConstraint = 30,
        AnimationTime = 40,
        AnimationWeight = 41,
    }
    /**
     * - Offset mode.
     * @version DragonBones 5.5
     * @language en_US
     */
    /**
     * - ???ç§»æ¨¡å¼????
     * @version DragonBones 5.5
     * @language zh_CN
     */
    const enum OffsetMode {
        None = 0,
        Additive = 1,
        Override = 2,
    }
    /**
     * - Animation fade out mode.
     * @version DragonBones 4.5
     * @language en_US
     */
    /**
     * - ??¨ç?»æ·¡??ºæ¨¡å¼????
     * @version DragonBones 4.5
     * @language zh_CN
     */
    const enum AnimationFadeOutMode {
        /**
         * - Do not fade out of any animation states.
         * @language en_US
         */
        /**
         * - ä¸?æ·¡å?ºä»»ä½??????¨ç?»ç?¶æ?????
         * @language zh_CN
         */
        None = 0,
        /**
         * - Fade out the animation states of the same layer.
         * @language en_US
         */
        /**
         * - æ·¡å?ºå??å±??????¨ç?»ç?¶æ?????
         * @language zh_CN
         */
        SameLayer = 1,
        /**
         * - Fade out the animation states of the same group.
         * @language en_US
         */
        /**
         * - æ·¡å?ºå??ç»??????¨ç?»ç?¶æ?????
         * @language zh_CN
         */
        SameGroup = 2,
        /**
         * - Fade out the animation states of the same layer and group.
         * @language en_US
         */
        /**
         * - æ·¡å?ºå??å±?å¹¶ä?????ç»??????¨ç?»ç?¶æ?????
         * @language zh_CN
         */
        SameLayerAndGroup = 3,
        /**
         * - Fade out of all animation states.
         * @language en_US
         */
        /**
         * - æ·¡å?ºæ??????????¨ç?»ç?¶æ?????
         * @language zh_CN
         */
        All = 4,
        /**
         * - Does not replace the animation state with the same name.
         * @language en_US
         */
        /**
         * - ä¸???¿æ?¢å??????????¨ç?»ç?¶æ?????
         * @language zh_CN
         */
        Single = 5,
    }
    /**
     * @private
     */
    interface Map<T> {
        [key: string]: T;
    }
    /**
     * @private
     */
    class DragonBones {
        static readonly VERSION: string;
        static yDown: boolean;
        static debug: boolean;
        static debugDraw: boolean;
        static webAssembly: boolean;
        private readonly _clock;
        private readonly _events;
        private readonly _objects;
        private _eventManager;
        constructor(eventManager: IEventDispatcher);
        advanceTime(passedTime: number): void;
        bufferEvent(value: EventObject): void;
        bufferObject(object: BaseObject): void;
        readonly clock: WorldClock;
        readonly eventManager: IEventDispatcher;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The BaseObject is the base class for all objects in the DragonBones framework.
     * All BaseObject instances are cached to the object pool to reduce the performance consumption of frequent requests for memory or memory recovery.
     * @version DragonBones 4.5
     * @language en_US
     */
    /**
     * - ??ºç??å¯¹è±¡ï¼????å¸? DragonBones ???å¯¹è±¡??½ç»§??¿è?ªè¯¥ç±»ã??
     * ????????ºç??å¯¹è±¡???å®?ä¾???½ä??ç¼?å­???°å¯¹è±¡æ??ï¼?ä»¥å??å°?é¢?ç¹???³è¯·???å­???????å­??????¶ç????§è?½æ????????
     * @version DragonBones 4.5
     * @language zh_CN
     */
    abstract class BaseObject {
        private static _hashCode;
        private static _defaultMaxCount;
        private static readonly _maxCountMap;
        private static readonly _poolsMap;
        private static _returnObject(object);
        static toString(): string;
        /**
         * - Set the maximum cache count of the specify object pool.
         * @param objectConstructor - The specify class. (Set all object pools max cache count if not set)
         * @param maxCount - Max count.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - è®¾ç½®??¹å??å¯¹è±¡æ±???????å¤§ç??å­???°é?????
         * @param objectConstructor - ??¹å?????ç±»ã?? (ä¸?è®¾ç½®???è®¾ç½®??????å¯¹è±¡æ±???????å¤§ç??å­???°é??)
         * @param maxCount - ???å¤§ç??å­???°é?????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        static setMaxCount(objectConstructor: (typeof BaseObject) | null, maxCount: number): void;
        /**
         * - Clear the cached instances of a specify object pool.
         * @param objectConstructor - Specify class. (Clear all cached instances if not set)
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - æ¸???¤ç?¹å??å¯¹è±¡æ±????ç¼?å­?å®?ä¾????
         * @param objectConstructor - ??¹å?????ç±»ã?? (ä¸?è®¾ç½®???æ¸???¤æ?????ç¼?å­????å®?ä¾?)
         * @version DragonBones 4.5
         * @language zh_CN
         */
        static clearPool(objectConstructor?: (typeof BaseObject) | null): void;
        /**
         * - Get an instance of the specify class from object pool.
         * @param objectConstructor - The specify class.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ä»?å¯¹è±¡æ±?ä¸­è?·å????¹å??ç±»ç??å®?ä¾????
         * @param objectConstructor - ??¹å?????ç±»ã??
         * @version DragonBones 4.5
         * @language zh_CN
         */
        static borrowObject<T extends BaseObject>(objectConstructor: {
            new (): T;
        }): T;
        /**
         * - A unique identification number assigned to the object.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??????ç»?æ­¤å??ä¾??????¯ä?????è¯???·ã??
         * @version DragonBones 4.5
         * @language zh_CN
         */
        readonly hashCode: number;
        private _isInPool;
        /**
         * @private
         */
        protected abstract _onClear(): void;
        /**
         * - Clear the object and return it back to object pool???
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - æ¸???¤è¯¥å®?ä¾????????????°æ?®å¹¶å°???¶è??è¿?å¯¹è±¡æ±????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        returnToPool(): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - 2D Transform matrix.
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - 2D è½¬æ?¢ç?©é?µã??
     * @version DragonBones 3.0
     * @language zh_CN
     */
    class Matrix {
        /**
         * - The value that affects the positioning of pixels along the x axis when scaling or rotating an image.
         * @default 1.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ç¼©æ?¾æ?????è½¬å?¾å????¶å½±??????ç´?æ²? x è½´å??ä½??????¼ã??
         * @default 1.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        a: number;
        /**
         * - The value that affects the positioning of pixels along the y axis when rotating or skewing an image.
         * @default 0.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???è½¬æ????¾æ????¾å????¶å½±??????ç´?æ²? y è½´å??ä½??????¼ã??
         * @default 0.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        b: number;
        /**
         * - The value that affects the positioning of pixels along the x axis when rotating or skewing an image.
         * @default 0.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???è½¬æ????¾æ????¾å????¶å½±??????ç´?æ²? x è½´å??ä½??????¼ã??
         * @default 0.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        c: number;
        /**
         * - The value that affects the positioning of pixels along the y axis when scaling or rotating an image.
         * @default 1.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ç¼©æ?¾æ?????è½¬å?¾å????¶å½±??????ç´?æ²? y è½´å??ä½??????¼ã??
         * @default 1.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        d: number;
        /**
         * - The distance by which to translate each point along the x axis.
         * @default 0.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - æ²? x è½´å¹³ç§»æ??ä¸ªç?¹ç??è·?ç¦»ã??
         * @default 0.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        tx: number;
        /**
         * - The distance by which to translate each point along the y axis.
         * @default 0.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - æ²? y è½´å¹³ç§»æ??ä¸ªç?¹ç??è·?ç¦»ã??
         * @default 0.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        ty: number;
        /**
         * @private
         */
        constructor(a?: number, b?: number, c?: number, d?: number, tx?: number, ty?: number);
        toString(): string;
        /**
         * @private
         */
        copyFrom(value: Matrix): Matrix;
        /**
         * @private
         */
        copyFromArray(value: Array<number>, offset?: number): Matrix;
        /**
         * - Convert to unit matrix.
         * The resulting matrix has the following properties: a=1, b=0, c=0, d=1, tx=0, ty=0.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - è½¬æ?¢ä¸º???ä½???©é?µã??
         * è¯¥ç?©é?µå?·æ??ä»¥ä??å±???§ï??a=1???b=0???c=0???d=1???tx=0???ty=0???
         * @version DragonBones 3.0
         * @language zh_CN
         */
        identity(): Matrix;
        /**
         * - Multiplies the current matrix with another matrix.
         * @param value - The matrix that needs to be multiplied.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - å°?å½??????©é?µä????¦ä??ä¸ªç?©é?µç?¸ä?????
         * @param value - ???è¦???¸ä???????©é?µã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        concat(value: Matrix): Matrix;
        /**
         * - Convert to inverse matrix.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - è½¬æ?¢ä¸º?????©é?µã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        invert(): Matrix;
        /**
         * - Apply a matrix transformation to a specific point.
         * @param x - X coordinate.
         * @param y - Y coordinate.
         * @param result - The point after the transformation is applied.
         * @param delta - Whether to ignore tx, ty's conversion to point.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - å°???©é?µè½¬??¢å????¨ä????¹å????¹ã??
         * @param x - æ¨ªå????????
         * @param y - çºµå????????
         * @param result - åº???¨è½¬??¢ä??????????¹ã??
         * @param delta - ??¯å?¦å¿½??? txï¼?ty å¯¹ç?¹ç??è½¬æ?¢ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        transformPoint(x: number, y: number, result: {
            x: number;
            y: number;
        }, delta?: boolean): void;
        /**
         * @private
         */
        transformRectangle(rectangle: {
            x: number;
            y: number;
            width: number;
            height: number;
        }, delta?: boolean): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - 2D Transform.
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - 2D ?????¢ã??
     * @version DragonBones 3.0
     * @language zh_CN
     */
    class Transform {
        /**
         * @private
         */
        static readonly PI: number;
        /**
         * @private
         */
        static readonly PI_D: number;
        /**
         * @private
         */
        static readonly PI_H: number;
        /**
         * @private
         */
        static readonly PI_Q: number;
        /**
         * @private
         */
        static readonly RAD_DEG: number;
        /**
         * @private
         */
        static readonly DEG_RAD: number;
        /**
         * @private
         */
        static normalizeRadian(value: number): number;
        /**
         * - Horizontal translate.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - æ°´å¹³ä½?ç§»ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        x: number;
        /**
         * - Vertical translate.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ?????´ä??ç§»ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        y: number;
        /**
         * - Skew. (In radians)
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¾æ????? ï¼?ä»¥å¼§åº¦ä¸º???ä½?ï¼?
         * @version DragonBones 3.0
         * @language zh_CN
         */
        skew: number;
        /**
         * - rotation. (In radians)
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???è½¬ã?? ï¼?ä»¥å¼§åº¦ä¸º???ä½?ï¼?
         * @version DragonBones 3.0
         * @language zh_CN
         */
        rotation: number;
        /**
         * - Horizontal Scaling.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - æ°´å¹³ç¼©æ?¾ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        scaleX: number;
        /**
         * - Vertical scaling.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ?????´ç¼©??¾ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        scaleY: number;
        /**
         * @private
         */
        constructor(x?: number, y?: number, skew?: number, rotation?: number, scaleX?: number, scaleY?: number);
        toString(): string;
        /**
         * @private
         */
        copyFrom(value: Transform): Transform;
        /**
         * @private
         */
        identity(): Transform;
        /**
         * @private
         */
        add(value: Transform): Transform;
        /**
         * @private
         */
        minus(value: Transform): Transform;
        /**
         * @private
         */
        fromMatrix(matrix: Matrix): Transform;
        /**
         * @private
         */
        toMatrix(matrix: Matrix): Transform;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * @internal
     * @private
     */
    class ColorTransform {
        alphaMultiplier: number;
        redMultiplier: number;
        greenMultiplier: number;
        blueMultiplier: number;
        alphaOffset: number;
        redOffset: number;
        greenOffset: number;
        blueOffset: number;
        constructor(alphaMultiplier?: number, redMultiplier?: number, greenMultiplier?: number, blueMultiplier?: number, alphaOffset?: number, redOffset?: number, greenOffset?: number, blueOffset?: number);
        copyFrom(value: ColorTransform): void;
        identity(): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The Point object represents a location in a two-dimensional coordinate system.
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - Point å¯¹è±¡è¡¨ç¤ºäº?ç»´å?????ç³»ç??ä¸­ç?????ä¸ªä??ç½®ã??
     * @version DragonBones 3.0
     * @language zh_CN
     */
    class Point {
        /**
         * - The horizontal coordinate.
         * @default 0.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - è¯¥ç?¹ç??æ°´å¹³?????????
         * @default 0.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        x: number;
        /**
         * - The vertical coordinate.
         * @default 0.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - è¯¥ç?¹ç???????´å????????
         * @default 0.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        y: number;
        /**
         * - Creates a new point. If you pass no parameters to this method, a point is created at (0,0).
         * @param x - The horizontal coordinate.
         * @param y - The vertical coordinate.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???å»ºä??ä¸? egret.Point å¯¹è±¡.??¥ä??ä¼???¥ä»»ä½??????°ï??å°?ä¼????å»ºä??ä¸ªä??äº?ï¼?0ï¼?0ï¼?ä½?ç½®ç????¹ã??
         * @param x - è¯¥å¯¹è±¡ç??xå±???§å?¼ï??é»?è®¤ä¸º 0.0???
         * @param y - è¯¥å¯¹è±¡ç??yå±???§å?¼ï??é»?è®¤ä¸º 0.0???
         * @version DragonBones 3.0
         * @language zh_CN
         */
        constructor(x?: number, y?: number);
        /**
         * @private
         */
        copyFrom(value: Point): void;
        /**
         * @private
         */
        clear(): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - A Rectangle object is an area defined by its position, as indicated by its top-left corner point (x, y) and by its
     * width and its height.<br/>
     * The x, y, width, and height properties of the Rectangle class are independent of each other; changing the value of
     * one property has no effect on the others. However, the right and bottom properties are integrally related to those
     * four properties. For example, if you change the value of the right property, the value of the width property changes;
     * if you change the bottom property, the value of the height property changes.
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - Rectangle å¯¹è±¡??¯æ????¶ä??ç½®ï????±å??å·¦ä??è§??????? (x, y) ç¡®å??ï¼?ä»¥å??å®½åº¦???é«?åº¦å??ä¹??????ºå?????<br/>
     * Rectangle ç±»ç?? x???y???width ??? height å±???§ç?¸ä????¬ç??ï¼???´æ?¹ä??ä¸ªå????§ç????¼ä??ä¼?å½±å????¶ä??å±???§ã??
     * ä½???¯ï??right ??? bottom å±???§ä??è¿????ä¸ªå????§æ?¯æ?´ä????¸å?³ç?????ä¾?å¦?ï¼?å¦??????´æ?? right å±???§ç????¼ï????? width
     * å±???§ç????¼å??????????????ï¼?å¦??????´æ?? bottom å±???§ï????? height å±???§ç????¼å?????????????????
     * @version DragonBones 3.0
     * @language zh_CN
     */
    class Rectangle {
        /**
         * - The x coordinate of the top-left corner of the rectangle.
         * @default 0.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??©å½¢å·¦ä??è§???? x ?????????
         * @default 0.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        x: number;
        /**
         * - The y coordinate of the top-left corner of the rectangle.
         * @default 0.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??©å½¢å·¦ä??è§???? y ?????????
         * @default 0.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        y: number;
        /**
         * - The width of the rectangle, in pixels.
         * @default 0.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??©å½¢???å®½åº¦ï¼?ä»¥å??ç´?ä¸ºå??ä½?ï¼????
         * @default 0.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        width: number;
        /**
         * - ??©å½¢???é«?åº¦ï??ä»¥å??ç´?ä¸ºå??ä½?ï¼????
         * @default 0.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - The height of the rectangle, in pixels.
         * @default 0.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        height: number;
        /**
         * @private
         */
        constructor(x?: number, y?: number, width?: number, height?: number);
        /**
         * @private
         */
        copyFrom(value: Rectangle): void;
        /**
         * @private
         */
        clear(): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The user custom data.
     * @version DragonBones 5.0
     * @language en_US
     */
    /**
     * - ??¨æ?·è?ªå??ä¹???°æ?®ã??
     * @version DragonBones 5.0
     * @language zh_CN
     */
    class UserData extends BaseObject {
        static toString(): string;
        /**
         * - The custom int numbers.
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??ªå??ä¹???´æ?°ã??
         * @version DragonBones 5.0
         * @language zh_CN
         */
        readonly ints: Array<number>;
        /**
         * - The custom float numbers.
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??ªå??ä¹?æµ®ç?¹æ?°ã??
         * @version DragonBones 5.0
         * @language zh_CN
         */
        readonly floats: Array<number>;
        /**
         * - The custom strings.
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??ªå??ä¹?å­?ç¬¦ä¸²???
         * @version DragonBones 5.0
         * @language zh_CN
         */
        readonly strings: Array<string>;
        /**
         * @inheritDoc
         */
        protected _onClear(): void;
        /**
         * @internal
         * @private
         */
        addInt(value: number): void;
        /**
         * @internal
         * @private
         */
        addFloat(value: number): void;
        /**
         * @internal
         * @private
         */
        addString(value: string): void;
        /**
         * - Get the custom int number.
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??·å????ªå??ä¹???´æ?°ã??
         * @version DragonBones 5.0
         * @language zh_CN
         */
        getInt(index?: number): number;
        /**
         * - Get the custom float number.
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??·å????ªå??ä¹?æµ®ç?¹æ?°ã??
         * @version DragonBones 5.0
         * @language zh_CN
         */
        getFloat(index?: number): number;
        /**
         * - Get the custom string.
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??·å????ªå??ä¹?å­?ç¬¦ä¸²???
         * @version DragonBones 5.0
         * @language zh_CN
         */
        getString(index?: number): string;
    }
    /**
     * @internal
     * @private
     */
    class ActionData extends BaseObject {
        static toString(): string;
        type: ActionType;
        name: string;
        bone: BoneData | null;
        slot: SlotData | null;
        data: UserData | null;
        protected _onClear(): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The DragonBones data.
     * A DragonBones data contains multiple armature data.
     * @see dragonBones.ArmatureData
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - é¾?éª¨æ?°æ?®ã??
     * ä¸?ä¸ªé??éª¨æ?°æ?®å????«å??ä¸ªéª¨??¶æ?°æ?®ã??
     * @see dragonBones.ArmatureData
     * @version DragonBones 3.0
     * @language zh_CN
     */
    class DragonBonesData extends BaseObject {
        static toString(): string;
        /**
         * @private
         */
        autoSearch: boolean;
        /**
         * - The animation frame rate.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¨ç?»å¸§é¢????
         * @version DragonBones 3.0
         * @language zh_CN
         */
        frameRate: number;
        /**
         * - The data version.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??°æ?®ç????¬ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        version: string;
        /**
         * - The DragonBones data name.
         * The name is consistent with the DragonBones project name.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - é¾?éª¨æ?°æ?®å??ç§°ã??
         * è¯¥å??ç§°ä??é¾?éª¨é¡¹??®å??ä¿????ä¸???´ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        name: string;
        /**
         * @private
         */
        stage: ArmatureData | null;
        /**
         * @internal
         * @private
         */
        readonly frameIndices: Array<number>;
        /**
         * @internal
         * @private
         */
        readonly cachedFrames: Array<number>;
        /**
         * - All armature data names.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ?????????éª¨æ?¶æ?°æ?®å??ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly armatureNames: Array<string>;
        /**
         * @private
         */
        readonly armatures: Map<ArmatureData>;
        /**
         * @internal
         * @private
         */
        binary: ArrayBuffer;
        /**
         * @internal
         * @private
         */
        intArray: Int16Array;
        /**
         * @internal
         * @private
         */
        floatArray: Float32Array;
        /**
         * @internal
         * @private
         */
        frameIntArray: Int16Array;
        /**
         * @internal
         * @private
         */
        frameFloatArray: Float32Array;
        /**
         * @internal
         * @private
         */
        frameArray: Int16Array;
        /**
         * @internal
         * @private
         */
        timelineArray: Uint16Array;
        /**
         * @private
         */
        userData: UserData | null;
        /**
         * @inheritDoc
         */
        protected _onClear(): void;
        /**
         * @internal
         * @private
         */
        addArmature(value: ArmatureData): void;
        /**
         * - Get a specific armature data.
         * @param name - The armature data name.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??·å????¹å?????éª¨æ?¶æ?°æ?®ã??
         * @param name - éª¨æ?¶æ?°æ?®å??ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        getArmature(name: string): ArmatureData | null;
        /**
         * - Deprecated, please refer to {@link #dragonBones.BaseFactory#removeDragonBonesData()}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #dragonBones.BaseFactory#removeDragonBonesData()}???
         * @deprecated
         * @language zh_CN
         */
        dispose(): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The armature data.
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - éª¨æ?¶æ?°æ?®ã??
     * @version DragonBones 3.0
     * @language zh_CN
     */
    class ArmatureData extends BaseObject {
        static toString(): string;
        /**
         * @private
         */
        type: ArmatureType;
        /**
         * - The animation frame rate.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¨ç?»å¸§??????
         * @version DragonBones 3.0
         * @language zh_CN
         */
        frameRate: number;
        /**
         * @private
         */
        cacheFrameRate: number;
        /**
         * @private
         */
        scale: number;
        /**
         * - The armature name.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - éª¨æ?¶å??ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        name: string;
        /**
         * @private
         */
        readonly aabb: Rectangle;
        /**
         * - The names of all the animation data.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???????????¨ç?»æ?°æ?®å??ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly animationNames: Array<string>;
        /**
         * @private
         */
        readonly sortedBones: Array<BoneData>;
        /**
         * @private
         */
        readonly sortedSlots: Array<SlotData>;
        /**
         * @private
         */
        readonly defaultActions: Array<ActionData>;
        /**
         * @private
         */
        readonly actions: Array<ActionData>;
        /**
         * @private
         */
        readonly bones: Map<BoneData>;
        /**
         * @private
         */
        readonly slots: Map<SlotData>;
        /**
         * @private
         */
        readonly constraints: Map<ConstraintData>;
        /**
         * @private
         */
        readonly skins: Map<SkinData>;
        /**
         * @private
         */
        readonly animations: Map<AnimationData>;
        /**
         * - The default skin data.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - é»?è®¤æ??æ§½æ?°æ?®ã??
         * @version DragonBones 4.5
         * @language zh_CN
         */
        defaultSkin: SkinData | null;
        /**
         * - The default animation data.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - é»?è®¤å?¨ç?»æ?°æ?®ã??
         * @version DragonBones 4.5
         * @language zh_CN
         */
        defaultAnimation: AnimationData | null;
        /**
         * @private
         */
        canvas: CanvasData | null;
        /**
         * @private
         */
        userData: UserData | null;
        /**
         * @private
         */
        parent: DragonBonesData;
        /**
         * @inheritDoc
         */
        protected _onClear(): void;
        /**
         * @internal
         * @private
         */
        sortBones(): void;
        /**
         * @internal
         * @private
         */
        cacheFrames(frameRate: number): void;
        /**
         * @internal
         * @private
         */
        setCacheFrame(globalTransformMatrix: Matrix, transform: Transform): number;
        /**
         * @internal
         * @private
         */
        getCacheFrame(globalTransformMatrix: Matrix, transform: Transform, arrayOffset: number): void;
        /**
         * @internal
         * @private
         */
        addBone(value: BoneData): void;
        /**
         * @internal
         * @private
         */
        addSlot(value: SlotData): void;
        /**
         * @internal
         * @private
         */
        addConstraint(value: ConstraintData): void;
        /**
         * @internal
         * @private
         */
        addSkin(value: SkinData): void;
        /**
         * @internal
         * @private
         */
        addAnimation(value: AnimationData): void;
        /**
         * @internal
         * @private
         */
        addAction(value: ActionData, isDefault: boolean): void;
        /**
         * - Get a specific done data.
         * @param name - The bone name.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??·å????¹å?????éª¨éª¼??°æ?®ã??
         * @param name - éª¨éª¼???ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        getBone(name: string): BoneData | null;
        /**
         * - Get a specific slot data.
         * @param name - The slot name.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??·å????¹å????????æ§½æ?°æ?®ã??
         * @param name - ???æ§½å??ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        getSlot(name: string): SlotData | null;
        /**
         * @private
         */
        getConstraint(name: string): ConstraintData | null;
        /**
         * - Get a specific skin data.
         * @param name - The skin name.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??·å????¹å????®è?¤æ?°æ?®ã??
         * @param name - ??®è?¤å??ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        getSkin(name: string): SkinData | null;
        /**
         * @internal
         * @private
         */
        getMesh(skinName: string, slotName: string, meshName: string): MeshDisplayData | null;
        /**
         * - Get a specific animation data.
         * @param name - The animation name.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??·å????¹å???????¨ç?»æ?°æ?®ã??
         * @param name - ??¨ç?»å??ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        getAnimation(name: string): AnimationData | null;
    }
    /**
     * - The bone data.
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - éª¨éª¼??°æ?®ã??
     * @version DragonBones 3.0
     * @language zh_CN
     */
    class BoneData extends BaseObject {
        static toString(): string;
        /**
         * @private
         */
        inheritTranslation: boolean;
        /**
         * @private
         */
        inheritRotation: boolean;
        /**
         * @private
         */
        inheritScale: boolean;
        /**
         * @private
         */
        inheritReflection: boolean;
        /**
         * @private
         */
        type: BoneType;
        /**
         * - The bone length.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - éª¨éª¼??¿åº¦???
         * @version DragonBones 3.0
         * @language zh_CN
         */
        length: number;
        /**
         * - The bone name.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - éª¨éª¼???ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        name: string;
        /**
         * @private
         */
        readonly transform: Transform;
        /**
         * @private
         */
        userData: UserData | null;
        /**
         * - The parent bone data.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¶éª¨éª¼æ?°æ?®ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        parent: BoneData | null;
        /**
         * @inheritDoc
         */
        protected _onClear(): void;
    }
    /**
     * @internal
     * @private
     */
    class SurfaceData extends BoneData {
        static toString(): string;
        segmentX: number;
        segmentY: number;
        readonly vertices: Array<number>;
        /**
         * @inheritDoc
         */
        protected _onClear(): void;
    }
    /**
     * - The slot data.
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - ???æ§½æ?°æ?®ã??
     * @version DragonBones 3.0
     * @language zh_CN
     */
    class SlotData extends BaseObject {
        /**
         * @internal
         * @private
         */
        static readonly DEFAULT_COLOR: ColorTransform;
        /**
         * @internal
         * @private
         */
        static createColor(): ColorTransform;
        static toString(): string;
        /**
         * @private
         */
        blendMode: BlendMode;
        /**
         * @private
         */
        displayIndex: number;
        /**
         * @private
         */
        zOrder: number;
        /**
         * - The slot name.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???æ§½å??ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        name: string;
        /**
         * @private
         */
        color: ColorTransform;
        /**
         * @private
         */
        userData: UserData | null;
        /**
         * - The parent bone data.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¶éª¨éª¼æ?°æ?®ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        parent: BoneData;
        /**
         * @inheritDoc
         */
        protected _onClear(): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * @internal
     * @private
     */
    abstract class ConstraintData extends BaseObject {
        order: number;
        name: string;
        target: BoneData;
        root: BoneData;
        bone: BoneData | null;
        protected _onClear(): void;
    }
    /**
     * @internal
     * @private
     */
    class IKConstraintData extends ConstraintData {
        static toString(): string;
        scaleEnabled: boolean;
        bendPositive: boolean;
        weight: number;
        protected _onClear(): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * @internal
     * @private
     */
    class CanvasData extends BaseObject {
        static toString(): string;
        hasBackground: boolean;
        color: number;
        x: number;
        y: number;
        width: number;
        height: number;
        protected _onClear(): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The skin data, typically a armature data instance contains at least one skinData.
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - ??®è?¤æ?°æ?®ï?????å¸¸ä??ä¸ªéª¨??¶æ?°æ?®è?³å???????«ä??ä¸ªç?®è?¤æ?°æ?®ã??
     * @version DragonBones 3.0
     * @language zh_CN
     */
    class SkinData extends BaseObject {
        static toString(): string;
        /**
         * - The skin name.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??®è?¤å??ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        name: string;
        /**
         * @private
         */
        readonly displays: Map<Array<DisplayData | null>>;
        /**
         * @private
         */
        parent: ArmatureData;
        /**
         * @inheritDoc
         */
        protected _onClear(): void;
        /**
         * @internal
         * @private
         */
        addDisplay(slotName: string, value: DisplayData | null): void;
        /**
         * @private
         */
        getDisplay(slotName: string, displayName: string): DisplayData | null;
        /**
         * @private
         */
        getDisplays(slotName: string): Array<DisplayData | null> | null;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * @internal
     * @private
     */
    abstract class DisplayData extends BaseObject {
        type: DisplayType;
        name: string;
        path: string;
        parent: SkinData;
        readonly transform: Transform;
        protected _onClear(): void;
    }
    /**
     * @internal
     * @private
     */
    class ImageDisplayData extends DisplayData {
        static toString(): string;
        readonly pivot: Point;
        texture: TextureData | null;
        protected _onClear(): void;
    }
    /**
     * @internal
     * @private
     */
    class ArmatureDisplayData extends DisplayData {
        static toString(): string;
        inheritAnimation: boolean;
        readonly actions: Array<ActionData>;
        armature: ArmatureData | null;
        protected _onClear(): void;
        /**
         * @private
         */
        addAction(value: ActionData): void;
    }
    /**
     * @internal
     * @private
     */
    class MeshDisplayData extends DisplayData {
        static toString(): string;
        inheritDeform: boolean;
        offset: number;
        weight: WeightData | null;
        glue: GlueData | null;
        texture: TextureData | null;
        protected _onClear(): void;
    }
    /**
     * @internal
     * @private
     */
    class BoundingBoxDisplayData extends DisplayData {
        static toString(): string;
        boundingBox: BoundingBoxData | null;
        protected _onClear(): void;
    }
    /**
     * @internal
     * @private
     */
    class WeightData extends BaseObject {
        static toString(): string;
        count: number;
        offset: number;
        readonly bones: Array<BoneData>;
        protected _onClear(): void;
        addBone(value: BoneData): void;
    }
    /**
     * @internal
     * @private
     */
    class GlueData extends BaseObject {
        static toString(): string;
        readonly weights: Array<number>;
        readonly meshes: Array<MeshDisplayData | null>;
        protected _onClear(): void;
        addMesh(value: MeshDisplayData | null): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The base class of bounding box data.
     * @see dragonBones.RectangleData
     * @see dragonBones.EllipseData
     * @see dragonBones.PolygonData
     * @version DragonBones 5.0
     * @language en_US
     */
    /**
     * - è¾¹ç??æ¡???°æ?®å?ºç±»???
     * @see dragonBones.RectangleData
     * @see dragonBones.EllipseData
     * @see dragonBones.PolygonData
     * @version DragonBones 5.0
     * @language zh_CN
     */
    abstract class BoundingBoxData extends BaseObject {
        /**
         * - The bounding box type.
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - è¾¹ç??æ¡?ç±»å?????
         * @version DragonBones 5.0
         * @language zh_CN
         */
        type: BoundingBoxType;
        /**
         * @private
         */
        color: number;
        /**
         * @private
         */
        width: number;
        /**
         * @private
         */
        height: number;
        /**
         * @private
         */
        protected _onClear(): void;
        /**
         * - Check whether the bounding box contains a specific point. (Local coordinate system)
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - æ£???¥è¾¹???æ¡???¯å?¦å????«ç?¹å????¹ã??ï¼???¬å?°å?????ç³»ï??
         * @version DragonBones 5.0
         * @language zh_CN
         */
        abstract containsPoint(pX: number, pY: number): boolean;
        /**
         * - Check whether the bounding box intersects a specific segment. (Local coordinate system)
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - æ£???¥è¾¹???æ¡???¯å?¦ä????¹å??çº¿æ®µ??¸äº¤???ï¼???¬å?°å?????ç³»ï??
         * @version DragonBones 5.0
         * @language zh_CN
         */
        abstract intersectsSegment(xA: number, yA: number, xB: number, yB: number, intersectionPointA: {
            x: number;
            y: number;
        } | null, intersectionPointB: {
            x: number;
            y: number;
        } | null, normalRadians: {
            x: number;
            y: number;
        } | null): number;
    }
    /**
     * - The rectangle bounding box data.
     * @version DragonBones 5.1
     * @language en_US
     */
    /**
     * - ??©å½¢è¾¹ç??æ¡???°æ?®ã??
     * @version DragonBones 5.1
     * @language zh_CN
     */
    class RectangleBoundingBoxData extends BoundingBoxData {
        static toString(): string;
        /**
         * - Compute the bit code for a point (x, y) using the clip rectangle
         */
        private static _computeOutCode(x, y, xMin, yMin, xMax, yMax);
        /**
         * @private
         */
        static rectangleIntersectsSegment(xA: number, yA: number, xB: number, yB: number, xMin: number, yMin: number, xMax: number, yMax: number, intersectionPointA?: {
            x: number;
            y: number;
        } | null, intersectionPointB?: {
            x: number;
            y: number;
        } | null, normalRadians?: {
            x: number;
            y: number;
        } | null): number;
        /**
         * @inheritDoc
         * @private
         */
        protected _onClear(): void;
        /**
         * @inheritDoc
         */
        containsPoint(pX: number, pY: number): boolean;
        /**
         * @inheritDoc
         */
        intersectsSegment(xA: number, yA: number, xB: number, yB: number, intersectionPointA?: {
            x: number;
            y: number;
        } | null, intersectionPointB?: {
            x: number;
            y: number;
        } | null, normalRadians?: {
            x: number;
            y: number;
        } | null): number;
    }
    /**
     * - The ellipse bounding box data.
     * @version DragonBones 5.1
     * @language en_US
     */
    /**
     * - æ¤­å??è¾¹ç??æ¡???°æ?®ã??
     * @version DragonBones 5.1
     * @language zh_CN
     */
    class EllipseBoundingBoxData extends BoundingBoxData {
        static toString(): string;
        /**
         * @private
         */
        static ellipseIntersectsSegment(xA: number, yA: number, xB: number, yB: number, xC: number, yC: number, widthH: number, heightH: number, intersectionPointA?: {
            x: number;
            y: number;
        } | null, intersectionPointB?: {
            x: number;
            y: number;
        } | null, normalRadians?: {
            x: number;
            y: number;
        } | null): number;
        /**
         * @inheritDoc
         * @private
         */
        protected _onClear(): void;
        /**
         * @inheritDoc
         */
        containsPoint(pX: number, pY: number): boolean;
        /**
         * @inheritDoc
         */
        intersectsSegment(xA: number, yA: number, xB: number, yB: number, intersectionPointA?: {
            x: number;
            y: number;
        } | null, intersectionPointB?: {
            x: number;
            y: number;
        } | null, normalRadians?: {
            x: number;
            y: number;
        } | null): number;
    }
    /**
     * - The polygon bounding box data.
     * @version DragonBones 5.1
     * @language en_US
     */
    /**
     * - å¤?è¾¹å½¢è¾¹ç??æ¡???°æ?®ã??
     * @version DragonBones 5.1
     * @language zh_CN
     */
    class PolygonBoundingBoxData extends BoundingBoxData {
        static toString(): string;
        /**
         * @private
         */
        static polygonIntersectsSegment(xA: number, yA: number, xB: number, yB: number, vertices: Array<number>, intersectionPointA?: {
            x: number;
            y: number;
        } | null, intersectionPointB?: {
            x: number;
            y: number;
        } | null, normalRadians?: {
            x: number;
            y: number;
        } | null): number;
        /**
         * @private
         */
        x: number;
        /**
         * @private
         */
        y: number;
        /**
         * - The polygon vertices.
         * @version DragonBones 5.1
         * @language en_US
         */
        /**
         * - å¤?è¾¹å½¢é¡¶ç?¹ã??
         * @version DragonBones 5.1
         * @language zh_CN
         */
        readonly vertices: Array<number>;
        /**
         * @private
         */
        weight: WeightData | null;
        /**
         * @inheritDoc
         * @private
         */
        protected _onClear(): void;
        /**
         * @inheritDoc
         */
        containsPoint(pX: number, pY: number): boolean;
        /**
         * @inheritDoc
         */
        intersectsSegment(xA: number, yA: number, xB: number, yB: number, intersectionPointA?: {
            x: number;
            y: number;
        } | null, intersectionPointB?: {
            x: number;
            y: number;
        } | null, normalRadians?: {
            x: number;
            y: number;
        } | null): number;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The animation data.
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - ??¨ç?»æ?°æ?®ã??
     * @version DragonBones 3.0
     * @language zh_CN
     */
    class AnimationData extends BaseObject {
        static toString(): string;
        /**
         * - FrameIntArray.
         * @internal
         * @private
         */
        frameIntOffset: number;
        /**
         * - FrameFloatArray.
         * @internal
         * @private
         */
        frameFloatOffset: number;
        /**
         * - FrameArray.
         * @internal
         * @private
         */
        frameOffset: number;
        /**
         * - The frame count of the animation.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¨ç?»ç??å¸§æ?°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        frameCount: number;
        /**
         * - The play times of the animation. [0: Loop play, [1~N]: Play N times]
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¨ç?»ç????­æ?¾æ¬¡??°ã?? [0: ??????å¾ªç?¯æ?­æ??, [1~N]: å¾ªç?¯æ?­æ?? N æ¬¡]
         * @version DragonBones 3.0
         * @language zh_CN
         */
        playTimes: number;
        /**
         * - The duration of the animation. (In seconds)
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¨ç?»ç?????ç»­æ?¶é?´ã?? ï¼?ä»¥ç??ä¸ºå??ä½?ï¼?
         * @version DragonBones 3.0
         * @language zh_CN
         */
        duration: number;
        /**
         * @private
         */
        scale: number;
        /**
         * - The fade in time of the animation. (In seconds)
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¨ç?»ç??æ·¡å?¥æ?¶é?´ã?? ï¼?ä»¥ç??ä¸ºå??ä½?ï¼?
         * @version DragonBones 3.0
         * @language zh_CN
         */
        fadeInTime: number;
        /**
         * @private
         */
        cacheFrameRate: number;
        /**
         * - The animation name.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¨ç?»å??ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        name: string;
        /**
         * @private
         */
        readonly cachedFrames: Array<boolean>;
        /**
         * @private
         */
        readonly boneTimelines: Map<Array<TimelineData>>;
        /**
         * @private
         */
        readonly surfaceTimelines: Map<Array<TimelineData>>;
        /**
         * @private
         */
        readonly slotTimelines: Map<Array<TimelineData>>;
        /**
         * @private
         */
        readonly constraintTimelines: Map<Array<TimelineData>>;
        /**
         * @private
         */
        readonly animationTimelines: Map<Array<TimelineData>>;
        /**
         * @private
         */
        readonly boneCachedFrameIndices: Map<Array<number>>;
        /**
         * @private
         */
        readonly slotCachedFrameIndices: Map<Array<number>>;
        /**
         * @private
         */
        actionTimeline: TimelineData | null;
        /**
         * @private
         */
        zOrderTimeline: TimelineData | null;
        /**
         * @private
         */
        parent: ArmatureData;
        /**
         * @inheritDoc
         */
        protected _onClear(): void;
        /**
         * @internal
         * @private
         */
        cacheFrames(frameRate: number): void;
        /**
         * @private
         */
        addBoneTimeline(bone: BoneData, timeline: TimelineData): void;
        /**
         * @private
         */
        addSurfaceTimeline(surface: SurfaceData, timeline: TimelineData): void;
        /**
         * @private
         */
        addSlotTimeline(slot: SlotData, timeline: TimelineData): void;
        /**
         * @private
         */
        addConstraintTimeline(constraint: ConstraintData, timeline: TimelineData): void;
        /**
         * @private
         */
        addAnimationTimeline(name: string, timeline: TimelineData): void;
        /**
         * @private
         */
        getBoneTimelines(name: string): Array<TimelineData> | null;
        /**
         * @private
         */
        getSurfaceTimelines(name: string): Array<TimelineData> | null;
        /**
         * @private
         */
        getSlotTimelines(name: string): Array<TimelineData> | null;
        /**
         * @private
         */
        getConstraintTimelines(name: string): Array<TimelineData> | null;
        /**
         * @private
         */
        getAnimationTimelines(name: string): Array<TimelineData> | null;
        /**
         * @private
         */
        getBoneCachedFrameIndices(name: string): Array<number> | null;
        /**
         * @private
         */
        getSlotCachedFrameIndices(name: string): Array<number> | null;
    }
    /**
     * @internal
     * @private
     */
    class TimelineData extends BaseObject {
        static toString(): string;
        type: TimelineType;
        offset: number;
        frameIndicesOffset: number;
        protected _onClear(): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The animation config is used to describe all the information needed to play an animation state.
     * The API is still in the experimental phase and may encounter bugs or stability or compatibility issues when used.
     * @see dragonBones.AnimationState
     * @beta
     * @version DragonBones 5.0
     * @language en_US
     */
    /**
     * - ??¨ç?»é??ç½®ç?¨æ?¥æ??è¿°æ?­æ?¾ä??ä¸ªå?¨ç?»ç?¶æ????????è¦??????¨é?¨ä¿¡??¯ã??
     * è¯? API ä»???¨å??éª???¶æ®µï¼?ä½¿ç?¨æ?¶å?¯è?½é?­é?? bug ???ç¨³å????§æ????¼å®¹??§é?®é?????
     * @see dragonBones.AnimationState
     * @beta
     * @version DragonBones 5.0
     * @language zh_CN
     */
    class AnimationConfig extends BaseObject {
        static toString(): string;
        /**
         * @private
         */
        pauseFadeOut: boolean;
        /**
         * - Fade out the pattern of other animation states when the animation state is fade in.
         * This property is typically used to specify the substitution of multiple animation states blend.
         * @default dragonBones.AnimationFadeOutMode.All
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - æ·¡å?¥å?¨ç?»ç?¶æ????¶æ·¡??ºå?¶ä????¨ç?»ç?¶æ?????æ¨¡å?????
         * è¯¥å????§é??å¸¸ç?¨æ?¥æ??å®?å¤?ä¸ªå?¨ç?»ç?¶æ??æ··å????¶ç????¸ä????¿æ?¢å?³ç³»???
         * @default dragonBones.AnimationFadeOutMode.All
         * @version DragonBones 5.0
         * @language zh_CN
         */
        fadeOutMode: AnimationFadeOutMode;
        /**
         * @private
         */
        fadeOutTweenType: TweenType;
        /**
         * @private
         */
        fadeOutTime: number;
        /**
         * @private
         */
        pauseFadeIn: boolean;
        /**
         * @private
         */
        actionEnabled: boolean;
        /**
         * @private
         */
        additiveBlending: boolean;
        /**
         * - Whether the animation state has control over the display property of the slots.
         * Sometimes blend a animation state does not want it to control the display properties of the slots,
         * especially if other animation state are controlling the display properties of the slots.
         * @default true
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??¨ç?»ç?¶æ????¯å?¦å¯¹???æ§½ç????¾ç¤ºå¯¹è±¡å±???§æ????§å?¶æ?????
         * ?????¶æ··???ä¸?ä¸ªå?¨ç?»ç?¶æ??å¹¶ä??å¸??????¶æ?§å?¶æ??æ§½ç????¾ç¤ºå¯¹è±¡å±???§ï??
         * å°¤å?¶æ?¯å?¶ä????¨ç?»ç?¶æ??æ­???¨æ?§å?¶è??äº????æ§½ç????¾ç¤ºå¯¹è±¡å±???§æ?¶ã??
         * @default true
         * @version DragonBones 5.0
         * @language zh_CN
         */
        displayControl: boolean;
        /**
         * - Whether to reset the objects without animation to the armature pose when the animation state is start to play.
         * This property should usually be set to false when blend multiple animation states.
         * @default true
         * @version DragonBones 5.1
         * @language en_US
         */
        /**
         * - å¼?å§???­æ?¾å?¨ç?»ç?¶æ????¶æ?¯å?¦å??æ²¡æ????¨ç?»ç??å¯¹è±¡???ç½®ä¸ºéª¨æ?¶å??å§???¼ã??
         * ???å¸¸å?¨æ··???å¤?ä¸ªå?¨ç?»ç?¶æ????¶å??è¯¥å??è¯¥å????§è®¾ç½®ä¸º false???
         * @default true
         * @version DragonBones 5.1
         * @language zh_CN
         */
        resetToPose: boolean;
        /**
         * @private
         */
        fadeInTweenType: TweenType;
        /**
         * - The play times. [0: Loop play, [1~N]: Play N times]
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??­æ?¾æ¬¡??°ã?? [0: ??????å¾ªç?¯æ?­æ??, [1~N]: å¾ªç?¯æ?­æ?? N æ¬¡]
         * @version DragonBones 3.0
         * @language zh_CN
         */
        playTimes: number;
        /**
         * - The blend layer.
         * High layer animation state will get the blend weight first.
         * When the blend weight is assigned more than 1, the remaining animation states will no longer get the weight assigned.
         * @readonly
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - æ··å????¾å?????
         * ??¾å??é«??????¨ç?»ç?¶æ??ä¼?ä¼??????·å??æ··å???????????
         * å½?æ··å??????????????è¶?è¿? 1 ??¶ï????©ä???????¨ç?»ç?¶æ??å°?ä¸??????·å?????????????????
         * @readonly
         * @version DragonBones 5.0
         * @language zh_CN
         */
        layer: number;
        /**
         * - The start time of play. (In seconds)
         * @default 0.0
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??­æ?¾ç??å¼?å§???¶é?´ã?? ï¼?ä»¥ç??ä¸ºå??ä½?ï¼?
         * @default 0.0
         * @version DragonBones 5.0
         * @language zh_CN
         */
        position: number;
        /**
         * - The duration of play.
         * [-1: Use the default value of the animation data, 0: Stop play, (0~N]: The duration] (In seconds)
         * @default -1.0
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??­æ?¾ç?????ç»­æ?¶é?´ã??
         * [-1: ä½¿ç?¨å?¨ç?»æ?°æ?®é??è®¤å??, 0: ??¨ç?»å??æ­?, (0~N]: ???ç»­æ?¶é?´] ï¼?ä»¥ç??ä¸ºå??ä½?ï¼?
         * @default -1.0
         * @version DragonBones 5.0
         * @language zh_CN
         */
        duration: number;
        /**
         * - The play speed.
         * The value is an overlay relationship with {@link dragonBones.Animation#timeScale}.
         * [(-N~0): Reverse play, 0: Stop play, (0~1): Slow play, 1: Normal play, (1~N): Fast play]
         * @default 1.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??­æ?¾é??åº¦ã??
         * è¯¥å?¼ä?? {@link dragonBones.Animation#timeScale} ??¯å???????³ç³»???
         * [(-N~0): ???è½¬æ?­æ??, 0: ???æ­¢æ?­æ??, (0~1): ??¢é????­æ??, 1: æ­?å¸¸æ?­æ??, (1~N): å¿«é????­æ?¾]
         * @default 1.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        timeScale: number;
        /**
         * - The blend weight.
         * @default 1.0
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - æ··å???????????
         * @default 1.0
         * @version DragonBones 5.0
         * @language zh_CN
         */
        weight: number;
        /**
         * - The fade in time.
         * [-1: Use the default value of the animation data, [0~N]: The fade in time] (In seconds)
         * @default -1.0
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - æ·¡å?¥æ?¶é?´ã??
         * [-1: ä½¿ç?¨å?¨ç?»æ?°æ?®é??è®¤å??, [0~N]: æ·¡å?¥æ?¶é?´] ï¼?ä»¥ç??ä¸ºå??ä½?ï¼?
         * @default -1.0
         * @version DragonBones 5.0
         * @language zh_CN
         */
        fadeInTime: number;
        /**
         * - The auto fade out time when the animation state play completed.
         * [-1: Do not fade out automatically, [0~N]: The fade out time] (In seconds)
         * @default -1.0
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??¨ç?»ç?¶æ????­æ?¾å?????????????ªå?¨æ·¡??ºæ?¶é?´ã??
         * [-1: ä¸???ªå?¨æ·¡???, [0~N]: æ·¡å?ºæ?¶é?´] ï¼?ä»¥ç??ä¸ºå??ä½?ï¼?
         * @default -1.0
         * @version DragonBones 5.0
         * @language zh_CN
         */
        autoFadeOutTime: number;
        /**
         * - The name of the animation state. (Can be different from the name of the animation data)
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??¨ç?»ç?¶æ?????ç§°ã?? ï¼???¯ä»¥ä¸????äº???¨ç?»æ?°æ?®ï??
         * @version DragonBones 5.0
         * @language zh_CN
         */
        name: string;
        /**
         * - The animation data name.
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??¨ç?»æ?°æ?®å??ç§°ã??
         * @version DragonBones 5.0
         * @language zh_CN
         */
        animation: string;
        /**
         * - The blend group name of the animation state.
         * This property is typically used to specify the substitution of multiple animation states blend.
         * @readonly
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - æ··å??ç»????ç§°ã??
         * è¯¥å????§é??å¸¸ç?¨æ?¥æ??å®?å¤?ä¸ªå?¨ç?»ç?¶æ??æ··å????¶ç????¸ä????¿æ?¢å?³ç³»???
         * @readonly
         * @version DragonBones 5.0
         * @language zh_CN
         */
        group: string;
        /**
         * @private
         */
        readonly boneMask: Array<string>;
        /**
         * @private
         */
        protected _onClear(): void;
        /**
         * @private
         */
        clear(): void;
        /**
         * @private
         */
        copyFrom(value: AnimationConfig): void;
        /**
         * @private
         */
        containsBoneMask(name: string): boolean;
        /**
         * @private
         */
        addBoneMask(armature: Armature, name: string, recursive?: boolean): void;
        /**
         * @private
         */
        removeBoneMask(armature: Armature, name: string, recursive?: boolean): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The texture atlas data.
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - è´´å?¾é????°æ?®ã??
     * @version DragonBones 3.0
     * @language zh_CN
     */
    abstract class TextureAtlasData extends BaseObject {
        /**
         * @private
         */
        autoSearch: boolean;
        /**
         * @private
         */
        width: number;
        /**
         * @private
         */
        height: number;
        /**
         * @private
         */
        scale: number;
        /**
         * - The texture atlas name.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - è´´å?¾é?????ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        name: string;
        /**
         * - The image path of the texture atlas.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - è´´å?¾é????¾ç??è·¯å?????
         * @version DragonBones 3.0
         * @language zh_CN
         */
        imagePath: string;
        /**
         * @private
         */
        readonly textures: Map<TextureData>;
        /**
         * @inheritDoc
         */
        protected _onClear(): void;
        /**
         * @private
         */
        copyFrom(value: TextureAtlasData): void;
        /**
         * @internal
         * @private
         */
        abstract createTexture(): TextureData;
        /**
         * @internal
         * @private
         */
        addTexture(value: TextureData): void;
        /**
         * @private
         */
        getTexture(name: string): TextureData | null;
    }
    /**
     * @internal
     * @private
     */
    abstract class TextureData extends BaseObject {
        static createRectangle(): Rectangle;
        rotated: boolean;
        name: string;
        readonly region: Rectangle;
        parent: TextureAtlasData;
        frame: Rectangle | null;
        protected _onClear(): void;
        copyFrom(value: TextureData): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The armature proxy interface, the docking engine needs to implement it concretely.
     * @see dragonBones.Armature
     * @version DragonBones 5.0
     * @language en_US
     */
    /**
     * - éª¨æ?¶ä»£?????¥å??ï¼?å¯¹æ?¥ç??å¼???????è¦?å¯¹å?¶è??è¡???·ä??å®???°ã??
     * @see dragonBones.Armature
     * @version DragonBones 5.0
     * @language zh_CN
     */
    interface IArmatureProxy extends IEventDispatcher {
        /**
         * @internal
         * @private
         */
        dbInit(armature: Armature): void;
        /**
         * @internal
         * @private
         */
        dbClear(): void;
        /**
         * @internal
         * @private
         */
        dbUpdate(): void;
        /**
         * - Dispose the instance and the Armature instance. (The Armature instance will return to the object pool)
         * @example
         * <pre>
         *     removeChild(armatureDisplay);
         *     armatureDisplay.dispose();
         * </pre>
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ?????¾è¯¥å®?ä¾????éª¨æ?¶ã?? ï¼?éª¨æ?¶ä???????¶å?°å¯¹è±¡æ??ï¼?
         * @example
         * <pre>
         *     removeChild(armatureDisplay);
         *     armatureDisplay.dispose();
         * </pre>
         * @version DragonBones 4.5
         * @language zh_CN
         */
        dispose(disposeProxy: boolean): void;
        /**
         * - The armature.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - éª¨æ?¶ã??
         * @version DragonBones 4.5
         * @language zh_CN
         */
        readonly armature: Armature;
        /**
         * - The animation player.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¨ç?»æ?­æ?¾å?¨ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly animation: Animation;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - Armature is the core of the skeleton animation system.
     * @see dragonBones.ArmatureData
     * @see dragonBones.Bone
     * @see dragonBones.Slot
     * @see dragonBones.Animation
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - éª¨æ?¶æ?¯éª¨éª¼å?¨ç?»ç³»ç»??????¸å?????
     * @see dragonBones.ArmatureData
     * @see dragonBones.Bone
     * @see dragonBones.Slot
     * @see dragonBones.Animation
     * @version DragonBones 3.0
     * @language zh_CN
     */
    class Armature extends BaseObject implements IAnimatable {
        static toString(): string;
        private static _onSortSlots(a, b);
        /**
         * - Whether to inherit the animation control of the parent armature.
         * True to try to have the child armature play an animation with the same name when the parent armature play the animation.
         * @default true
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¯å?¦ç»§??¿ç?¶éª¨??¶ç????¨ç?»æ?§å?¶ã??
         * å¦????è¯¥å?¼ä¸º trueï¼?å½???¶éª¨??¶æ?­æ?¾å?¨ç?»æ?¶ï??ä¼?å°?è¯?è®©å??éª¨æ?¶æ?­æ?¾å???????¨ç?»ã??
         * @default true
         * @version DragonBones 4.5
         * @language zh_CN
         */
        inheritAnimation: boolean;
        /**
         * @private
         */
        userData: any;
        private _lockUpdate;
        private _bonesDirty;
        private _slotsDirty;
        private _zOrderDirty;
        private _flipX;
        private _flipY;
        /**
         * @internal
         * @private
         */
        _cacheFrameIndex: number;
        private readonly _bones;
        private readonly _slots;
        /**
         * @internal
         * @private
         */
        readonly _glueSlots: Array<Slot>;
        /**
         * @internal
         * @private
         */
        readonly _constraints: Array<Constraint>;
        private readonly _actions;
        /**
         * @internal
         * @private
         */
        _armatureData: ArmatureData;
        private _animation;
        private _proxy;
        private _display;
        /**
         * @internal
         * @private
         */
        _replaceTextureAtlasData: TextureAtlasData | null;
        private _replacedTexture;
        /**
         * @internal
         * @private
         */
        _dragonBones: DragonBones;
        private _clock;
        /**
         * @internal
         * @private
         */
        _parent: Slot | null;
        /**
         * @private
         */
        protected _onClear(): void;
        private _sortBones();
        private _sortSlots();
        /**
         * @internal
         * @private
         */
        _sortZOrder(slotIndices: Array<number> | Int16Array | null, offset: number): void;
        /**
         * @internal
         * @private
         */
        _addBoneToBoneList(value: Bone): void;
        /**
         * @internal
         * @private
         */
        _removeBoneFromBoneList(value: Bone): void;
        /**
         * @internal
         * @private
         */
        _addSlotToSlotList(value: Slot): void;
        /**
         * @internal
         * @private
         */
        _removeSlotFromSlotList(value: Slot): void;
        /**
         * @internal
         * @private
         */
        _bufferAction(action: ActionData, append: boolean): void;
        /**
         * - Dispose the armature. (Return to the object pool)
         * @example
         * <pre>
         *     removeChild(armature.display);
         *     armature.dispose();
         * </pre>
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ?????¾éª¨??¶ã?? ï¼??????¶å?°å¯¹è±¡æ??ï¼?
         * @example
         * <pre>
         *     removeChild(armature.display);
         *     armature.dispose();
         * </pre>
         * @version DragonBones 3.0
         * @language zh_CN
         */
        dispose(): void;
        /**
         * @internal
         * @private
         */
        init(armatureData: ArmatureData, proxy: IArmatureProxy, display: any, dragonBones: DragonBones): void;
        /**
         * @inheritDoc
         */
        advanceTime(passedTime: number): void;
        /**
         * - Forces a specific bone or its owning slot to update the transform or display property in the next frame.
         * @param boneName - The bone name. (If not set, all bones will be update)
         * @param updateSlot - Whether to update the bone's slots. (Default: false)
         * @see dragonBones.Bone#invalidUpdate()
         * @see dragonBones.Slot#invalidUpdate()
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - å¼ºå?¶ç?¹å??éª¨éª¼?????¶æ?¥æ????????æ§½å?¨ä??ä¸?å¸§æ?´æ?°å????¢æ????¾ç¤ºå±???§ã??
         * @param boneName - éª¨éª¼???ç§°ã?? ï¼?å¦??????ªè®¾ç½®ï??å°???´æ?°æ?????éª¨éª¼ï¼?
         * @param updateSlot - ??¯å?¦æ?´æ?°éª¨éª¼ç?????æ§½ã?? ï¼?é»?è®?: falseï¼?
         * @see dragonBones.Bone#invalidUpdate()
         * @see dragonBones.Slot#invalidUpdate()
         * @version DragonBones 3.0
         * @language zh_CN
         */
        invalidUpdate(boneName?: string | null, updateSlot?: boolean): void;
        /**
         * - Check whether a specific point is inside a custom bounding box in a slot.
         * The coordinate system of the point is the inner coordinate system of the armature.
         * Custom bounding boxes need to be customized in Dragonbones Pro.
         * @param x - The horizontal coordinate of the point.
         * @param y - The vertical coordinate of the point.
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - æ£???¥ç?¹å????¹æ?¯å?¦å?¨æ??ä¸ªæ??æ§½ç????ªå??ä¹?è¾¹ç??æ¡???????
         * ??¹ç????????ç³»ä¸ºéª¨æ?¶å????????ç³»ã??
         * ??ªå??ä¹?è¾¹ç??æ¡????è¦???? DragonBones Pro ä¸­è?ªå??ä¹????
         * @param x - ??¹ç??æ°´å¹³?????????
         * @param y - ??¹ç???????´å????????
         * @version DragonBones 5.0
         * @language zh_CN
         */
        containsPoint(x: number, y: number): Slot | null;
        /**
         * - Check whether a specific segment intersects a custom bounding box for a slot in the armature.
         * The coordinate system of the segment and intersection is the inner coordinate system of the armature.
         * Custom bounding boxes need to be customized in Dragonbones Pro.
         * @param xA - The horizontal coordinate of the beginning of the segment.
         * @param yA - The vertical coordinate of the beginning of the segment.
         * @param xB - The horizontal coordinate of the end point of the segment.
         * @param yB - The vertical coordinate of the end point of the segment.
         * @param intersectionPointA - The first intersection at which a line segment intersects the bounding box from the beginning to the end. (If not set, the intersection point will not calculated)
         * @param intersectionPointB - The first intersection at which a line segment intersects the bounding box from the end to the beginning. (If not set, the intersection point will not calculated)
         * @param normalRadians - The normal radians of the tangent of the intersection boundary box. [x: Normal radian of the first intersection tangent, y: Normal radian of the second intersection tangent] (If not set, the normal will not calculated)
         * @returns The slot of the first custom bounding box where the segment intersects from the start point to the end point.
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - æ£???¥ç?¹å??çº¿æ®µ??¯å?¦ä??éª¨æ?¶ç?????ä¸ªæ??æ§½ç????ªå??ä¹?è¾¹ç??æ¡???¸äº¤???
         * çº¿æ®µ???äº¤ç?¹ç????????ç³»å??ä¸ºéª¨??¶å????????ç³»ã??
         * ??ªå??ä¹?è¾¹ç??æ¡????è¦???? DragonBones Pro ä¸­è?ªå??ä¹????
         * @param xA - çº¿æ®µèµ·ç?¹ç??æ°´å¹³?????????
         * @param yA - çº¿æ®µèµ·ç?¹ç???????´å????????
         * @param xB - çº¿æ®µç»???¹ç??æ°´å¹³?????????
         * @param yB - çº¿æ®µç»???¹ç???????´å????????
         * @param intersectionPointA - çº¿æ®µä»?èµ·ç?¹å?°ç????¹ä??è¾¹ç??æ¡???¸äº¤???ç¬¬ä??ä¸ªäº¤??¹ã?? ï¼?å¦??????ªè®¾ç½®ï?????ä¸?è®¡ç??äº¤ç?¹ï??
         * @param intersectionPointB - çº¿æ®µä»?ç»???¹å?°èµ·??¹ä??è¾¹ç??æ¡???¸äº¤???ç¬¬ä??ä¸ªäº¤??¹ã?? ï¼?å¦??????ªè®¾ç½®ï?????ä¸?è®¡ç??äº¤ç?¹ï??
         * @param normalRadians - äº¤ç?¹è¾¹???æ¡????çº¿ç??æ³?çº¿å¼§åº¦ã?? [x: ç¬¬ä??ä¸ªäº¤??¹å??çº¿ç??æ³?çº¿å¼§åº?, y: ç¬¬ä??ä¸ªäº¤??¹å??çº¿ç??æ³?çº¿å¼§åº¦] ï¼?å¦??????ªè®¾ç½®ï?????ä¸?è®¡ç??æ³?çº¿ï??
         * @returns çº¿æ®µä»?èµ·ç?¹å?°ç????¹ç?¸äº¤???ç¬¬ä??ä¸ªè?ªå??ä¹?è¾¹ç??æ¡???????æ§½ã??
         * @version DragonBones 5.0
         * @language zh_CN
         */
        intersectsSegment(xA: number, yA: number, xB: number, yB: number, intersectionPointA?: {
            x: number;
            y: number;
        } | null, intersectionPointB?: {
            x: number;
            y: number;
        } | null, normalRadians?: {
            x: number;
            y: number;
        } | null): Slot | null;
        /**
         * - Get a specific bone.
         * @param name - The bone name.
         * @see dragonBones.Bone
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??·å????¹å?????éª¨éª¼???
         * @param name - éª¨éª¼???ç§°ã??
         * @see dragonBones.Bone
         * @version DragonBones 3.0
         * @language zh_CN
         */
        getBone(name: string): Bone | null;
        /**
         * - Get a specific bone by the display.
         * @param display - The display object.
         * @see dragonBones.Bone
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???è¿???¾ç¤ºå¯¹è±¡??·å????¹å?????éª¨éª¼???
         * @param display - ??¾ç¤ºå¯¹è±¡???
         * @see dragonBones.Bone
         * @version DragonBones 3.0
         * @language zh_CN
         */
        getBoneByDisplay(display: any): Bone | null;
        /**
         * - Get a specific slot.
         * @param name - The slot name.
         * @see dragonBones.Slot
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??·å????¹å????????æ§½ã??
         * @param name - ???æ§½å??ç§°ã??
         * @see dragonBones.Slot
         * @version DragonBones 3.0
         * @language zh_CN
         */
        getSlot(name: string): Slot | null;
        /**
         * - Get a specific slot by the display.
         * @param display - The display object.
         * @see dragonBones.Slot
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???è¿???¾ç¤ºå¯¹è±¡??·å????¹å????????æ§½ã??
         * @param display - ??¾ç¤ºå¯¹è±¡???
         * @see dragonBones.Slot
         * @version DragonBones 3.0
         * @language zh_CN
         */
        getSlotByDisplay(display: any): Slot | null;
        /**
         * @deprecated
         */
        addBone(value: Bone, parentName: string): void;
        /**
         * @deprecated
         */
        addSlot(value: Slot, parentName: string): void;
        /**
         * @private
         */
        addConstraint(value: Constraint): void;
        /**
         * @deprecated
         */
        removeBone(value: Bone): void;
        /**
         * @deprecated
         */
        removeSlot(value: Slot): void;
        /**
         * - Get all bones.
         * @see dragonBones.Bone
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??·å???????????éª¨éª¼???
         * @see dragonBones.Bone
         * @version DragonBones 3.0
         * @language zh_CN
         */
        getBones(): Array<Bone>;
        /**
         * - Get all slots.
         * @see dragonBones.Slot
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??·å??????????????æ§½ã??
         * @see dragonBones.Slot
         * @version DragonBones 3.0
         * @language zh_CN
         */
        getSlots(): Array<Slot>;
        /**
         * - Whether to flip the armature horizontally.
         * @version DragonBones 5.5
         * @language en_US
         */
        /**
         * - ??¯å?¦å??éª¨æ?¶æ°´å¹³ç¿»è½¬ã??
         * @version DragonBones 5.5
         * @language zh_CN
         */
        flipX: boolean;
        /**
         * - Whether to flip the armature vertically.
         * @version DragonBones 5.5
         * @language en_US
         */
        /**
         * - ??¯å?¦å??éª¨æ?¶å????´ç¿»è½¬ã??
         * @version DragonBones 5.5
         * @language zh_CN
         */
        flipY: boolean;
        /**
         * - The animation cache frame rate, which turns on the animation cache when the set value is greater than 0.
         * There is a certain amount of memory overhead to improve performance by caching animation data in memory.
         * The frame rate should not be set too high, usually with the frame rate of the animation is similar and lower than the program running frame rate.
         * When the animation cache is turned on, some features will fail, such as the offset property of bone.
         * @example
         * <pre>
         *     armature.cacheFrameRate = 24;
         * </pre>
         * @see dragonBones.DragonBonesData#frameRate
         * @see dragonBones.ArmatureData#frameRate
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¨ç?»ç??å­?å¸§ç??ï¼?å½?è®¾ç½®?????¼å¤§äº? 0 ?????¶ï??å°?ä¼?å¼???¯å?¨ç?»ç??å­????
         * ???è¿?å°???¨ç?»æ?°æ?®ç??å­???¨å??å­?ä¸­æ?¥æ??é«?è¿?è¡???§è?½ï??ä¼????ä¸?å®???????å­?å¼???????
         * å¸§ç??ä¸?å®?è®¾ç½®???è¿?é«?ï¼????å¸¸è????¨ç?»ç??å¸§ç????¸å??ä¸?ä½?äº?ç¨?åº?è¿?è¡????å¸§ç?????
         * å¼???¯å?¨ç?»ç??å­????ï¼????äº??????½å??ä¼?å¤±æ??ï¼?æ¯?å¦?éª¨éª¼??? offset å±???§ç?????
         * @example
         * <pre>
         *     armature.cacheFrameRate = 24;
         * </pre>
         * @see dragonBones.DragonBonesData#frameRate
         * @see dragonBones.ArmatureData#frameRate
         * @version DragonBones 4.5
         * @language zh_CN
         */
        cacheFrameRate: number;
        /**
         * - The armature name.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - éª¨æ?¶å??ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly name: string;
        /**
         * - The armature data.
         * @see dragonBones.ArmatureData
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - éª¨æ?¶æ?°æ?®ã??
         * @see dragonBones.ArmatureData
         * @version DragonBones 4.5
         * @language zh_CN
         */
        readonly armatureData: ArmatureData;
        /**
         * - The animation player.
         * @see dragonBones.Animation
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¨ç?»æ?­æ?¾å?¨ã??
         * @see dragonBones.Animation
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly animation: Animation;
        /**
         * @pivate
         */
        readonly proxy: IArmatureProxy;
        /**
         * - The EventDispatcher instance of the armature.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - è¯¥éª¨??¶ç?? EventDispatcher å®?ä¾????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        readonly eventDispatcher: IEventDispatcher;
        /**
         * - The display container.
         * The display of the slot is displayed as the parent.
         * Depending on the rendering engine, the type will be different, usually the DisplayObjectContainer type.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¾ç¤ºå®¹å?¨å??ä¾????
         * ???æ§½ç????¾ç¤ºå¯¹è±¡??½ä??ä»¥æ­¤??¾ç¤ºå®¹å?¨ä¸º??¶çº§???
         * ??¹æ?®æ¸²???å¼???????ä¸????ï¼?ç±»å??ä¼?ä¸????ï¼????å¸¸æ?? DisplayObjectContainer ç±»å?????
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly display: any;
        /**
         * @private
         */
        replacedTexture: any;
        /**
         * @inheritDoc
         */
        clock: WorldClock | null;
        /**
         * - Get the parent slot which the armature belongs to.
         * @see dragonBones.Slot
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - è¯¥éª¨??¶æ??å±??????¶æ??æ§½ã??
         * @see dragonBones.Slot
         * @version DragonBones 4.5
         * @language zh_CN
         */
        readonly parent: Slot | null;
        /**
         * @deprecated
         * @private
         */
        replaceTexture(texture: any): void;
        /**
         * - Deprecated, please refer to {@link #eventDispatcher}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #eventDispatcher}???
         * @deprecated
         * @language zh_CN
         */
        hasEventListener(type: EventStringType): boolean;
        /**
         * - Deprecated, please refer to {@link #eventDispatcher}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #eventDispatcher}???
         * @deprecated
         * @language zh_CN
         */
        addEventListener(type: EventStringType, listener: Function, target: any): void;
        /**
         * - Deprecated, please refer to {@link #eventDispatcher}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #eventDispatcher}???
         * @deprecated
         * @language zh_CN
         */
        removeEventListener(type: EventStringType, listener: Function, target: any): void;
        /**
         * - Deprecated, please refer to {@link #cacheFrameRate}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #cacheFrameRate}???
         * @deprecated
         * @language zh_CN
         */
        enableAnimationCache(frameRate: number): void;
        /**
         * - Deprecated, please refer to {@link #display}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #display}???
         * @deprecated
         * @language zh_CN
         */
        getDisplay(): any;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The base class of the transform object.
     * @see dragonBones.Transform
     * @version DragonBones 4.5
     * @language en_US
     */
    /**
     * - ?????¢å¯¹è±¡ç????ºç±»???
     * @see dragonBones.Transform
     * @version DragonBones 4.5
     * @language zh_CN
     */
    abstract class TransformObject extends BaseObject {
        /**
         * @private
         */
        protected static readonly _helpMatrix: Matrix;
        /**
         * @private
         */
        protected static readonly _helpTransform: Transform;
        /**
         * @private
         */
        protected static readonly _helpPoint: Point;
        /**
         * - A matrix relative to the armature coordinate system.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¸å¯¹äº?éª¨æ?¶å?????ç³»ç????©é?µã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly globalTransformMatrix: Matrix;
        /**
         * - A transform relative to the armature coordinate system.
         * @see #updateGlobalTransform()
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¸å¯¹äº?éª¨æ?¶å?????ç³»ç???????¢ã??
         * @see #updateGlobalTransform()
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly global: Transform;
        /**
         * - The offset transform relative to the armature or the parent bone coordinate system.
         * @see #dragonBones.Bone#invalidUpdate()
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¸å¯¹äº?éª¨æ?¶æ????¶éª¨éª¼å?????ç³»ç?????ç§»å????¢ã??
         * @see #dragonBones.Bone#invalidUpdate()
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly offset: Transform;
        /**
         * @private
         */
        origin: Transform | null;
        /**
         * @private
         */
        userData: any;
        /**
         * @private
         */
        protected _globalDirty: boolean;
        /**
         * @internal
         * @private
         */
        _armature: Armature;
        /**
         * @internal
         * @private
         */
        _parent: Bone;
        /**
         * @private
         */
        protected _onClear(): void;
        /**
         * @internal
         * @private
         */
        _setArmature(value: Armature | null): void;
        /**
         * @internal
         * @private
         */
        _setParent(value: Bone | null): void;
        /**
         * - For performance considerations, rotation or scale in the {@link #global} attribute of the bone or slot is not always properly accessible,
         * some engines do not rely on these attributes to update rendering, such as Egret.
         * The use of this method ensures that the access to the {@link #global} property is correctly rotation or scale.
         * @example
         * <pre>
         *     bone.updateGlobalTransform();
         *     let rotation = bone.global.rotation;
         * </pre>
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??ºä????§è?½ç????????ï¼?éª¨éª¼??????æ§½ç?? {@link #global} å±???§ä¸­??????è½¬æ??ç¼©æ?¾å¹¶ä¸???»æ?¯æ­£ç¡®å?¯è®¿??®ç??ï¼????äº?å¼????å¹¶ä??ä¾?èµ?è¿?äº?å±???§æ?´æ?°æ¸²???ï¼?æ¯?å¦? Egret???
         * ä½¿ç?¨æ­¤??¹æ????¯ä»¥ä¿?è¯?è®¿é?®å?? {@link #global} å±???§ä¸­æ­?ç¡®ç?????è½¬æ??ç¼©æ?¾ã??
         * @example
         * <pre>
         *     bone.updateGlobalTransform();
         *     let rotation = bone.global.rotation;
         * </pre>
         * @version DragonBones 3.0
         * @language zh_CN
         */
        updateGlobalTransform(): void;
        /**
         * - The armature to which it belongs.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???å±????éª¨æ?¶ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly armature: Armature;
        /**
         * - The parent bone to which it belongs.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???å±??????¶éª¨éª¼ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly parent: Bone;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - Bone is one of the most important logical units in the armature animation system,
     * and is responsible for the realization of translate, rotation, scaling in the animations.
     * A armature can contain multiple bones.
     * @see dragonBones.BoneData
     * @see dragonBones.Armature
     * @see dragonBones.Slot
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - éª¨éª¼??¨éª¨éª¼å?¨ç?»ä??ç³»ä¸­??¯æ?????è¦??????»è????????ä¹?ä¸?ï¼?è´?è´???¨ç?»ä¸­???å¹³ç§»??????è½¬ã??ç¼©æ?¾ç??å®???°ã??
     * ä¸?ä¸ªéª¨??¶ä¸­??¯ä»¥?????«å??ä¸ªéª¨éª¼ã??
     * @see dragonBones.BoneData
     * @see dragonBones.Armature
     * @see dragonBones.Slot
     * @version DragonBones 3.0
     * @language zh_CN
     */
    class Bone extends TransformObject {
        static toString(): string;
        /**
         * - The offset mode.
         * @see #offset
         * @version DragonBones 5.5
         * @language en_US
         */
        /**
         * - ???ç§»æ¨¡å¼????
         * @see #offset
         * @version DragonBones 5.5
         * @language zh_CN
         */
        offsetMode: OffsetMode;
        /**
         * @internal
         * @private
         */
        readonly animationPose: Transform;
        /**
         * @internal
         * @private
         */
        _transformDirty: boolean;
        /**
         * @internal
         * @private
         */
        _childrenTransformDirty: boolean;
        protected _localDirty: boolean;
        /**
         * @internal
         * @private
         */
        _hasConstraint: boolean;
        private _visible;
        protected _cachedFrameIndex: number;
        /**
         * @internal
         * @private
         */
        readonly _blendState: BlendState;
        /**
         * @internal
         * @private
         */
        _boneData: BoneData;
        /**
         * @internal
         * @private
         */
        _cachedFrameIndices: Array<number> | null;
        /**
         * @inheritDoc
         */
        protected _onClear(): void;
        /**
         * @private
         */
        protected _updateGlobalTransformMatrix(isCache: boolean): void;
        /**
         * @inheritDoc
         */
        _setArmature(value: Armature | null): void;
        /**
         * @internal
         * @private
         */
        init(boneData: BoneData): void;
        /**
         * @internal
         * @private
         */
        update(cacheFrameIndex: number): void;
        /**
         * @internal
         * @private
         */
        updateByConstraint(): void;
        /**
         * - Forces the bone to update the transform in the next frame.
         * When the bone is not animated or its animation state is finished, the bone will not continue to update,
         * and when the skeleton must be updated for some reason, the method needs to be called explicitly.
         * @example
         * <pre>
         *     let bone = armature.getBone("arm");
         *     bone.offset.scaleX = 2.0;
         *     bone.invalidUpdate();
         * </pre>
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - å¼ºå?¶éª¨éª¼å?¨ä??ä¸?å¸§æ?´æ?°å????¢ã??
         * å½?è¯¥éª¨éª¼æ²¡?????¨ç?»ç?¶æ???????¶å?¨ç?»ç?¶æ????­æ?¾å???????¶ï??éª¨éª¼å°?ä¸???¨ç»§ç»­æ?´æ?°ï?????æ­¤æ?¶ç?±ä?????äº???????å¿?é¡»æ?´æ?°éª¨éª¼æ?¶ï????????è¦???¾å??è°???¨è¯¥??¹æ?????
         * @example
         * <pre>
         *     let bone = armature.getBone("arm");
         *     bone.offset.scaleX = 2.0;
         *     bone.invalidUpdate();
         * </pre>
         * @version DragonBones 3.0
         * @language zh_CN
         */
        invalidUpdate(): void;
        /**
         * - Check whether the bone contains a specific bone or slot.
         * @see dragonBones.Bone
         * @see dragonBones.Slot
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - æ£???¥è¯¥éª¨éª¼??¯å?¦å????«ç?¹å?????éª¨éª¼??????æ§½ã??
         * @see dragonBones.Bone
         * @see dragonBones.Slot
         * @version DragonBones 3.0
         * @language zh_CN
         */
        contains(value: TransformObject): boolean;
        /**
         * - The bone data.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - éª¨éª¼??°æ?®ã??
         * @version DragonBones 4.5
         * @language zh_CN
         */
        readonly boneData: BoneData;
        /**
         * - The visible of all slots in the bone.
         * @default true
         * @see dragonBones.Slot#visible
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - æ­¤éª¨éª¼æ????????æ§½ç????¯è?????
         * @default true
         * @see dragonBones.Slot#visible
         * @version DragonBones 3.0
         * @language zh_CN
         */
        visible: boolean;
        /**
         * - The bone name.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - éª¨éª¼???ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly name: string;
        /**
         * - Deprecated, please refer to {@link dragonBones.Armature#getBones()}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link dragonBones.Armature#getBones()}???
         * @deprecated
         * @language zh_CN
         */
        getBones(): Array<Bone>;
        /**
         * - Deprecated, please refer to {@link dragonBones.Armature#getSlots()}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link dragonBones.Armature#getSlots()}???
         * @deprecated
         * @language zh_CN
         */
        getSlots(): Array<Slot>;
        /**
         * - Deprecated, please refer to {@link dragonBones.Armature#getSlot()}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link dragonBones.Armature#getSlot()}???
         * @deprecated
         * @language zh_CN
         */
        readonly slot: Slot | null;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * @internal
     * @private
     */
    class Surface extends Bone {
        static toString(): string;
        private _dX;
        private _dY;
        private _k;
        private _kX;
        private _kY;
        /**
         * For debug draw.
         * @internal
         * @private
         */
        readonly _vertices: Array<number>;
        /**
         * For timeline state.
         * @internal
         * @private
         */
        readonly _deformVertices: Array<number>;
        /**
         * x1, y1, x2, y2, x3, y3, x4, y4, d1X, d1Y, d2X, d2Y
         */
        private readonly _hullCache;
        /**
         * Inside [flag, a, b, c, d, tx, ty], Outside [flag, a, b, c, d, tx, ty]
         */
        private readonly _matrixCahce;
        /**
         * @inheritDoc
         */
        protected _onClear(): void;
        private _getAffineTransform(x, y, lX, lY, aX, aY, bX, bY, cX, cY, transform, matrix, isDown);
        private _updateVertices();
        /**
         * @private
         */
        protected _updateGlobalTransformMatrix(isCache: boolean): void;
        _getGlobalTransformMatrix(x: number, y: number): Matrix;
        init(surfaceData: SurfaceData): void;
        /**
         * @internal
         * @private
         */
        update(cacheFrameIndex: number): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The slot attached to the armature, controls the display status and properties of the display object.
     * A bone can contain multiple slots.
     * A slot can contain multiple display objects, displaying only one of the display objects at a time,
     * but you can toggle the display object into frame animation while the animation is playing.
     * The display object can be a normal texture, or it can be a display of a child armature, a grid display object,
     * and a custom other display object.
     * @see dragonBones.Armature
     * @see dragonBones.Bone
     * @see dragonBones.SlotData
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - ???æ§½é???????¨éª¨éª¼ä??ï¼???§å?¶æ?¾ç¤ºå¯¹è±¡?????¾ç¤º??¶æ?????å±???§ã??
     * ä¸?ä¸ªéª¨éª¼ä????¯ä»¥?????«å??ä¸ªæ??æ§½ã??
     * ä¸?ä¸ªæ??æ§½ä¸­??¯ä»¥?????«å??ä¸ªæ?¾ç¤ºå¯¹è±¡ï¼????ä¸???¶é?´å?ªè?½æ?¾ç¤º??¶ä¸­???ä¸?ä¸ªæ?¾ç¤ºå¯¹è±¡ï¼?ä½???¯ä»¥??¨å?¨ç?»æ?­æ?¾ç??è¿?ç¨?ä¸­å????¢æ?¾ç¤ºå¯¹è±¡å®???°å¸§??¨ç?»ã??
     * ??¾ç¤ºå¯¹è±¡??¯ä»¥??¯æ?®é???????¾ç??çº¹ç??ï¼?ä¹???¯ä»¥??¯å??éª¨æ?¶ç????¾ç¤ºå®¹å?¨ï??ç½???¼æ?¾ç¤ºå¯¹è±¡ï¼?è¿???¯ä»¥??¯è?ªå??ä¹??????¶ä????¾ç¤ºå¯¹è±¡???
     * @see dragonBones.Armature
     * @see dragonBones.Bone
     * @see dragonBones.SlotData
     * @version DragonBones 3.0
     * @language zh_CN
     */
    abstract class Slot extends TransformObject {
        /**
         * - Displays the animated state or mixed group name controlled by the object, set to null to be controlled by all animation states.
         * @default null
         * @see dragonBones.AnimationState#displayControl
         * @see dragonBones.AnimationState#name
         * @see dragonBones.AnimationState#group
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¾ç¤ºå¯¹è±¡?????°æ?§å?¶ç????¨ç?»ç?¶æ?????æ··å??ç»????ç§°ï??è®¾ç½®ä¸? null ???è¡¨ç¤º??????????????¨ç?»ç?¶æ????§å?¶ã??
         * @default null
         * @see dragonBones.AnimationState#displayControl
         * @see dragonBones.AnimationState#name
         * @see dragonBones.AnimationState#group
         * @version DragonBones 4.5
         * @language zh_CN
         */
        displayController: string | null;
        /**
         * @private
         */
        protected _displayDirty: boolean;
        /**
         * @private
         */
        protected _zOrderDirty: boolean;
        /**
         * @private
         */
        protected _visibleDirty: boolean;
        /**
         * @private
         */
        protected _blendModeDirty: boolean;
        /**
         * @internal
         * @private
         */
        _colorDirty: boolean;
        /**
         * @internal
         * @private
         */
        _meshDirty: boolean;
        /**
         * @private
         */
        protected _transformDirty: boolean;
        /**
         * @private
         */
        protected _visible: boolean;
        /**
         * @private
         */
        protected _blendMode: BlendMode;
        /**
         * @private
         */
        protected _displayIndex: number;
        /**
         * @private
         */
        protected _animationDisplayIndex: number;
        /**
         * @internal
         * @private
         */
        _zOrder: number;
        /**
         * @private
         */
        protected _cachedFrameIndex: number;
        /**
         * @internal
         * @private
         */
        _pivotX: number;
        /**
         * @internal
         * @private
         */
        _pivotY: number;
        /**
         * @private
         */
        protected readonly _localMatrix: Matrix;
        /**
         * @internal
         * @private
         */
        readonly _colorTransform: ColorTransform;
        /**
         * @internal
         * @private
         */
        readonly _deformVertices: Array<number>;
        /**
         * @private
         */
        readonly _displayDatas: Array<DisplayData | null>;
        /**
         * @private
         */
        protected readonly _displayList: Array<any | Armature>;
        /**
         * @private
         */
        protected readonly _meshBones: Array<Bone | null>;
        /**
         * @private
         */
        protected readonly _meshSlots: Array<Slot | null>;
        /**
         * @internal
         * @private
         */
        _slotData: SlotData;
        /**
         * @private
         */
        protected _rawDisplayDatas: Array<DisplayData | null> | null;
        /**
         * @private
         */
        protected _displayData: DisplayData | null;
        /**
         * @private
         */
        protected _textureData: TextureData | null;
        /**
         * @internal
         * @private
         */
        _meshData: MeshDisplayData | null;
        /**
         * @private
         */
        protected _boundingBoxData: BoundingBoxData | null;
        /**
         * @private
         */
        protected _rawDisplay: any;
        /**
         * @private
         */
        protected _meshDisplay: any;
        /**
         * @private
         */
        protected _display: any;
        /**
         * @private
         */
        protected _childArmature: Armature | null;
        /**
         * @internal
         * @private
         */
        _cachedFrameIndices: Array<number> | null;
        /**
         * @inheritDoc
         */
        protected _onClear(): void;
        /**
         * @private
         */
        protected abstract _initDisplay(value: any, isRetain: boolean): void;
        /**
         * @private
         */
        protected abstract _disposeDisplay(value: any, isRelease: boolean): void;
        /**
         * @private
         */
        protected abstract _onUpdateDisplay(): void;
        /**
         * @private
         */
        protected abstract _addDisplay(): void;
        /**
         * @private
         */
        protected abstract _replaceDisplay(value: any): void;
        /**
         * @private
         */
        protected abstract _removeDisplay(): void;
        /**
         * @private
         */
        protected abstract _updateZOrder(): void;
        /**
         * @private
         */
        abstract _updateVisible(): void;
        /**
         * @private
         */
        protected abstract _updateBlendMode(): void;
        /**
         * @private
         */
        protected abstract _updateColor(): void;
        /**
         * @private
         */
        protected abstract _updateFrame(): void;
        /**
         * @private
         */
        protected abstract _updateMesh(): void;
        /**
         * @internal
         * @private
         */
        abstract _updateGlueMesh(): void;
        /**
         * @private
         */
        protected abstract _updateTransform(): void;
        /**
         * @private
         */
        protected abstract _identityTransform(): void;
        /**
         * @private
         */
        protected _getDefaultRawDisplayData(): DisplayData | null;
        /**
         * @private
         */
        protected _updateDisplayData(): void;
        /**
         * @private
         */
        protected _updateDisplay(): void;
        /**
         * @private
         */
        protected _updateGlobalTransformMatrix(isCache: boolean): void;
        /**
         * @private
         */
        protected _isMeshBonesUpdate(): boolean;
        /**
         * @inheritDoc
         */
        _setArmature(value: Armature | null): void;
        /**
         * @internal
         * @private
         */
        _setDisplayIndex(value: number, isAnimation?: boolean): boolean;
        /**
         * @internal
         * @private
         */
        _setZorder(value: number): boolean;
        /**
         * @internal
         * @private
         */
        _setColor(value: ColorTransform): boolean;
        /**
         * @internal
         * @private
         */
        _setDisplayList(value: Array<any> | null): boolean;
        /**
         * @internal
         * @private
         */
        init(slotData: SlotData, displayDatas: Array<DisplayData | null> | null, rawDisplay: any, meshDisplay: any): void;
        /**
         * @internal
         * @private
         */
        update(cacheFrameIndex: number): void;
        /**
         * @private
         */
        updateTransformAndMatrix(): void;
        /**
         * @private
         */
        replaceDisplayData(value: DisplayData | null, displayIndex?: number): void;
        /**
         * - Check whether a specific point is inside a custom bounding box in the slot.
         * The coordinate system of the point is the inner coordinate system of the armature.
         * Custom bounding boxes need to be customized in Dragonbones Pro.
         * @param x - The horizontal coordinate of the point.
         * @param y - The vertical coordinate of the point.
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - æ£???¥ç?¹å????¹æ?¯å?¦å?¨æ??æ§½ç????ªå??ä¹?è¾¹ç??æ¡???????
         * ??¹ç????????ç³»ä¸ºéª¨æ?¶å????????ç³»ã??
         * ??ªå??ä¹?è¾¹ç??æ¡????è¦???? DragonBones Pro ä¸­è?ªå??ä¹????
         * @param x - ??¹ç??æ°´å¹³?????????
         * @param y - ??¹ç???????´å????????
         * @version DragonBones 5.0
         * @language zh_CN
         */
        containsPoint(x: number, y: number): boolean;
        /**
         * - Check whether a specific segment intersects a custom bounding box for the slot.
         * The coordinate system of the segment and intersection is the inner coordinate system of the armature.
         * Custom bounding boxes need to be customized in Dragonbones Pro.
         * @param xA - The horizontal coordinate of the beginning of the segment.
         * @param yA - The vertical coordinate of the beginning of the segment.
         * @param xB - The horizontal coordinate of the end point of the segment.
         * @param yB - The vertical coordinate of the end point of the segment.
         * @param intersectionPointA - The first intersection at which a line segment intersects the bounding box from the beginning to the end. (If not set, the intersection point will not calculated)
         * @param intersectionPointB - The first intersection at which a line segment intersects the bounding box from the end to the beginning. (If not set, the intersection point will not calculated)
         * @param normalRadians - The normal radians of the tangent of the intersection boundary box. [x: Normal radian of the first intersection tangent, y: Normal radian of the second intersection tangent] (If not set, the normal will not calculated)
         * @returns Intersection situation. [1: Disjoint and segments within the bounding box, 0: Disjoint, 1: Intersecting and having a nodal point and ending in the bounding box, 2: Intersecting and having a nodal point and starting at the bounding box, 3: Intersecting and having two intersections, N: Intersecting and having N intersections]
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - æ£???¥ç?¹å??çº¿æ®µ??¯å?¦ä?????æ§½ç????ªå??ä¹?è¾¹ç??æ¡???¸äº¤???
         * çº¿æ®µ???äº¤ç?¹ç????????ç³»å??ä¸ºéª¨??¶å????????ç³»ã??
         * ??ªå??ä¹?è¾¹ç??æ¡????è¦???? DragonBones Pro ä¸­è?ªå??ä¹????
         * @param xA - çº¿æ®µèµ·ç?¹ç??æ°´å¹³?????????
         * @param yA - çº¿æ®µèµ·ç?¹ç???????´å????????
         * @param xB - çº¿æ®µç»???¹ç??æ°´å¹³?????????
         * @param yB - çº¿æ®µç»???¹ç???????´å????????
         * @param intersectionPointA - çº¿æ®µä»?èµ·ç?¹å?°ç????¹ä??è¾¹ç??æ¡???¸äº¤???ç¬¬ä??ä¸ªäº¤??¹ã?? ï¼?å¦??????ªè®¾ç½®ï?????ä¸?è®¡ç??äº¤ç?¹ï??
         * @param intersectionPointB - çº¿æ®µä»?ç»???¹å?°èµ·??¹ä??è¾¹ç??æ¡???¸äº¤???ç¬¬ä??ä¸ªäº¤??¹ã?? ï¼?å¦??????ªè®¾ç½®ï?????ä¸?è®¡ç??äº¤ç?¹ï??
         * @param normalRadians - äº¤ç?¹è¾¹???æ¡????çº¿ç??æ³?çº¿å¼§åº¦ã?? [x: ç¬¬ä??ä¸ªäº¤??¹å??çº¿ç??æ³?çº¿å¼§åº?, y: ç¬¬ä??ä¸ªäº¤??¹å??çº¿ç??æ³?çº¿å¼§åº¦] ï¼?å¦??????ªè®¾ç½®ï?????ä¸?è®¡ç??æ³?çº¿ï??
         * @returns ??¸äº¤????????µã?? [-1: ä¸???¸äº¤ä¸?çº¿æ®µ??¨å????´ç?????, 0: ä¸???¸äº¤, 1: ??¸äº¤ä¸????ä¸?ä¸ªäº¤??¹ä??ç»???¹å?¨å????´ç?????, 2: ??¸äº¤ä¸????ä¸?ä¸ªäº¤??¹ä??èµ·ç?¹å?¨å????´ç?????, 3: ??¸äº¤ä¸????ä¸¤ä¸ªäº¤ç??, N: ??¸äº¤ä¸???? N ä¸ªäº¤??¹]
         * @version DragonBones 5.0
         * @language zh_CN
         */
        intersectsSegment(xA: number, yA: number, xB: number, yB: number, intersectionPointA?: {
            x: number;
            y: number;
        } | null, intersectionPointB?: {
            x: number;
            y: number;
        } | null, normalRadians?: {
            x: number;
            y: number;
        } | null): number;
        /**
         * - Forces the slot to update the state of the display object in the next frame.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - å¼ºå?¶æ??æ§½å?¨ä??ä¸?å¸§æ?´æ?°æ?¾ç¤ºå¯¹è±¡?????¶æ?????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        invalidUpdate(): void;
        /**
         * - The visible of slot's display object.
         * @default true
         * @version DragonBones 5.6
         * @language en_US
         */
        /**
         * - ???æ§½ç????¾ç¤ºå¯¹è±¡?????¯è?????
         * @default true
         * @version DragonBones 5.6
         * @language zh_CN
         */
        visible: boolean;
        /**
         * - The index of the display object displayed in the display list.
         * @example
         * <pre>
         *     let slot = armature.getSlot("weapon");
         *     slot.displayIndex = 3;
         *     slot.displayController = "none";
         * </pre>
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - æ­¤æ?¶æ?¾ç¤º?????¾ç¤ºå¯¹è±¡??¨æ?¾ç¤º???è¡¨ä¸­???ç´¢å?????
         * @example
         * <pre>
         *     let slot = armature.getSlot("weapon");
         *     slot.displayIndex = 3;
         *     slot.displayController = "none";
         * </pre>
         * @version DragonBones 4.5
         * @language zh_CN
         */
        displayIndex: number;
        /**
         * - The slot name.
         * @see dragonBones.SlotData#name
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???æ§½å??ç§°ã??
         * @see dragonBones.SlotData#name
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly name: string;
        /**
         * - Contains a display list of display objects or child armatures.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ?????«æ?¾ç¤ºå¯¹è±¡???å­?éª¨æ?¶ç????¾ç¤º???è¡¨ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        displayList: Array<any>;
        /**
         * - The slot data.
         * @see dragonBones.SlotData
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ???æ§½æ?°æ?®ã??
         * @see dragonBones.SlotData
         * @version DragonBones 4.5
         * @language zh_CN
         */
        readonly slotData: SlotData;
        /**
         * @private
         */
        rawDisplayDatas: Array<DisplayData | null> | null;
        /**
         * - The custom bounding box data for the slot at current time.
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ???æ§½æ­¤??¶ç????ªå??ä¹??????´ç????°æ?®ã??
         * @version DragonBones 5.0
         * @language zh_CN
         */
        readonly boundingBoxData: BoundingBoxData | null;
        /**
         * @private
         */
        readonly rawDisplay: any;
        /**
         * @private
         */
        readonly meshDisplay: any;
        /**
         * - The display object that the slot displays at this time.
         * @example
         * <pre>
         *     let slot = armature.getSlot("text");
         *     slot.display = new yourEngine.TextField();
         * </pre>
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???æ§½æ­¤??¶æ?¾ç¤º?????¾ç¤ºå¯¹è±¡???
         * @example
         * <pre>
         *     let slot = armature.getSlot("text");
         *     slot.display = new yourEngine.TextField();
         * </pre>
         * @version DragonBones 3.0
         * @language zh_CN
         */
        display: any;
        /**
         * - The child armature that the slot displayed at current time.
         * @example
         * <pre>
         *     let slot = armature.getSlot("weapon");
         *     slot.childArmature = factory.buildArmature("weapon_blabla", "weapon_blabla_project");
         * </pre>
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???æ§½æ­¤??¶æ?¾ç¤º???å­?éª¨æ?¶ã??
         * @example
         * <pre>
         *     let slot = armature.getSlot("weapon");
         *     slot.childArmature = factory.buildArmature("weapon_blabla", "weapon_blabla_project");
         * </pre>
         * @version DragonBones 3.0
         * @language zh_CN
         */
        childArmature: Armature | null;
        /**
         * - Deprecated, please refer to {@link #display}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #display}???
         * @deprecated
         * @language zh_CN
         */
        getDisplay(): any;
        /**
         * - Deprecated, please refer to {@link #display}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #display}???
         * @deprecated
         * @language zh_CN
         */
        setDisplay(value: any): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * @internal
     * @private
     */
    abstract class Constraint extends BaseObject {
        protected static readonly _helpMatrix: Matrix;
        protected static readonly _helpTransform: Transform;
        protected static readonly _helpPoint: Point;
        /**
         * - For timeline state.
         * @internal
         */
        _constraintData: ConstraintData;
        protected _armature: Armature;
        /**
         * - For sort bones.
         * @internal
         */
        _target: Bone;
        /**
         * - For sort bones.
         * @internal
         */
        _root: Bone;
        protected _bone: Bone | null;
        protected _onClear(): void;
        abstract init(constraintData: ConstraintData, armature: Armature): void;
        abstract update(): void;
        abstract invalidUpdate(): void;
        readonly name: string;
    }
    /**
     * @internal
     * @private
     */
    class IKConstraint extends Constraint {
        static toString(): string;
        private _scaleEnabled;
        /**
         * - For timeline state.
         * @internal
         */
        _bendPositive: boolean;
        /**
         * - For timeline state.
         * @internal
         */
        _weight: number;
        protected _onClear(): void;
        private _computeA();
        private _computeB();
        init(constraintData: ConstraintData, armature: Armature): void;
        update(): void;
        invalidUpdate(): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - Play animation interface. (Both Armature and Wordclock implement the interface)
     * Any instance that implements the interface can be added to the Worldclock instance and advance time by Worldclock instance uniformly.
     * @see dragonBones.WorldClock
     * @see dragonBones.Armature
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - ??­æ?¾å?¨ç?»æ?¥å????? (Armature ??? WordClock ??½å????°ä??è¯¥æ?¥å??)
     * ä»»ä??å®???°ä??æ­¤æ?¥å?????å®?ä¾???½å?¯ä»¥æ·»å????? WorldClock å®?ä¾?ä¸­ï????? WorldClock å®?ä¾?ç»?ä¸???´æ?°æ?¶é?´ã??
     * @see dragonBones.WorldClock
     * @see dragonBones.Armature
     * @version DragonBones 3.0
     * @language zh_CN
     */
    interface IAnimatable {
        /**
         * - Advance time.
         * @param passedTime - Passed time. (In seconds)
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??´æ?°æ?¶é?´ã??
         * @param passedTime - ???è¿??????¶é?´ã?? ï¼?ä»¥ç??ä¸ºå??ä½?ï¼?
         * @version DragonBones 3.0
         * @language zh_CN
         */
        advanceTime(passedTime: number): void;
        /**
         * - The Wordclock instance to which the current belongs.
         * @example
         * <pre>
         *     armature.clock = factory.clock; // Add armature to clock.
         *     armature.clock = null; // Remove armature from clock.
         * </pre>
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - å½???????å±???? WordClock å®?ä¾????
         * @example
         * <pre>
         *     armature.clock = factory.clock; // å°?éª¨æ?¶æ·»?????°æ?¶é?????
         *     armature.clock = null; // å°?éª¨æ?¶ä????¶é??ç§»é?¤ã??
         * </pre>
         * @version DragonBones 5.0
         * @language zh_CN
         */
        clock: WorldClock | null;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - Worldclock provides clock support for animations, advance time for each IAnimatable object added to the instance.
     * @see dragonBones.IAnimateble
     * @see dragonBones.Armature
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - WorldClock å¯¹å?¨ç?»æ??ä¾???¶é????¯æ??ï¼?ä¸ºæ??ä¸ªå????¥å?°è¯¥å®?ä¾???? IAnimatable å¯¹è±¡??´æ?°æ?¶é?´ã??
     * @see dragonBones.IAnimateble
     * @see dragonBones.Armature
     * @version DragonBones 3.0
     * @language zh_CN
     */
    class WorldClock implements IAnimatable {
        /**
         * - Current time. (In seconds)
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - å½?????????¶é?´ã?? (ä»¥ç??ä¸ºå??ä½?)
         * @version DragonBones 3.0
         * @language zh_CN
         */
        time: number;
        /**
         * - The play speed, used to control animation speed-shift play.
         * [0: Stop play, (0~1): Slow play, 1: Normal play, (1~N): Fast play]
         * @default 1.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??­æ?¾é??åº¦ï????¨ä????§å?¶å?¨ç?»å???????­æ?¾ã??
         * [0: ???æ­¢æ?­æ??, (0~1): ??¢é????­æ??, 1: æ­?å¸¸æ?­æ??, (1~N): å¿«é????­æ?¾]
         * @default 1.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        timeScale: number;
        private readonly _animatebles;
        private _clock;
        /**
         * - Creating a Worldclock instance. Typically, you do not need to create Worldclock instance.
         * When multiple Worldclock instances are running at different speeds, can achieving some specific animation effects, such as bullet time.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???å»ºä??ä¸? WorldClock å®?ä¾???????å¸¸å¹¶ä¸????è¦????å»? WorldClock å®?ä¾????
         * å½?å¤?ä¸? WorldClock å®?ä¾?ä½¿ç?¨ä???????????åº¦è??è¡???¶ï????¯ä»¥å®???°ä??äº???¹æ???????¨ç?»æ?????ï¼?æ¯?å¦?å­?å¼¹æ?¶é?´ç?????
         * @version DragonBones 3.0
         * @language zh_CN
         */
        constructor(time?: number);
        /**
         * - Advance time for all IAnimatable instances.
         * @param passedTime - Passed time. [-1: Automatically calculates the time difference between the current frame and the previous frame, [0~N): Passed time] (In seconds)
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ä¸ºæ???????? IAnimatable å®?ä¾???´æ?°æ?¶é?´ã??
         * @param passedTime - ???è¿??????¶é?´ã?? [-1: ??ªå?¨è®¡ç®?å½????å¸§ä??ä¸?ä¸?å¸§ç????¶é?´å·®, [0~N): ???è¿??????¶é?´] (ä»¥ç??ä¸ºå??ä½?)
         * @version DragonBones 3.0
         * @language zh_CN
         */
        advanceTime(passedTime: number): void;
        /**
         * - Check whether contains a specific instance of IAnimatable.
         * @param value - The IAnimatable instance.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - æ£???¥æ?¯å?¦å????«ç?¹å????? IAnimatable å®?ä¾????
         * @param value - IAnimatable å®?ä¾????
         * @version DragonBones 3.0
         * @language zh_CN
         */
        contains(value: IAnimatable): boolean;
        /**
         * - Add IAnimatable instance.
         * @param value - The IAnimatable instance.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - æ·»å?? IAnimatable å®?ä¾????
         * @param value - IAnimatable å®?ä¾????
         * @version DragonBones 3.0
         * @language zh_CN
         */
        add(value: IAnimatable): void;
        /**
         * - Removes a specified IAnimatable instance.
         * @param value - The IAnimatable instance.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ç§»é?¤ç?¹å????? IAnimatable å®?ä¾????
         * @param value - IAnimatable å®?ä¾????
         * @version DragonBones 3.0
         * @language zh_CN
         */
        remove(value: IAnimatable): void;
        /**
         * - Clear all IAnimatable instances.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - æ¸???¤æ???????? IAnimatable å®?ä¾????
         * @version DragonBones 3.0
         * @language zh_CN
         */
        clear(): void;
        /**
         * @inheritDoc
         */
        clock: WorldClock | null;
        /**
         * - Deprecated, please refer to {@link dragonBones.BaseFactory#clock}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link dragonBones.BaseFactory#clock}???
         * @deprecated
         * @language zh_CN
         */
        static readonly clock: WorldClock;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The animation player is used to play the animation data and manage the animation states.
     * @see dragonBones.AnimationData
     * @see dragonBones.AnimationState
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - ??¨ç?»æ?­æ?¾å?¨ç?¨æ?¥æ?­æ?¾å?¨ç?»æ?°æ?®å??ç®¡ç????¨ç?»ç?¶æ?????
     * @see dragonBones.AnimationData
     * @see dragonBones.AnimationState
     * @version DragonBones 3.0
     * @language zh_CN
     */
    class Animation extends BaseObject {
        static toString(): string;
        /**
         * - The play speed of all animations. [0: Stop, (0~1): Slow, 1: Normal, (1~N): Fast]
         * @default 1.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ????????¨ç?»ç????­æ?¾é??åº¦ã?? [0: ???æ­¢æ?­æ??, (0~1): ??¢é????­æ??, 1: æ­?å¸¸æ?­æ??, (1~N): å¿«é????­æ?¾]
         * @default 1.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        timeScale: number;
        private _lockUpdate;
        private _animationDirty;
        private _inheritTimeScale;
        private readonly _animationNames;
        private readonly _animationStates;
        private readonly _animations;
        private _armature;
        private _animationConfig;
        private _lastAnimationState;
        /**
         * @private
         */
        protected _onClear(): void;
        private _fadeOut(animationConfig);
        /**
         * @internal
         * @private
         */
        init(armature: Armature): void;
        /**
         * @internal
         * @private
         */
        advanceTime(passedTime: number): void;
        /**
         * - Clear all animations states.
         * @see dragonBones.AnimationState
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - æ¸???¤æ??????????¨ç?»ç?¶æ?????
         * @see dragonBones.AnimationState
         * @version DragonBones 4.5
         * @language zh_CN
         */
        reset(): void;
        /**
         * - Pause a specific animation state.
         * @param animationName - The name of animation state. (If not set, it will pause all animations)
         * @see dragonBones.AnimationState
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ?????????å®???¨ç?»ç?¶æ???????­æ?¾ã??
         * @param animationName - ??¨ç?»ç?¶æ?????ç§°ã?? ï¼?å¦??????ªè®¾ç½®ï???????????????????¨ç?»ï??
         * @see dragonBones.AnimationState
         * @version DragonBones 3.0
         * @language zh_CN
         */
        stop(animationName?: string | null): void;
        /**
         * - Play animation with a specific animation config.
         * The API is still in the experimental phase and may encounter bugs or stability or compatibility issues when used.
         * @param animationConfig - The animation config.
         * @returns The playing animation state.
         * @see dragonBones.AnimationConfig
         * @beta
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ???è¿????å®??????¨ç?»é??ç½®æ?¥æ?­æ?¾å?¨ç?»ã??
         * è¯? API ä»???¨å??éª???¶æ®µï¼?ä½¿ç?¨æ?¶å?¯è?½é?­é?? bug ???ç¨³å????§æ????¼å®¹??§é?®é?????
         * @param animationConfig - ??¨ç?»é??ç½®ã??
         * @returns ??­æ?¾ç????¨ç?»ç?¶æ?????
         * @see dragonBones.AnimationConfig
         * @beta
         * @version DragonBones 5.0
         * @language zh_CN
         */
        playConfig(animationConfig: AnimationConfig): AnimationState | null;
        /**
         * - Play a specific animation.
         * @param animationName - The name of animation data. (If not set, The default animation will be played, or resume the animation playing from pause status, or replay the last playing animation)
         * @param playTimes - Playing repeat times. [-1: Use default value of the animation data, 0: No end loop playing, [1~N]: Repeat N times] (default: -1)
         * @returns The playing animation state.
         * @example
         * <pre>
         *     armature.animation.play("walk");
         * </pre>
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??­æ?¾æ??å®???¨ç?»ã??
         * @param animationName - ??¨ç?»æ?°æ?®å??ç§°ã?? ï¼?å¦??????ªè®¾ç½®ï???????­æ?¾é??è®¤å?¨ç?»ï?????å°?????????¶æ???????¢ä¸º??­æ?¾ç?¶æ??ï¼?????????°æ?­æ?¾ä???????­æ?¾ç????¨ç?»ï??
         * @param playTimes - å¾ªç?¯æ?­æ?¾æ¬¡??°ã?? [-1: ä½¿ç?¨å?¨ç?»æ?°æ?®é??è®¤å??, 0: ??????å¾ªç?¯æ?­æ??, [1~N]: å¾ªç?¯æ?­æ?? N æ¬¡] ï¼?é»?è®?: -1ï¼?
         * @returns ??­æ?¾ç????¨ç?»ç?¶æ?????
         * @example
         * <pre>
         *     armature.animation.play("walk");
         * </pre>
         * @version DragonBones 3.0
         * @language zh_CN
         */
        play(animationName?: string | null, playTimes?: number): AnimationState | null;
        /**
         * - Fade in a specific animation.
         * @param animationName - The name of animation data.
         * @param fadeInTime - The fade in time. [-1: Use the default value of animation data, [0~N]: The fade in time (In seconds)] (Default: -1)
         * @param playTimes - playing repeat times. [-1: Use the default value of animation data, 0: No end loop playing, [1~N]: Repeat N times] (Default: -1)
         * @param layer - The blending layer, the animation states in high level layer will get the blending weights with high priority, when the total blending weights are more than 1.0, there will be no more weights can be allocated to the other animation states. (Default: 0)
         * @param group - The blending group name, it is typically used to specify the substitution of multiple animation states blending. (Default: null)
         * @param fadeOutMode - The fade out mode, which is typically used to specify alternate mode of multiple animation states blending. (Default: AnimationFadeOutMode.SameLayerAndGroup)
         * @returns The playing animation state.
         * @example
         * <pre>
         *     armature.animation.fadeIn("walk", 0.3, 0, 0, "normalGroup").resetToPose = false;
         *     armature.animation.fadeIn("attack", 0.3, 1, 0, "attackGroup").resetToPose = false;
         * </pre>
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - æ·¡å?¥æ?­æ?¾æ??å®??????¨ç?»ã??
         * @param animationName - ??¨ç?»æ?°æ?®å??ç§°ã??
         * @param fadeInTime - æ·¡å?¥æ?¶é?´ã?? [-1: ä½¿ç?¨å?¨ç?»æ?°æ?®é??è®¤å??, [0~N]: æ·¡å?¥æ?¶é?? (ä»¥ç??ä¸ºå??ä½?)] ï¼?é»?è®?: -1ï¼?
         * @param playTimes - ??­æ?¾æ¬¡??°ã?? [-1: ä½¿ç?¨å?¨ç?»æ?°æ?®é??è®¤å??, 0: ??????å¾ªç?¯æ?­æ??, [1~N]: å¾ªç?¯æ?­æ?? N æ¬¡] ï¼?é»?è®?: -1ï¼?
         * @param layer - æ··å????¾å??ï¼???¾å??é«??????¨ç?»ç?¶æ??ä¼?ä¼??????·å??æ··å????????ï¼?å½?æ··å????????????????»å??è¶?è¿? 1.0 ??¶ï????©ä???????¨ç?»ç?¶æ??å°?ä¸???½å????·å????????????????? ï¼?é»?è®?: 0ï¼?
         * @param group - æ··å??ç»????ç§°ï??è¯¥å????§é??å¸¸ç?¨æ?¥æ??å®?å¤?ä¸ªå?¨ç?»ç?¶æ??æ··å????¶ç????¸ä????¿æ?¢å?³ç³»??? ï¼?é»?è®?: nullï¼?
         * @param fadeOutMode - æ·¡å?ºæ¨¡å¼?ï¼?è¯¥å????§é??å¸¸ç?¨æ?¥æ??å®?å¤?ä¸ªå?¨ç?»ç?¶æ??æ··å????¶ç????¸ä????¿æ?¢æ¨¡å¼???? ï¼?é»?è®?: AnimationFadeOutMode.SameLayerAndGroupï¼?
         * @returns ??­æ?¾ç????¨ç?»ç?¶æ?????
         * @example
         * <pre>
         *     armature.animation.fadeIn("walk", 0.3, 0, 0, "normalGroup").resetToPose = false;
         *     armature.animation.fadeIn("attack", 0.3, 1, 0, "attackGroup").resetToPose = false;
         * </pre>
         * @version DragonBones 4.5
         * @language zh_CN
         */
        fadeIn(animationName: string, fadeInTime?: number, playTimes?: number, layer?: number, group?: string | null, fadeOutMode?: AnimationFadeOutMode): AnimationState | null;
        /**
         * - Play a specific animation from the specific time.
         * @param animationName - The name of animation data.
         * @param time - The start time point of playing. (In seconds)
         * @param playTimes - Playing repeat times. [-1: Use the default value of animation data, 0: No end loop playing, [1~N]: Repeat N times] (Default: -1)
         * @returns The played animation state.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ä»????å®???¶é?´å??å§???­æ?¾æ??å®??????¨ç?»ã??
         * @param animationName - ??¨ç?»æ?°æ?®å??ç§°ã??
         * @param time - ??­æ?¾å??å§??????¶é?´ã?? (ä»¥ç??ä¸ºå??ä½?)
         * @param playTimes - å¾ªç?¯æ?­æ?¾æ¬¡??°ã?? [-1: ä½¿ç?¨å?¨ç?»æ?°æ?®é??è®¤å??, 0: ??????å¾ªç?¯æ?­æ??, [1~N]: å¾ªç?¯æ?­æ?? N æ¬¡] ï¼?é»?è®?: -1ï¼?
         * @returns ??­æ?¾ç????¨ç?»ç?¶æ?????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        gotoAndPlayByTime(animationName: string, time?: number, playTimes?: number): AnimationState | null;
        /**
         * - Play a specific animation from the specific frame.
         * @param animationName - The name of animation data.
         * @param frame - The start frame of playing.
         * @param playTimes - Playing repeat times. [-1: Use the default value of animation data, 0: No end loop playing, [1~N]: Repeat N times] (Default: -1)
         * @returns The played animation state.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ä»????å®?å¸§å??å§???­æ?¾æ??å®??????¨ç?»ã??
         * @param animationName - ??¨ç?»æ?°æ?®å??ç§°ã??
         * @param frame - ??­æ?¾å??å§????å¸§æ?°ã??
         * @param playTimes - ??­æ?¾æ¬¡??°ã?? [-1: ä½¿ç?¨å?¨ç?»æ?°æ?®é??è®¤å??, 0: ??????å¾ªç?¯æ?­æ??, [1~N]: å¾ªç?¯æ?­æ?? N æ¬¡] ï¼?é»?è®?: -1ï¼?
         * @returns ??­æ?¾ç????¨ç?»ç?¶æ?????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        gotoAndPlayByFrame(animationName: string, frame?: number, playTimes?: number): AnimationState | null;
        /**
         * - Play a specific animation from the specific progress.
         * @param animationName - The name of animation data.
         * @param progress - The start progress value of playing.
         * @param playTimes - Playing repeat times. [-1: Use the default value of animation data, 0: No end loop playing, [1~N]: Repeat N times] (Default: -1)
         * @returns The played animation state.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ä»????å®?è¿?åº¦å??å§???­æ?¾æ??å®??????¨ç?»ã??
         * @param animationName - ??¨ç?»æ?°æ?®å??ç§°ã??
         * @param progress - å¼?å§???­æ?¾ç??è¿?åº¦ã??
         * @param playTimes - ??­æ?¾æ¬¡??°ã?? [-1: ä½¿ç?¨å?¨ç?»æ?°æ?®é??è®¤å??, 0: ??????å¾ªç?¯æ?­æ??, [1~N]: å¾ªç?¯æ?­æ?? N æ¬¡] ï¼?é»?è®?: -1ï¼?
         * @returns ??­æ?¾ç????¨ç?»ç?¶æ?????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        gotoAndPlayByProgress(animationName: string, progress?: number, playTimes?: number): AnimationState | null;
        /**
         * - Stop a specific animation at the specific time.
         * @param animationName - The name of animation data.
         * @param time - The stop time. (In seconds)
         * @returns The played animation state.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¨æ??å®???¶é?´å??æ­¢æ??å®???¨ç?»æ?­æ??
         * @param animationName - ??¨ç?»æ?°æ?®å??ç§°ã??
         * @param time - ???æ­¢ç????¶é?´ã?? (ä»¥ç??ä¸ºå??ä½?)
         * @returns ??­æ?¾ç????¨ç?»ç?¶æ?????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        gotoAndStopByTime(animationName: string, time?: number): AnimationState | null;
        /**
         * - Stop a specific animation at the specific frame.
         * @param animationName - The name of animation data.
         * @param frame - The stop frame.
         * @returns The played animation state.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¨æ??å®?å¸§å??æ­¢æ??å®???¨ç?»ç????­æ??
         * @param animationName - ??¨ç?»æ?°æ?®å??ç§°ã??
         * @param frame - ???æ­¢ç??å¸§æ?°ã??
         * @returns ??­æ?¾ç????¨ç?»ç?¶æ?????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        gotoAndStopByFrame(animationName: string, frame?: number): AnimationState | null;
        /**
         * - Stop a specific animation at the specific progress.
         * @param animationName - The name of animation data.
         * @param progress - The stop progress value.
         * @returns The played animation state.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¨æ??å®????è¿?åº¦å??æ­¢æ??å®??????¨ç?»æ?­æ?¾ã??
         * @param animationName - ??¨ç?»æ?°æ?®å??ç§°ã??
         * @param progress - ???æ­¢è??åº¦ã??
         * @returns ??­æ?¾ç????¨ç?»ç?¶æ?????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        gotoAndStopByProgress(animationName: string, progress?: number): AnimationState | null;
        /**
         * - Get a specific animation state.
         * @param animationName - The name of animation state.
         * @example
         * <pre>
         *     armature.animation.play("walk");
         *     let walkState = armature.animation.getState("walk");
         *     walkState.timeScale = 0.5;
         * </pre>
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??·å?????å®??????¨ç?»ç?¶æ??
         * @param animationName - ??¨ç?»ç?¶æ?????ç§°ã??
         * @example
         * <pre>
         *     armature.animation.play("walk");
         *     let walkState = armature.animation.getState("walk");
         *     walkState.timeScale = 0.5;
         * </pre>
         * @version DragonBones 3.0
         * @language zh_CN
         */
        getState(animationName: string): AnimationState | null;
        /**
         * - Check whether a specific animation data is included.
         * @param animationName - The name of animation data.
         * @see dragonBones.AnimationData
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - æ£???¥æ?¯å?¦å????«æ??å®??????¨ç?»æ?°æ??
         * @param animationName - ??¨ç?»æ?°æ?®å??ç§°ã??
         * @see dragonBones.AnimationData
         * @version DragonBones 3.0
         * @language zh_CN
         */
        hasAnimation(animationName: string): boolean;
        /**
         * - Get all the animation states.
         * @version DragonBones 5.1
         * @language en_US
         */
        /**
         * - ??·å?????????????¨ç?»ç?¶æ??
         * @version DragonBones 5.1
         * @language zh_CN
         */
        getStates(): Array<AnimationState>;
        /**
         * - Check whether there is an animation state is playing
         * @see dragonBones.AnimationState
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - æ£???¥æ?¯å?¦æ????¨ç?»ç?¶æ??æ­???¨æ?­æ??
         * @see dragonBones.AnimationState
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly isPlaying: boolean;
        /**
         * - Check whether all the animation states' playing were finished.
         * @see dragonBones.AnimationState
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - æ£???¥æ?¯å?¦æ??????????¨ç?»ç?¶æ?????å·²æ?­æ?¾å??æ¯????
         * @see dragonBones.AnimationState
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly isCompleted: boolean;
        /**
         * - The name of the last playing animation state.
         * @see #lastAnimationState
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ä¸?ä¸?ä¸ªæ?­æ?¾ç????¨ç?»ç?¶æ?????ç§?
         * @see #lastAnimationState
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly lastAnimationName: string;
        /**
         * - The name of all animation data
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ????????¨ç?»æ?°æ?®ç?????ç§?
         * @version DragonBones 4.5
         * @language zh_CN
         */
        readonly animationNames: Array<string>;
        /**
         * - All animation data.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ???????????¨ç?»æ?°æ?®ã??
         * @version DragonBones 4.5
         * @language zh_CN
         */
        animations: Map<AnimationData>;
        /**
         * - An AnimationConfig instance that can be used quickly.
         * @see dragonBones.AnimationConfig
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ä¸?ä¸ªå?¯ä»¥å¿«é??ä½¿ç?¨ç????¨ç?»é??ç½®å??ä¾????
         * @see dragonBones.AnimationConfig
         * @version DragonBones 5.0
         * @language zh_CN
         */
        readonly animationConfig: AnimationConfig;
        /**
         * - The last playing animation state
         * @see dragonBones.AnimationState
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ä¸?ä¸?ä¸ªæ?­æ?¾ç????¨ç?»ç?¶æ??
         * @see dragonBones.AnimationState
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly lastAnimationState: AnimationState | null;
        /**
         * - Deprecated, please refer to {@link #play()} {@link #fadeIn()}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #play()} {@link #fadeIn()}???
         * @deprecated
         * @language zh_CN
         */
        gotoAndPlay(animationName: string, fadeInTime?: number, duration?: number, playTimes?: number, layer?: number, group?: string | null, fadeOutMode?: AnimationFadeOutMode, pauseFadeOut?: boolean, pauseFadeIn?: boolean): AnimationState | null;
        /**
         * - Deprecated, please refer to {@link #gotoAndStopByTime()}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #gotoAndStopByTime()}???
         * @deprecated
         * @language zh_CN
         */
        gotoAndStop(animationName: string, time?: number): AnimationState | null;
        /**
         * - Deprecated, please refer to {@link #animationNames}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #animationNames}???
         * @deprecated
         * @language zh_CN
         */
        readonly animationList: Array<string>;
        /**
         * - Deprecated, please refer to {@link #animationNames}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #animationNames}???
         * @deprecated
         * @language zh_CN
         */
        readonly animationDataList: Array<AnimationData>;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The animation state is generated when the animation data is played.
     * @see dragonBones.Animation
     * @see dragonBones.AnimationData
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - ??¨ç?»ç?¶æ????±æ?­æ?¾å?¨ç?»æ?°æ?®æ?¶äº§??????
     * @see dragonBones.Animation
     * @see dragonBones.AnimationData
     * @version DragonBones 3.0
     * @language zh_CN
     */
    class AnimationState extends BaseObject {
        static toString(): string;
        /**
         * @private
         */
        actionEnabled: boolean;
        /**
         * @private
         */
        additiveBlending: boolean;
        /**
         * - Whether the animation state has control over the display object properties of the slots.
         * Sometimes blend a animation state does not want it to control the display object properties of the slots,
         * especially if other animation state are controlling the display object properties of the slots.
         * @default true
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??¨ç?»ç?¶æ????¯å?¦å¯¹???æ§½ç????¾ç¤ºå¯¹è±¡å±???§æ????§å?¶æ?????
         * ?????¶æ··???ä¸?ä¸ªå?¨ç?»ç?¶æ??å¹¶ä??å¸??????¶æ?§å?¶æ??æ§½ç????¾ç¤ºå¯¹è±¡å±???§ï??
         * å°¤å?¶æ?¯å?¶ä????¨ç?»ç?¶æ??æ­???¨æ?§å?¶è??äº????æ§½ç????¾ç¤ºå¯¹è±¡å±???§æ?¶ã??
         * @default true
         * @version DragonBones 5.0
         * @language zh_CN
         */
        displayControl: boolean;
        /**
         * - Whether to reset the objects without animation to the armature pose when the animation state is start to play.
         * This property should usually be set to false when blend multiple animation states.
         * @default true
         * @version DragonBones 5.1
         * @language en_US
         */
        /**
         * - å¼?å§???­æ?¾å?¨ç?»ç?¶æ????¶æ?¯å?¦å??æ²¡æ????¨ç?»ç??å¯¹è±¡???ç½®ä¸ºéª¨æ?¶å??å§???¼ã??
         * ???å¸¸å?¨æ··???å¤?ä¸ªå?¨ç?»ç?¶æ????¶å??è¯¥å??è¯¥å????§è®¾ç½®ä¸º false???
         * @default true
         * @version DragonBones 5.1
         * @language zh_CN
         */
        resetToPose: boolean;
        /**
         * - The play times. [0: Loop play, [1~N]: Play N times]
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??­æ?¾æ¬¡??°ã?? [0: ??????å¾ªç?¯æ?­æ??, [1~N]: å¾ªç?¯æ?­æ?? N æ¬¡]
         * @version DragonBones 3.0
         * @language zh_CN
         */
        playTimes: number;
        /**
         * - The blend layer.
         * High layer animation state will get the blend weight first.
         * When the blend weight is assigned more than 1, the remaining animation states will no longer get the weight assigned.
         * @readonly
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - æ··å????¾å?????
         * ??¾å??é«??????¨ç?»ç?¶æ??ä¼?ä¼??????·å??æ··å???????????
         * å½?æ··å??????????????è¶?è¿? 1 ??¶ï????©ä???????¨ç?»ç?¶æ??å°?ä¸??????·å?????????????????
         * @readonly
         * @version DragonBones 5.0
         * @language zh_CN
         */
        layer: number;
        /**
         * - The play speed.
         * The value is an overlay relationship with {@link dragonBones.Animation#timeScale}.
         * [(-N~0): Reverse play, 0: Stop play, (0~1): Slow play, 1: Normal play, (1~N): Fast play]
         * @default 1.0
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??­æ?¾é??åº¦ã??
         * è¯¥å?¼ä?? {@link dragonBones.Animation#timeScale} ??¯å???????³ç³»???
         * [(-N~0): ???è½¬æ?­æ??, 0: ???æ­¢æ?­æ??, (0~1): ??¢é????­æ??, 1: æ­?å¸¸æ?­æ??, (1~N): å¿«é????­æ?¾]
         * @default 1.0
         * @version DragonBones 3.0
         * @language zh_CN
         */
        timeScale: number;
        /**
         * - The blend weight.
         * @default 1.0
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - æ··å???????????
         * @default 1.0
         * @version DragonBones 5.0
         * @language zh_CN
         */
        weight: number;
        /**
         * - The auto fade out time when the animation state play completed.
         * [-1: Do not fade out automatically, [0~N]: The fade out time] (In seconds)
         * @default -1.0
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??¨ç?»ç?¶æ????­æ?¾å?????????????ªå?¨æ·¡??ºæ?¶é?´ã??
         * [-1: ä¸???ªå?¨æ·¡???, [0~N]: æ·¡å?ºæ?¶é?´] ï¼?ä»¥ç??ä¸ºå??ä½?ï¼?
         * @default -1.0
         * @version DragonBones 5.0
         * @language zh_CN
         */
        autoFadeOutTime: number;
        /**
         * @private
         */
        fadeTotalTime: number;
        /**
         * - The name of the animation state. (Can be different from the name of the animation data)
         * @readonly
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??¨ç?»ç?¶æ?????ç§°ã?? ï¼???¯ä»¥ä¸????äº???¨ç?»æ?°æ?®ï??
         * @readonly
         * @version DragonBones 5.0
         * @language zh_CN
         */
        name: string;
        /**
         * - The blend group name of the animation state.
         * This property is typically used to specify the substitution of multiple animation states blend.
         * @readonly
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - æ··å??ç»????ç§°ã??
         * è¯¥å????§é??å¸¸ç?¨æ?¥æ??å®?å¤?ä¸ªå?¨ç?»ç?¶æ??æ··å????¶ç????¸ä????¿æ?¢å?³ç³»???
         * @readonly
         * @version DragonBones 5.0
         * @language zh_CN
         */
        group: string;
        private _timelineDirty;
        /**
         * - xx: Play Enabled, Fade Play Enabled
         * @internal
         * @private
         */
        _playheadState: number;
        /**
         * -1: Fade in, 0: Fade complete, 1: Fade out;
         * @internal
         * @private
         */
        _fadeState: number;
        /**
         * -1: Fade start, 0: Fading, 1: Fade complete;
         * @internal
         * @private
         */
        _subFadeState: number;
        /**
         * @internal
         * @private
         */
        _position: number;
        /**
         * @internal
         * @private
         */
        _duration: number;
        private _fadeTime;
        private _time;
        /**
         * @internal
         * @private
         */
        _fadeProgress: number;
        /**
         * @internal
         * @private
         */
        _weightResult: number;
        /**
         * @internal
         * @private
         */
        readonly _blendState: BlendState;
        private readonly _boneMask;
        private readonly _boneTimelines;
        private readonly _surfaceTimelines;
        private readonly _slotTimelines;
        private readonly _constraintTimelines;
        private readonly _animationTimelines;
        private readonly _poseTimelines;
        private readonly _bonePoses;
        /**
         * @internal
         * @private
         */
        _animationData: AnimationData;
        private _armature;
        /**
         * @internal
         * @private
         */
        _actionTimeline: ActionTimelineState;
        private _zOrderTimeline;
        /**
         * @internal
         * @private
         */
        _parent: AnimationState;
        /**
         * @private
         */
        protected _onClear(): void;
        private _updateTimelines();
        private _updateBoneAndSlotTimelines();
        private _advanceFadeTime(passedTime);
        /**
         * @internal
         * @private
         */
        init(armature: Armature, animationData: AnimationData, animationConfig: AnimationConfig): void;
        /**
         * @internal
         * @private
         */
        advanceTime(passedTime: number, cacheFrameRate: number): void;
        /**
         * - Continue play.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ç»§ç»­??­æ?¾ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        play(): void;
        /**
         * - Stop play.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ????????­æ?¾ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        stop(): void;
        /**
         * - Fade out the animation state.
         * @param fadeOutTime - The fade out time. (In seconds)
         * @param pausePlayhead - Whether to pause the animation playing when fade out.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - æ·¡å?ºå?¨ç?»ç?¶æ?????
         * @param fadeOutTime - æ·¡å?ºæ?¶é?´ã?? ï¼?ä»¥ç??ä¸ºå??ä½?ï¼?
         * @param pausePlayhead - æ·¡å?ºæ?¶æ?¯å?¦æ???????­æ?¾ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        fadeOut(fadeOutTime: number, pausePlayhead?: boolean): void;
        /**
         * - Check if a specific bone mask is included.
         * @param name - The bone name.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - æ£???¥æ?¯å?¦å????«ç?¹å??éª¨éª¼??®ç½©???
         * @param name - éª¨éª¼???ç§°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        containsBoneMask(name: string): boolean;
        /**
         * - Add a specific bone mask.
         * @param name - The bone name.
         * @param recursive - Whether or not to add a mask to the bone's sub-bone.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - æ·»å????¹å?????éª¨éª¼??®ç½©???
         * @param name - éª¨éª¼???ç§°ã??
         * @param recursive - ??¯å?¦ä¸ºè¯¥éª¨éª¼ç??å­?éª¨éª¼æ·»å????®ç½©???
         * @version DragonBones 3.0
         * @language zh_CN
         */
        addBoneMask(name: string, recursive?: boolean): void;
        /**
         * - Remove the mask of a specific bone.
         * @param name - The bone name.
         * @param recursive - Whether to remove the bone's sub-bone mask.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ?????¤ç?¹å??éª¨éª¼?????®ç½©???
         * @param name - éª¨éª¼???ç§°ã??
         * @param recursive - ??¯å?¦å????¤è¯¥éª¨éª¼???å­?éª¨éª¼??®ç½©???
         * @version DragonBones 3.0
         * @language zh_CN
         */
        removeBoneMask(name: string, recursive?: boolean): void;
        /**
         * - Remove all bone masks.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ?????¤æ?????éª¨éª¼??®ç½©???
         * @version DragonBones 3.0
         * @language zh_CN
         */
        removeAllBoneMask(): void;
        /**
         * - Whether the animation state is fading in.
         * @version DragonBones 5.1
         * @language en_US
         */
        /**
         * - ??¯å?¦æ­£??¨æ·¡??¥ã??
         * @version DragonBones 5.1
         * @language zh_CN
         */
        readonly isFadeIn: boolean;
        /**
         * - Whether the animation state is fading out.
         * @version DragonBones 5.1
         * @language en_US
         */
        /**
         * - ??¯å?¦æ­£??¨æ·¡??ºã??
         * @version DragonBones 5.1
         * @language zh_CN
         */
        readonly isFadeOut: boolean;
        /**
         * - Whether the animation state is fade completed.
         * @version DragonBones 5.1
         * @language en_US
         */
        /**
         * - ??¯å?¦æ·¡??¥æ??æ·¡å?ºå??æ¯????
         * @version DragonBones 5.1
         * @language zh_CN
         */
        readonly isFadeComplete: boolean;
        /**
         * - Whether the animation state is playing.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¯å?¦æ­£??¨æ?­æ?¾ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly isPlaying: boolean;
        /**
         * - Whether the animation state is play completed.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¯å?¦æ?­æ?¾å??æ¯????
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly isCompleted: boolean;
        /**
         * - The times has been played.
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - å·²ç??å¾ªç?¯æ?­æ?¾ç??æ¬¡æ?°ã??
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly currentPlayTimes: number;
        /**
         * - The total time. (In seconds)
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??»æ?­æ?¾æ?¶é?´ã?? ï¼?ä»¥ç??ä¸ºå??ä½?ï¼?
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly totalTime: number;
        /**
         * - The time is currently playing. (In seconds)
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - å½??????­æ?¾ç????¶é?´ã?? ï¼?ä»¥ç??ä¸ºå??ä½?ï¼?
         * @version DragonBones 3.0
         * @language zh_CN
         */
        currentTime: number;
        /**
         * - The animation data.
         * @see dragonBones.AnimationData
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??¨ç?»æ?°æ?®ã??
         * @see dragonBones.AnimationData
         * @version DragonBones 3.0
         * @language zh_CN
         */
        readonly animationData: AnimationData;
    }
    /**
     * @internal
     * @private
     */
    class BonePose extends BaseObject {
        static toString(): string;
        readonly current: Transform;
        readonly delta: Transform;
        readonly result: Transform;
        protected _onClear(): void;
    }
    /**
     * @internal
     * @private
     */
    class BlendState {
        dirty: boolean;
        layer: number;
        leftWeight: number;
        layerWeight: number;
        blendWeight: number;
        update(weight: number, layer: number): number;
        clear(): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * @internal
     * @private
     */
    const enum TweenState {
        None = 0,
        Once = 1,
        Always = 2,
    }
    /**
     * @internal
     * @private
     */
    abstract class TimelineState extends BaseObject {
        playState: number;
        currentPlayTimes: number;
        currentTime: number;
        protected _tweenState: TweenState;
        protected _frameRate: number;
        protected _frameValueOffset: number;
        protected _frameCount: number;
        protected _frameOffset: number;
        protected _frameIndex: number;
        protected _frameRateR: number;
        protected _position: number;
        protected _duration: number;
        protected _timeScale: number;
        protected _timeOffset: number;
        protected _dragonBonesData: DragonBonesData;
        protected _animationData: AnimationData;
        protected _timelineData: TimelineData | null;
        protected _armature: Armature;
        protected _animationState: AnimationState;
        protected _actionTimeline: TimelineState;
        protected _frameArray: Array<number> | Int16Array;
        protected _frameIntArray: Array<number> | Int16Array;
        protected _frameFloatArray: Array<number> | Int16Array;
        protected _timelineArray: Array<number> | Uint16Array;
        protected _frameIndices: Array<number>;
        protected _onClear(): void;
        protected abstract _onArriveAtFrame(): void;
        protected abstract _onUpdateFrame(): void;
        protected _setCurrentTime(passedTime: number): boolean;
        init(armature: Armature, animationState: AnimationState, timelineData: TimelineData | null): void;
        fadeOut(): void;
        update(passedTime: number): void;
    }
    /**
     * @internal
     * @private
     */
    abstract class TweenTimelineState extends TimelineState {
        private static _getEasingValue(tweenType, progress, easing);
        private static _getEasingCurveValue(progress, samples, count, offset);
        protected _tweenType: TweenType;
        protected _curveCount: number;
        protected _framePosition: number;
        protected _frameDurationR: number;
        protected _tweenProgress: number;
        protected _tweenEasing: number;
        protected _onClear(): void;
        protected _onArriveAtFrame(): void;
        protected _onUpdateFrame(): void;
    }
    /**
     * @internal
     * @private
     */
    abstract class BoneTimelineState extends TweenTimelineState {
        bone: Bone;
        bonePose: BonePose;
        protected _onClear(): void;
        blend(state: number): void;
    }
    /**
     * @internal
     * @private
     */
    abstract class SlotTimelineState extends TweenTimelineState {
        slot: Slot;
        protected _onClear(): void;
    }
    /**
     * @internal
     * @private
     */
    abstract class ConstraintTimelineState extends TweenTimelineState {
        constraint: Constraint;
        protected _onClear(): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * @internal
     * @private
     */
    class ActionTimelineState extends TimelineState {
        static toString(): string;
        private _onCrossFrame(frameIndex);
        protected _onArriveAtFrame(): void;
        protected _onUpdateFrame(): void;
        update(passedTime: number): void;
        setCurrentTime(value: number): void;
    }
    /**
     * @internal
     * @private
     */
    class ZOrderTimelineState extends TimelineState {
        static toString(): string;
        protected _onArriveAtFrame(): void;
        protected _onUpdateFrame(): void;
    }
    /**
     * @internal
     * @private
     */
    class BoneAllTimelineState extends BoneTimelineState {
        static toString(): string;
        protected _onArriveAtFrame(): void;
        protected _onUpdateFrame(): void;
        fadeOut(): void;
    }
    /**
     * @internal
     * @private
     */
    class BoneTranslateTimelineState extends BoneTimelineState {
        static toString(): string;
        protected _onArriveAtFrame(): void;
        protected _onUpdateFrame(): void;
    }
    /**
     * @internal
     * @private
     */
    class BoneRotateTimelineState extends BoneTimelineState {
        static toString(): string;
        protected _onArriveAtFrame(): void;
        protected _onUpdateFrame(): void;
        fadeOut(): void;
    }
    /**
     * @internal
     * @private
     */
    class BoneScaleTimelineState extends BoneTimelineState {
        static toString(): string;
        protected _onArriveAtFrame(): void;
        protected _onUpdateFrame(): void;
    }
    /**
     * @internal
     * @private
     */
    class SurfaceTimelineState extends TweenTimelineState {
        static toString(): string;
        surface: Surface;
        private _frameFloatOffset;
        private _valueCount;
        private _deformCount;
        private _valueOffset;
        private readonly _current;
        private readonly _delta;
        private readonly _result;
        protected _onClear(): void;
        protected _onArriveAtFrame(): void;
        protected _onUpdateFrame(): void;
        init(armature: Armature, animationState: AnimationState, timelineData: TimelineData | null): void;
        blend(state: number): void;
    }
    /**
     * @internal
     * @private
     */
    class SlotDislayTimelineState extends SlotTimelineState {
        static toString(): string;
        protected _onArriveAtFrame(): void;
    }
    /**
     * @internal
     * @private
     */
    class SlotColorTimelineState extends SlotTimelineState {
        static toString(): string;
        private _dirty;
        private readonly _current;
        private readonly _delta;
        private readonly _result;
        protected _onClear(): void;
        protected _onArriveAtFrame(): void;
        protected _onUpdateFrame(): void;
        fadeOut(): void;
        update(passedTime: number): void;
    }
    /**
     * @internal
     * @private
     */
    class SlotFFDTimelineState extends SlotTimelineState {
        static toString(): string;
        meshOffset: number;
        private _dirty;
        private _frameFloatOffset;
        private _valueCount;
        private _deformCount;
        private _valueOffset;
        private readonly _current;
        private readonly _delta;
        private readonly _result;
        protected _onClear(): void;
        protected _onArriveAtFrame(): void;
        protected _onUpdateFrame(): void;
        init(armature: Armature, animationState: AnimationState, timelineData: TimelineData | null): void;
        fadeOut(): void;
        update(passedTime: number): void;
    }
    /**
     * @internal
     * @private
     */
    class IKConstraintTimelineState extends ConstraintTimelineState {
        static toString(): string;
        private _current;
        private _delta;
        protected _onClear(): void;
        protected _onArriveAtFrame(): void;
        protected _onUpdateFrame(): void;
    }
    /**
     * @internal
     * @private
     */
    class AnimationTimelineState extends TweenTimelineState {
        static toString(): string;
        animationState: AnimationState;
        private readonly _floats;
        protected _onClear(): void;
        protected _onArriveAtFrame(): void;
        protected _onUpdateFrame(): void;
        blend(state: number): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - The properties of the object carry basic information about an event,
     * which are passed as parameter or parameter's parameter to event listeners when an event occurs.
     * @version DragonBones 4.5
     * @language en_US
     */
    /**
     * - äº?ä»¶å¯¹è±¡ï???????«æ????³ä??ä»¶ç????ºæ?¬ä¿¡??¯ï??å½???????äº?ä»¶æ?¶ï??è¯¥å??ä¾?å°?ä½?ä¸ºå????°æ???????°ç???????°ä?????ç»?äº?ä»¶ä¾¦??¬å?¨ã??
     * @version DragonBones 4.5
     * @language zh_CN
     */
    class EventObject extends BaseObject {
        /**
         * - Animation start play.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¨ç?»å??å§???­æ?¾ã??
         * @version DragonBones 4.5
         * @language zh_CN
         */
        static readonly START: string;
        /**
         * - Animation loop play complete once.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¨ç?»å¾ª??¯æ?­æ?¾å?????ä¸?æ¬¡ã??
         * @version DragonBones 4.5
         * @language zh_CN
         */
        static readonly LOOP_COMPLETE: string;
        /**
         * - Animation play complete.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¨ç?»æ?­æ?¾å????????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        static readonly COMPLETE: string;
        /**
         * - Animation fade in start.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¨ç?»æ·¡??¥å??å§????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        static readonly FADE_IN: string;
        /**
         * - Animation fade in complete.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¨ç?»æ·¡??¥å????????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        static readonly FADE_IN_COMPLETE: string;
        /**
         * - Animation fade out start.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¨ç?»æ·¡??ºå??å§????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        static readonly FADE_OUT: string;
        /**
         * - Animation fade out complete.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¨ç?»æ·¡??ºå????????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        static readonly FADE_OUT_COMPLETE: string;
        /**
         * - Animation frame event.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¨ç?»å¸§äº?ä»¶ã??
         * @version DragonBones 4.5
         * @language zh_CN
         */
        static readonly FRAME_EVENT: string;
        /**
         * - Animation frame sound event.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¨ç?»å¸§å£°é?³ä??ä»¶ã??
         * @version DragonBones 4.5
         * @language zh_CN
         */
        static readonly SOUND_EVENT: string;
        static toString(): string;
        /**
         * - If is a frame event, the value is used to describe the time that the event was in the animation timeline. (In seconds)
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - å¦??????¯å¸§äº?ä»¶ï??æ­¤å?¼ç?¨æ?¥æ??è¿°è¯¥äº?ä»¶å?¨å?¨ç?»æ?¶é?´è½´ä¸­æ??å¤??????¶é?´ã??ï¼?ä»¥ç??ä¸ºå??ä½?ï¼?
         * @version DragonBones 4.5
         * @language zh_CN
         */
        time: number;
        /**
         * - The event type???
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - äº?ä»¶ç±»??????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        type: EventStringType;
        /**
         * - The event name. (The frame event name or the frame sound name)
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - äº?ä»¶å??ç§°ã?? (å¸§ä??ä»¶ç?????ç§°æ??å¸§å£°??³ç?????ç§?)
         * @version DragonBones 4.5
         * @language zh_CN
         */
        name: string;
        /**
         * - The armature that dispatch the event.
         * @see dragonBones.Armature
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ?????ºè¯¥äº?ä»¶ç??éª¨æ?¶ã??
         * @see dragonBones.Armature
         * @version DragonBones 4.5
         * @language zh_CN
         */
        armature: Armature;
        /**
         * - The bone that dispatch the event.
         * @see dragonBones.Bone
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ?????ºè¯¥äº?ä»¶ç??éª¨éª¼???
         * @see dragonBones.Bone
         * @version DragonBones 4.5
         * @language zh_CN
         */
        bone: Bone | null;
        /**
         * - The slot that dispatch the event.
         * @see dragonBones.Slot
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ?????ºè¯¥äº?ä»¶ç?????æ§½ã??
         * @see dragonBones.Slot
         * @version DragonBones 4.5
         * @language zh_CN
         */
        slot: Slot | null;
        /**
         * - The animation state that dispatch the event.
         * @see dragonBones.AnimationState
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ?????ºè¯¥äº?ä»¶ç????¨ç?»ç?¶æ?????
         * @see dragonBones.AnimationState
         * @version DragonBones 4.5
         * @language zh_CN
         */
        animationState: AnimationState;
        /**
         * - The custom data.
         * @see dragonBones.CustomData
         * @version DragonBones 5.0
         * @language en_US
         */
        /**
         * - ??ªå??ä¹???°æ?®ã??
         * @see dragonBones.CustomData
         * @version DragonBones 5.0
         * @language zh_CN
         */
        data: UserData | null;
        /**
         * @private
         */
        protected _onClear(): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * @private
     */
    type EventStringType = string | "start" | "loopComplete" | "complete" | "fadeIn" | "fadeInComplete" | "fadeOut" | "fadeOutComplete" | "frameEvent" | "soundEvent";
    /**
     * - The event dispatcher interface.
     * Dragonbones event dispatch usually relies on docking engine to implement, which defines the event method to be implemented when docking the engine.
     * @version DragonBones 4.5
     * @language en_US
     */
    /**
     * - äº?ä»¶æ´¾?????¥å?????
     * DragonBones ???äº?ä»¶æ´¾??????å¸¸ä??èµ?äº?å¯¹æ?¥ç??å¼??????¥å????°ï??è¯¥æ?¥å??å®?ä¹?äº?å¯¹æ?¥å???????¶é??è¦?å®???°ç??äº?ä»¶æ?¹æ?????
     * @version DragonBones 4.5
     * @language zh_CN
     */
    interface IEventDispatcher {
        /**
         * - Checks whether the object has any listeners registered for a specific type of event???
         * @param type - Event type.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - æ£???¥æ?¯å?¦ä¸º??¹å?????äº?ä»¶ç±»???æ³¨å??äº?ä»»ä??ä¾¦å?¬å?¨ã??
         * @param type - äº?ä»¶ç±»??????
         * @version DragonBones 4.5
         * @language zh_CN
         */
        hasDBEventListener(type: EventStringType): boolean;
        /**
         * - Dispatches an event into the event flow.
         * @param type - Event type.
         * @param eventObject - Event object.
         * @see dragonBones.EventObject
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ???æ´¾ç?¹å?????äº?ä»¶å?°ä??ä»¶æ??ä¸­ã??
         * @param type - äº?ä»¶ç±»??????
         * @param eventObject - äº?ä»¶æ?°æ?®ã??
         * @see dragonBones.EventObject
         * @version DragonBones 4.5
         * @language zh_CN
         */
        dispatchDBEvent(type: EventStringType, eventObject: EventObject): void;
        /**
         * - Add an event listener object so that the listener receives notification of an event.
         * @param type - Event type.
         * @param listener - Event listener.
         * @param thisObject - The listener function's "this".
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - æ·»å????¹å??äº?ä»¶ç±»??????äº?ä»¶ä¾¦??¬å?¨ï??ä»¥ä½¿ä¾¦å?¬å?¨è?½å????¥æ?¶ä??ä»¶é????¥ã??
         * @param type - äº?ä»¶ç±»??????
         * @param listener - äº?ä»¶ä¾¦??¬å?¨ã??
         * @param thisObject - ä¾¦å?¬å?½æ?°ç??å®???? this å¯¹è±¡???
         * @version DragonBones 4.5
         * @language zh_CN
         */
        addDBEventListener(type: EventStringType, listener: Function, thisObject: any): void;
        /**
         * - Removes a listener from the object.
         * @param type - Event type.
         * @param listener - Event listener.
         * @param thisObject - The listener function's "this".
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ?????¤ç?¹å??äº?ä»¶ç±»??????ä¾¦å?¬å?¨ã??
         * @param type - äº?ä»¶ç±»??????
         * @param listener - äº?ä»¶ä¾¦??¬å?¨ã??
         * @param thisObject - ä¾¦å?¬å?½æ?°ç??å®???? this å¯¹è±¡???
         * @version DragonBones 4.5
         * @language zh_CN
         */
        removeDBEventListener(type: EventStringType, listener: Function, thisObject: any): void;
        /**
         * - Deprecated, please refer to {@link #hasDBEventListener()}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #hasDBEventListener()}???
         * @deprecated
         * @language zh_CN
         */
        hasEvent(type: EventStringType): boolean;
        /**
         * - Deprecated, please refer to {@link #addDBEventListener()}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #addDBEventListener()}???
         * @deprecated
         * @language zh_CN
         */
        addEvent(type: EventStringType, listener: Function, thisObject: any): void;
        /**
         * - Deprecated, please refer to {@link #removeDBEventListener()}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #removeDBEventListener()}???
         * @deprecated
         * @language zh_CN
         */
        removeEvent(type: EventStringType, listener: Function, thisObject: any): void;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * @internal
     * @private
     */
    abstract class DataParser {
        protected static readonly DATA_VERSION_2_3: string;
        protected static readonly DATA_VERSION_3_0: string;
        protected static readonly DATA_VERSION_4_0: string;
        protected static readonly DATA_VERSION_4_5: string;
        protected static readonly DATA_VERSION_5_0: string;
        protected static readonly DATA_VERSION_5_5: string;
        protected static readonly DATA_VERSION: string;
        protected static readonly DATA_VERSIONS: Array<string>;
        protected static readonly TEXTURE_ATLAS: string;
        protected static readonly SUB_TEXTURE: string;
        protected static readonly FORMAT: string;
        protected static readonly IMAGE_PATH: string;
        protected static readonly WIDTH: string;
        protected static readonly HEIGHT: string;
        protected static readonly ROTATED: string;
        protected static readonly FRAME_X: string;
        protected static readonly FRAME_Y: string;
        protected static readonly FRAME_WIDTH: string;
        protected static readonly FRAME_HEIGHT: string;
        protected static readonly DRADON_BONES: string;
        protected static readonly USER_DATA: string;
        protected static readonly ARMATURE: string;
        protected static readonly BONE: string;
        protected static readonly SURFACE: string;
        protected static readonly SLOT: string;
        protected static readonly CONSTRAINT: string;
        protected static readonly IK: string;
        protected static readonly SKIN: string;
        protected static readonly DISPLAY: string;
        protected static readonly ANIMATION: string;
        protected static readonly Z_ORDER: string;
        protected static readonly FFD: string;
        protected static readonly FRAME: string;
        protected static readonly TRANSLATE_FRAME: string;
        protected static readonly ROTATE_FRAME: string;
        protected static readonly SCALE_FRAME: string;
        protected static readonly DISPLAY_FRAME: string;
        protected static readonly COLOR_FRAME: string;
        protected static readonly DEFAULT_ACTIONS: string;
        protected static readonly ACTIONS: string;
        protected static readonly EVENTS: string;
        protected static readonly INTS: string;
        protected static readonly FLOATS: string;
        protected static readonly STRINGS: string;
        protected static readonly CANVAS: string;
        protected static readonly TRANSFORM: string;
        protected static readonly PIVOT: string;
        protected static readonly AABB: string;
        protected static readonly COLOR: string;
        protected static readonly VERSION: string;
        protected static readonly COMPATIBLE_VERSION: string;
        protected static readonly FRAME_RATE: string;
        protected static readonly TYPE: string;
        protected static readonly SUB_TYPE: string;
        protected static readonly NAME: string;
        protected static readonly PARENT: string;
        protected static readonly TARGET: string;
        protected static readonly STAGE: string;
        protected static readonly SHARE: string;
        protected static readonly PATH: string;
        protected static readonly LENGTH: string;
        protected static readonly DISPLAY_INDEX: string;
        protected static readonly BLEND_MODE: string;
        protected static readonly INHERIT_TRANSLATION: string;
        protected static readonly INHERIT_ROTATION: string;
        protected static readonly INHERIT_SCALE: string;
        protected static readonly INHERIT_REFLECTION: string;
        protected static readonly INHERIT_ANIMATION: string;
        protected static readonly INHERIT_DEFORM: string;
        protected static readonly SEGMENT_X: string;
        protected static readonly SEGMENT_Y: string;
        protected static readonly BEND_POSITIVE: string;
        protected static readonly CHAIN: string;
        protected static readonly WEIGHT: string;
        protected static readonly FADE_IN_TIME: string;
        protected static readonly PLAY_TIMES: string;
        protected static readonly SCALE: string;
        protected static readonly OFFSET: string;
        protected static readonly POSITION: string;
        protected static readonly DURATION: string;
        protected static readonly TWEEN_EASING: string;
        protected static readonly TWEEN_ROTATE: string;
        protected static readonly TWEEN_SCALE: string;
        protected static readonly CLOCK_WISE: string;
        protected static readonly CURVE: string;
        protected static readonly SOUND: string;
        protected static readonly EVENT: string;
        protected static readonly ACTION: string;
        protected static readonly X: string;
        protected static readonly Y: string;
        protected static readonly SKEW_X: string;
        protected static readonly SKEW_Y: string;
        protected static readonly SCALE_X: string;
        protected static readonly SCALE_Y: string;
        protected static readonly VALUE: string;
        protected static readonly ROTATE: string;
        protected static readonly SKEW: string;
        protected static readonly ALPHA_OFFSET: string;
        protected static readonly RED_OFFSET: string;
        protected static readonly GREEN_OFFSET: string;
        protected static readonly BLUE_OFFSET: string;
        protected static readonly ALPHA_MULTIPLIER: string;
        protected static readonly RED_MULTIPLIER: string;
        protected static readonly GREEN_MULTIPLIER: string;
        protected static readonly BLUE_MULTIPLIER: string;
        protected static readonly UVS: string;
        protected static readonly VERTICES: string;
        protected static readonly TRIANGLES: string;
        protected static readonly WEIGHTS: string;
        protected static readonly SLOT_POSE: string;
        protected static readonly BONE_POSE: string;
        protected static readonly GLUE_WEIGHTS: string;
        protected static readonly GLUE_MESHES: string;
        protected static readonly GOTO_AND_PLAY: string;
        protected static readonly DEFAULT_NAME: string;
        protected static _getArmatureType(value: string): ArmatureType;
        protected static _getBoneType(value: string): BoneType;
        protected static _getDisplayType(value: string): DisplayType;
        protected static _getBoundingBoxType(value: string): BoundingBoxType;
        protected static _getActionType(value: string): ActionType;
        protected static _getBlendMode(value: string): BlendMode;
        abstract parseDragonBonesData(rawData: any, scale: number): DragonBonesData | null;
        abstract parseTextureAtlasData(rawData: any, textureAtlasData: TextureAtlasData, scale: number): boolean;
        /**
         * - Deprecated, please refer to {@link dragonBones.BaseFactory#parsetTextureAtlasData()}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link dragonBones.BaseFactory#parsetTextureAtlasData()}???
         * @deprecated
         * @language zh_CN
         */
        static parseDragonBonesData(rawData: any): DragonBonesData | null;
        /**
         * - Deprecated, please refer to {@link dragonBones.BaseFactory#parsetTextureAtlasData()}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link dragonBones.BaseFactory#parsetTextureAtlasData()}???
         * @deprecated
         * @language zh_CN
         */
        static parseTextureAtlasData(rawData: any, scale?: number): any;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * @internal
     * @private
     */
    class ObjectDataParser extends DataParser {
        protected static _getBoolean(rawData: any, key: string, defaultValue: boolean): boolean;
        protected static _getNumber(rawData: any, key: string, defaultValue: number): number;
        protected static _getString(rawData: any, key: string, defaultValue: string): string;
        protected _rawTextureAtlasIndex: number;
        protected readonly _rawBones: Array<BoneData>;
        protected _data: DragonBonesData;
        protected _armature: ArmatureData;
        protected _bone: BoneData;
        protected _surface: SurfaceData;
        protected _slot: SlotData;
        protected _skin: SkinData;
        protected _mesh: MeshDisplayData;
        protected _animation: AnimationData;
        protected _timeline: TimelineData;
        protected _rawTextureAtlases: Array<any> | null;
        private _defaultColorOffset;
        private _prevClockwise;
        private _prevRotation;
        private readonly _helpMatrixA;
        private readonly _helpMatrixB;
        private readonly _helpTransform;
        private readonly _helpColorTransform;
        private readonly _helpPoint;
        private readonly _helpArray;
        private readonly _intArray;
        private readonly _floatArray;
        private readonly _frameIntArray;
        private readonly _frameFloatArray;
        private readonly _frameArray;
        private readonly _timelineArray;
        private readonly _cacheRawMeshes;
        private readonly _cacheMeshes;
        private readonly _actionFrames;
        private readonly _weightSlotPose;
        private readonly _weightBonePoses;
        private readonly _cacheBones;
        private readonly _slotChildActions;
        private _getCurvePoint(x1, y1, x2, y2, x3, y3, x4, y4, t, result);
        private _samplingEasingCurve(curve, samples);
        private _parseActionDataInFrame(rawData, frameStart, bone, slot);
        private _mergeActionFrame(rawData, frameStart, type, bone, slot);
        protected _parseArmature(rawData: any, scale: number): ArmatureData;
        protected _parseBone(rawData: any): BoneData;
        protected _parseIKConstraint(rawData: any): ConstraintData | null;
        protected _parseSlot(rawData: any, zOrder: number): SlotData;
        protected _parseSkin(rawData: any): SkinData;
        protected _parseDisplay(rawData: any): DisplayData | null;
        protected _parsePivot(rawData: any, display: ImageDisplayData): void;
        protected _parseMesh(rawData: any, mesh: MeshDisplayData): void;
        protected _parseMeshGlue(rawData: any, mesh: MeshDisplayData): void;
        protected _parseBoundingBox(rawData: any): BoundingBoxData | null;
        protected _parsePolygonBoundingBox(rawData: any): PolygonBoundingBoxData;
        protected _parseAnimation(rawData: any): AnimationData;
        protected _parseTimeline(rawData: any, rawFrames: Array<any> | null, framesKey: string, type: TimelineType, addIntOffset: boolean, addFloatOffset: boolean, frameValueCount: number, frameParser: (rawData: any, frameStart: number, frameCount: number) => number): TimelineData | null;
        protected _parseBoneTimeline(rawData: any): void;
        protected _parseSlotTimeline(rawData: any): void;
        protected _parseFrame(rawData: any, frameStart: number, frameCount: number): number;
        protected _parseTweenFrame(rawData: any, frameStart: number, frameCount: number): number;
        protected _parseActionFrame(frame: ActionFrame, frameStart: number, frameCount: number): number;
        protected _parseZOrderFrame(rawData: any, frameStart: number, frameCount: number): number;
        protected _parseBoneAllFrame(rawData: any, frameStart: number, frameCount: number): number;
        protected _parseBoneTranslateFrame(rawData: any, frameStart: number, frameCount: number): number;
        protected _parseBoneRotateFrame(rawData: any, frameStart: number, frameCount: number): number;
        protected _parseBoneScaleFrame(rawData: any, frameStart: number, frameCount: number): number;
        protected _parseSurfaceFrame(rawData: any, frameStart: number, frameCount: number): number;
        protected _parseSlotDisplayFrame(rawData: any, frameStart: number, frameCount: number): number;
        protected _parseSlotColorFrame(rawData: any, frameStart: number, frameCount: number): number;
        protected _parseSlotFFDFrame(rawData: any, frameStart: number, frameCount: number): number;
        protected _parseIKConstraintFrame(rawData: any, frameStart: number, frameCount: number): number;
        protected _parseAnimationFrame(rawData: any, frameStart: number, frameCount: number): number;
        protected _parseActionData(rawData: any, type: ActionType, bone: BoneData | null, slot: SlotData | null): Array<ActionData>;
        protected _parseTransform(rawData: any, transform: Transform, scale: number): void;
        protected _parseColorTransform(rawData: any, color: ColorTransform): void;
        protected _parseArray(rawData: any): void;
        protected _modifyArray(): void;
        parseDragonBonesData(rawData: any, scale?: number): DragonBonesData | null;
        parseTextureAtlasData(rawData: any, textureAtlasData: TextureAtlasData, scale?: number): boolean;
        private static _objectDataParserInstance;
        /**
         * - Deprecated, please refer to {@link dragonBones.BaseFactory#parseDragonBonesData()}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link dragonBones.BaseFactory#parseDragonBonesData()}???
         * @deprecated
         * @language zh_CN
         */
        static getInstance(): ObjectDataParser;
    }
    /**
     * @internal
     * @private
     */
    class ActionFrame {
        frameStart: number;
        readonly actions: Array<number>;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * @internal
     * @private
     */
    class BinaryDataParser extends ObjectDataParser {
        private _binaryOffset;
        private _binary;
        private _intArrayBuffer;
        private _floatArrayBuffer;
        private _frameIntArrayBuffer;
        private _frameFloatArrayBuffer;
        private _frameArrayBuffer;
        private _timelineArrayBuffer;
        private _inRange(a, min, max);
        private _decodeUTF8(data);
        private _getUTF16Key(value);
        private _parseBinaryTimeline(type, offset, timelineData?);
        protected _parseMesh(rawData: any, mesh: MeshDisplayData): void;
        protected _parseAnimation(rawData: any): AnimationData;
        protected _parseArray(rawData: any): void;
        parseDragonBonesData(rawData: any, scale?: number): DragonBonesData | null;
        private static _binaryDataParserInstance;
        /**
         * - Deprecated, please refer to {@link dragonBones.BaseFactory#parseDragonBonesData()}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link dragonBones.BaseFactory#parseDragonBonesData()}???
         * @deprecated
         * @language zh_CN
         */
        static getInstance(): BinaryDataParser;
    }
}
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2017 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
declare namespace dragonBones {
    /**
     * - Base class for the factory that create the armatures. (Typically only one global factory instance is required)
     * The factory instance create armatures by parsed and added DragonBonesData instances and TextureAtlasData instances.
     * Once the data has been parsed, it has been cached in the factory instance and does not need to be parsed again until it is cleared by the factory instance.
     * @see dragonBones.DragonBonesData
     * @see dragonBones.TextureAtlasData
     * @see dragonBones.ArmatureData
     * @see dragonBones.Armature
     * @version DragonBones 3.0
     * @language en_US
     */
    /**
     * - ???å»ºéª¨??¶ç??å·¥å????ºç±»??? ï¼????å¸¸å?ªé??è¦?ä¸?ä¸ªå?¨å??å·¥å??å®?ä¾?ï¼?
     * å·¥å?????è¿?è§????å¹¶æ·»?????? DragonBonesData å®?ä¾???? TextureAtlasData å®?ä¾???¥å??å»ºéª¨??¶ã??
     * å½???°æ?®è¢«è§????è¿?ä¹????ï¼?å·²ç??æ·»å????°å·¥???ä¸­ï????¨æ²¡???è¢«å·¥???æ¸????ä¹????ï¼?ä¸????è¦????æ¬¡è§£??????
     * @see dragonBones.DragonBonesData
     * @see dragonBones.TextureAtlasData
     * @see dragonBones.ArmatureData
     * @see dragonBones.Armature
     * @version DragonBones 3.0
     * @language zh_CN
     */
    abstract class BaseFactory {
        /**
         * @private
         */
        protected static _objectParser: ObjectDataParser;
        /**
         * @private
         */
        protected static _binaryParser: BinaryDataParser;
        /**
         * @private
         */
        autoSearch: boolean;
        /**
         * @private
         */
        protected readonly _dragonBonesDataMap: Map<DragonBonesData>;
        /**
         * @private
         */
        protected readonly _textureAtlasDataMap: Map<Array<TextureAtlasData>>;
        /**
         * @private
         */
        protected _dragonBones: DragonBones;
        /**
         * @private
         */
        protected _dataParser: DataParser;
        /**
         * - Create a factory instance. (typically only one global factory instance is required)
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???å»ºä??ä¸ªå·¥???å®?ä¾???? ï¼????å¸¸å?ªé??è¦?ä¸?ä¸ªå?¨å??å·¥å??å®?ä¾?ï¼?
         * @version DragonBones 3.0
         * @language zh_CN
         */
        constructor(dataParser?: DataParser | null);
        /**
         * @private
         */
        protected _isSupportMesh(): boolean;
        /**
         * @private
         */
        protected _getTextureData(textureAtlasName: string, textureName: string): TextureData | null;
        /**
         * @private
         */
        protected _fillBuildArmaturePackage(dataPackage: BuildArmaturePackage, dragonBonesName: string, armatureName: string, skinName: string, textureAtlasName: string): boolean;
        /**
         * @private
         */
        protected _buildBones(dataPackage: BuildArmaturePackage, armature: Armature): void;
        /**
         * @private
         */
        protected _buildSlots(dataPackage: BuildArmaturePackage, armature: Armature): void;
        /**
         * @private
         */
        protected _buildChildArmature(dataPackage: BuildArmaturePackage | null, slot: Slot, displayData: DisplayData): Armature | null;
        /**
         * @private
         */
        protected _getSlotDisplay(dataPackage: BuildArmaturePackage | null, displayData: DisplayData, rawDisplayData: DisplayData | null, slot: Slot): any;
        /**
         * @private
         */
        protected abstract _buildTextureAtlasData(textureAtlasData: TextureAtlasData | null, textureAtlas: any): TextureAtlasData;
        /**
         * @private
         */
        protected abstract _buildArmature(dataPackage: BuildArmaturePackage): Armature;
        /**
         * @private
         */
        protected abstract _buildSlot(dataPackage: BuildArmaturePackage, slotData: SlotData, displays: Array<DisplayData | null> | null, armature: Armature): Slot;
        /**
         * - Parse the raw data to a DragonBonesData instance and cache it to the factory.
         * @param rawData - The raw data.
         * @param name - Specify a cache name for the instance so that the instance can be obtained through this name. (If not set, use the instance name instead)
         * @param scale - Specify a scaling value for all armatures. (Default: 1.0)
         * @returns DragonBonesData instance
         * @see #getDragonBonesData()
         * @see #addDragonBonesData()
         * @see #removeDragonBonesData()
         * @see dragonBones.DragonBonesData
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - å°????å§???°æ?®è§£???ä¸? DragonBonesData å®?ä¾?ï¼?å¹¶ç??å­???°å·¥???ä¸­ã??
         * @param rawData - ???å§???°æ?®ã??
         * @param name - ä¸ºè¯¥å®?ä¾????å®?ä¸?ä¸ªç??å­????ç§°ï??ä»¥ä¾¿??¯ä»¥???è¿?æ­¤å??ç§°è?·å??è¯¥å??ä¾???? ï¼?å¦??????ªè®¾ç½®ï?????ä½¿ç?¨è¯¥å®?ä¾?ä¸­ç?????ç§°ï??
         * @param scale - ä¸ºæ????????éª¨æ?¶æ??å®?ä¸?ä¸ªç¼©??¾å?¼ã?? ï¼?é»?è®?: 1.0ï¼?
         * @returns DragonBonesData å®?ä¾?
         * @see #getDragonBonesData()
         * @see #addDragonBonesData()
         * @see #removeDragonBonesData()
         * @see dragonBones.DragonBonesData
         * @version DragonBones 4.5
         * @language zh_CN
         */
        parseDragonBonesData(rawData: any, name?: string | null, scale?: number): DragonBonesData | null;
        /**
         * - Parse the raw texture atlas data and the texture atlas object to a TextureAtlasData instance and cache it to the factory.
         * @param rawData - The raw texture atlas data.
         * @param textureAtlas - The texture atlas object.
         * @param name - Specify a cache name for the instance so that the instance can be obtained through this name. (If not set, use the instance name instead)
         * @param scale - Specify a scaling value for the map set. (Default: 1.0)
         * @returns TextureAtlasData instance
         * @see #getTextureAtlasData()
         * @see #addTextureAtlasData()
         * @see #removeTextureAtlasData()
         * @see dragonBones.TextureAtlasData
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - å°????å§?è´´å?¾é????°æ?®å??è´´å?¾é??å¯¹è±¡è§????ä¸? TextureAtlasData å®?ä¾?ï¼?å¹¶ç??å­???°å·¥???ä¸­ã??
         * @param rawData - ???å§?è´´å?¾é????°æ?®ã??
         * @param textureAtlas - è´´å?¾é??å¯¹è±¡???
         * @param name - ä¸ºè¯¥å®?ä¾????å®?ä¸?ä¸ªç??å­????ç§°ï??ä»¥ä¾¿??¯ä»¥???è¿?æ­¤å??ç§°è?·å??è¯¥å??ä¾???? ï¼?å¦??????ªè®¾ç½®ï?????ä½¿ç?¨è¯¥å®?ä¾?ä¸­ç?????ç§°ï??
         * @param scale - ä¸ºè´´??¾é?????å®?ä¸?ä¸ªç¼©??¾å?¼ã?? ï¼?é»?è®?: 1.0ï¼?
         * @returns TextureAtlasData å®?ä¾?
         * @see #getTextureAtlasData()
         * @see #addTextureAtlasData()
         * @see #removeTextureAtlasData()
         * @see dragonBones.TextureAtlasData
         * @version DragonBones 4.5
         * @language zh_CN
         */
        parseTextureAtlasData(rawData: any, textureAtlas: any, name?: string | null, scale?: number): TextureAtlasData;
        /**
         * @private
         */
        updateTextureAtlasData(name: string, textureAtlases: Array<any>): void;
        /**
         * - Get a specific DragonBonesData instance.
         * @param name - The DragonBonesData instance cache name.
         * @returns DragonBonesData instance
         * @see #parseDragonBonesData()
         * @see #addDragonBonesData()
         * @see #removeDragonBonesData()
         * @see dragonBones.DragonBonesData
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??·å????¹å????? DragonBonesData å®?ä¾????
         * @param name - DragonBonesData å®?ä¾????ç¼?å­????ç§°ã??
         * @returns DragonBonesData å®?ä¾?
         * @see #parseDragonBonesData()
         * @see #addDragonBonesData()
         * @see #removeDragonBonesData()
         * @see dragonBones.DragonBonesData
         * @version DragonBones 3.0
         * @language zh_CN
         */
        getDragonBonesData(name: string): DragonBonesData | null;
        /**
         * - Cache a DragonBonesData instance to the factory.
         * @param data - The DragonBonesData instance.
         * @param name - Specify a cache name for the instance so that the instance can be obtained through this name. (if not set, use the instance name instead)
         * @see #parseDragonBonesData()
         * @see #getDragonBonesData()
         * @see #removeDragonBonesData()
         * @see dragonBones.DragonBonesData
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - å°? DragonBonesData å®?ä¾?ç¼?å­???°å·¥???ä¸­ã??
         * @param data - DragonBonesData å®?ä¾????
         * @param name - ä¸ºè¯¥å®?ä¾????å®?ä¸?ä¸ªç??å­????ç§°ï??ä»¥ä¾¿??¯ä»¥???è¿?æ­¤å??ç§°è?·å??è¯¥å??ä¾???? ï¼?å¦??????ªè®¾ç½®ï?????ä½¿ç?¨è¯¥å®?ä¾?ä¸­ç?????ç§°ï??
         * @see #parseDragonBonesData()
         * @see #getDragonBonesData()
         * @see #removeDragonBonesData()
         * @see dragonBones.DragonBonesData
         * @version DragonBones 3.0
         * @language zh_CN
         */
        addDragonBonesData(data: DragonBonesData, name?: string | null): void;
        /**
         * - Remove a DragonBonesData instance.
         * @param name - The DragonBonesData instance cache name.
         * @param disposeData - Whether to dispose data. (Default: true)
         * @see #parseDragonBonesData()
         * @see #getDragonBonesData()
         * @see #addDragonBonesData()
         * @see dragonBones.DragonBonesData
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ç§»é?? DragonBonesData å®?ä¾????
         * @param name - DragonBonesData å®?ä¾?ç¼?å­????ç§°ã??
         * @param disposeData - ??¯å?¦é????¾æ?°æ?®ã?? ï¼?é»?è®?: trueï¼?
         * @see #parseDragonBonesData()
         * @see #getDragonBonesData()
         * @see #addDragonBonesData()
         * @see dragonBones.DragonBonesData
         * @version DragonBones 3.0
         * @language zh_CN
         */
        removeDragonBonesData(name: string, disposeData?: boolean): void;
        /**
         * - Get a list of specific TextureAtlasData instances.
         * @param name - The TextureAtlasData cahce name.
         * @see #parseTextureAtlasData()
         * @see #addTextureAtlasData()
         * @see #removeTextureAtlasData()
         * @see dragonBones.TextureAtlasData
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ??·å????¹å????? TextureAtlasData å®?ä¾????è¡¨ã??
         * @param name - TextureAtlasData å®?ä¾?ç¼?å­????ç§°ã??
         * @see #parseTextureAtlasData()
         * @see #addTextureAtlasData()
         * @see #removeTextureAtlasData()
         * @see dragonBones.TextureAtlasData
         * @version DragonBones 3.0
         * @language zh_CN
         */
        getTextureAtlasData(name: string): Array<TextureAtlasData> | null;
        /**
         * - Cache a TextureAtlasData instance to the factory.
         * @param data - The TextureAtlasData instance.
         * @param name - Specify a cache name for the instance so that the instance can be obtained through this name. (if not set, use the instance name instead)
         * @see #parseTextureAtlasData()
         * @see #getTextureAtlasData()
         * @see #removeTextureAtlasData()
         * @see dragonBones.TextureAtlasData
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - å°? TextureAtlasData å®?ä¾?ç¼?å­???°å·¥???ä¸­ã??
         * @param data - TextureAtlasData å®?ä¾????
         * @param name - ä¸ºè¯¥å®?ä¾????å®?ä¸?ä¸ªç??å­????ç§°ï??ä»¥ä¾¿??¯ä»¥???è¿?æ­¤å??ç§°è?·å??è¯¥å??ä¾???? ï¼?å¦??????ªè®¾ç½®ï?????ä½¿ç?¨è¯¥å®?ä¾?ä¸­ç?????ç§°ï??
         * @see #parseTextureAtlasData()
         * @see #getTextureAtlasData()
         * @see #removeTextureAtlasData()
         * @see dragonBones.TextureAtlasData
         * @version DragonBones 3.0
         * @language zh_CN
         */
        addTextureAtlasData(data: TextureAtlasData, name?: string | null): void;
        /**
         * - Remove a TextureAtlasData instance.
         * @param name - The TextureAtlasData instance cache name.
         * @param disposeData - Whether to dispose data.
         * @see #parseTextureAtlasData()
         * @see #getTextureAtlasData()
         * @see #addTextureAtlasData()
         * @see dragonBones.TextureAtlasData
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ç§»é?? TextureAtlasData å®?ä¾????
         * @param name - TextureAtlasData å®?ä¾????ç¼?å­????ç§°ã??
         * @param disposeData - ??¯å?¦é????¾æ?°æ?®ã??
         * @see #parseTextureAtlasData()
         * @see #getTextureAtlasData()
         * @see #addTextureAtlasData()
         * @see dragonBones.TextureAtlasData
         * @version DragonBones 3.0
         * @language zh_CN
         */
        removeTextureAtlasData(name: string, disposeData?: boolean): void;
        /**
         * - Get a specific armature data.
         * @param name - The armature data name.
         * @param dragonBonesName - The cached name for DragonbonesData instance.
         * @see dragonBones.ArmatureData
         * @version DragonBones 5.1
         * @language en_US
         */
        /**
         * - ??·å????¹å?????éª¨æ?¶æ?°æ?®ã??
         * @param name - éª¨æ?¶æ?°æ?®å??ç§°ã??
         * @param dragonBonesName - DragonBonesData å®?ä¾????ç¼?å­????ç§°ã??
         * @see dragonBones.ArmatureData
         * @version DragonBones 5.1
         * @language zh_CN
         */
        getArmatureData(name: string, dragonBonesName?: string): ArmatureData | null;
        /**
         * - Clear all cached DragonBonesData instances and TextureAtlasData instances.
         * @param disposeData - Whether to dispose data.
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - æ¸???¤ç??å­?????????? DragonBonesData å®?ä¾???? TextureAtlasData å®?ä¾????
         * @param disposeData - ??¯å?¦é????¾æ?°æ?®ã??
         * @version DragonBones 4.5
         * @language zh_CN
         */
        clear(disposeData?: boolean): void;
        /**
         * - Create a armature from cached DragonBonesData instances and TextureAtlasData instances.
         * @param armatureName - The armature data name.
         * @param dragonBonesName - The cached name of the DragonBonesData instance. (If not set, all DragonBonesData instances are retrieved, and when multiple DragonBonesData instances contain a the same name armature data, it may not be possible to accurately create a specific armature)
         * @param skinName - The skin name, you can set a different ArmatureData name to share it's skin data. (If not set, use the default skin data)
         * @returns The armature.
         * @example
         * <pre>
         *     let armature = factory.buildArmature("armatureName", "dragonBonesName");
         *     armature.clock = factory.clock;
         * </pre>
         * @see dragonBones.DragonBonesData
         * @see dragonBones.ArmatureData
         * @see dragonBones.Armature
         * @version DragonBones 3.0
         * @language en_US
         */
        /**
         * - ???è¿?ç¼?å­???? DragonBonesData å®?ä¾???? TextureAtlasData å®?ä¾????å»ºä??ä¸ªéª¨??¶ã??
         * @param armatureName - éª¨æ?¶æ?°æ?®å??ç§°ã??
         * @param dragonBonesName - DragonBonesData å®?ä¾????ç¼?å­????ç§°ã?? ï¼?å¦??????ªè®¾ç½®ï??å°?æ£?ç´¢æ???????? DragonBonesData å®?ä¾?ï¼?å½?å¤?ä¸? DragonBonesData å®?ä¾?ä¸­å????«å????????éª¨æ?¶æ?°æ?®æ?¶ï????¯è?½æ??æ³????ç¡®ç?????å»ºå?ºç?¹å?????éª¨æ?¶ï??
         * @param skinName - ??®è?¤å??ç§°ï????¯ä»¥è®¾ç½®ä¸?ä¸ªå?¶ä??éª¨æ?¶æ?°æ?®å??ç§°æ?¥å?±äº«??¶ç?®è?¤æ?°æ?®ï??å¦??????ªè®¾ç½®ï?????ä½¿ç?¨é??è®¤ç????®è?¤æ?°æ?®ï?????
         * @returns éª¨æ?¶ã??
         * @example
         * <pre>
         *     let armature = factory.buildArmature("armatureName", "dragonBonesName");
         *     armature.clock = factory.clock;
         * </pre>
         * @see dragonBones.DragonBonesData
         * @see dragonBones.ArmatureData
         * @see dragonBones.Armature
         * @version DragonBones 3.0
         * @language zh_CN
         */
        buildArmature(armatureName: string, dragonBonesName?: string, skinName?: string, textureAtlasName?: string): Armature | null;
        /**
         * @private
         */
        replaceDisplay(slot: Slot, displayData: DisplayData, displayIndex?: number): void;
        /**
         * - Replaces the current display data for a particular slot with a specific display data.
         * Specify display data with "dragonBonesName/armatureName/slotName/displayName".
         * @param dragonBonesName - The DragonBonesData instance cache name.
         * @param armatureName - The armature data name.
         * @param slotName - The slot data name.
         * @param displayName - The display data name.
         * @param slot - The slot.
         * @param displayIndex - The index of the display data that is replaced. (If it is not set, replaces the current display data)
         * @example
         * <pre>
         *     let slot = armature.getSlot("weapon");
         *     factory.replaceSlotDisplay("dragonBonesName", "armatureName", "slotName", "displayName", slot);
         * </pre>
         * @version DragonBones 4.5
         * @language en_US
         */
        /**
         * - ??¨ç?¹å???????¾ç¤ºå¯¹è±¡??°æ?®æ?¿æ?¢ç?¹å?????æ§½å??????????¾ç¤ºå¯¹è±¡??°æ?®ã??
         * ??? "dragonBonesName/armatureName/slotName/displayName" ???å®???¾ç¤ºå¯¹è±¡??°æ?®ã??
         * @param dragonBonesName - DragonBonesData å®?ä¾????ç¼?å­????ç§°ã??
         * @param armatureName - éª¨æ?¶æ?°æ?®å??ç§°ã??
         * @param slotName - ???æ§½æ?°æ?®å??ç§°ã??
         * @param displayName - ??¾ç¤ºå¯¹è±¡??°æ?®å??ç§°ã??
         * @param slot - ???æ§½ã??
         * @param displayIndex - è¢«æ?¿æ?¢ç????¾ç¤ºå¯¹è±¡??°æ?®ç??ç´¢å????? ï¼?å¦??????ªè®¾ç½®ï???????¿æ?¢å??????????¾ç¤ºå¯¹è±¡??°æ?®ï??
         * @example
         * <pre>
         *     let slot = armature.getSlot("weapon");
         *     factory.replaceSlotDisplay("dragonBonesName", "armatureName", "slotName", "displayName", slot);
         * </pre>
         * @version DragonBones 4.5
         * @language zh_CN
         */
        replaceSlotDisplay(dragonBonesName: string, armatureName: string, slotName: string, displayName: string, slot: Slot, displayIndex?: number): boolean;
        /**
         * @private
         */
        replaceSlotDisplayList(dragonBonesName: string | null, armatureName: string, slotName: string, slot: Slot): boolean;
        /**
         * - Share specific skin data with specific armature.
         * @param armature - The armature.
         * @param skin - The skin data.
         * @param isOverride - Whether it completely override the original skin. (Default: false)
         * @param exclude - A list of slot names that do not need to be replace.
         * @example
         * <pre>
         *     let armatureA = factory.buildArmature("armatureA", "dragonBonesA");
         *     let armatureDataB = factory.getArmatureData("armatureB", "dragonBonesB");
         *     if (armatureDataB && armatureDataB.defaultSkin) {
         *     factory.replaceSkin(armatureA, armatureDataB.defaultSkin, false, ["arm_l", "weapon_l"]);
         *     }
         * </pre>
         * @see dragonBones.Armature
         * @see dragonBones.SkinData
         * @version DragonBones 5.6
         * @language en_US
         */
        /**
         * - å°???¹å???????®è?¤æ?°æ?®å?±äº«ç»???¹å?????éª¨æ?¶ä½¿??¨ã??
         * @param armature - éª¨æ?¶ã??
         * @param skin - ??®è?¤æ?°æ?®ã??
         * @param isOverride - ??¯å?¦å????¨è??????????¥ç????®è?¤ã?? ï¼?é»?è®?: falseï¼?
         * @param exclude - ä¸????è¦?è¢«æ?¿æ?¢ç?????æ§½å??ç§°å??è¡¨ã??
         * @example
         * <pre>
         *     let armatureA = factory.buildArmature("armatureA", "dragonBonesA");
         *     let armatureDataB = factory.getArmatureData("armatureB", "dragonBonesB");
         *     if (armatureDataB && armatureDataB.defaultSkin) {
         *     factory.replaceSkin(armatureA, armatureDataB.defaultSkin, false, ["arm_l", "weapon_l"]);
         *     }
         * </pre>
         * @see dragonBones.Armature
         * @see dragonBones.SkinData
         * @version DragonBones 5.6
         * @language zh_CN
         */
        replaceSkin(armature: Armature, skin: SkinData, isOverride?: boolean, exclude?: Array<string> | null): boolean;
        /**
         * - Replaces the existing animation data for a specific armature with the animation data for the specific armature data.
         * This enables you to make a armature template so that other armature without animations can share it's animations.
         * @param armature - The armtaure.
         * @param armatureData - The armature data.
         * @param isOverride - Whether to completely overwrite the original animation. (Default: false)
         * @example
         * <pre>
         *     let armatureA = factory.buildArmature("armatureA", "dragonBonesA");
         *     let armatureDataB = factory.getArmatureData("armatureB", "dragonBonesB");
         *     if (armatureDataB) {
         *     factory.replaceAnimation(armatureA, armatureDataB);
         *     }
         * </pre>
         * @see dragonBones.Armature
         * @see dragonBones.ArmatureData
         * @version DragonBones 5.6
         * @language en_US
         */
        /**
         * - ??¨ç?¹å??éª¨æ?¶æ?°æ?®ç????¨ç?»æ?°æ?®æ?¿æ?¢ç?¹å??éª¨æ?¶ç?°æ???????¨ç?»æ?°æ?®ã??
         * è¿???·å°±??½å????°å?¶ä??ä¸?ä¸ªéª¨??¶å?¨ç?»æ¨¡??¿ï??è®©å?¶ä??æ²¡æ????¶ä????¨ç?»ç??éª¨æ?¶å?±äº«è¯¥å?¨ç?»ã??
         * @param armature - éª¨æ?¶ã??
         * @param armatureData - éª¨æ?¶æ?°æ?®ã??
         * @param isOverride - ??¯å?¦å????¨è??????????¥ç????¨ç?»ã??ï¼?é»?è®?: falseï¼????
         * @example
         * <pre>
         *     let armatureA = factory.buildArmature("armatureA", "dragonBonesA");
         *     let armatureDataB = factory.getArmatureData("armatureB", "dragonBonesB");
         *     if (armatureDataB) {
         *     factory.replaceAnimation(armatureA, armatureDataB);
         *     }
         * </pre>
         * @see dragonBones.Armature
         * @see dragonBones.ArmatureData
         * @version DragonBones 5.6
         * @language zh_CN
         */
        replaceAnimation(armature: Armature, armatureData: ArmatureData, isOverride?: boolean): boolean;
        /**
         * @private
         */
        getAllDragonBonesData(): Map<DragonBonesData>;
        /**
         * @private
         */
        getAllTextureAtlasData(): Map<Array<TextureAtlasData>>;
        /**
         * - An Worldclock instance updated by engine.
         * @version DragonBones 5.7
         * @language en_US
         */
        /**
         * - ??±å?????é©±å?¨ç?? WorldClock å®?ä¾????
         * @version DragonBones 5.7
         * @language zh_CN
         */
        readonly clock: WorldClock;
        /**
         * @private
         */
        readonly dragonBones: DragonBones;
        /**
         * - Deprecated, please refer to {@link #replaceSkin}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #replaceSkin}???
         * @deprecated
         * @language zh_CN
         */
        changeSkin(armature: Armature, skin: SkinData, exclude?: Array<string> | null): boolean;
        /**
         * - Deprecated, please refer to {@link #replaceAnimation}.
         * @deprecated
         * @language en_US
         */
        /**
         * - å·²å??å¼?ï¼?è¯·å????? {@link #replaceAnimation}???
         * @deprecated
         * @language zh_CN
         */
        copyAnimationsToArmature(toArmature: Armature, fromArmatreName: string, fromSkinName?: string, fromDragonBonesDataName?: string, replaceOriginalAnimation?: boolean): boolean;
    }
    /**
     * @internal
     * @private
     */
    class BuildArmaturePackage {
        dataName: string;
        textureAtlasName: string;
        data: DragonBonesData;
        armature: ArmatureData;
        skin: SkinData | null;
    }
}

declare namespace sp.spine {
	class Animation {
		name: string;
		timelines: Array<Timeline>;
		timelineIds: Array<boolean>;
		duration: number;
		constructor(name: string, timelines: Array<Timeline>, duration: number);
		hasTimeline(id: number): boolean;
		apply(skeleton: Skeleton, lastTime: number, time: number, loop: boolean, events: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
		static binarySearch(values: ArrayLike<number>, target: number, step?: number): number;
		static linearSearch(values: ArrayLike<number>, target: number, step: number): number;
	}
	interface Timeline {
		apply(skeleton: Skeleton, lastTime: number, time: number, events: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
		getPropertyId(): number;
	}
	enum MixBlend {
		setup = 0,
		first = 1,
		replace = 2,
		add = 3
	}
	enum MixDirection {
		mixIn = 0,
		mixOut = 1
	}
	enum TimelineType {
		rotate = 0,
		translate = 1,
		scale = 2,
		shear = 3,
		attachment = 4,
		color = 5,
		deform = 6,
		event = 7,
		drawOrder = 8,
		ikConstraint = 9,
		transformConstraint = 10,
		pathConstraintPosition = 11,
		pathConstraintSpacing = 12,
		pathConstraintMix = 13,
		twoColor = 14
	}
	abstract class CurveTimeline implements Timeline {
		static LINEAR: number;
		static STEPPED: number;
		static BEZIER: number;
		static BEZIER_SIZE: number;
		private curves;
		abstract getPropertyId(): number;
		constructor(frameCount: number);
		getFrameCount(): number;
		setLinear(frameIndex: number): void;
		setStepped(frameIndex: number): void;
		getCurveType(frameIndex: number): number;
		setCurve(frameIndex: number, cx1: number, cy1: number, cx2: number, cy2: number): void;
		getCurvePercent(frameIndex: number, percent: number): number;
		abstract apply(skeleton: Skeleton, lastTime: number, time: number, events: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
	class RotateTimeline extends CurveTimeline {
		static ENTRIES: number;
		static PREV_TIME: number;
		static PREV_ROTATION: number;
		static ROTATION: number;
		boneIndex: number;
		frames: ArrayLike<number>;
		constructor(frameCount: number);
		getPropertyId(): number;
		setFrame(frameIndex: number, time: number, degrees: number): void;
		apply(skeleton: Skeleton, lastTime: number, time: number, events: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
	class TranslateTimeline extends CurveTimeline {
		static ENTRIES: number;
		static PREV_TIME: number;
		static PREV_X: number;
		static PREV_Y: number;
		static X: number;
		static Y: number;
		boneIndex: number;
		frames: ArrayLike<number>;
		constructor(frameCount: number);
		getPropertyId(): number;
		setFrame(frameIndex: number, time: number, x: number, y: number): void;
		apply(skeleton: Skeleton, lastTime: number, time: number, events: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
	class ScaleTimeline extends TranslateTimeline {
		constructor(frameCount: number);
		getPropertyId(): number;
		apply(skeleton: Skeleton, lastTime: number, time: number, events: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
	class ShearTimeline extends TranslateTimeline {
		constructor(frameCount: number);
		getPropertyId(): number;
		apply(skeleton: Skeleton, lastTime: number, time: number, events: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
	class ColorTimeline extends CurveTimeline {
		static ENTRIES: number;
		static PREV_TIME: number;
		static PREV_R: number;
		static PREV_G: number;
		static PREV_B: number;
		static PREV_A: number;
		static R: number;
		static G: number;
		static B: number;
		static A: number;
		slotIndex: number;
		frames: ArrayLike<number>;
		constructor(frameCount: number);
		getPropertyId(): number;
		setFrame(frameIndex: number, time: number, r: number, g: number, b: number, a: number): void;
		apply(skeleton: Skeleton, lastTime: number, time: number, events: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
	class TwoColorTimeline extends CurveTimeline {
		static ENTRIES: number;
		static PREV_TIME: number;
		static PREV_R: number;
		static PREV_G: number;
		static PREV_B: number;
		static PREV_A: number;
		static PREV_R2: number;
		static PREV_G2: number;
		static PREV_B2: number;
		static R: number;
		static G: number;
		static B: number;
		static A: number;
		static R2: number;
		static G2: number;
		static B2: number;
		slotIndex: number;
		frames: ArrayLike<number>;
		constructor(frameCount: number);
		getPropertyId(): number;
		setFrame(frameIndex: number, time: number, r: number, g: number, b: number, a: number, r2: number, g2: number, b2: number): void;
		apply(skeleton: Skeleton, lastTime: number, time: number, events: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
	class AttachmentTimeline implements Timeline {
		slotIndex: number;
		frames: ArrayLike<number>;
		attachmentNames: Array<string>;
		constructor(frameCount: number);
		getPropertyId(): number;
		getFrameCount(): number;
		setFrame(frameIndex: number, time: number, attachmentName: string): void;
		apply(skeleton: Skeleton, lastTime: number, time: number, events: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
	class DeformTimeline extends CurveTimeline {
		slotIndex: number;
		attachment: VertexAttachment;
		frames: ArrayLike<number>;
		frameVertices: Array<ArrayLike<number>>;
		constructor(frameCount: number);
		getPropertyId(): number;
		setFrame(frameIndex: number, time: number, vertices: ArrayLike<number>): void;
		apply(skeleton: Skeleton, lastTime: number, time: number, firedEvents: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
	class EventTimeline implements Timeline {
		frames: ArrayLike<number>;
		events: Array<Event>;
		constructor(frameCount: number);
		getPropertyId(): number;
		getFrameCount(): number;
		setFrame(frameIndex: number, event: Event): void;
		apply(skeleton: Skeleton, lastTime: number, time: number, firedEvents: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
	class DrawOrderTimeline implements Timeline {
		frames: ArrayLike<number>;
		drawOrders: Array<Array<number>>;
		constructor(frameCount: number);
		getPropertyId(): number;
		getFrameCount(): number;
		setFrame(frameIndex: number, time: number, drawOrder: Array<number>): void;
		apply(skeleton: Skeleton, lastTime: number, time: number, firedEvents: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
	class IkConstraintTimeline extends CurveTimeline {
		static ENTRIES: number;
		static PREV_TIME: number;
		static PREV_MIX: number;
		static PREV_SOFTNESS: number;
		static PREV_BEND_DIRECTION: number;
		static PREV_COMPRESS: number;
		static PREV_STRETCH: number;
		static MIX: number;
		static SOFTNESS: number;
		static BEND_DIRECTION: number;
		static COMPRESS: number;
		static STRETCH: number;
		ikConstraintIndex: number;
		frames: ArrayLike<number>;
		constructor(frameCount: number);
		getPropertyId(): number;
		setFrame(frameIndex: number, time: number, mix: number, softness: number, bendDirection: number, compress: boolean, stretch: boolean): void;
		apply(skeleton: Skeleton, lastTime: number, time: number, firedEvents: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
	class TransformConstraintTimeline extends CurveTimeline {
		static ENTRIES: number;
		static PREV_TIME: number;
		static PREV_ROTATE: number;
		static PREV_TRANSLATE: number;
		static PREV_SCALE: number;
		static PREV_SHEAR: number;
		static ROTATE: number;
		static TRANSLATE: number;
		static SCALE: number;
		static SHEAR: number;
		transformConstraintIndex: number;
		frames: ArrayLike<number>;
		constructor(frameCount: number);
		getPropertyId(): number;
		setFrame(frameIndex: number, time: number, rotateMix: number, translateMix: number, scaleMix: number, shearMix: number): void;
		apply(skeleton: Skeleton, lastTime: number, time: number, firedEvents: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
	class PathConstraintPositionTimeline extends CurveTimeline {
		static ENTRIES: number;
		static PREV_TIME: number;
		static PREV_VALUE: number;
		static VALUE: number;
		pathConstraintIndex: number;
		frames: ArrayLike<number>;
		constructor(frameCount: number);
		getPropertyId(): number;
		setFrame(frameIndex: number, time: number, value: number): void;
		apply(skeleton: Skeleton, lastTime: number, time: number, firedEvents: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
	class PathConstraintSpacingTimeline extends PathConstraintPositionTimeline {
		constructor(frameCount: number);
		getPropertyId(): number;
		apply(skeleton: Skeleton, lastTime: number, time: number, firedEvents: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
	class PathConstraintMixTimeline extends CurveTimeline {
		static ENTRIES: number;
		static PREV_TIME: number;
		static PREV_ROTATE: number;
		static PREV_TRANSLATE: number;
		static ROTATE: number;
		static TRANSLATE: number;
		pathConstraintIndex: number;
		frames: ArrayLike<number>;
		constructor(frameCount: number);
		getPropertyId(): number;
		setFrame(frameIndex: number, time: number, rotateMix: number, translateMix: number): void;
		apply(skeleton: Skeleton, lastTime: number, time: number, firedEvents: Array<Event>, alpha: number, blend: MixBlend, direction: MixDirection): void;
	}
}
declare namespace sp.spine {
	class AnimationState {
		static emptyAnimation: Animation;
		static SUBSEQUENT: number;
		static FIRST: number;
		static HOLD: number;
		static HOLD_MIX: number;
		static NOT_LAST: number;
		data: AnimationStateData;
		tracks: TrackEntry[];
		timeScale: number;
		events: Event[];
		listeners: AnimationStateListener[];
		queue: EventQueue;
		propertyIDs: IntSet;
		animationsChanged: boolean;
		trackEntryPool: Pool<TrackEntry>;
		constructor(data: AnimationStateData);
		update(delta: number): void;
		updateMixingFrom(to: TrackEntry, delta: number): boolean;
		apply(skeleton: Skeleton): boolean;
		applyMixingFrom(to: TrackEntry, skeleton: Skeleton, blend: MixBlend): number;
		applyRotateTimeline(timeline: Timeline, skeleton: Skeleton, time: number, alpha: number, blend: MixBlend, timelinesRotation: Array<number>, i: number, firstFrame: boolean): void;
		queueEvents(entry: TrackEntry, animationTime: number): void;
		clearTracks(): void;
		clearTrack(trackIndex: number): void;
		setCurrent(index: number, current: TrackEntry, interrupt: boolean): void;
		setAnimation(trackIndex: number, animationName: string, loop: boolean): TrackEntry;
		setAnimationWith(trackIndex: number, animation: Animation, loop: boolean): TrackEntry;
		addAnimation(trackIndex: number, animationName: string, loop: boolean, delay: number): TrackEntry;
		addAnimationWith(trackIndex: number, animation: Animation, loop: boolean, delay: number): TrackEntry;
		setEmptyAnimation(trackIndex: number, mixDuration: number): TrackEntry;
		addEmptyAnimation(trackIndex: number, mixDuration: number, delay: number): TrackEntry;
		setEmptyAnimations(mixDuration: number): void;
		expandToIndex(index: number): TrackEntry;
		trackEntry(trackIndex: number, animation: Animation, loop: boolean, last: TrackEntry): TrackEntry;
		disposeNext(entry: TrackEntry): void;
		_animationsChanged(): void;
		computeHold(entry: TrackEntry): void;
		computeNotLast(entry: TrackEntry): void;
		getCurrent(trackIndex: number): TrackEntry;
		addListener(listener: AnimationStateListener): void;
		removeListener(listener: AnimationStateListener): void;
		clearListeners(): void;
		clearListenerNotifications(): void;
	}
	class TrackEntry {
		animation: Animation;
		next: TrackEntry;
		mixingFrom: TrackEntry;
		mixingTo: TrackEntry;
		listener: AnimationStateListener;
		trackIndex: number;
		loop: boolean;
		holdPrevious: boolean;
		eventThreshold: number;
		attachmentThreshold: number;
		drawOrderThreshold: number;
		animationStart: number;
		animationEnd: number;
		animationLast: number;
		nextAnimationLast: number;
		delay: number;
		trackTime: number;
		trackLast: number;
		nextTrackLast: number;
		trackEnd: number;
		timeScale: number;
		alpha: number;
		mixTime: number;
		mixDuration: number;
		interruptAlpha: number;
		totalAlpha: number;
		mixBlend: MixBlend;
		timelineMode: number[];
		timelineHoldMix: TrackEntry[];
		timelinesRotation: number[];
		reset(): void;
		getAnimationTime(): number;
		setAnimationLast(animationLast: number): void;
		isComplete(): boolean;
		resetRotationDirections(): void;
	}
	class EventQueue {
		objects: Array<any>;
		drainDisabled: boolean;
		animState: AnimationState;
		constructor(animState: AnimationState);
		start(entry: TrackEntry): void;
		interrupt(entry: TrackEntry): void;
		end(entry: TrackEntry): void;
		dispose(entry: TrackEntry): void;
		complete(entry: TrackEntry): void;
		event(entry: TrackEntry, event: Event): void;
		drain(): void;
		clear(): void;
	}
	enum EventType {
		start = 0,
		interrupt = 1,
		end = 2,
		dispose = 3,
		complete = 4,
		event = 5
	}
	interface AnimationStateListener {
		start(entry: TrackEntry): void;
		interrupt(entry: TrackEntry): void;
		end(entry: TrackEntry): void;
		dispose(entry: TrackEntry): void;
		complete(entry: TrackEntry): void;
		event(entry: TrackEntry, event: Event): void;
	}
	abstract class AnimationStateAdapter implements AnimationStateListener {
		start(entry: TrackEntry): void;
		interrupt(entry: TrackEntry): void;
		end(entry: TrackEntry): void;
		dispose(entry: TrackEntry): void;
		complete(entry: TrackEntry): void;
		event(entry: TrackEntry, event: Event): void;
	}
}
declare namespace sp.spine {
	class AnimationStateData {
		skeletonData: SkeletonData;
		animationToMixTime: Map<number>;
		defaultMix: number;
		constructor(skeletonData: SkeletonData);
		setMix(fromName: string, toName: string, duration: number): void;
		setMixWith(from: Animation, to: Animation, duration: number): void;
		getMix(from: Animation, to: Animation): number;
	}
}
declare namespace sp.spine {
	class AssetManager implements Disposable {
		private pathPrefix;
		private textureLoader;
		private assets;
		private errors;
		private toLoad;
		private loaded;
		constructor(textureLoader: (image: HTMLImageElement) => any, pathPrefix?: string);
		private static downloadText;
		private static downloadBinary;
		loadBinary(path: string, success?: (path: string, binary: Uint8Array) => void, error?: (path: string, error: string) => void): void;
		loadText(path: string, success?: (path: string, text: string) => void, error?: (path: string, error: string) => void): void;
		loadTexture(path: string, success?: (path: string, image: HTMLImageElement) => void, error?: (path: string, error: string) => void): void;
		loadTextureData(path: string, data: string, success?: (path: string, image: HTMLImageElement) => void, error?: (path: string, error: string) => void): void;
		loadTextureAtlas(path: string, success?: (path: string, atlas: TextureAtlas) => void, error?: (path: string, error: string) => void): void;
		get(path: string): any;
		remove(path: string): void;
		removeAll(): void;
		isLoadingComplete(): boolean;
		getToLoad(): number;
		getLoaded(): number;
		dispose(): void;
		hasErrors(): boolean;
		getErrors(): Map<string>;
	}
}
declare namespace sp.spine {
	class AtlasAttachmentLoader implements AttachmentLoader {
		atlas: TextureAtlas;
		constructor(atlas: TextureAtlas);
		newRegionAttachment(skin: Skin, name: string, path: string): RegionAttachment;
		newMeshAttachment(skin: Skin, name: string, path: string): MeshAttachment;
		newBoundingBoxAttachment(skin: Skin, name: string): BoundingBoxAttachment;
		newPathAttachment(skin: Skin, name: string): PathAttachment;
		newPointAttachment(skin: Skin, name: string): PointAttachment;
		newClippingAttachment(skin: Skin, name: string): ClippingAttachment;
	}
}
declare namespace sp.spine {
	enum BlendMode {
		Normal = 0,
		Additive = 1,
		Multiply = 2,
		Screen = 3
	}
}
declare namespace sp.spine {
	class Bone implements Updatable {
		data: BoneData;
		skeleton: Skeleton;
		parent: Bone;
		children: Bone[];
		x: number;
		y: number;
		rotation: number;
		scaleX: number;
		scaleY: number;
		shearX: number;
		shearY: number;
		ax: number;
		ay: number;
		arotation: number;
		ascaleX: number;
		ascaleY: number;
		ashearX: number;
		ashearY: number;
		appliedValid: boolean;
		a: number;
		b: number;
		c: number;
		d: number;
		worldY: number;
		worldX: number;
		sorted: boolean;
		active: boolean;
		constructor(data: BoneData, skeleton: Skeleton, parent: Bone);
		isActive(): boolean;
		update(): void;
		updateWorldTransform(): void;
		updateWorldTransformWith(x: number, y: number, rotation: number, scaleX: number, scaleY: number, shearX: number, shearY: number): void;
		setToSetupPose(): void;
		getWorldRotationX(): number;
		getWorldRotationY(): number;
		getWorldScaleX(): number;
		getWorldScaleY(): number;
		updateAppliedTransform(): void;
		worldToLocal(world: Vector2): Vector2;
		localToWorld(local: Vector2): Vector2;
		worldToLocalRotation(worldRotation: number): number;
		localToWorldRotation(localRotation: number): number;
		rotateWorld(degrees: number): void;
	}
}
declare namespace sp.spine {
	class BoneData {
		index: number;
		name: string;
		parent: BoneData;
		length: number;
		x: number;
		y: number;
		rotation: number;
		scaleX: number;
		scaleY: number;
		shearX: number;
		shearY: number;
		transformMode: TransformMode;
		skinRequired: boolean;
		color: Color;
		constructor(index: number, name: string, parent: BoneData);
	}
	enum TransformMode {
		Normal = 0,
		OnlyTranslation = 1,
		NoRotationOrReflection = 2,
		NoScale = 3,
		NoScaleOrReflection = 4
	}
}
declare namespace sp.spine {
	abstract class ConstraintData {
		name: string;
		order: number;
		skinRequired: boolean;
		constructor(name: string, order: number, skinRequired: boolean);
	}
}
declare namespace sp.spine {
	class Event {
		data: EventData;
		intValue: number;
		floatValue: number;
		stringValue: string;
		time: number;
		volume: number;
		balance: number;
		constructor(time: number, data: EventData);
	}
}
declare namespace sp.spine {
	class EventData {
		name: string;
		intValue: number;
		floatValue: number;
		stringValue: string;
		audioPath: string;
		volume: number;
		balance: number;
		constructor(name: string);
	}
}
declare namespace sp.spine {
	class IkConstraint implements Updatable {
		data: IkConstraintData;
		bones: Array<Bone>;
		target: Bone;
		bendDirection: number;
		compress: boolean;
		stretch: boolean;
		mix: number;
		softness: number;
		active: boolean;
		constructor(data: IkConstraintData, skeleton: Skeleton);
		isActive(): boolean;
		apply(): void;
		update(): void;
		apply1(bone: Bone, targetX: number, targetY: number, compress: boolean, stretch: boolean, uniform: boolean, alpha: number): void;
		apply2(parent: Bone, child: Bone, targetX: number, targetY: number, bendDir: number, stretch: boolean, softness: number, alpha: number): void;
	}
}
declare namespace sp.spine {
	class IkConstraintData extends ConstraintData {
		bones: BoneData[];
		target: BoneData;
		bendDirection: number;
		compress: boolean;
		stretch: boolean;
		uniform: boolean;
		mix: number;
		softness: number;
		constructor(name: string);
	}
}
declare namespace sp.spine {
	class PathConstraint implements Updatable {
		static NONE: number;
		static BEFORE: number;
		static AFTER: number;
		static epsilon: number;
		data: PathConstraintData;
		bones: Array<Bone>;
		target: Slot;
		position: number;
		spacing: number;
		rotateMix: number;
		translateMix: number;
		spaces: number[];
		positions: number[];
		world: number[];
		curves: number[];
		lengths: number[];
		segments: number[];
		active: boolean;
		constructor(data: PathConstraintData, skeleton: Skeleton);
		isActive(): boolean;
		apply(): void;
		update(): void;
		computeWorldPositions(path: PathAttachment, spacesCount: number, tangents: boolean, percentPosition: boolean, percentSpacing: boolean): number[];
		addBeforePosition(p: number, temp: Array<number>, i: number, out: Array<number>, o: number): void;
		addAfterPosition(p: number, temp: Array<number>, i: number, out: Array<number>, o: number): void;
		addCurvePosition(p: number, x1: number, y1: number, cx1: number, cy1: number, cx2: number, cy2: number, x2: number, y2: number, out: Array<number>, o: number, tangents: boolean): void;
	}
}
declare namespace sp.spine {
	class PathConstraintData extends ConstraintData {
		bones: BoneData[];
		target: SlotData;
		positionMode: PositionMode;
		spacingMode: SpacingMode;
		rotateMode: RotateMode;
		offsetRotation: number;
		position: number;
		spacing: number;
		rotateMix: number;
		translateMix: number;
		constructor(name: string);
	}
	enum PositionMode {
		Fixed = 0,
		Percent = 1
	}
	enum SpacingMode {
		Length = 0,
		Fixed = 1,
		Percent = 2
	}
	enum RotateMode {
		Tangent = 0,
		Chain = 1,
		ChainScale = 2
	}
}
declare namespace sp.spine {
	class SharedAssetManager implements Disposable {
		private pathPrefix;
		private clientAssets;
		private queuedAssets;
		private rawAssets;
		private errors;
		constructor(pathPrefix?: string);
		private queueAsset;
		loadText(clientId: string, path: string): void;
		loadJson(clientId: string, path: string): void;
		loadTexture(clientId: string, textureLoader: (image: HTMLImageElement) => any, path: string): void;
		get(clientId: string, path: string): any;
		private updateClientAssets;
		isLoadingComplete(clientId: string): boolean;
		dispose(): void;
		hasErrors(): boolean;
		getErrors(): Map<string>;
	}
}
declare namespace sp.spine {
	class Skeleton {
		data: SkeletonData;
		bones: Array<Bone>;
		slots: Array<Slot>;
		drawOrder: Array<Slot>;
		ikConstraints: Array<IkConstraint>;
		transformConstraints: Array<TransformConstraint>;
		pathConstraints: Array<PathConstraint>;
		_updateCache: Updatable[];
		updateCacheReset: Updatable[];
		skin: Skin;
		color: Color;
		time: number;
		scaleX: number;
		scaleY: number;
		x: number;
		y: number;
		constructor(data: SkeletonData);
		updateCache(): void;
		sortIkConstraint(constraint: IkConstraint): void;
		sortPathConstraint(constraint: PathConstraint): void;
		sortTransformConstraint(constraint: TransformConstraint): void;
		sortPathConstraintAttachment(skin: Skin, slotIndex: number, slotBone: Bone): void;
		sortPathConstraintAttachmentWith(attachment: Attachment, slotBone: Bone): void;
		sortBone(bone: Bone): void;
		sortReset(bones: Array<Bone>): void;
		updateWorldTransform(): void;
		setToSetupPose(): void;
		setBonesToSetupPose(): void;
		setSlotsToSetupPose(): void;
		getRootBone(): Bone;
		findBone(boneName: string): Bone;
		findBoneIndex(boneName: string): number;
		findSlot(slotName: string): Slot;
		findSlotIndex(slotName: string): number;
		setSkinByName(skinName: string): void;
		setSkin(newSkin: Skin): void;
		getAttachmentByName(slotName: string, attachmentName: string): Attachment;
		getAttachment(slotIndex: number, attachmentName: string): Attachment;
		setAttachment(slotName: string, attachmentName: string): void;
		findIkConstraint(constraintName: string): IkConstraint;
		findTransformConstraint(constraintName: string): TransformConstraint;
		findPathConstraint(constraintName: string): PathConstraint;
		getBounds(offset: Vector2, size: Vector2, temp?: Array<number>): void;
		update(delta: number): void;
	}
}
declare namespace sp.spine {
	class SkeletonBinary {
		static AttachmentTypeValues: number[];
		static TransformModeValues: TransformMode[];
		static PositionModeValues: PositionMode[];
		static SpacingModeValues: SpacingMode[];
		static RotateModeValues: RotateMode[];
		static BlendModeValues: BlendMode[];
		static BONE_ROTATE: number;
		static BONE_TRANSLATE: number;
		static BONE_SCALE: number;
		static BONE_SHEAR: number;
		static SLOT_ATTACHMENT: number;
		static SLOT_COLOR: number;
		static SLOT_TWO_COLOR: number;
		static PATH_POSITION: number;
		static PATH_SPACING: number;
		static PATH_MIX: number;
		static CURVE_LINEAR: number;
		static CURVE_STEPPED: number;
		static CURVE_BEZIER: number;
		scale: number;
		attachmentLoader: AttachmentLoader;
		private linkedMeshes;
		constructor(attachmentLoader: AttachmentLoader);
		readSkeletonData(binary: Uint8Array): SkeletonData;
		private readSkin;
		private readAttachment;
		private readVertices;
		private readFloatArray;
		private readShortArray;
		private readAnimation;
		private readCurve;
		setCurve(timeline: CurveTimeline, frameIndex: number, cx1: number, cy1: number, cx2: number, cy2: number): void;
	}
}
declare namespace sp.spine {
	class SkeletonBounds {
		minX: number;
		minY: number;
		maxX: number;
		maxY: number;
		boundingBoxes: BoundingBoxAttachment[];
		polygons: ArrayLike<number>[];
		private polygonPool;
		update(skeleton: Skeleton, updateAabb: boolean): void;
		aabbCompute(): void;
		aabbContainsPoint(x: number, y: number): boolean;
		aabbIntersectsSegment(x1: number, y1: number, x2: number, y2: number): boolean;
		aabbIntersectsSkeleton(bounds: SkeletonBounds): boolean;
		containsPoint(x: number, y: number): BoundingBoxAttachment;
		containsPointPolygon(polygon: ArrayLike<number>, x: number, y: number): boolean;
		intersectsSegment(x1: number, y1: number, x2: number, y2: number): BoundingBoxAttachment;
		intersectsSegmentPolygon(polygon: ArrayLike<number>, x1: number, y1: number, x2: number, y2: number): boolean;
		getPolygon(boundingBox: BoundingBoxAttachment): ArrayLike<number>;
		getWidth(): number;
		getHeight(): number;
	}
}
declare namespace sp.spine {
	class SkeletonClipping {
		private triangulator;
		private clippingPolygon;
		private clipOutput;
		clippedVertices: number[];
		clippedTriangles: number[];
		private scratch;
		private clipAttachment;
		private clippingPolygons;
		clipStart(slot: Slot, clip: ClippingAttachment): number;
		clipEndWithSlot(slot: Slot): void;
		clipEnd(): void;
		isClipping(): boolean;
		clipTriangles(vertices: ArrayLike<number>, verticesLength: number, triangles: ArrayLike<number>, trianglesLength: number, uvs: ArrayLike<number>, light: Color, dark: Color, twoColor: boolean): void;
		clip(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, clippingArea: Array<number>, output: Array<number>): boolean;
		static makeClockwise(polygon: ArrayLike<number>): void;
	}
}
declare namespace sp.spine {
	class SkeletonData {
		name: string;
		bones: BoneData[];
		slots: SlotData[];
		skins: Skin[];
		defaultSkin: Skin;
		events: EventData[];
		animations: Animation[];
		ikConstraints: IkConstraintData[];
		transformConstraints: TransformConstraintData[];
		pathConstraints: PathConstraintData[];
		x: number;
		y: number;
		width: number;
		height: number;
		version: string;
		hash: string;
		fps: number;
		imagesPath: string;
		audioPath: string;
		findBone(boneName: string): BoneData;
		findBoneIndex(boneName: string): number;
		findSlot(slotName: string): SlotData;
		findSlotIndex(slotName: string): number;
		findSkin(skinName: string): Skin;
		findEvent(eventDataName: string): EventData;
		findAnimation(animationName: string): Animation;
		findIkConstraint(constraintName: string): IkConstraintData;
		findTransformConstraint(constraintName: string): TransformConstraintData;
		findPathConstraint(constraintName: string): PathConstraintData;
		findPathConstraintIndex(pathConstraintName: string): number;
	}
}
declare namespace sp.spine {
	class SkeletonJson {
		attachmentLoader: AttachmentLoader;
		scale: number;
		private linkedMeshes;
		constructor(attachmentLoader: AttachmentLoader);
		readSkeletonData(json: string | any): SkeletonData;
		readAttachment(map: any, skin: Skin, slotIndex: number, name: string, skeletonData: SkeletonData): Attachment;
		readVertices(map: any, attachment: VertexAttachment, verticesLength: number): void;
		readAnimation(map: any, name: string, skeletonData: SkeletonData): void;
		readCurve(map: any, timeline: CurveTimeline, frameIndex: number): void;
		getValue(map: any, prop: string, defaultValue: any): any;
		static blendModeFromString(str: string): BlendMode;
		static positionModeFromString(str: string): PositionMode;
		static spacingModeFromString(str: string): SpacingMode;
		static rotateModeFromString(str: string): RotateMode;
		static transformModeFromString(str: string): TransformMode;
	}
}
declare namespace sp.spine {
	class SkinEntry {
		slotIndex: number;
		name: string;
		attachment: Attachment;
		constructor(slotIndex: number, name: string, attachment: Attachment);
	}
	class Skin {
		name: string;
		attachments: Map<Attachment>[];
		bones: BoneData[];
		constraints: ConstraintData[];
		constructor(name: string);
		setAttachment(slotIndex: number, name: string, attachment: Attachment): void;
		addSkin(skin: Skin): void;
		copySkin(skin: Skin): void;
		getAttachment(slotIndex: number, name: string): Attachment;
		removeAttachment(slotIndex: number, name: string): void;
		getAttachments(): Array<SkinEntry>;
		getAttachmentsForSlot(slotIndex: number, attachments: Array<SkinEntry>): void;
		clear(): void;
		attachAll(skeleton: Skeleton, oldSkin: Skin): void;
	}
}
declare namespace sp.spine {
	class Slot {
		data: SlotData;
		bone: Bone;
		color: Color;
		darkColor: Color;
		private attachment;
		private attachmentTime;
		deform: number[];
		constructor(data: SlotData, bone: Bone);
		getSkeleton(): Skeleton;
		getAttachment(): Attachment;
		setAttachment(attachment: Attachment): void;
		setAttachmentTime(time: number): void;
		getAttachmentTime(): number;
		setToSetupPose(): void;
	}
}
declare namespace sp.spine {
	class SlotData {
		index: number;
		name: string;
		boneData: BoneData;
		color: Color;
		darkColor: Color;
		attachmentName: string;
		blendMode: BlendMode;
		constructor(index: number, name: string, boneData: BoneData);
	}
}
declare namespace sp.spine {
	abstract class Texture {
		protected _image: HTMLImageElement;
		constructor(image: HTMLImageElement);
		getImage(): HTMLImageElement;
		abstract setFilters(minFilter: TextureFilter, magFilter: TextureFilter): void;
		abstract setWraps(uWrap: TextureWrap, vWrap: TextureWrap): void;
		abstract dispose(): void;
		static filterFromString(text: string): TextureFilter;
		static wrapFromString(text: string): TextureWrap;
	}
	enum TextureFilter {
		Nearest = 9728,
		Linear = 9729,
		MipMap = 9987,
		MipMapNearestNearest = 9984,
		MipMapLinearNearest = 9985,
		MipMapNearestLinear = 9986,
		MipMapLinearLinear = 9987
	}
	enum TextureWrap {
		MirroredRepeat = 33648,
		ClampToEdge = 33071,
		Repeat = 10497
	}
	class TextureRegion {
		renderObject: any;
		u: number;
		v: number;
		u2: number;
		v2: number;
		width: number;
		height: number;
		rotate: boolean;
		offsetX: number;
		offsetY: number;
		originalWidth: number;
		originalHeight: number;
	}
	class FakeTexture extends Texture {
		setFilters(minFilter: TextureFilter, magFilter: TextureFilter): void;
		setWraps(uWrap: TextureWrap, vWrap: TextureWrap): void;
		dispose(): void;
	}
}
declare namespace sp.spine {
	class TextureAtlas implements Disposable {
		pages: TextureAtlasPage[];
		regions: TextureAtlasRegion[];
		constructor(atlasText: string, textureLoader: (path: string) => any);
		private load;
		findRegion(name: string): TextureAtlasRegion;
		dispose(): void;
	}
	class TextureAtlasPage {
		name: string;
		minFilter: TextureFilter;
		magFilter: TextureFilter;
		uWrap: TextureWrap;
		vWrap: TextureWrap;
		texture: Texture;
		width: number;
		height: number;
	}
	class TextureAtlasRegion extends TextureRegion {
		page: TextureAtlasPage;
		name: string;
		x: number;
		y: number;
		index: number;
		rotate: boolean;
		degrees: number;
		texture: Texture;
	}
}
declare namespace sp.spine {
	class TransformConstraint implements Updatable {
		data: TransformConstraintData;
		bones: Array<Bone>;
		target: Bone;
		rotateMix: number;
		translateMix: number;
		scaleMix: number;
		shearMix: number;
		temp: Vector2;
		active: boolean;
		constructor(data: TransformConstraintData, skeleton: Skeleton);
		isActive(): boolean;
		apply(): void;
		update(): void;
		applyAbsoluteWorld(): void;
		applyRelativeWorld(): void;
		applyAbsoluteLocal(): void;
		applyRelativeLocal(): void;
	}
}
declare namespace sp.spine {
	class TransformConstraintData extends ConstraintData {
		bones: BoneData[];
		target: BoneData;
		rotateMix: number;
		translateMix: number;
		scaleMix: number;
		shearMix: number;
		offsetRotation: number;
		offsetX: number;
		offsetY: number;
		offsetScaleX: number;
		offsetScaleY: number;
		offsetShearY: number;
		relative: boolean;
		local: boolean;
		constructor(name: string);
	}
}
declare namespace sp.spine {
	class Triangulator {
		private convexPolygons;
		private convexPolygonsIndices;
		private indicesArray;
		private isConcaveArray;
		private triangles;
		private polygonPool;
		private polygonIndicesPool;
		triangulate(verticesArray: ArrayLike<number>): Array<number>;
		decompose(verticesArray: Array<number>, triangles: Array<number>): Array<Array<number>>;
		private static isConcave;
		private static positiveArea;
		private static winding;
	}
}
declare namespace sp.spine {
	interface Updatable {
		update(): void;
		isActive(): boolean;
	}
}
declare namespace sp.spine {
	interface Map<T> {
		[key: string]: T;
	}
	class IntSet {
		array: number[];
		add(value: number): boolean;
		contains(value: number): boolean;
		remove(value: number): void;
		clear(): void;
	}
	interface Disposable {
		dispose(): void;
	}
	interface Restorable {
		restore(): void;
	}
	class Color {
		r: number;
		g: number;
		b: number;
		a: number;
		static WHITE: Color;
		static RED: Color;
		static GREEN: Color;
		static BLUE: Color;
		static MAGENTA: Color;
		constructor(r?: number, g?: number, b?: number, a?: number);
		set(r: number, g: number, b: number, a: number): this;
		setFromColor(c: Color): this;
		setFromString(hex: string): this;
		add(r: number, g: number, b: number, a: number): this;
		clamp(): this;
		static rgba8888ToColor(color: Color, value: number): void;
		static rgb888ToColor(color: Color, value: number): void;
	}
	class MathUtils {
		static PI: number;
		static PI2: number;
		static radiansToDegrees: number;
		static radDeg: number;
		static degreesToRadians: number;
		static degRad: number;
		static clamp(value: number, min: number, max: number): number;
		static cosDeg(degrees: number): number;
		static sinDeg(degrees: number): number;
		static signum(value: number): number;
		static toInt(x: number): number;
		static cbrt(x: number): number;
		static randomTriangular(min: number, max: number): number;
		static randomTriangularWith(min: number, max: number, mode: number): number;
	}
	abstract class Interpolation {
		protected abstract applyInternal(a: number): number;
		apply(start: number, end: number, a: number): number;
	}
	class Pow extends Interpolation {
		protected power: number;
		constructor(power: number);
		applyInternal(a: number): number;
	}
	class PowOut extends Pow {
		constructor(power: number);
		applyInternal(a: number): number;
	}
	class Utils {
		static SUPPORTS_TYPED_ARRAYS: boolean;
		static arrayCopy<T>(source: ArrayLike<T>, sourceStart: number, dest: ArrayLike<T>, destStart: number, numElements: number): void;
		static setArraySize<T>(array: Array<T>, size: number, value?: any): Array<T>;
		static ensureArrayCapacity<T>(array: Array<T>, size: number, value?: any): Array<T>;
		static newArray<T>(size: number, defaultValue: T): Array<T>;
		static newFloatArray(size: number): ArrayLike<number>;
		static newShortArray(size: number): ArrayLike<number>;
		static toFloatArray(array: Array<number>): number[] | Float32Array;
		static toSinglePrecision(value: number): number;
		static webkit602BugfixHelper(alpha: number, blend: MixBlend): void;
		static contains<T>(array: Array<T>, element: T, identity?: boolean): boolean;
	}
	class DebugUtils {
		static logBones(skeleton: Skeleton): void;
	}
	class Pool<T> {
		private items;
		private instantiator;
		constructor(instantiator: () => T);
		obtain(): T;
		free(item: T): void;
		freeAll(items: ArrayLike<T>): void;
		clear(): void;
	}
	class Vector2 {
		x: number;
		y: number;
		constructor(x?: number, y?: number);
		set(x: number, y: number): Vector2;
		length(): number;
		normalize(): this;
	}
	class TimeKeeper {
		maxDelta: number;
		framesPerSecond: number;
		delta: number;
		totalTime: number;
		private lastTime;
		private frameCount;
		private frameTime;
		update(): void;
	}
	interface ArrayLike<T> {
		length: number;
		[n: number]: T;
	}
	class WindowedMean {
		values: Array<number>;
		addedValues: number;
		lastValue: number;
		mean: number;
		dirty: boolean;
		constructor(windowSize?: number);
		hasEnoughData(): boolean;
		addValue(value: number): void;
		getMean(): number;
	}
}
declare namespace sp.spine {
	interface VertexEffect {
		begin(skeleton: Skeleton): void;
		transform(position: Vector2, uv: Vector2, light: Color, dark: Color): void;
		end(): void;
	}
}
interface Math {
	fround(n: number): number;
}
declare namespace sp.spine {
	abstract class Attachment {
		name: string;
		constructor(name: string);
		abstract copy(): Attachment;
	}
	abstract class VertexAttachment extends Attachment {
		private static nextID;
		id: number;
		bones: Array<number>;
		vertices: ArrayLike<number>;
		worldVerticesLength: number;
		deformAttachment: VertexAttachment;
		constructor(name: string);
		computeWorldVertices(slot: Slot, start: number, count: number, worldVertices: ArrayLike<number>, offset: number, stride: number): void;
		copyTo(attachment: VertexAttachment): void;
	}
}
declare namespace sp.spine {
	interface AttachmentLoader {
		newRegionAttachment(skin: Skin, name: string, path: string): RegionAttachment;
		newMeshAttachment(skin: Skin, name: string, path: string): MeshAttachment;
		newBoundingBoxAttachment(skin: Skin, name: string): BoundingBoxAttachment;
		newPathAttachment(skin: Skin, name: string): PathAttachment;
		newPointAttachment(skin: Skin, name: string): PointAttachment;
		newClippingAttachment(skin: Skin, name: string): ClippingAttachment;
	}
}
declare namespace sp.spine {
	enum AttachmentType {
		Region = 0,
		BoundingBox = 1,
		Mesh = 2,
		LinkedMesh = 3,
		Path = 4,
		Point = 5,
		Clipping = 6
	}
}
declare namespace sp.spine {
	class BoundingBoxAttachment extends VertexAttachment {
		color: Color;
		constructor(name: string);
		copy(): Attachment;
	}
}
declare namespace sp.spine {
	class ClippingAttachment extends VertexAttachment {
		endSlot: SlotData;
		color: Color;
		constructor(name: string);
		copy(): Attachment;
	}
}
declare namespace sp.spine {
	class MeshAttachment extends VertexAttachment {
		region: TextureRegion;
		path: string;
		regionUVs: ArrayLike<number>;
		uvs: ArrayLike<number>;
		triangles: Array<number>;
		color: Color;
		width: number;
		height: number;
		hullLength: number;
		edges: Array<number>;
		private parentMesh;
		tempColor: Color;
		constructor(name: string);
		updateUVs(): void;
		getParentMesh(): MeshAttachment;
		setParentMesh(parentMesh: MeshAttachment): void;
		copy(): Attachment;
		newLinkedMesh(): MeshAttachment;
	}
}
declare namespace sp.spine {
	class PathAttachment extends VertexAttachment {
		lengths: Array<number>;
		closed: boolean;
		constantSpeed: boolean;
		color: Color;
		constructor(name: string);
		copy(): Attachment;
	}
}
declare namespace sp.spine {
	class PointAttachment extends VertexAttachment {
		x: number;
		y: number;
		rotation: number;
		color: Color;
		constructor(name: string);
		computeWorldPosition(bone: Bone, point: Vector2): Vector2;
		computeWorldRotation(bone: Bone): number;
		copy(): Attachment;
	}
}
declare namespace sp.spine {
	class RegionAttachment extends Attachment {
		static OX1: number;
		static OY1: number;
		static OX2: number;
		static OY2: number;
		static OX3: number;
		static OY3: number;
		static OX4: number;
		static OY4: number;
		static X1: number;
		static Y1: number;
		static C1R: number;
		static C1G: number;
		static C1B: number;
		static C1A: number;
		static U1: number;
		static V1: number;
		static X2: number;
		static Y2: number;
		static C2R: number;
		static C2G: number;
		static C2B: number;
		static C2A: number;
		static U2: number;
		static V2: number;
		static X3: number;
		static Y3: number;
		static C3R: number;
		static C3G: number;
		static C3B: number;
		static C3A: number;
		static U3: number;
		static V3: number;
		static X4: number;
		static Y4: number;
		static C4R: number;
		static C4G: number;
		static C4B: number;
		static C4A: number;
		static U4: number;
		static V4: number;
		x: number;
		y: number;
		scaleX: number;
		scaleY: number;
		rotation: number;
		width: number;
		height: number;
		color: Color;
		path: string;
		rendererObject: any;
		region: TextureRegion;
		offset: ArrayLike<number>;
		uvs: ArrayLike<number>;
		tempColor: Color;
		constructor(name: string);
		updateOffset(): void;
		setRegion(region: TextureRegion): void;
		computeWorldVertices(bone: Bone, worldVertices: ArrayLike<number>, offset: number, stride: number): void;
		copy(): Attachment;
	}
}
declare namespace sp.spine {
	class JitterEffect implements VertexEffect {
		jitterX: number;
		jitterY: number;
		constructor(jitterX: number, jitterY: number);
		begin(skeleton: Skeleton): void;
		transform(position: Vector2, uv: Vector2, light: Color, dark: Color): void;
		end(): void;
	}
}
declare namespace sp.spine {
	class SwirlEffect implements VertexEffect {
		static interpolation: PowOut;
		centerX: number;
		centerY: number;
		radius: number;
		angle: number;
		private worldX;
		private worldY;
		constructor(radius: number);
		begin(skeleton: Skeleton): void;
		transform(position: Vector2, uv: Vector2, light: Color, dark: Color): void;
		end(): void;
	}
}

/**
 * API for jsb module
 * Author: haroel
 * Homepage: https://github.com/haroel/creatorexDTS
 */
declare namespace jsb{
    export module reflection{
        /**
         * https://docs.cocos.com/creator/manual/zh/advanced-topics/java-reflection.html
         * call OBJC/Java static methods
         * 
         * @param className 
         * @param methodName 
         * @param methodSignature 
         * @param parameters 
         */
        export function callStaticMethod (className: string, methodName: string, methodSignature: string, ...parameters:any): any;
    }
    /**
     * ä¸?è½½ä»»??¡å¯¹è±?
     */
    export type DownloaderTask = { requestURL: string, storagePath: string, identifier: string };

    /**
     * Http file downloader for jsbï¼?
     */
    export class Downloader{
        /**
         * create a download task
         * @param requestURL 
         * @param storagePath 
         * @param identifier 
         */
        createDownloadFileTask (requestURL:string, storagePath:string, identifier?:string): DownloaderTask;

        setOnFileTaskSuccess (onSucceed: (task: DownloaderTask) => void): void;

        setOnTaskProgress (onProgress: (task: DownloaderTask, bytesReceived: number, totalBytesReceived: number, totalBytesExpected: number) => void): void;

        setOnTaskError (onError: (task: DownloaderTask, errorCode: number, errorCodeInternal: number, errorStr: string) => void): void;

    }

    export interface ManifestAsset {
        md5: string;
        path: string;
        compressed: boolean;
        size: number;
        downloadState: number;
    }

    export class Manifest {
        constructor (manifestUrl: string);
        constructor (content: string, manifestRoot: string);
        parseFile (manifestUrl: string): void;
        parseJSONString (content: string, manifestRoot: string): void;

        getManifestRoot (): string;
        getManifestFileUrl (): string;
        getVersionFileUrl (): string;
        getSearchPaths (): [string];
        getVersion (): string;
        getPackageUrl (): boolean;

        setUpdating (isUpdating: boolean): void;
        isUpdating (): boolean;
        isVersionLoaded (): boolean;
        isLoaded (): boolean;
    }

    export class EventAssetsManager {
        // EventCode
        static ERROR_NO_LOCAL_MANIFEST: number;
        static ERROR_DOWNLOAD_MANIFEST: number;
        static ERROR_PARSE_MANIFEST: number;
        static NEW_VERSION_FOUND: number;
        static ALREADY_UP_TO_DATE: number;
        static UPDATE_PROGRESSION: number;
        static ASSET_UPDATED: number;
        static ERROR_UPDATING: number;
        static UPDATE_FINISHED: number;
        static UPDATE_FAILED: number;
        static ERROR_DECOMPRESS: number;

        constructor (eventName: string, manager: AssetsManager, eventCode: number, 
                    assetId?: string, message?: string, curleCode?: number, curlmCode?: number);
        getAssetsManagerEx (): AssetsManager;
        isResuming (): boolean;

        getDownloadedFiles (): number;
        getDownloadedBytes (): number;
        getTotalFiles (): number;
        getTotalBytes (): number;
        getPercent (): number;
        getPercentByFile (): number;

        getEventCode (): number;
        getMessage (): string;
        getAssetId (): string;
        getCURLECode (): number;
        getCURLMCode (): number;
    }

    export module AssetsManager {
        export enum State {
            UNINITED,
            UNCHECKED,
            PREDOWNLOAD_VERSION,
            DOWNLOADING_VERSION,
            VERSION_LOADED,
            PREDOWNLOAD_MANIFEST,
            DOWNLOADING_MANIFEST,
            MANIFEST_LOADED,
            NEED_UPDATE,
            READY_TO_UPDATE,
            UPDATING,
            UNZIPPING,
            UP_TO_DATE,
            FAIL_TO_UPDATE,
        }
    }

    export class AssetsManager {
        constructor (manifestUrl: string, storagePath: string, versionCompareHandle?: (versionA: string, versionB: string) => number);
        static create (manifestUrl: string, storagePath: string): AssetsManager;

        getState (): AssetsManager.State;
        getStoragePath (): string
        getMaxConcurrentTask (): number;
        // setMaxConcurrentTask (max: number): void;  // actually not supported

        checkUpdate (): void;
        prepareUpdate (): void;
        update (): void;
        isResuming (): boolean;

        getDownloadedFiles (): number;
        getDownloadedBytes (): number;
        getTotalFiles (): number;
        getTotalBytes (): number;
        downloadFailedAssets (): void;

        getLocalManifest (): Manifest;
        loadLocalManifest (manifestUrl: string): boolean;
        loadLocalManifest (localManifest: Manifest, storagePath: string): boolean;
        getRemoteManifest (): Manifest;
        loadRemoteManifest (remoteManifest: Manifest): boolean;

        /**
         * Setup your own version compare handler, versionA and B is versions in string.  
         * if the return value greater than 0, versionA is greater than B,  
         * if the return value equals 0, versionA equals to B,  
         * if the return value smaller than 0, versionA is smaller than B.  
         */
        setVersionCompareHandle (versionCompareHandle?: (versionA: string, versionB: string) => number): void;
        /**
         * Setup the verification callback, Return true if the verification passed, otherwise return false
         */
        setVerifyCallback (verifyCallback: (path: string, asset: ManifestAsset) => boolean): void;
        setEventCallback (eventCallback: (event: EventAssetsManager) => void): void;
    }

    /**
     * FileUtils  Helper class to handle file operations.
     */
    export module fileUtils{
        /**
         *  Checks whether the path is an absolute path.
         *
         *  @note On Android, if the parameter passed in is relative to "@assets/", this method will treat it as an absolute path.
         *        Also on Blackberry, path starts with "app/native/Resources/" is treated as an absolute path.
         *
         *  @param path The path that needs to be checked.
         *  @return True if it's an absolute path, false if not.
         */
        export function isAbsolutePath (path:string):boolean;
        /** Returns the fullpath for a given filename.

        First it will try to get a new filename from the "filenameLookup" dictionary.
        If a new filename can't be found on the dictionary, it will use the original filename.
        Then it will try to obtain the full path of the filename using the FileUtils search rules: resolutions, and search paths.
        The file search is based on the array element order of search paths and resolution directories.

        For instance:

            We set two elements("/mnt/sdcard/", "internal_dir/") to search paths vector by setSearchPaths,
            and set three elements("resources-ipadhd/", "resources-ipad/", "resources-iphonehd")
            to resolutions vector by setSearchResolutionsOrder. The "internal_dir" is relative to "Resources/".

            If we have a file named 'sprite.png', the mapping in fileLookup dictionary contains `key: sprite.png -> value: sprite.pvr.gz`.
            Firstly, it will replace 'sprite.png' with 'sprite.pvr.gz', then searching the file sprite.pvr.gz as follows:

                /mnt/sdcard/resources-ipadhd/sprite.pvr.gz      (if not found, search next)
                /mnt/sdcard/resources-ipad/sprite.pvr.gz        (if not found, search next)
                /mnt/sdcard/resources-iphonehd/sprite.pvr.gz    (if not found, search next)
                /mnt/sdcard/sprite.pvr.gz                       (if not found, search next)
                internal_dir/resources-ipadhd/sprite.pvr.gz     (if not found, search next)
                internal_dir/resources-ipad/sprite.pvr.gz       (if not found, search next)
                internal_dir/resources-iphonehd/sprite.pvr.gz   (if not found, search next)
                internal_dir/sprite.pvr.gz                      (if not found, return "sprite.png")

            If the filename contains relative path like "gamescene/uilayer/sprite.png",
            and the mapping in fileLookup dictionary contains `key: gamescene/uilayer/sprite.png -> value: gamescene/uilayer/sprite.pvr.gz`.
            The file search order will be:

                /mnt/sdcard/gamescene/uilayer/resources-ipadhd/sprite.pvr.gz      (if not found, search next)
                /mnt/sdcard/gamescene/uilayer/resources-ipad/sprite.pvr.gz        (if not found, search next)
                /mnt/sdcard/gamescene/uilayer/resources-iphonehd/sprite.pvr.gz    (if not found, search next)
                /mnt/sdcard/gamescene/uilayer/sprite.pvr.gz                       (if not found, search next)
                internal_dir/gamescene/uilayer/resources-ipadhd/sprite.pvr.gz     (if not found, search next)
                internal_dir/gamescene/uilayer/resources-ipad/sprite.pvr.gz       (if not found, search next)
                internal_dir/gamescene/uilayer/resources-iphonehd/sprite.pvr.gz   (if not found, search next)
                internal_dir/gamescene/uilayer/sprite.pvr.gz                      (if not found, return "gamescene/uilayer/sprite.png")

        If the new file can't be found on the file system, it will return the parameter filename directly.

        This method was added to simplify multiplatform support. Whether you are using cocos2d-js or any cross-compilation toolchain like StellaSDK or Apportable,
        you might need to load different resources for a given file in the different platforms.

        @since v2.1
        */
        export function fullPathForFilename (filename:string):string;
        /**
         *  Gets string from a file.
        */
        export function getStringFromFile (filename:string):string;
        /**
         *  Removes a file.
         *
         *  @param filepath The full path of the file, it must be an absolute path.
         *  @return True if the file have been removed successfully, false if not.
         */
        export function removeFile (filepath:string):boolean;
        /**
         *  Checks whether the path is a directory.
         *
         *  @param dirPath The path of the directory, it could be a relative or an absolute path.
         *  @return True if the directory exists, false if not.
         */
        export function isDirectoryExist (dirPath:string):boolean;
        /**
         * Normalize: remove . and ..
         * @param filepath 
         */
        export function normalizePath (filepath:string):string;
        /**
         * Get default resource root path.
         */
        export function getDefaultResourceRootPath ():string;
        /**
         * Loads the filenameLookup dictionary from the contents of a filename.
         *
         * @note The plist file name should follow the format below:
         *
         * @code
         * <?xml version="1.0" encoding="UTF-8"?>
         * <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
         * <plist version="1.0">
         * <dict>
         *     <key>filenames</key>
         *     <dict>
         *         <key>sounds/click.wav</key>
         *         <string>sounds/click.caf</string>
         *         <key>sounds/endgame.wav</key>
         *         <string>sounds/endgame.caf</string>
         *         <key>sounds/gem-0.wav</key>
         *         <string>sounds/gem-0.caf</string>
         *     </dict>
         *     <key>metadata</key>
         *     <dict>
         *         <key>version</key>
         *         <integer>1</integer>
         *     </dict>
         * </dict>
         * </plist>
         * @endcode
         * @param filename The plist file name.
         *
         @since v2.1
        * @js loadFilenameLookup
        * @lua loadFilenameLookup
        */
        export function loadFilenameLookup (filepath:string):void;
        /** Checks whether to pop up a message box when failed to load an image.
         *  @return True if pop up a message box when failed to load an image, false if not.
         */
        export function isPopupNotify ():boolean;
        /**
         *  Sets whether to pop-up a message box when failed to load an image.
         */
        export function setPopupNotify (notify:boolean):void;

        // Converts the contents of a file to a ValueVector.
        // This method is used internally.
        export function getValueVectorFromFile (filepath:string):Array<any>;
        /**
         *  Gets the array of search paths.
         *
         *  @return The array of search paths which may contain the prefix of default resource root path. 
         *  @note In best practise, getter function should return the value of setter function passes in.
         *        But since we should not break the compatibility, we keep using the old logic. 
         *        Therefore, If you want to get the original search paths, please call 'getOriginalSearchPaths()' instead.
         *  @see fullPathForFilename(const char*).
         *  @lua NA
         */
        export function getSearchPaths ():Array<string>;
        /**
         * 
         * @param filepath 
         */
        export function getFileDir (filepath:string):string;
        /**
        * write a ValueMap into a plist file
        *
        *@param dict the ValueMap want to save (key,value)
        *@param fullPath The full path to the file you want to save a string
        *@return bool
        */
        export function writeToFile ( valueMap:any ):boolean;
        /**
         *  Gets the original search path array set by 'setSearchPaths' or 'addSearchPath'.
         *  @return The array of the original search paths
         */
        export function getOriginalSearchPaths ():Array<string>;
        /**
         *  List all files in a directory.
         *
         *  @param dirPath The path of the directory, it could be a relative or an absolute path.
         *  @return File paths in a string vector
         */
        export function listFiles (filepath:string):Array<string>;
        /**
         *  Converts the contents of a file to a ValueMap.
         *  @param filename The filename of the file to gets content.
         *  @return ValueMap of the file contents.
         *  @note This method is used internally.
         */
        export function getValueMapFromFile (filepath:string):any;
        /**
         *  Retrieve the file size.
         *
         *  @note If a relative path was passed in, it will be inserted a default root path at the beginning.
         *  @param filepath The path of the file, it could be a relative or absolute path.
         *  @return The file size.
         */
        export function getFileSize (filepath:string):number;

        /** Converts the contents of a file to a ValueMap.
         *  This method is used internally.
         */
        export function getValueMapFromData (filedata:string,filesize:number):any;
        /**
         *  Removes a directory.
         *
         *  @param dirPath  The full path of the directory, it must be an absolute path.
         *  @return True if the directory have been removed successfully, false if not.
         */
        export function removeDirectory (dirPath:string):boolean;
        /**
         *  Sets the array of search paths.
         *
         *  You can use this array to modify the search path of the resources.
         *  If you want to use "themes" or search resources in the "cache", you can do it easily by adding new entries in this array.
         *
         *  @note This method could access relative path and absolute path.
         *        If the relative path was passed to the vector, FileUtils will add the default resource directory before the relative path.
         *        For instance:
         *            On Android, the default resource root path is "@assets/".
         *            If "/mnt/sdcard/" and "resources-large" were set to the search paths vector,
         *            "resources-large" will be converted to "@assets/resources-large" since it was a relative path.
         *
         *  @param searchPaths The array contains search paths.
         *  @see fullPathForFilename(const char*)
         *  @since v2.1
         *  In js:var setSearchPaths(var jsval);
         *  @lua NA
         */
        export function setSearchPaths ( searchPath:Array<string>):void;
        /**
         *  write a string into a file
         *
         * @param dataStr the string want to save
         * @param fullPath The full path to the file you want to save a string
         * @return bool True if write success
         */
        export function writeStringToFile (dataStr:string,fullPath:string):boolean;
        /**
         *  Sets the array that contains the search order of the resources.
         *
         *  @param searchResolutionsOrder The source array that contains the search order of the resources.
         *  @see getSearchResolutionsOrder(), fullPathForFilename(const char*).
         *  @since v2.1
         *  In js:var setSearchResolutionsOrder(var jsval)
         *  @lua NA
         */
        export function setSearchResolutionsOrder (searchResolutionsOrder:Array<string>):void;
        /**
         * Append search order of the resources.
         *
         * @see setSearchResolutionsOrder(), fullPathForFilename().
         * @since v2.1
         */
        export function addSearchResolutionsOrder (order:string,front:boolean):void;
        /**
         * Add search path.
         *
         * @since v2.1
         */
        export function addSearchPath (path:string,front:boolean):void;
        /**
        * write ValueVector into a plist file
        *
        *@param vecData the ValueVector want to save
        *@param fullPath The full path to the file you want to save a string
        *@return bool
        */
        export function writeValueVectorToFile (vecData:Array<any>,fullPath:string):boolean;
        /**
         *  Checks whether a file exists.
         *
         *  @note If a relative path was passed in, it will be inserted a default root path at the beginning.
         *  @param filename The path of the file, it could be a relative or absolute path.
         *  @return True if the file exists, false if not.
         */
        export function isFileExist (filename:string):boolean;
        /**Â©???
         *  Purges full path caches.
         */
        export function purgeCachedEntries ():void;
            /**
         *  Gets full path from a file name and the path of the relative file.
         *  @param filename The file name.
         *  @param relativeFile The path of the relative file.
         *  @return The full path.
         *          e.g. filename: hello.png, pszRelativeFile: /User/path1/path2/hello.plist
         *               Return: /User/path1/path2/hello.pvr (If there a a key(hello.png)-value(hello.pvr) in FilenameLookup dictionary. )
         *
         */
        export function fullPathFromRelativeFile (filename:string,relativeFile:string):string;
        /**
        * Windows fopen can't support UTF-8 filename
        * Need convert all parameters fopen and other 3rd-party libs
        *
        * @param filenameUtf8 std::string name file for conversion from utf-8
        * @return std::string ansi filename in current locale
        */
        export function getSuitableFOpen (filenameUtf8:string):string;
        /**
        * write ValueMap into a plist file
        *
        *@param dict the ValueMap want to save
        *@param fullPath The full path to the file you want to save a string
        *@return bool
        */
        export function writeValueMapToFile (dict:any,fullPath:string):string;
        /**
        *  Gets filename extension is a suffix (separated from the base filename by a dot) in lower case.
        *  Examples of filename extensions are .png, .jpeg, .exe, .dmg and .txt.
        *  @param filePath The path of the file, it could be a relative or absolute path.
        *  @return suffix for filename in lower case or empty if a dot not found.
        */
        export function getFileExtension (filePath:string):string;
        /**
         *  Sets writable path.
         */
        export function setWritablePath (writablePath:string):void;
        /**
         * Set default resource root path.
         */
        export function setDefaultResourceRootPath (filepath:string):void;

        /**
         *  Gets the array that contains the search order of the resources.
         *
         *  @see setSearchResolutionsOrder(const std::vector<std::string>&), fullPathForFilename(const char*).
         *  @since v2.1
         *  @lua NA
         */
        export function getSearchResolutionsOrder ():Array<string>;
        /**
         *  Creates a directory.
         *
         *  @param dirPath The path of the directory, it must be an absolute path.
         *  @return True if the directory have been created successfully, false if not.
         */
        export function createDirectory (dirPath:string):string;
        /**
         *  List all files recursively in a directory.
         *
         *  @param dirPath The path of the directory, it could be a relative or an absolute path.
         *  @return File paths in a string vector
         */
        export function listFilesRecursively (dirPath:string, files:Array<string>):void;
        /**
         *  Gets the writable path.
         *  @return  The path that can be write/read a file in
         */
        export function getWritablePath ():string;
    }
}

/** Running in the editor. */
declare const CC_EDITOR: boolean;
/** Preview in browser or simulator. */
declare const CC_PREVIEW: boolean;
/** Running in the editor or preview. */
declare const CC_DEV: boolean;
/** Running in the editor or preview, or build in debug mode. */
declare const CC_DEBUG: boolean;
/** Running in published project. */
declare const CC_BUILD: boolean;
/** Running in native platforms (mobile app, desktop app, or simulator). */
declare const CC_JSB: boolean;
/** Running in runtime environments. */
declare const CC_RUNTIME: boolean;
/** Running in the engine's unit test. */
declare const CC_TEST: boolean;
/** Running in the WeChat Mini Game. */
declare const CC_WECHATGAME: boolean;
